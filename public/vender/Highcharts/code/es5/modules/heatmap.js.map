{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highmaps JS v11.3.0 (2024-01-10)\n *\n * (c) 2009-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/heatmap', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisComposition.js', [_modules['Core/Color/Color.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (Color, H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var composed = H.composed;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique, splat = U.splat;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ColorAxisComposition;\n        (function (ColorAxisComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var ColorAxisConstructor;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ColorAxisClass, ChartClass, FxClass, LegendClass, SeriesClass) {\n                if (pushUnique(composed, compose)) {\n                    ColorAxisConstructor = ColorAxisClass;\n                    var chartProto = ChartClass.prototype, fxProto = FxClass.prototype, seriesProto = SeriesClass.prototype;\n                    chartProto.collectionsWithUpdate.push('colorAxis');\n                    chartProto.collectionsWithInit.colorAxis = [\n                        chartProto.addColorAxis\n                    ];\n                    addEvent(ChartClass, 'afterGetAxes', onChartAfterGetAxes);\n                    wrapChartCreateAxis(ChartClass);\n                    fxProto.fillSetter = wrapFxFillSetter;\n                    fxProto.strokeSetter = wrapFxStrokeSetter;\n                    addEvent(LegendClass, 'afterGetAllItems', onLegendAfterGetAllItems);\n                    addEvent(LegendClass, 'afterColorizeItem', onLegendAfterColorizeItem);\n                    addEvent(LegendClass, 'afterUpdate', onLegendAfterUpdate);\n                    extend(seriesProto, {\n                        optionalAxis: 'colorAxis',\n                        translateColors: seriesTranslateColors\n                    });\n                    extend(seriesProto.pointClass.prototype, {\n                        setVisible: pointSetVisible\n                    });\n                    addEvent(SeriesClass, 'afterTranslate', onSeriesAfterTranslate, { order: 1 });\n                    addEvent(SeriesClass, 'bindAxes', onSeriesBindAxes);\n                }\n            }\n            ColorAxisComposition.compose = compose;\n            /**\n             * Extend the chart getAxes method to also get the color axis.\n             * @private\n             */\n            function onChartAfterGetAxes() {\n                var _this = this;\n                var userOptions = this.userOptions;\n                this.colorAxis = [];\n                // If a `colorAxis` config is present in the user options (not in a\n                // theme), instanciate it.\n                if (userOptions.colorAxis) {\n                    userOptions.colorAxis = splat(userOptions.colorAxis);\n                    userOptions.colorAxis.map(function (axisOptions) { return (new ColorAxisConstructor(_this, axisOptions)); });\n                }\n            }\n            /**\n             * Add the color axis. This also removes the axis' own series to prevent\n             * them from showing up individually.\n             * @private\n             */\n            function onLegendAfterGetAllItems(e) {\n                var _this = this;\n                var colorAxes = this.chart.colorAxis || [], destroyItem = function (item) {\n                    var i = e.allItems.indexOf(item);\n                    if (i !== -1) {\n                        // #15436\n                        _this.destroyItem(e.allItems[i]);\n                        e.allItems.splice(i, 1);\n                    }\n                };\n                var colorAxisItems = [], options, i;\n                colorAxes.forEach(function (colorAxis) {\n                    options = colorAxis.options;\n                    if (options && options.showInLegend) {\n                        // Data classes\n                        if (options.dataClasses && options.visible) {\n                            colorAxisItems = colorAxisItems.concat(colorAxis.getDataClassLegendSymbols());\n                            // Gradient legend\n                        }\n                        else if (options.visible) {\n                            // Add this axis on top\n                            colorAxisItems.push(colorAxis);\n                        }\n                        // If dataClasses are defined or showInLegend option is not set\n                        // to true, do not add color axis' series to legend.\n                        colorAxis.series.forEach(function (series) {\n                            if (!series.options.showInLegend || options.dataClasses) {\n                                if (series.options.legendType === 'point') {\n                                    series.points.forEach(function (point) {\n                                        destroyItem(point);\n                                    });\n                                }\n                                else {\n                                    destroyItem(series);\n                                }\n                            }\n                        });\n                    }\n                });\n                i = colorAxisItems.length;\n                while (i--) {\n                    e.allItems.unshift(colorAxisItems[i]);\n                }\n            }\n            /**\n             * @private\n             */\n            function onLegendAfterColorizeItem(e) {\n                if (e.visible && e.item.legendColor) {\n                    e.item.legendItem.symbol.attr({\n                        fill: e.item.legendColor\n                    });\n                }\n            }\n            /**\n             * Updates in the legend need to be reflected in the color axis. (#6888)\n             * @private\n             */\n            function onLegendAfterUpdate(e) {\n                var _a;\n                (_a = this.chart.colorAxis) === null || _a === void 0 ? void 0 : _a.forEach(function (colorAxis) {\n                    colorAxis.update({}, e.redraw);\n                });\n            }\n            /**\n             * Calculate and set colors for points.\n             * @private\n             */\n            function onSeriesAfterTranslate() {\n                if (this.chart.colorAxis &&\n                    this.chart.colorAxis.length ||\n                    this.colorAttribs) {\n                    this.translateColors();\n                }\n            }\n            /**\n             * Add colorAxis to series axisTypes.\n             * @private\n             */\n            function onSeriesBindAxes() {\n                var axisTypes = this.axisTypes;\n                if (!axisTypes) {\n                    this.axisTypes = ['colorAxis'];\n                }\n                else if (axisTypes.indexOf('colorAxis') === -1) {\n                    axisTypes.push('colorAxis');\n                }\n            }\n            /**\n             * Set the visibility of a single point\n             * @private\n             * @function Highcharts.colorPointMixin.setVisible\n             * @param {boolean} visible\n             */\n            function pointSetVisible(vis) {\n                var point = this, method = vis ? 'show' : 'hide';\n                point.visible = point.options.visible = Boolean(vis);\n                // Show and hide associated elements\n                ['graphic', 'dataLabel'].forEach(function (key) {\n                    if (point[key]) {\n                        point[key][method]();\n                    }\n                });\n                this.series.buildKDTree(); // rebuild kdtree #13195\n            }\n            ColorAxisComposition.pointSetVisible = pointSetVisible;\n            /**\n             * In choropleth maps, the color is a result of the value, so this needs\n             * translation too\n             * @private\n             * @function Highcharts.colorSeriesMixin.translateColors\n             */\n            function seriesTranslateColors() {\n                var series = this, points = this.data.length ? this.data : this.points, nullColor = this.options.nullColor, colorAxis = this.colorAxis, colorKey = this.colorKey;\n                points.forEach(function (point) {\n                    var value = point.getNestedProperty(colorKey), color = point.options.color || (point.isNull || point.value === null ?\n                        nullColor :\n                        (colorAxis && typeof value !== 'undefined') ?\n                            colorAxis.toColor(value, point) :\n                            point.color || series.color);\n                    if (color && point.color !== color) {\n                        point.color = color;\n                        if (series.options.legendType === 'point' &&\n                            point.legendItem &&\n                            point.legendItem.label) {\n                            series.chart.legend.colorizeItem(point, point.visible);\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            function wrapChartCreateAxis(ChartClass) {\n                var superCreateAxis = ChartClass.prototype.createAxis;\n                ChartClass.prototype.createAxis = function (type, options) {\n                    var chart = this;\n                    if (type !== 'colorAxis') {\n                        return superCreateAxis.apply(chart, arguments);\n                    }\n                    var axis = new ColorAxisConstructor(chart, merge(options.axis, {\n                        index: chart[type].length,\n                        isX: false\n                    }));\n                    chart.isDirtyLegend = true;\n                    // Clear before 'bindAxes' (#11924)\n                    chart.axes.forEach(function (axis) {\n                        axis.series = [];\n                    });\n                    chart.series.forEach(function (series) {\n                        series.bindAxes();\n                        series.isDirtyData = true;\n                    });\n                    if (pick(options.redraw, true)) {\n                        chart.redraw(options.animation);\n                    }\n                    return axis;\n                };\n            }\n            /**\n             * Handle animation of the color attributes directly.\n             * @private\n             */\n            function wrapFxFillSetter() {\n                this.elem.attr('fill', color(this.start).tweenTo(color(this.end), this.pos), void 0, true);\n            }\n            /**\n             * Handle animation of the color attributes directly.\n             * @private\n             */\n            function wrapFxStrokeSetter() {\n                this.elem.attr('stroke', color(this.start).tweenTo(color(this.end), this.pos), void 0, true);\n            }\n        })(ColorAxisComposition || (ColorAxisComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ColorAxisComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A color axis for series. Visually, the color\n         * axis will appear as a gradient or as separate items inside the\n         * legend, depending on whether the axis is scalar or based on data\n         * classes.\n         *\n         * For supported color formats, see the\n         * [docs article about colors](https://www.highcharts.com/docs/chart-design-and-style/colors).\n         *\n         * A scalar color axis is represented by a gradient. The colors either\n         * range between the [minColor](#colorAxis.minColor) and the\n         * [maxColor](#colorAxis.maxColor), or for more fine grained control the\n         * colors can be defined in [stops](#colorAxis.stops). Often times, the\n         * color axis needs to be adjusted to get the right color spread for the\n         * data. In addition to stops, consider using a logarithmic\n         * [axis type](#colorAxis.type), or setting [min](#colorAxis.min) and\n         * [max](#colorAxis.max) to avoid the colors being determined by\n         * outliers.\n         *\n         * When [dataClasses](#colorAxis.dataClasses) are used, the ranges are\n         * subdivided into separate classes like categories based on their\n         * values. This can be used for ranges between two values, but also for\n         * a true category. However, when your data is categorized, it may be as\n         * convenient to add each category to a separate series.\n         *\n         * Color axis does not work with: `sankey`, `sunburst`, `dependencywheel`,\n         * `networkgraph`, `wordcloud`, `venn`, `gauge` and `solidgauge` series\n         * types.\n         *\n         * Since v7.2.0 `colorAxis` can also be an array of options objects.\n         *\n         * See [the Axis object](/class-reference/Highcharts.Axis) for\n         * programmatic access to the axis.\n         *\n         * @sample       {highcharts} highcharts/coloraxis/custom-color-key\n         *               Column chart with color axis\n         * @sample       {highcharts} highcharts/coloraxis/horizontal-layout\n         *               Horizontal layout\n         * @sample       {highmaps} maps/coloraxis/dataclasscolor\n         *               With data classes\n         * @sample       {highmaps} maps/coloraxis/mincolor-maxcolor\n         *               Min color and max color\n         *\n         * @extends      xAxis\n         * @excluding    alignTicks, allowDecimals, alternateGridColor, breaks,\n         *               categories, crosshair, dateTimeLabelFormats, left,\n         *               lineWidth, linkedTo, maxZoom, minRange, minTickInterval,\n         *               offset, opposite, pane, plotBands, plotLines,\n         *               reversedStacks, scrollbar, showEmpty, title, top,\n         *               zoomEnabled\n         * @product      highcharts highstock highmaps\n         * @type         {*|Array<*>}\n         * @optionparent colorAxis\n         */\n        var colorAxisDefaults = {\n            /**\n             * Whether to allow decimals on the color axis.\n             * @type      {boolean}\n             * @default   true\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.allowDecimals\n             */\n            /**\n             * Determines how to set each data class' color if no individual\n             * color is set. The default value, `tween`, computes intermediate\n             * colors between `minColor` and `maxColor`. The other possible\n             * value, `category`, pulls colors from the global or chart specific\n             * [colors](#colors) array.\n             *\n             * @sample {highmaps} maps/coloraxis/dataclasscolor/\n             *         Category colors\n             *\n             * @type       {string}\n             * @default    tween\n             * @product    highcharts highstock highmaps\n             * @validvalue [\"tween\", \"category\"]\n             * @apioption  colorAxis.dataClassColor\n             */\n            /**\n             * An array of data classes or ranges for the choropleth map. If\n             * none given, the color axis is scalar and values are distributed\n             * as a gradient between the minimum and maximum colors.\n             *\n             * @sample {highmaps} maps/demo/data-class-ranges/\n             *         Multiple ranges\n             *\n             * @sample {highmaps} maps/demo/data-class-two-ranges/\n             *         Two ranges\n             *\n             * @type      {Array<*>}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses\n             */\n            /**\n             * The layout of the color axis. Can be `'horizontal'` or `'vertical'`.\n             * If none given, the color axis has the same layout as the legend.\n             *\n             * @sample highcharts/coloraxis/horizontal-layout/\n             *         Horizontal color axis layout with vertical legend\n             *\n             * @type      {string|undefined}\n             * @since     7.2.0\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.layout\n             */\n            /**\n             * The color of each data class. If not set, the color is pulled\n             * from the global or chart-specific [colors](#colors) array. In\n             * styled mode, this option is ignored. Instead, use colors defined\n             * in CSS.\n             *\n             * @sample {highmaps} maps/demo/data-class-two-ranges/\n             *         Explicit colors\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses.color\n             */\n            /**\n             * The start of the value range that the data class represents,\n             * relating to the point value.\n             *\n             * The range of each `dataClass` is closed in both ends, but can be\n             * overridden by the next `dataClass`.\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses.from\n             */\n            /**\n             * The name of the data class as it appears in the legend.\n             * If no name is given, it is automatically created based on the\n             * `from` and `to` values. For full programmatic control,\n             * [legend.labelFormatter](#legend.labelFormatter) can be used.\n             * In the formatter, `this.from` and `this.to` can be accessed.\n             *\n             * @sample {highmaps} maps/coloraxis/dataclasses-name/\n             *         Named data classes\n             *\n             * @sample {highmaps} maps/coloraxis/dataclasses-labelformatter/\n             *         Formatted data classes\n             *\n             * @type      {string}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses.name\n             */\n            /**\n             * The end of the value range that the data class represents,\n             * relating to the point value.\n             *\n             * The range of each `dataClass` is closed in both ends, but can be\n             * overridden by the next `dataClass`.\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses.to\n             */\n            /** @ignore-option */\n            lineWidth: 0,\n            /**\n             * Padding of the min value relative to the length of the axis. A\n             * padding of 0.05 will make a 100px axis 5px longer.\n             *\n             * @product highcharts highstock highmaps\n             */\n            minPadding: 0,\n            /**\n             * The maximum value of the axis in terms of map point values. If\n             * `null`, the max value is automatically calculated. If the\n             * `endOnTick` option is true, the max value might be rounded up.\n             *\n             * @sample {highmaps} maps/coloraxis/gridlines/\n             *         Explicit min and max to reduce the effect of outliers\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.max\n             */\n            /**\n             * The minimum value of the axis in terms of map point values. If\n             * `null`, the min value is automatically calculated. If the\n             * `startOnTick` option is true, the min value might be rounded\n             * down.\n             *\n             * @sample {highmaps} maps/coloraxis/gridlines/\n             *         Explicit min and max to reduce the effect of outliers\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.min\n             */\n            /**\n             * Padding of the max value relative to the length of the axis. A\n             * padding of 0.05 will make a 100px axis 5px longer.\n             *\n             * @product highcharts highstock highmaps\n             */\n            maxPadding: 0,\n            /**\n             * Color of the grid lines extending from the axis across the\n             * gradient.\n             *\n             * @sample {highmaps} maps/coloraxis/gridlines/\n             *         Grid lines demonstrated\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highcharts highstock highmaps\n             */\n            gridLineColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * The width of the grid lines extending from the axis across the\n             * gradient of a scalar color axis.\n             *\n             * @sample {highmaps} maps/coloraxis/gridlines/\n             *         Grid lines demonstrated\n             *\n             * @product highcharts highstock highmaps\n             */\n            gridLineWidth: 1,\n            /**\n             * The interval of the tick marks in axis units. When `null`, the\n             * tick interval is computed to approximately follow the\n             * `tickPixelInterval`.\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.tickInterval\n             */\n            /**\n             * If [tickInterval](#colorAxis.tickInterval) is `null` this option\n             * sets the approximate pixel interval of the tick marks.\n             *\n             * @product highcharts highstock highmaps\n             */\n            tickPixelInterval: 72,\n            /**\n             * Whether to force the axis to start on a tick. Use this option\n             * with the `maxPadding` option to control the axis start.\n             *\n             * @product highcharts highstock highmaps\n             */\n            startOnTick: true,\n            /**\n             * Whether to force the axis to end on a tick. Use this option with\n             * the [maxPadding](#colorAxis.maxPadding) option to control the\n             * axis end.\n             *\n             * @product highcharts highstock highmaps\n             */\n            endOnTick: true,\n            /** @ignore */\n            offset: 0,\n            /**\n             * The triangular marker on a scalar color axis that points to the\n             * value of the hovered area. To disable the marker, set\n             * `marker: null`.\n             *\n             * @sample {highmaps} maps/coloraxis/marker/\n             *         Black marker\n             *\n             * @declare Highcharts.PointMarkerOptionsObject\n             * @product highcharts highstock highmaps\n             */\n            marker: {\n                /**\n                 * Animation for the marker as it moves between values. Set to\n                 * `false` to disable animation. Defaults to `{ duration: 50 }`.\n                 *\n                 * @type    {boolean|Partial<Highcharts.AnimationOptionsObject>}\n                 * @product highcharts highstock highmaps\n                 */\n                animation: {\n                    /** @internal */\n                    duration: 50\n                },\n                /** @internal */\n                width: 0.01,\n                /**\n                 * The color of the marker.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @product highcharts highstock highmaps\n                 */\n                color: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The axis labels show the number for each tick.\n             *\n             * For more live examples on label options, see [xAxis.labels in the\n             * Highcharts API.](/highcharts#xAxis.labels)\n             *\n             * @extends xAxis.labels\n             * @product highcharts highstock highmaps\n             */\n            labels: {\n                distance: 8,\n                /**\n                 * How to handle overflowing labels on horizontal color axis. If set\n                 * to `\"allow\"`, it will not be aligned at all. By default it\n                 * `\"justify\"` labels inside the chart area. If there is room to\n                 * move it, it will be aligned to the edge, else it will be removed.\n                 *\n                 * @validvalue [\"allow\", \"justify\"]\n                 * @product    highcharts highstock highmaps\n                 */\n                overflow: 'justify',\n                rotation: 0\n            },\n            /**\n             * The color to represent the minimum of the color axis. Unless\n             * [dataClasses](#colorAxis.dataClasses) or\n             * [stops](#colorAxis.stops) are set, the gradient starts at this\n             * value.\n             *\n             * If dataClasses are set, the color is based on minColor and\n             * maxColor unless a color is set for each data class, or the\n             * [dataClassColor](#colorAxis.dataClassColor) is set.\n             *\n             * @sample {highmaps} maps/coloraxis/mincolor-maxcolor/\n             *         Min and max colors on scalar (gradient) axis\n             * @sample {highmaps} maps/coloraxis/mincolor-maxcolor-dataclasses/\n             *         On data classes\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highcharts highstock highmaps\n             */\n            minColor: \"#e6e9ff\" /* Palette.highlightColor10 */,\n            /**\n             * The color to represent the maximum of the color axis. Unless\n             * [dataClasses](#colorAxis.dataClasses) or\n             * [stops](#colorAxis.stops) are set, the gradient ends at this\n             * value.\n             *\n             * If dataClasses are set, the color is based on minColor and\n             * maxColor unless a color is set for each data class, or the\n             * [dataClassColor](#colorAxis.dataClassColor) is set.\n             *\n             * @sample {highmaps} maps/coloraxis/mincolor-maxcolor/\n             *         Min and max colors on scalar (gradient) axis\n             * @sample {highmaps} maps/coloraxis/mincolor-maxcolor-dataclasses/\n             *         On data classes\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highcharts highstock highmaps\n             */\n            maxColor: \"#0022ff\" /* Palette.highlightColor100 */,\n            /**\n             * Color stops for the gradient of a scalar color axis. Use this in\n             * cases where a linear gradient between a `minColor` and `maxColor`\n             * is not sufficient. The stops is an array of tuples, where the\n             * first item is a float between 0 and 1 assigning the relative\n             * position in the gradient, and the second item is the color.\n             *\n             * @sample highcharts/coloraxis/coloraxis-stops/\n             *         Color axis stops\n             * @sample highcharts/coloraxis/color-key-with-stops/\n             *         Color axis stops with custom colorKey\n             * @sample {highmaps} maps/demo/heatmap/\n             *         Heatmap with three color stops\n             *\n             * @type      {Array<Array<number,Highcharts.ColorString>>}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.stops\n             */\n            /**\n             * The pixel length of the main tick marks on the color axis.\n             */\n            tickLength: 5,\n            /**\n             * The type of interpolation to use for the color axis. Can be\n             * `linear` or `logarithmic`.\n             *\n             * @sample highcharts/coloraxis/logarithmic-with-emulate-negative-values/\n             *         Logarithmic color axis with extension to emulate negative\n             *         values\n             *\n             * @type      {Highcharts.ColorAxisTypeValue}\n             * @default   linear\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.type\n             */\n            /**\n             * Whether to reverse the axis so that the highest number is closest\n             * to the origin. Defaults to `false` in a horizontal legend and\n             * `true` in a vertical legend, where the smallest value starts on\n             * top.\n             *\n             * @type      {boolean}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.reversed\n             */\n            /**\n             * @product   highcharts highstock highmaps\n             * @excluding afterBreaks, pointBreak, pointInBreak\n             * @apioption colorAxis.events\n             */\n            /**\n             * Fires when the legend item belonging to the colorAxis is clicked.\n             * One parameter, `event`, is passed to the function.\n             *\n             * @type      {Function}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.events.legendItemClick\n             */\n            /**\n             * The width of the color axis. If it's a number, it is interpreted as\n             * pixels.\n             *\n             * If it's a percentage string, it is interpreted as percentages of the\n             * total plot width.\n             *\n             * @sample    highcharts/coloraxis/width-and-height\n             *            Percentage width and pixel height for color axis\n             *\n             * @type      {number|string}\n             * @since     @next\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.width\n             */\n            /**\n             * The height of the color axis. If it's a number, it is interpreted as\n             * pixels.\n             *\n             * If it's a percentage string, it is interpreted as percentages of the\n             * total plot height.\n             *\n             * @sample    highcharts/coloraxis/width-and-height\n             *            Percentage width and pixel height for color axis\n             *\n             * @type      {number|string}\n             * @since     @next\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.height\n             */\n            /**\n             * Whether to display the colorAxis in the legend.\n             *\n             * @sample highcharts/coloraxis/hidden-coloraxis-with-3d-chart/\n             *         Hidden color axis with 3d chart\n             *\n             * @see [heatmap.showInLegend](#series.heatmap.showInLegend)\n             *\n             * @since   4.2.7\n             * @product highcharts highstock highmaps\n             */\n            showInLegend: true\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return colorAxisDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisLike.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var merge = U.merge;\n        /* *\n         *\n         *  Namespace\n         *\n         * */\n        var ColorAxisLike;\n        (function (ColorAxisLike) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize defined data classes.\n             * @private\n             */\n            function initDataClasses(userOptions) {\n                var axis = this, chart = axis.chart, legendItem = axis.legendItem = axis.legendItem || {}, options = axis.options, userDataClasses = userOptions.dataClasses || [];\n                var dataClass, dataClasses, colorCount = chart.options.chart.colorCount, colorCounter = 0, colors;\n                axis.dataClasses = dataClasses = [];\n                legendItem.labels = [];\n                for (var i = 0, iEnd = userDataClasses.length; i < iEnd; ++i) {\n                    dataClass = userDataClasses[i];\n                    dataClass = merge(dataClass);\n                    dataClasses.push(dataClass);\n                    if (!chart.styledMode && dataClass.color) {\n                        continue;\n                    }\n                    if (options.dataClassColor === 'category') {\n                        if (!chart.styledMode) {\n                            colors = chart.options.colors || [];\n                            colorCount = colors.length;\n                            dataClass.color = colors[colorCounter];\n                        }\n                        dataClass.colorIndex = colorCounter;\n                        // Loop back to zero\n                        colorCounter++;\n                        if (colorCounter === colorCount) {\n                            colorCounter = 0;\n                        }\n                    }\n                    else {\n                        dataClass.color = color(options.minColor).tweenTo(color(options.maxColor), iEnd < 2 ? 0.5 : i / (iEnd - 1) // #3219\n                        );\n                    }\n                }\n            }\n            ColorAxisLike.initDataClasses = initDataClasses;\n            /**\n             * Create initial color stops.\n             * @private\n             */\n            function initStops() {\n                var axis = this, options = axis.options, stops = axis.stops = options.stops || [\n                    [0, options.minColor || ''],\n                    [1, options.maxColor || '']\n                ];\n                for (var i = 0, iEnd = stops.length; i < iEnd; ++i) {\n                    stops[i].color = color(stops[i][1]);\n                }\n            }\n            ColorAxisLike.initStops = initStops;\n            /**\n             * Normalize logarithmic values.\n             * @private\n             */\n            function normalizedValue(value) {\n                var axis = this, max = axis.max || 0, min = axis.min || 0;\n                if (axis.logarithmic) {\n                    value = axis.logarithmic.log2lin(value);\n                }\n                return 1 - ((max - value) /\n                    ((max - min) || 1));\n            }\n            ColorAxisLike.normalizedValue = normalizedValue;\n            /**\n             * Translate from a value to a color.\n             * @private\n             */\n            function toColor(value, point) {\n                var axis = this;\n                var dataClasses = axis.dataClasses;\n                var stops = axis.stops;\n                var pos, from, to, color, dataClass, i;\n                if (dataClasses) {\n                    i = dataClasses.length;\n                    while (i--) {\n                        dataClass = dataClasses[i];\n                        from = dataClass.from;\n                        to = dataClass.to;\n                        if ((typeof from === 'undefined' || value >= from) &&\n                            (typeof to === 'undefined' || value <= to)) {\n                            color = dataClass.color;\n                            if (point) {\n                                point.dataClass = i;\n                                point.colorIndex = dataClass.colorIndex;\n                            }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    pos = axis.normalizedValue(value);\n                    i = stops.length;\n                    while (i--) {\n                        if (pos > stops[i][0]) {\n                            break;\n                        }\n                    }\n                    from = stops[i] || stops[i + 1];\n                    to = stops[i + 1] || from;\n                    // The position within the gradient\n                    pos = 1 - (to[0] - pos) / ((to[0] - from[0]) || 1);\n                    color = from.color.tweenTo(to.color, pos);\n                }\n                return color;\n            }\n            ColorAxisLike.toColor = toColor;\n        })(ColorAxisLike || (ColorAxisLike = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ColorAxisLike;\n    });\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Axis/Color/ColorAxisComposition.js'], _modules['Core/Axis/Color/ColorAxisDefaults.js'], _modules['Core/Axis/Color/ColorAxisLike.js'], _modules['Core/Defaults.js'], _modules['Core/Legend/LegendSymbol.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Axis, ColorAxisComposition, ColorAxisDefaults, ColorAxisLike, D, LegendSymbol, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defaultOptions = D.defaultOptions;\n        var Series = SeriesRegistry.series;\n        var defined = U.defined, extend = U.extend, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, relativeLength = U.relativeLength;\n        defaultOptions.colorAxis = merge(defaultOptions.xAxis, ColorAxisDefaults);\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ColorAxis object for inclusion in gradient legends.\n         *\n         * @class\n         * @name Highcharts.ColorAxis\n         * @augments Highcharts.Axis\n         *\n         * @param {Highcharts.Chart} chart\n         * The related chart of the color axis.\n         *\n         * @param {Highcharts.ColorAxisOptions} userOptions\n         * The color axis options for initialization.\n         */\n        var ColorAxis = /** @class */ (function (_super) {\n            __extends(ColorAxis, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function ColorAxis(chart, userOptions) {\n                var _this = _super.call(this, chart, userOptions) || this;\n                _this.coll = 'colorAxis';\n                _this.visible = true;\n                _this.init(chart, userOptions);\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            ColorAxis.compose = function (ChartClass, FxClass, LegendClass, SeriesClass) {\n                ColorAxisComposition.compose(ColorAxis, ChartClass, FxClass, LegendClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the color axis.\n             *\n             * @function Highcharts.ColorAxis#init\n             *\n             * @param {Highcharts.Chart} chart\n             * The related chart of the color axis.\n             *\n             * @param {Highcharts.ColorAxisOptions} userOptions\n             * The color axis options for initialization.\n             */\n            ColorAxis.prototype.init = function (chart, userOptions) {\n                var axis = this;\n                var legend = chart.options.legend || {}, horiz = userOptions.layout ?\n                    userOptions.layout !== 'vertical' :\n                    legend.layout !== 'vertical';\n                axis.side = userOptions.side || horiz ? 2 : 1;\n                axis.reversed = userOptions.reversed || !horiz;\n                axis.opposite = !horiz;\n                _super.prototype.init.call(this, chart, userOptions, 'colorAxis');\n                // Super.init saves the extended user options, now replace it with the\n                // originals\n                this.userOptions = userOptions;\n                if (isArray(chart.userOptions.colorAxis)) {\n                    chart.userOptions.colorAxis[this.index] = userOptions;\n                }\n                // Prepare data classes\n                if (userOptions.dataClasses) {\n                    axis.initDataClasses(userOptions);\n                }\n                axis.initStops();\n                // Override original axis properties\n                axis.horiz = horiz;\n                axis.zoomEnabled = false;\n            };\n            /**\n             * Returns true if the series has points at all.\n             *\n             * @function Highcharts.ColorAxis#hasData\n             *\n             * @return {boolean}\n             * True, if the series has points, otherwise false.\n             */\n            ColorAxis.prototype.hasData = function () {\n                return !!(this.tickPositions || []).length;\n            };\n            /**\n             * Override so that ticks are not added in data class axes (#6914)\n             * @private\n             */\n            ColorAxis.prototype.setTickPositions = function () {\n                if (!this.dataClasses) {\n                    return _super.prototype.setTickPositions.call(this);\n                }\n            };\n            /**\n             * Extend the setOptions method to process extreme colors and color stops.\n             * @private\n             */\n            ColorAxis.prototype.setOptions = function (userOptions) {\n                var options = merge(defaultOptions.colorAxis, userOptions, \n                // Forced options\n                {\n                    showEmpty: false,\n                    title: null,\n                    visible: this.chart.options.legend.enabled &&\n                        userOptions.visible !== false\n                });\n                _super.prototype.setOptions.call(this, options);\n                this.options.crosshair = this.options.marker;\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.setAxisSize = function () {\n                var _a;\n                var axis = this, chart = axis.chart, symbol = (_a = axis.legendItem) === null || _a === void 0 ? void 0 : _a.symbol;\n                var _b = axis.getSize(), width = _b.width, height = _b.height;\n                if (symbol) {\n                    this.left = +symbol.attr('x');\n                    this.top = +symbol.attr('y');\n                    this.width = width = +symbol.attr('width');\n                    this.height = height = +symbol.attr('height');\n                    this.right = chart.chartWidth - this.left - width;\n                    this.bottom = chart.chartHeight - this.top - height;\n                    this.pos = this.horiz ? this.left : this.top;\n                }\n                // Fake length for disabled legend to avoid tick issues\n                // and such (#5205)\n                this.len = (this.horiz ? width : height) ||\n                    ColorAxis.defaultLegendLength;\n            };\n            /**\n             * Override the getOffset method to add the whole axis groups inside the\n             * legend.\n             * @private\n             */\n            ColorAxis.prototype.getOffset = function () {\n                var _a;\n                var axis = this;\n                var group = (_a = axis.legendItem) === null || _a === void 0 ? void 0 : _a.group;\n                var sideOffset = axis.chart.axisOffset[axis.side];\n                if (group) {\n                    // Hook for the getOffset method to add groups to this parent\n                    // group\n                    axis.axisParent = group;\n                    // Call the base\n                    _super.prototype.getOffset.call(this);\n                    var legend_1 = this.chart.legend;\n                    // Adds `maxLabelLength` needed for label padding corrections done\n                    // by `render()` and `getMargins()` (#15551).\n                    legend_1.allItems.forEach(function (item) {\n                        if (item instanceof ColorAxis) {\n                            item.drawLegendSymbol(legend_1, item);\n                        }\n                    });\n                    legend_1.render();\n                    this.chart.getMargins(true);\n                    // First time only\n                    if (!axis.added) {\n                        axis.added = true;\n                        axis.labelLeft = 0;\n                        axis.labelRight = axis.width;\n                    }\n                    // Reset it to avoid color axis reserving space\n                    axis.chart.axisOffset[axis.side] = sideOffset;\n                }\n            };\n            /**\n             * Create the color gradient.\n             * @private\n             */\n            ColorAxis.prototype.setLegendColor = function () {\n                var axis = this;\n                var horiz = axis.horiz;\n                var reversed = axis.reversed;\n                var one = reversed ? 1 : 0;\n                var zero = reversed ? 0 : 1;\n                var grad = horiz ? [one, 0, zero, 0] : [0, zero, 0, one]; // #3190\n                axis.legendColor = {\n                    linearGradient: {\n                        x1: grad[0],\n                        y1: grad[1],\n                        x2: grad[2],\n                        y2: grad[3]\n                    },\n                    stops: axis.stops\n                };\n            };\n            /**\n             * The color axis appears inside the legend and has its own legend symbol.\n             * @private\n             */\n            ColorAxis.prototype.drawLegendSymbol = function (legend, item) {\n                var _a;\n                var axis = this, legendItem = item.legendItem || {}, padding = legend.padding, legendOptions = legend.options, labelOptions = axis.options.labels, itemDistance = pick(legendOptions.itemDistance, 10), horiz = axis.horiz, _b = axis.getSize(), width = _b.width, height = _b.height, labelPadding = pick(\n                // @todo: This option is not documented, nor implemented when\n                // vertical\n                legendOptions.labelPadding, horiz ? 16 : 30);\n                this.setLegendColor();\n                // Create the gradient\n                if (!legendItem.symbol) {\n                    legendItem.symbol = this.chart.renderer.symbol('roundedRect')\n                        .attr({\n                        r: (_a = legendOptions.symbolRadius) !== null && _a !== void 0 ? _a : 3,\n                        zIndex: 1\n                    }).add(legendItem.group);\n                }\n                legendItem.symbol.attr({\n                    x: 0,\n                    y: (legend.baseline || 0) - 11,\n                    width: width,\n                    height: height\n                });\n                // Set how much space this legend item takes up\n                legendItem.labelWidth = (width +\n                    padding +\n                    (horiz ?\n                        itemDistance :\n                        pick(labelOptions.x, labelOptions.distance) +\n                            this.maxLabelLength));\n                legendItem.labelHeight = height + padding + (horiz ? labelPadding : 0);\n            };\n            /**\n             * Fool the legend.\n             * @private\n             */\n            ColorAxis.prototype.setState = function (state) {\n                this.series.forEach(function (series) {\n                    series.setState(state);\n                });\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.setVisible = function () {\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.getSeriesExtremes = function () {\n                var axis = this;\n                var series = axis.series;\n                var colorValArray, colorKey, colorValIndex, pointArrayMap, calculatedExtremes, cSeries, i = series.length, yData, j;\n                this.dataMin = Infinity;\n                this.dataMax = -Infinity;\n                while (i--) { // x, y, value, other\n                    cSeries = series[i];\n                    colorKey = cSeries.colorKey = pick(cSeries.options.colorKey, cSeries.colorKey, cSeries.pointValKey, cSeries.zoneAxis, 'y');\n                    pointArrayMap = cSeries.pointArrayMap;\n                    calculatedExtremes = cSeries[colorKey + 'Min'] &&\n                        cSeries[colorKey + 'Max'];\n                    if (cSeries[colorKey + 'Data']) {\n                        colorValArray = cSeries[colorKey + 'Data'];\n                    }\n                    else {\n                        if (!pointArrayMap) {\n                            colorValArray = cSeries.yData;\n                        }\n                        else {\n                            colorValArray = [];\n                            colorValIndex = pointArrayMap.indexOf(colorKey);\n                            yData = cSeries.yData;\n                            if (colorValIndex >= 0 && yData) {\n                                for (j = 0; j < yData.length; j++) {\n                                    colorValArray.push(pick(yData[j][colorValIndex], yData[j]));\n                                }\n                            }\n                        }\n                    }\n                    // If color key extremes are already calculated, use them.\n                    if (calculatedExtremes) {\n                        cSeries.minColorValue = cSeries[colorKey + 'Min'];\n                        cSeries.maxColorValue = cSeries[colorKey + 'Max'];\n                    }\n                    else {\n                        var cExtremes = Series.prototype.getExtremes.call(cSeries, colorValArray);\n                        cSeries.minColorValue = cExtremes.dataMin;\n                        cSeries.maxColorValue = cExtremes.dataMax;\n                    }\n                    if (defined(cSeries.minColorValue) &&\n                        defined(cSeries.maxColorValue)) {\n                        this.dataMin =\n                            Math.min(this.dataMin, cSeries.minColorValue);\n                        this.dataMax =\n                            Math.max(this.dataMax, cSeries.maxColorValue);\n                    }\n                    if (!calculatedExtremes) {\n                        Series.prototype.applyExtremes.call(cSeries);\n                    }\n                }\n            };\n            /**\n             * Internal function to draw a crosshair.\n             *\n             * @function Highcharts.ColorAxis#drawCrosshair\n             *\n             * @param {Highcharts.PointerEventObject} [e]\n             *        The event arguments from the modified pointer event, extended with\n             *        `chartX` and `chartY`\n             *\n             * @param {Highcharts.Point} [point]\n             *        The Point object if the crosshair snaps to points.\n             *\n             * @emits Highcharts.ColorAxis#event:afterDrawCrosshair\n             * @emits Highcharts.ColorAxis#event:drawCrosshair\n             */\n            ColorAxis.prototype.drawCrosshair = function (e, point) {\n                var axis = this, legendItem = axis.legendItem || {}, plotX = point && point.plotX, plotY = point && point.plotY, axisPos = axis.pos, axisLen = axis.len;\n                var crossPos;\n                if (point) {\n                    crossPos = axis.toPixels(point.getNestedProperty(point.series.colorKey));\n                    if (crossPos < axisPos) {\n                        crossPos = axisPos - 2;\n                    }\n                    else if (crossPos > axisPos + axisLen) {\n                        crossPos = axisPos + axisLen + 2;\n                    }\n                    point.plotX = crossPos;\n                    point.plotY = axis.len - crossPos;\n                    _super.prototype.drawCrosshair.call(this, e, point);\n                    point.plotX = plotX;\n                    point.plotY = plotY;\n                    if (axis.cross &&\n                        !axis.cross.addedToColorAxis &&\n                        legendItem.group) {\n                        axis.cross\n                            .addClass('highcharts-coloraxis-marker')\n                            .add(legendItem.group);\n                        axis.cross.addedToColorAxis = true;\n                        if (!axis.chart.styledMode &&\n                            typeof axis.crosshair === 'object') {\n                            axis.cross.attr({\n                                fill: axis.crosshair.color\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.getPlotLinePath = function (options) {\n                var axis = this, left = axis.left, pos = options.translatedValue, top = axis.top;\n                // Crosshairs only\n                return isNumber(pos) ? // `pos` can be 0 (#3969)\n                    (axis.horiz ? [\n                        ['M', pos - 4, top - 6],\n                        ['L', pos + 4, top - 6],\n                        ['L', pos, top],\n                        ['Z']\n                    ] : [\n                        ['M', left, pos],\n                        ['L', left - 6, pos + 6],\n                        ['L', left - 6, pos - 6],\n                        ['Z']\n                    ]) :\n                    _super.prototype.getPlotLinePath.call(this, options);\n            };\n            /**\n             * Updates a color axis instance with a new set of options. The options are\n             * merged with the existing options, so only new or altered options need to\n             * be specified.\n             *\n             * @function Highcharts.ColorAxis#update\n             *\n             * @param {Highcharts.ColorAxisOptions} newOptions\n             * The new options that will be merged in with existing options on the color\n             * axis.\n             *\n             * @param {boolean} [redraw]\n             * Whether to redraw the chart after the color axis is altered. If doing\n             * more operations on the chart, it is a good idea to set redraw to `false`\n             * and call {@link Highcharts.Chart#redraw} after.\n             */\n            ColorAxis.prototype.update = function (newOptions, redraw) {\n                var axis = this, chart = axis.chart, legend = chart.legend;\n                this.series.forEach(function (series) {\n                    // Needed for Axis.update when choropleth colors change\n                    series.isDirtyData = true;\n                });\n                // When updating data classes, destroy old items and make sure new\n                // ones are created (#3207)\n                if (newOptions.dataClasses && legend.allItems || axis.dataClasses) {\n                    axis.destroyItems();\n                }\n                _super.prototype.update.call(this, newOptions, redraw);\n                if (axis.legendItem && axis.legendItem.label) {\n                    axis.setLegendColor();\n                    legend.colorizeItem(this, true);\n                }\n            };\n            /**\n             * Destroy color axis legend items.\n             * @private\n             */\n            ColorAxis.prototype.destroyItems = function () {\n                var axis = this, chart = axis.chart, legendItem = axis.legendItem || {};\n                if (legendItem.label) {\n                    chart.legend.destroyItem(axis);\n                }\n                else if (legendItem.labels) {\n                    for (var _i = 0, _a = legendItem.labels; _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        chart.legend.destroyItem(item);\n                    }\n                }\n                chart.isDirtyLegend = true;\n            };\n            //   Removing the whole axis (#14283)\n            ColorAxis.prototype.destroy = function () {\n                this.chart.isDirtyLegend = true;\n                this.destroyItems();\n                _super.prototype.destroy.apply(this, [].slice.call(arguments));\n            };\n            /**\n             * Removes the color axis and the related legend item.\n             *\n             * @function Highcharts.ColorAxis#remove\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart following the remove.\n             */\n            ColorAxis.prototype.remove = function (redraw) {\n                this.destroyItems();\n                _super.prototype.remove.call(this, redraw);\n            };\n            /**\n             * Get the legend item symbols for data classes.\n             * @private\n             */\n            ColorAxis.prototype.getDataClassLegendSymbols = function () {\n                var axis = this, chart = axis.chart, legendItems = (axis.legendItem &&\n                    axis.legendItem.labels ||\n                    []), legendOptions = chart.options.legend, valueDecimals = pick(legendOptions.valueDecimals, -1), valueSuffix = pick(legendOptions.valueSuffix, '');\n                var getPointsInDataClass = function (i) {\n                    return axis.series.reduce(function (points, s) {\n                        points.push.apply(points, s.points.filter(function (point) {\n                            return point.dataClass === i;\n                        }));\n                        return points;\n                    }, []);\n                };\n                var name;\n                if (!legendItems.length) {\n                    axis.dataClasses.forEach(function (dataClass, i) {\n                        var from = dataClass.from, to = dataClass.to, numberFormatter = chart.numberFormatter;\n                        var vis = true;\n                        // Assemble the default name. This can be overridden\n                        // by legend.options.labelFormatter\n                        name = '';\n                        if (typeof from === 'undefined') {\n                            name = '< ';\n                        }\n                        else if (typeof to === 'undefined') {\n                            name = '> ';\n                        }\n                        if (typeof from !== 'undefined') {\n                            name += numberFormatter(from, valueDecimals) + valueSuffix;\n                        }\n                        if (typeof from !== 'undefined' && typeof to !== 'undefined') {\n                            name += ' - ';\n                        }\n                        if (typeof to !== 'undefined') {\n                            name += numberFormatter(to, valueDecimals) + valueSuffix;\n                        }\n                        // Add a mock object to the legend items\n                        legendItems.push(extend({\n                            chart: chart,\n                            name: name,\n                            options: {},\n                            drawLegendSymbol: LegendSymbol.rectangle,\n                            visible: true,\n                            isDataClass: true,\n                            // Override setState to set either normal or inactive\n                            // state to all points in this data class\n                            setState: function (state) {\n                                for (var _i = 0, _a = getPointsInDataClass(i); _i < _a.length; _i++) {\n                                    var point = _a[_i];\n                                    point.setState(state);\n                                }\n                            },\n                            // Override setState to show or hide all points in this\n                            // data class\n                            setVisible: function () {\n                                this.visible = vis = axis.visible = !vis;\n                                var affectedSeries = [];\n                                for (var _i = 0, _a = getPointsInDataClass(i); _i < _a.length; _i++) {\n                                    var point = _a[_i];\n                                    point.setVisible(vis);\n                                    if (affectedSeries.indexOf(point.series) === -1) {\n                                        affectedSeries.push(point.series);\n                                    }\n                                }\n                                chart.legend.colorizeItem(this, vis);\n                                affectedSeries.forEach(function (series) {\n                                    fireEvent(series, 'afterDataClassLegendClick');\n                                });\n                            }\n                        }, dataClass));\n                    });\n                }\n                return legendItems;\n            };\n            /**\n             * Get size of color axis symbol.\n             * @private\n             */\n            ColorAxis.prototype.getSize = function () {\n                var axis = this, chart = axis.chart, horiz = axis.horiz, _a = axis.options, legendOptions = _a.legend, colorAxisHeight = _a.height, colorAxisWidth = _a.width, width = pick(defined(colorAxisWidth) ?\n                    relativeLength(colorAxisWidth, chart.chartWidth) : void 0, legendOptions === null || legendOptions === void 0 ? void 0 : legendOptions.symbolWidth, horiz ? ColorAxis.defaultLegendLength : 12), height = pick(defined(colorAxisHeight) ?\n                    relativeLength(colorAxisHeight, chart.chartHeight) : void 0, legendOptions === null || legendOptions === void 0 ? void 0 : legendOptions.symbolHeight, horiz ? 12 : ColorAxis.defaultLegendLength);\n                return {\n                    width: width,\n                    height: height\n                };\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ColorAxis.defaultLegendLength = 200;\n            /**\n             * @private\n             */\n            ColorAxis.keepProps = [\n                'legendItem'\n            ];\n            return ColorAxis;\n        }(Axis));\n        extend(ColorAxis.prototype, ColorAxisLike);\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // Properties to preserve after destroy, for Axis.update (#5881, #6025).\n        Array.prototype.push.apply(Axis.keepProps, ColorAxis.keepProps);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Color axis types\n         *\n         * @typedef {\"linear\"|\"logarithmic\"} Highcharts.ColorAxisTypeValue\n         */\n        ''; // detach doclet above\n\n        return ColorAxis;\n    });\n    _registerModule(_modules, 'Series/ColorMapComposition.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var columnProto = SeriesRegistry.seriesTypes.column.prototype;\n        var addEvent = U.addEvent, defined = U.defined;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ColorMapComposition;\n        (function (ColorMapComposition) {\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            ColorMapComposition.pointMembers = {\n                dataLabelOnNull: true,\n                moveToTopOnHover: true,\n                isValid: pointIsValid\n            };\n            ColorMapComposition.seriesMembers = {\n                colorKey: 'value',\n                axisTypes: ['xAxis', 'yAxis', 'colorAxis'],\n                parallelArrays: ['x', 'y', 'value'],\n                pointArrayMap: ['value'],\n                trackerGroups: ['group', 'markerGroup', 'dataLabelsGroup'],\n                colorAttribs: seriesColorAttribs,\n                pointAttribs: columnProto.pointAttribs\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                var PointClass = SeriesClass.prototype.pointClass;\n                addEvent(PointClass, 'afterSetState', onPointAfterSetState);\n                return SeriesClass;\n            }\n            ColorMapComposition.compose = compose;\n            /**\n             * Move points to the top of the z-index order when hovered.\n             * @private\n             */\n            function onPointAfterSetState(e) {\n                var point = this;\n                if (point.moveToTopOnHover && point.graphic) {\n                    point.graphic.attr({\n                        zIndex: e && e.state === 'hover' ? 1 : 0\n                    });\n                }\n            }\n            /**\n             * Color points have a value option that determines whether or not it is\n             * a null point\n             * @private\n             */\n            function pointIsValid() {\n                return (this.value !== null &&\n                    this.value !== Infinity &&\n                    this.value !== -Infinity &&\n                    // undefined is allowed, but NaN is not (#17279)\n                    (this.value === void 0 || !isNaN(this.value)));\n            }\n            /**\n             * Get the color attibutes to apply on the graphic\n             * @private\n             * @function Highcharts.colorMapSeriesMixin.colorAttribs\n             * @param {Highcharts.Point} point\n             * @return {Highcharts.SVGAttributes}\n             *         The SVG attributes\n             */\n            function seriesColorAttribs(point) {\n                var ret = {};\n                if (defined(point.color) &&\n                    (!point.state || point.state === 'normal') // #15746\n                ) {\n                    ret[this.colorProp || 'fill'] = point.color;\n                }\n                return ret;\n            }\n        })(ColorMapComposition || (ColorMapComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ColorMapComposition;\n    });\n    _registerModule(_modules, 'Series/Heatmap/HeatmapPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ScatterPoint = SeriesRegistry.seriesTypes.scatter.prototype.pointClass;\n        var clamp = U.clamp, defined = U.defined, extend = U.extend, pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var HeatmapPoint = /** @class */ (function (_super) {\n            __extends(HeatmapPoint, _super);\n            function HeatmapPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            HeatmapPoint.prototype.applyOptions = function (options, x) {\n                // #17970, if point is null remove its color, because it may be updated\n                if (this.isNull || this.value === null) {\n                    delete this.color;\n                }\n                _super.prototype.applyOptions.call(this, options, x);\n                this.formatPrefix = this.isNull || this.value === null ?\n                    'null' : 'point';\n                return this;\n            };\n            /** @private */\n            HeatmapPoint.prototype.getCellAttributes = function () {\n                var point = this, series = point.series, seriesOptions = series.options, xPad = (seriesOptions.colsize || 1) / 2, yPad = (seriesOptions.rowsize || 1) / 2, xAxis = series.xAxis, yAxis = series.yAxis, markerOptions = point.options.marker || series.options.marker, pointPlacement = series.pointPlacementToXValue(), // #7860\n                pointPadding = pick(point.pointPadding, seriesOptions.pointPadding, 0), cellAttr = {\n                    x1: clamp(Math.round(xAxis.len -\n                        xAxis.translate(point.x - xPad, false, true, false, true, -pointPlacement)), -xAxis.len, 2 * xAxis.len),\n                    x2: clamp(Math.round(xAxis.len -\n                        xAxis.translate(point.x + xPad, false, true, false, true, -pointPlacement)), -xAxis.len, 2 * xAxis.len),\n                    y1: clamp(Math.round(yAxis.translate(point.y - yPad, false, true, false, true)), -yAxis.len, 2 * yAxis.len),\n                    y2: clamp(Math.round(yAxis.translate(point.y + yPad, false, true, false, true)), -yAxis.len, 2 * yAxis.len)\n                };\n                var dimensions = [['width', 'x'], ['height', 'y']];\n                // Handle marker's fixed width, and height values including border\n                // and pointPadding while calculating cell attributes.\n                for (var _i = 0, dimensions_1 = dimensions; _i < dimensions_1.length; _i++) {\n                    var dimension = dimensions_1[_i];\n                    var prop = dimension[0], direction = dimension[1];\n                    var start = direction + '1', end = direction + '2';\n                    var side = Math.abs(cellAttr[start] - cellAttr[end]), borderWidth = markerOptions &&\n                        markerOptions.lineWidth || 0, plotPos = Math.abs(cellAttr[start] + cellAttr[end]) / 2, widthOrHeight = markerOptions && markerOptions[prop];\n                    if (defined(widthOrHeight) && widthOrHeight < side) {\n                        var halfCellSize = widthOrHeight / 2 + borderWidth / 2;\n                        cellAttr[start] = plotPos - halfCellSize;\n                        cellAttr[end] = plotPos + halfCellSize;\n                    }\n                    // Handle pointPadding\n                    if (pointPadding) {\n                        if ((direction === 'x' && xAxis.reversed) ||\n                            (direction === 'y' && !yAxis.reversed)) {\n                            start = end;\n                            end = direction + '1';\n                        }\n                        cellAttr[start] += pointPadding;\n                        cellAttr[end] -= pointPadding;\n                    }\n                }\n                return cellAttr;\n            };\n            /**\n             * @private\n             */\n            HeatmapPoint.prototype.haloPath = function (size) {\n                if (!size) {\n                    return [];\n                }\n                var _a = this.shapeArgs || {}, _b = _a.x, x = _b === void 0 ? 0 : _b, _c = _a.y, y = _c === void 0 ? 0 : _c, _d = _a.width, width = _d === void 0 ? 0 : _d, _e = _a.height, height = _e === void 0 ? 0 : _e;\n                return [\n                    ['M', x - size, y - size],\n                    ['L', x - size, y + height + size],\n                    ['L', x + width + size, y + height + size],\n                    ['L', x + width + size, y - size],\n                    ['Z']\n                ];\n            };\n            /**\n             * Color points have a value option that determines whether or not it is\n             * a null point\n             * @private\n             */\n            HeatmapPoint.prototype.isValid = function () {\n                // undefined is allowed\n                return (this.value !== Infinity &&\n                    this.value !== -Infinity);\n            };\n            return HeatmapPoint;\n        }(ScatterPoint));\n        extend(HeatmapPoint.prototype, {\n            dataLabelOnNull: true,\n            moveToTopOnHover: true,\n            ttBelow: false\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HeatmapPoint;\n    });\n    _registerModule(_modules, 'Series/Heatmap/HeatmapSeriesDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A heatmap is a graphical representation of data where the individual\n         * values contained in a matrix are represented as colors.\n         *\n         * @productdesc {highcharts}\n         * Requires `modules/heatmap`.\n         *\n         * @sample highcharts/demo/heatmap/\n         *         Simple heatmap\n         * @sample highcharts/demo/heatmap-canvas/\n         *         Heavy heatmap\n         *\n         * @extends      plotOptions.scatter\n         * @excluding    animationLimit, connectEnds, connectNulls, cropThreshold,\n         *               dashStyle, findNearestPointBy, getExtremesFromAll, jitter,\n         *               linecap, lineWidth, pointInterval, pointIntervalUnit,\n         *               pointRange, pointStart, shadow, softThreshold, stacking,\n         *               step, threshold, cluster, dragDrop\n         * @product      highcharts highmaps\n         * @optionparent plotOptions.heatmap\n         */\n        var HeatmapSeriesDefaults = {\n            /**\n             * Animation is disabled by default on the heatmap series.\n             */\n            animation: false,\n            /**\n             * The border radius for each heatmap item. The border's color and\n             * width can be set in marker options.\n             *\n             * @see [lineColor](#plotOptions.heatmap.marker.lineColor)\n             * @see [lineWidth](#plotOptions.heatmap.marker.lineWidth)\n             */\n            borderRadius: 0,\n            /**\n             * The border width for each heatmap item.\n             */\n            borderWidth: 0,\n            /**\n             * Padding between the points in the heatmap.\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0\n             * @apioption plotOptions.heatmap.pointPadding\n             */\n            /**\n             * @default   value\n             * @apioption plotOptions.heatmap.colorKey\n             */\n            /**\n             * The main color of the series. In heat maps this color is rarely used,\n             * as we mostly use the color to denote the value of each point. Unless\n             * options are set in the [colorAxis](#colorAxis), the default value\n             * is pulled from the [options.colors](#colors) array.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since     4.0\n             * @product   highcharts\n             * @apioption plotOptions.heatmap.color\n             */\n            /**\n             * The column size - how many X axis units each column in the heatmap\n             * should span.\n             *\n             * @sample {highcharts} maps/demo/heatmap/\n             *         One day\n             * @sample {highmaps} maps/demo/heatmap/\n             *         One day\n             *\n             * @type      {number}\n             * @default   1\n             * @since     4.0\n             * @product   highcharts highmaps\n             * @apioption plotOptions.heatmap.colsize\n             */\n            /**\n             * The row size - how many Y axis units each heatmap row should span.\n             *\n             * @sample {highcharts} maps/demo/heatmap/\n             *         1 by default\n             * @sample {highmaps} maps/demo/heatmap/\n             *         1 by default\n             *\n             * @type      {number}\n             * @default   1\n             * @since     4.0\n             * @product   highcharts highmaps\n             * @apioption plotOptions.heatmap.rowsize\n             */\n            /**\n             * Make the heatmap render its data points as an interpolated image.\n             *\n             * @sample highcharts/demo/heatmap-interpolation\n             *   Interpolated heatmap image displaying user activity on a website\n             * @sample highcharts/series-heatmap/interpolation\n             *   Interpolated heatmap toggle\n             *\n             */\n            interpolation: false,\n            /**\n             * The color applied to null points. In styled mode, a general CSS class\n             * is applied instead.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            nullColor: \"#f7f7f7\" /* Palette.neutralColor3 */,\n            dataLabels: {\n                formatter: function () {\n                    var numberFormatter = this.series.chart.numberFormatter;\n                    var value = this.point.value;\n                    return isNumber(value) ? numberFormatter(value, -1) : '';\n                },\n                inside: true,\n                verticalAlign: 'middle',\n                crop: false,\n                /**\n                 * @ignore-option\n                 */\n                overflow: 'allow',\n                padding: 0 // #3837\n            },\n            /**\n             * @excluding radius, enabledThreshold\n             * @since     8.1\n             */\n            marker: {\n                /**\n                 * A predefined shape or symbol for the marker. When undefined, the\n                 * symbol is pulled from options.symbols. Other possible values are\n                 * `'circle'`, `'square'`,`'diamond'`, `'triangle'`,\n                 * `'triangle-down'`, `'rect'`, and `'ellipse'`.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `'url(graphic.png)'`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highcharts} highcharts/plotoptions/series-marker-symbol/\n                 *         Predefined, graphic and custom markers\n                 * @sample {highstock} highcharts/plotoptions/series-marker-symbol/\n                 *         Predefined, graphic and custom markers\n                 */\n                symbol: 'rect',\n                /** @ignore-option */\n                radius: 0,\n                lineColor: void 0,\n                states: {\n                    /**\n                     * @excluding radius, radiusPlus\n                     */\n                    hover: {\n                        /**\n                         * Set the marker's fixed width on hover state.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                         *         70px fixed marker's width and height on hover\n                         *\n                         * @type      {number|undefined}\n                         * @default   undefined\n                         * @product   highcharts highmaps\n                         * @apioption plotOptions.heatmap.marker.states.hover.width\n                         */\n                        /**\n                         * Set the marker's fixed height on hover state.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                         *         70px fixed marker's width and height on hover\n                         *\n                         * @type      {number|undefined}\n                         * @default   undefined\n                         * @product   highcharts highmaps\n                         * @apioption plotOptions.heatmap.marker.states.hover.height\n                         */\n                        /**\n                         * The number of pixels to increase the width of the\n                         * selected point.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                         *         20px greater width and height on hover\n                         *\n                         * @type      {number|undefined}\n                         * @default   undefined\n                         * @product   highcharts highmaps\n                         * @apioption plotOptions.heatmap.marker.states.hover.widthPlus\n                         */\n                        /**\n                         * The number of pixels to increase the height of the\n                         * selected point.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                        *          20px greater width and height on hover\n                            *\n                            * @type      {number|undefined}\n                            * @default   undefined\n                            * @product   highcharts highmaps\n                            * @apioption plotOptions.heatmap.marker.states.hover.heightPlus\n                            */\n                        /**\n                         * The additional line width for a hovered point.\n                         *\n                         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n                         *         5 pixels wider lineWidth on hover\n                         * @sample {highmaps} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n                         *         5 pixels wider lineWidth on hover\n                         */\n                        lineWidthPlus: 0\n                    },\n                    /**\n                     * @excluding radius\n                     */\n                    select: {\n                    /**\n                     * Set the marker's fixed width on select state.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                     *         70px fixed marker's width and height on hover\n                     *\n                     * @type      {number|undefined}\n                     * @default   undefined\n                     * @product   highcharts highmaps\n                     * @apioption plotOptions.heatmap.marker.states.select.width\n                     */\n                    /**\n                     * Set the marker's fixed height on select state.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n                     *         70px fixed marker's width and height on hover\n                     *\n                     * @type      {number|undefined}\n                     * @default   undefined\n                     * @product   highcharts highmaps\n                     * @apioption plotOptions.heatmap.marker.states.select.height\n                     */\n                    /**\n                     * The number of pixels to increase the width of the\n                     * selected point.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                     *         20px greater width and height on hover\n                     *\n                     * @type      {number|undefined}\n                     * @default   undefined\n                     * @product   highcharts highmaps\n                     * @apioption plotOptions.heatmap.marker.states.select.widthPlus\n                     */\n                    /**\n                     * The number of pixels to increase the height of the\n                     * selected point.\n                     *\n                     * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n                     *         20px greater width and height on hover\n                     *\n                     * @type      {number|undefined}\n                     * @default   undefined\n                     * @product   highcharts highmaps\n                     * @apioption plotOptions.heatmap.marker.states.select.heightPlus\n                     */\n                    }\n                }\n            },\n            clip: true,\n            /** @ignore-option */\n            pointRange: null,\n            tooltip: {\n                pointFormat: '{point.x}, {point.y}: {point.value}<br/>'\n            },\n            states: {\n                hover: {\n                    /** @ignore-option */\n                    halo: false,\n                    /**\n                     * How much to brighten the point on interaction. Requires the\n                     * main color to be defined in hex or rgb(a) format.\n                     *\n                     * In styled mode, the hover brightening is by default replaced\n                     * with a fill-opacity set in the `.highcharts-point:hover`\n                     * rule.\n                     */\n                    brightness: 0.2\n                }\n            },\n            legendSymbol: 'rectangle'\n        };\n        /**\n         * A `heatmap` series. If the [type](#series.heatmap.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @productdesc {highcharts}\n         * Requires `modules/heatmap`.\n         *\n         * @extends   series,plotOptions.heatmap\n         * @excluding cropThreshold, dataParser, dataURL, dragDrop ,pointRange, stack,\n         * @product   highcharts highmaps\n         * @apioption series.heatmap\n         */\n        /**\n         * An array of data points for the series. For the `heatmap` series\n         * type, points can be given in the following ways:\n         *\n         * 1.  An array of arrays with 3 or 2 values. In this case, the values\n         * correspond to `x,y,value`. If the first value is a string, it is\n         * applied as the name of the point, and the `x` value is inferred.\n         * The `x` value can also be omitted, in which case the inner arrays\n         * should be of length 2\\. Then the `x` value is automatically calculated,\n         * either starting at 0 and incremented by 1, or from `pointStart`\n         * and `pointInterval` given in the series options.\n         *\n         *  ```js\n         *     data: [\n         *         [0, 9, 7],\n         *         [1, 10, 4],\n         *         [2, 6, 3]\n         *     ]\n         *  ```\n         *\n         * 2.  An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series' [turboThreshold](#series.heatmap.turboThreshold),\n         * this option is not available.\n         *\n         *  ```js\n         *     data: [{\n         *         x: 1,\n         *         y: 3,\n         *         value: 10,\n         *         name: \"Point2\",\n         *         color: \"#00FF00\"\n         *     }, {\n         *         x: 1,\n         *         y: 7,\n         *         value: 10,\n         *         name: \"Point1\",\n         *         color: \"#FF00FF\"\n         *     }]\n         *  ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<number>|*>}\n         * @extends   series.line.data\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data\n         */\n        /**\n         * The color of the point. In heat maps the point color is rarely set\n         * explicitly, as we use the color to denote the `value`. Options for\n         * this are set in the [colorAxis](#colorAxis) configuration.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.color\n         */\n        /**\n         * The value of the point, resulting in a color controled by options\n         * as set in the [colorAxis](#colorAxis) configuration.\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.value\n         */\n        /**\n         * The x value of the point. For datetime axes,\n         * the X value is the timestamp in milliseconds since 1970.\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.x\n         */\n        /**\n         * The y value of the point.\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.y\n         */\n        /**\n         * Point padding for a single point.\n         *\n         * @sample maps/plotoptions/tilemap-pointpadding\n         *         Point padding on tiles\n         *\n         * @type      {number}\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.pointPadding\n         */\n        /**\n         * @excluding radius, enabledThreshold\n         * @product   highcharts highmaps\n         * @since     8.1\n         * @apioption series.heatmap.data.marker\n         */\n        /**\n         * @excluding radius, enabledThreshold\n         * @product   highcharts highmaps\n         * @since     8.1\n         * @apioption series.heatmap.marker\n         */\n        /**\n         * @excluding radius, radiusPlus\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.hover\n         */\n        /**\n         * @excluding radius\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.select\n         */\n        /**\n         * @excluding radius, radiusPlus\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.hover\n         */\n        /**\n         * @excluding radius\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.select\n         */\n        /**\n        * Set the marker's fixed width on hover state.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n        *         5 pixels wider lineWidth on hover\n        *\n        * @type      {number|undefined}\n        * @default   0\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.marker.states.hover.lineWidthPlus\n        */\n        /**\n        * Set the marker's fixed width on hover state.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n        *         70px fixed marker's width and height on hover\n        *\n        * @type      {number|undefined}\n        * @default   undefined\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.marker.states.hover.width\n        */\n        /**\n         * Set the marker's fixed height on hover state.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n         *         70px fixed marker's width and height on hover\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.hover.height\n         */\n        /**\n        * The number of pixels to increase the width of the\n        * hovered point.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n        *         One day\n        *\n        * @type      {number|undefined}\n        * @default   undefined\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.marker.states.hover.widthPlus\n        */\n        /**\n         * The number of pixels to increase the height of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.hover.heightPlus\n         */\n        /**\n         * The number of pixels to increase the width of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.select.widthPlus\n         */\n        /**\n         * The number of pixels to increase the height of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.marker.states.select.heightPlus\n         */\n        /**\n        * Set the marker's fixed width on hover state.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-linewidthplus\n        *         5 pixels wider lineWidth on hover\n        *\n        * @type      {number|undefined}\n        * @default   0\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.data.marker.states.hover.lineWidthPlus\n        */\n        /**\n         * Set the marker's fixed width on hover state.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n         *         70px fixed marker's width and height on hover\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.hover.width\n         */\n        /**\n         * Set the marker's fixed height on hover state.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n         *         70px fixed marker's width and height on hover\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.hover.height\n         */\n        /**\n         * The number of pixels to increase the width of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption series.heatmap.data.marker.states.hover.widthPlus\n         */\n        /**\n         * The number of pixels to increase the height of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption series.heatmap.data.marker.states.hover.heightPlus\n         */\n        /**\n        * Set the marker's fixed width on select state.\n        *\n        * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n        *         70px fixed marker's width and height on hover\n        *\n        * @type      {number|undefined}\n        * @default   undefined\n        * @product   highcharts highmaps\n        * @apioption series.heatmap.data.marker.states.select.width\n        */\n        /**\n         * Set the marker's fixed height on select state.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-width\n         *         70px fixed marker's width and height on hover\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highmaps\n         * @apioption series.heatmap.data.marker.states.select.height\n         */\n        /**\n         * The number of pixels to increase the width of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption series.heatmap.data.marker.states.select.widthPlus\n         */\n        /**\n         * The number of pixels to increase the height of the\n         * hovered point.\n         *\n         * @sample {highcharts} maps/plotoptions/heatmap-marker-states-hover-widthplus\n         *         One day\n         *\n         * @type      {number|undefined}\n         * @default   undefined\n         * @product   highcharts highstock\n         * @apioption series.heatmap.data.marker.states.select.heightPlus\n         */\n        ''; // keeps doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HeatmapSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/InterpolationUtilities.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Hubert Kozik\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var defined = U.defined, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Find color of point based on color axis.\n         *\n         * @function Highcharts.colorFromPoint\n         *\n         * @param {number | null} value\n         *        Value to find corresponding color on the color axis.\n         *\n         * @param {Highcharts.Point} point\n         *        Point to find it's color from color axis.\n         *\n         * @return {number[]}\n         *        Color in RGBa array.\n         */\n        function colorFromPoint(value, point) {\n            var colorAxis = point.series.colorAxis;\n            if (colorAxis) {\n                var rgba = (colorAxis.toColor(value || 0, point)\n                    .split(')')[0]\n                    .split('(')[1]\n                    .split(',')\n                    .map(function (s) { return pick(parseFloat(s), parseInt(s, 10)); }));\n                rgba[3] = pick(rgba[3], 1.0) * 255;\n                if (!defined(value) || !point.visible) {\n                    rgba[3] = 0;\n                }\n                return rgba;\n            }\n            return [0, 0, 0, 0];\n        }\n        /**\n         * Method responsible for creating a canvas for interpolation image.\n         * @private\n         */\n        function getContext(series) {\n            var canvas = series.canvas, context = series.context;\n            if (canvas && context) {\n                context.clearRect(0, 0, canvas.width, canvas.height);\n            }\n            else {\n                series.canvas = doc.createElement('canvas');\n                series.context = series.canvas.getContext('2d', {\n                    willReadFrequently: true\n                }) || void 0;\n                return series.context;\n            }\n            return context;\n        }\n        var InterpolationUtilities = {\n            colorFromPoint: colorFromPoint,\n            getContext: getContext\n        };\n\n        return InterpolationUtilities;\n    });\n    _registerModule(_modules, 'Series/Heatmap/HeatmapSeries.js', [_modules['Core/Color/Color.js'], _modules['Series/ColorMapComposition.js'], _modules['Series/Heatmap/HeatmapPoint.js'], _modules['Series/Heatmap/HeatmapSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGRenderer.js'], _modules['Core/Utilities.js'], _modules['Series/InterpolationUtilities.js']], function (Color, ColorMapComposition, HeatmapPoint, HeatmapSeriesDefaults, SeriesRegistry, SVGRenderer, U, IU) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var __assign = (this && this.__assign) || function () {\n            __assign = Object.assign || function(t) {\n                for (var s, i = 1, n = arguments.length; i < n; i++) {\n                    s = arguments[i];\n                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n                }\n                return t;\n            };\n            return __assign.apply(this, arguments);\n        };\n        var Series = SeriesRegistry.series, _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, ScatterSeries = _a.scatter;\n        var symbols = SVGRenderer.prototype.symbols;\n        var addEvent = U.addEvent, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        var colorFromPoint = IU.colorFromPoint, getContext = IU.getContext;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.heatmap\n         *\n         * @augments Highcharts.Series\n         */\n        var HeatmapSeries = /** @class */ (function (_super) {\n            __extends(HeatmapSeries, _super);\n            function HeatmapSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.valueMax = NaN;\n                _this.valueMin = NaN;\n                _this.isDirtyCanvas = true;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.drawPoints = function () {\n                var series = this, seriesOptions = series.options, interpolation = seriesOptions.interpolation, seriesMarkerOptions = seriesOptions.marker || {};\n                if (interpolation) {\n                    var image = series.image, chart = series.chart, xAxis = series.xAxis, yAxis = series.yAxis, _a = xAxis.reversed, xRev = _a === void 0 ? false : _a, width = xAxis.len, _b = yAxis.reversed, yRev = _b === void 0 ? false : _b, height = yAxis.len, dimensions = { width: width, height: height };\n                    if (!image || series.isDirtyData || series.isDirtyCanvas) {\n                        var ctx = getContext(series), canvas = series.canvas, _c = series.options, _d = _c.colsize, colsize = _d === void 0 ? 1 : _d, _e = _c.rowsize, rowsize = _e === void 0 ? 1 : _e, points = series.points, length_1 = series.points.length, pointsLen = length_1 - 1, colorAxis = (chart.colorAxis && chart.colorAxis[0]);\n                        if (canvas && ctx && colorAxis) {\n                            var _f = xAxis.getExtremes(), xMin_1 = _f.min, xMax = _f.max, _g = yAxis.getExtremes(), yMin_1 = _g.min, yMax = _g.max, xDelta = xMax - xMin_1, yDelta = yMax - yMin_1, imgMultiple = 8.0, lastX = Math.round(imgMultiple * ((xDelta / colsize) / imgMultiple)), lastY = Math.round(imgMultiple * ((yDelta / rowsize) / imgMultiple)), _h = [\n                                [lastX, lastX / xDelta, xRev, 'ceil'],\n                                [lastY, lastY / yDelta, !yRev, 'floor']\n                            ].map(function (_a) {\n                                var last = _a[0], scale = _a[1], rev = _a[2], rounding = _a[3];\n                                return (rev ?\n                                    function (v) { return (Math[rounding](last -\n                                        (scale * (v)))); } :\n                                    function (v) { return (Math[rounding](scale * v)); });\n                            }), transformX_1 = _h[0], transformY_1 = _h[1], canvasWidth_1 = canvas.width = lastX + 1, canvasHeight = canvas.height = lastY + 1, canvasArea = canvasWidth_1 * canvasHeight, pixelToPointScale = pointsLen / canvasArea, pixelData = new Uint8ClampedArray(canvasArea * 4), pointInPixels = function (x, y) { return (Math.ceil((canvasWidth_1 * transformY_1(y - yMin_1)) +\n                                transformX_1(x - xMin_1)) * 4); };\n                            series.buildKDTree();\n                            for (var i = 0; i < canvasArea; i++) {\n                                var point = points[Math.ceil(pixelToPointScale * i)], x = point.x, y = point.y;\n                                pixelData.set(colorFromPoint(point.value, point), pointInPixels(x, y));\n                            }\n                            ctx.putImageData(new ImageData(pixelData, canvasWidth_1), 0, 0);\n                            if (image) {\n                                image.attr(__assign(__assign({}, dimensions), { href: canvas.toDataURL('image/png', 1) }));\n                            }\n                            else {\n                                series.directTouch = false;\n                                series.image = chart.renderer.image(canvas.toDataURL('image/png', 1))\n                                    .attr(dimensions)\n                                    .add(series.group);\n                            }\n                        }\n                        series.isDirtyCanvas = false;\n                    }\n                    else if (image.width !== width || image.height !== height) {\n                        image.attr(dimensions);\n                    }\n                }\n                else if (seriesMarkerOptions.enabled || series._hasPointMarkers) {\n                    Series.prototype.drawPoints.call(series);\n                    series.points.forEach(function (point) {\n                        if (point.graphic) {\n                            // In styled mode, use CSS, otherwise the fill used in\n                            // the style sheet will take precedence over\n                            // the fill attribute.\n                            point.graphic[series.chart.styledMode ? 'css' : 'animate'](series.colorAttribs(point));\n                            if (point.value === null) { // #15708\n                                point.graphic.addClass('highcharts-null-point');\n                            }\n                        }\n                    });\n                }\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.getExtremes = function () {\n                // Get the extremes from the value data\n                var _a = Series.prototype.getExtremes\n                    .call(this, this.valueData), dataMin = _a.dataMin, dataMax = _a.dataMax;\n                if (isNumber(dataMin)) {\n                    this.valueMin = dataMin;\n                }\n                if (isNumber(dataMax)) {\n                    this.valueMax = dataMax;\n                }\n                // Get the extremes from the y data\n                return Series.prototype.getExtremes.call(this);\n            };\n            /**\n             * Override to also allow null points, used when building the k-d-tree for\n             * tooltips in boost mode.\n             * @private\n             */\n            HeatmapSeries.prototype.getValidPoints = function (points, insideOnly) {\n                return Series.prototype.getValidPoints.call(this, points, insideOnly, true);\n            };\n            /**\n             * Define hasData function for non-cartesian series. Returns true if the\n             * series has points at all.\n             * @private\n             */\n            HeatmapSeries.prototype.hasData = function () {\n                return !!this.processedXData.length; // != 0\n            };\n            /**\n             * Override the init method to add point ranges on both axes.\n             * @private\n             */\n            HeatmapSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                var options = this.options;\n                // #3758, prevent resetting in setData\n                options.pointRange = pick(options.pointRange, options.colsize || 1);\n                // general point range\n                this.yAxis.axisPointRange = options.rowsize || 1;\n                // Bind new symbol names\n                symbols.ellipse = symbols.circle;\n                // @todo\n                //\n                // Setting the border radius here is a workaround. It should be set in\n                // the shapeArgs or returned from `markerAttribs`. However,\n                // Series.drawPoints does not pick up markerAttribs to be passed over to\n                // `renderer.symbol`. Also, image symbols are not positioned by their\n                // top left corner like other symbols are. This should be refactored,\n                // then we could save ourselves some tests for .hasImage etc. And the\n                // evaluation of borderRadius would be moved to `markerAttribs`.\n                if (options.marker && isNumber(options.borderRadius)) {\n                    options.marker.r = options.borderRadius;\n                }\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.markerAttribs = function (point, state) {\n                var shapeArgs = point.shapeArgs || {};\n                if (point.hasImage) {\n                    return {\n                        x: point.plotX,\n                        y: point.plotY\n                    };\n                }\n                // Setting width and height attributes on image does not affect on its\n                // dimensions.\n                if (state && state !== 'normal') {\n                    var pointMarkerOptions = point.options.marker || {}, seriesMarkerOptions = this.options.marker || {}, seriesStateOptions = (seriesMarkerOptions.states &&\n                        seriesMarkerOptions.states[state]) || {}, pointStateOptions = (pointMarkerOptions.states &&\n                        pointMarkerOptions.states[state]) || {};\n                    // Set new width and height basing on state options.\n                    var width = (pointStateOptions.width ||\n                        seriesStateOptions.width ||\n                        shapeArgs.width ||\n                        0) + (pointStateOptions.widthPlus ||\n                        seriesStateOptions.widthPlus ||\n                        0);\n                    var height = (pointStateOptions.height ||\n                        seriesStateOptions.height ||\n                        shapeArgs.height ||\n                        0) + (pointStateOptions.heightPlus ||\n                        seriesStateOptions.heightPlus ||\n                        0);\n                    // Align marker by the new size.\n                    var x = (shapeArgs.x || 0) + ((shapeArgs.width || 0) - width) / 2, y = (shapeArgs.y || 0) + ((shapeArgs.height || 0) - height) / 2;\n                    return { x: x, y: y, width: width, height: height };\n                }\n                return shapeArgs;\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.pointAttribs = function (point, state) {\n                var series = this, attr = Series.prototype.pointAttribs.call(series, point, state), seriesOptions = series.options || {}, plotOptions = series.chart.options.plotOptions || {}, seriesPlotOptions = plotOptions.series || {}, heatmapPlotOptions = plotOptions.heatmap || {}, \n                // Get old properties in order to keep backward compatibility\n                borderColor = (point && point.options.borderColor) ||\n                    seriesOptions.borderColor ||\n                    heatmapPlotOptions.borderColor ||\n                    seriesPlotOptions.borderColor, borderWidth = (point && point.options.borderWidth) ||\n                    seriesOptions.borderWidth ||\n                    heatmapPlotOptions.borderWidth ||\n                    seriesPlotOptions.borderWidth ||\n                    attr['stroke-width'];\n                // Apply lineColor, or set it to default series color.\n                attr.stroke = ((point && point.marker && point.marker.lineColor) ||\n                    (seriesOptions.marker && seriesOptions.marker.lineColor) ||\n                    borderColor ||\n                    this.color);\n                // Apply old borderWidth property if exists.\n                attr['stroke-width'] = borderWidth;\n                if (state && state !== 'normal') {\n                    var stateOptions = merge((seriesOptions.states &&\n                        seriesOptions.states[state]), (seriesOptions.marker &&\n                        seriesOptions.marker.states &&\n                        seriesOptions.marker.states[state]), (point &&\n                        point.options.states &&\n                        point.options.states[state] || {}));\n                    attr.fill =\n                        stateOptions.color ||\n                            Color.parse(attr.fill).brighten(stateOptions.brightness || 0).get();\n                    attr.stroke = (stateOptions.lineColor || attr.stroke); // #17896\n                }\n                return attr;\n            };\n            /**\n             * @private\n             */\n            HeatmapSeries.prototype.translate = function () {\n                var series = this, options = series.options, borderRadius = options.borderRadius, marker = options.marker, symbol = marker && marker.symbol || 'rect', shape = symbols[symbol] ? symbol : 'rect', hasRegularShape = ['circle', 'square'].indexOf(shape) !== -1;\n                series.generatePoints();\n                for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    var cellAttr = point.getCellAttributes();\n                    var x = Math.min(cellAttr.x1, cellAttr.x2), y = Math.min(cellAttr.y1, cellAttr.y2), width = Math.max(Math.abs(cellAttr.x2 - cellAttr.x1), 0), height = Math.max(Math.abs(cellAttr.y2 - cellAttr.y1), 0);\n                    point.hasImage = (point.marker && point.marker.symbol || symbol || '').indexOf('url') === 0;\n                    // If marker shape is regular (square), find the shorter cell's\n                    // side.\n                    if (hasRegularShape) {\n                        var sizeDiff = Math.abs(width - height);\n                        x = Math.min(cellAttr.x1, cellAttr.x2) +\n                            (width < height ? 0 : sizeDiff / 2);\n                        y = Math.min(cellAttr.y1, cellAttr.y2) +\n                            (width < height ? sizeDiff / 2 : 0);\n                        width = height = Math.min(width, height);\n                    }\n                    if (point.hasImage) {\n                        point.marker = { width: width, height: height };\n                    }\n                    point.plotX = point.clientX = (cellAttr.x1 + cellAttr.x2) / 2;\n                    point.plotY = (cellAttr.y1 + cellAttr.y2) / 2;\n                    point.shapeType = 'path';\n                    point.shapeArgs = merge(true, { x: x, y: y, width: width, height: height }, {\n                        d: symbols[shape](x, y, width, height, { r: isNumber(borderRadius) ? borderRadius : 0 })\n                    });\n                }\n                fireEvent(series, 'afterTranslate');\n            };\n            HeatmapSeries.defaultOptions = merge(ScatterSeries.defaultOptions, HeatmapSeriesDefaults);\n            return HeatmapSeries;\n        }(ScatterSeries));\n        addEvent(HeatmapSeries, 'afterDataClassLegendClick', function () {\n            this.isDirtyCanvas = true;\n            this.drawPoints();\n        });\n        extend(HeatmapSeries.prototype, {\n            axisTypes: ColorMapComposition.seriesMembers.axisTypes,\n            colorKey: ColorMapComposition.seriesMembers.colorKey,\n            directTouch: true,\n            getExtremesFromAll: true,\n            parallelArrays: ColorMapComposition.seriesMembers.parallelArrays,\n            pointArrayMap: ['y', 'value'],\n            pointClass: HeatmapPoint,\n            specialGroup: 'group',\n            trackerGroups: ColorMapComposition.seriesMembers.trackerGroups,\n            /**\n             * @private\n             */\n            alignDataLabel: ColumnSeries.prototype.alignDataLabel,\n            colorAttribs: ColorMapComposition.seriesMembers.colorAttribs,\n            getSymbol: Series.prototype.getSymbol\n        });\n        ColorMapComposition.compose(HeatmapSeries);\n        SeriesRegistry.registerSeriesType('heatmap', HeatmapSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Heatmap series only. Padding between the points in the heatmap.\n         * @name Highcharts.Point#pointPadding\n         * @type {number|undefined}\n         */\n        /**\n         * Heatmap series only. The value of the point, resulting in a color\n         * controled by options as set in the colorAxis configuration.\n         * @name Highcharts.Point#value\n         * @type {number|null|undefined}\n         */\n        /* *\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * Heatmap series only. Point padding for a single point.\n        * @name Highcharts.PointOptionsObject#pointPadding\n        * @type {number|undefined}\n        */ /**\n        * Heatmap series only. The value of the point, resulting in a color controled\n        * by options as set in the colorAxis configuration.\n        * @name Highcharts.PointOptionsObject#value\n        * @type {number|null|undefined}\n        */\n        ''; // detach doclets above\n\n        return HeatmapSeries;\n    });\n    _registerModule(_modules, 'masters/modules/heatmap.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/Color/ColorAxis.js']], function (Highcharts, ColorAxis) {\n\n        var G = Highcharts;\n        G.ColorAxis = ColorAxis;\n        ColorAxis.compose(G.Chart, G.Fx, G.Legend, G.Series);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Color","H","U","ColorAxisComposition","color","parse","composed","addEvent","extend","merge","pick","pushUnique","splat","ColorAxisConstructor","onChartAfterGetAxes","_this","userOptions","colorAxis","map","axisOptions","onLegendAfterGetAllItems","e","options","i","colorAxes","chart","destroyItem","item","allItems","indexOf","splice","colorAxisItems","forEach","showInLegend","dataClasses","visible","concat","getDataClassLegendSymbols","push","series","legendType","points","point","length","unshift","onLegendAfterColorizeItem","legendColor","legendItem","symbol","attr","fill","onLegendAfterUpdate","_a","update","redraw","onSeriesAfterTranslate","colorAttribs","translateColors","onSeriesBindAxes","axisTypes","pointSetVisible","vis","method","Boolean","key","buildKDTree","seriesTranslateColors","data","nullColor","colorKey","value","getNestedProperty","isNull","toColor","label","legend","colorizeItem","wrapFxFillSetter","elem","start","tweenTo","end","pos","wrapFxStrokeSetter","compose","ColorAxisClass","ChartClass","FxClass","LegendClass","SeriesClass","superCreateAxis","chartProto","prototype","fxProto","seriesProto","collectionsWithUpdate","collectionsWithInit","addColorAxis","createAxis","type","arguments","axis","index","isX","isDirtyLegend","axes","bindAxes","isDirtyData","animation","fillSetter","strokeSetter","optionalAxis","pointClass","setVisible","order","lineWidth","minPadding","maxPadding","gridLineColor","gridLineWidth","tickPixelInterval","startOnTick","endOnTick","offset","marker","duration","width","labels","distance","overflow","rotation","minColor","maxColor","tickLength","ColorAxisLike","initDataClasses","dataClass","colors","userDataClasses","colorCount","colorCounter","iEnd","styledMode","dataClassColor","colorIndex","initStops","stops","normalizedValue","max","min","logarithmic","log2lin","from","to","Axis","ColorAxisDefaults","D","LegendSymbol","SeriesRegistry","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","call","TypeError","String","__","constructor","create","defaultOptions","Series","defined","fireEvent","isArray","isNumber","relativeLength","xAxis","ColorAxis","_super","coll","init","horiz","layout","side","reversed","opposite","zoomEnabled","hasData","tickPositions","setTickPositions","setOptions","showEmpty","title","enabled","crosshair","setAxisSize","_b","getSize","height","left","top","right","chartWidth","bottom","chartHeight","len","defaultLegendLength","getOffset","group","sideOffset","axisOffset","axisParent","legend_1","drawLegendSymbol","render","getMargins","added","labelLeft","labelRight","setLegendColor","one","zero","grad","linearGradient","x1","y1","x2","y2","padding","legendOptions","labelOptions","itemDistance","labelPadding","renderer","r","symbolRadius","zIndex","add","x","y","baseline","labelWidth","maxLabelLength","labelHeight","setState","state","getSeriesExtremes","colorValArray","colorValIndex","pointArrayMap","calculatedExtremes","cSeries","yData","j","dataMin","Infinity","dataMax","pointValKey","zoneAxis","minColorValue","maxColorValue","cExtremes","getExtremes","Math","applyExtremes","drawCrosshair","crossPos","plotX","plotY","axisPos","axisLen","toPixels","cross","addedToColorAxis","addClass","getPlotLinePath","translatedValue","newOptions","destroyItems","_i","destroy","slice","remove","name","legendItems","valueDecimals","valueSuffix","getPointsInDataClass","reduce","s","filter","numberFormatter","rectangle","isDataClass","affectedSeries","colorAxisHeight","colorAxisWidth","symbolWidth","symbolHeight","keepProps","ColorMapComposition","columnProto","seriesTypes","column","onPointAfterSetState","moveToTopOnHover","graphic","pointMembers","dataLabelOnNull","isValid","isNaN","seriesMembers","parallelArrays","trackerGroups","ret","colorProp","pointAttribs","ScatterPoint","scatter","clamp","HeatmapPoint","applyOptions","formatPrefix","getCellAttributes","seriesOptions","xPad","colsize","yPad","rowsize","yAxis","markerOptions","pointPlacement","pointPlacementToXValue","pointPadding","cellAttr","round","translate","dimensions_1","dimension","prop","direction","abs","borderWidth","plotPos","widthOrHeight","halfCellSize","haloPath","size","shapeArgs","_c","_d","_e","ttBelow","borderRadius","interpolation","dataLabels","formatter","inside","verticalAlign","crop","radius","lineColor","states","hover","lineWidthPlus","select","clip","pointRange","tooltip","pointFormat","halo","brightness","legendSymbol","doc","colorFromPoint","rgba","split","parseFloat","parseInt","getContext","canvas","context","clearRect","createElement","willReadFrequently","HeatmapSeriesDefaults","SVGRenderer","IU","__assign","assign","t","n","ColumnSeries","ScatterSeries","symbols","HeatmapSeries","valueMax","NaN","valueMin","isDirtyCanvas","drawPoints","seriesMarkerOptions","image","dimensions","ctx","length_1","_f","xMin_1","xMax","_g","yMin_1","yMax","xDelta","yDelta","lastX","imgMultiple","lastY","_h","last","scale","rev","rounding","v","transformX_1","transformY_1","canvasWidth_1","canvasArea","pixelToPointScale","pointsLen","pixelData","Uint8ClampedArray","ceil","set","putImageData","ImageData","href","toDataURL","directTouch","_hasPointMarkers","valueData","getValidPoints","insideOnly","processedXData","axisPointRange","ellipse","circle","markerAttribs","hasImage","pointMarkerOptions","seriesStateOptions","pointStateOptions","widthPlus","heightPlus","plotOptions","seriesPlotOptions","heatmapPlotOptions","heatmap","borderColor","stroke","stateOptions","brighten","get","shape","hasRegularShape","generatePoints","sizeDiff","clientX","shapeType","getExtremesFromAll","specialGroup","alignDataLabel","getSymbol","registerSeriesType","G","Chart","Fx","Legend"],"mappings":"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"}