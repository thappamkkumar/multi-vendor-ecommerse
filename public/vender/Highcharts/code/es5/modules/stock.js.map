{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.3.0 (2024-01-10)\n *\n * Highcharts Stock as a plugin for Highcharts\n *\n * (c) 2010-2024 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/stock', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Axis/BrokenAxis.js', [_modules['Core/Globals.js'], _modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (H, StackItem, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Axis with support of broken data rows.\n         * @private\n         */\n        var BrokenAxis;\n        (function (BrokenAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Adds support for broken axes.\n             * @private\n             */\n            function compose(AxisClass, SeriesClass) {\n                if (pushUnique(composed, compose)) {\n                    AxisClass.keepProps.push('brokenAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.drawBreaks = seriesDrawBreaks;\n                    seriesProto.gappedPath = seriesGappedPath;\n                    addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n                    addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n                }\n                return AxisClass;\n            }\n            BrokenAxis.compose = compose;\n            /**\n             * @private\n             */\n            function onAxisAfterInit() {\n                if (typeof this.brokenAxis !== 'undefined') {\n                    this.brokenAxis.setBreaks(this.options.breaks, false);\n                }\n            }\n            /**\n             * Force Axis to be not-ordinal when breaks are defined.\n             * @private\n             */\n            function onAxisAfterSetOptions() {\n                var _a;\n                var axis = this;\n                if ((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    axis.options.ordinal = false;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisAfterSetTickPositions() {\n                var axis = this, brokenAxis = axis.brokenAxis;\n                if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n                    var tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                            newPositions.push(tickPositions[i]);\n                        }\n                    }\n                    axis.tickPositions = newPositions;\n                    axis.tickPositions.info = info;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInit() {\n                var axis = this;\n                if (!axis.brokenAxis) {\n                    axis.brokenAxis = new Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterGeneratePoints() {\n                var _a, _b;\n                var _c = this, isDirty = _c.isDirty, connectNulls = _c.options.connectNulls, points = _c.points, xAxis = _c.xAxis, yAxis = _c.yAxis;\n                // Set, or reset visibility of the points. Axis.setBreaks marks\n                // the series as isDirty\n                if (isDirty) {\n                    var i = points.length;\n                    while (i--) {\n                        var point = points[i];\n                        // Respect nulls inside the break (#4275)\n                        var nullGap = point.y === null && connectNulls === false;\n                        var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x, true)) ||\n                            ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y, true))));\n                        // Set point.visible if in any break.\n                        // If not in break, reset visible to original value.\n                        point.visible = isPointInBreak ?\n                            false :\n                            point.options.visible !== false;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterRender() {\n                this.drawBreaks(this.xAxis, ['x']);\n                this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n            }\n            /**\n             * @private\n             */\n            function seriesDrawBreaks(axis, keys) {\n                var _a;\n                var series = this, points = series.points;\n                var breaks, threshold, y;\n                if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    var brokenAxis_1 = axis.brokenAxis;\n                    keys.forEach(function (key) {\n                        var _a, _b;\n                        breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                        threshold = axis.isXAxis ?\n                            axis.min :\n                            pick(series.options.threshold, axis.min);\n                        // Array of breaks that have been \"zoomed-out\" which means that\n                        // they were shown previously, but now after zoom, they are not\n                        // (#19885).\n                        var breaksOutOfRange = (_b = (_a = axis === null || axis === void 0 ? void 0 : axis.options) === null || _a === void 0 ? void 0 : _a.breaks) === null || _b === void 0 ? void 0 : _b.filter(function (brk) {\n                            var isOut = true;\n                            // Iterate to see if \"brk\" is in axis range\n                            for (var i = 0; i < breaks.length; i++) {\n                                var otherBreak = breaks[i];\n                                if (otherBreak.from === brk.from &&\n                                    otherBreak.to === brk.to) {\n                                    isOut = false;\n                                    break;\n                                }\n                            }\n                            return isOut;\n                        });\n                        points.forEach(function (point) {\n                            y = pick(point['stack' + key.toUpperCase()], point[key]);\n                            breaks.forEach(function (brk) {\n                                if (isNumber(threshold) && isNumber(y)) {\n                                    var eventName = '';\n                                    if ((threshold < brk.from && y > brk.to) ||\n                                        (threshold > brk.from && y < brk.from)) {\n                                        eventName = 'pointBreak';\n                                    }\n                                    else if ((threshold < brk.from &&\n                                        y > brk.from &&\n                                        y < brk.to) || (threshold > brk.from &&\n                                        y > brk.to &&\n                                        y < brk.from)) {\n                                        eventName = 'pointInBreak';\n                                    }\n                                    if (eventName) {\n                                        fireEvent(axis, eventName, { point: point, brk: brk });\n                                    }\n                                }\n                            });\n                            breaksOutOfRange === null || breaksOutOfRange === void 0 ? void 0 : breaksOutOfRange.forEach(function (brk) {\n                                fireEvent(axis, 'pointOutsideOfBreak', { point: point, brk: brk });\n                            });\n                        });\n                    });\n                }\n            }\n            /**\n             * Extend getGraphPath by identifying gaps in the data so that we\n             * can draw a gap in the line or area. This was moved from ordinal\n             * axis module to broken axis module as of #5045.\n             *\n             * @private\n             * @function Highcharts.Series#gappedPath\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Gapped path\n             */\n            function seriesGappedPath() {\n                var currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n                var gapSize = this.options.gapSize, i = points.length - 1, stack;\n                /**\n                 * Defines when to display a gap in the graph, together with the\n                 * [gapUnit](plotOptions.series.gapUnit) option.\n                 *\n                 * In case when `dataGrouping` is enabled, points can be grouped\n                 * into a larger time span. This can make the grouped points to\n                 * have a greater distance than the absolute value of `gapSize`\n                 * property, which will result in disappearing graph completely.\n                 * To prevent this situation the mentioned distance between\n                 * grouped points is used instead of previously defined\n                 * `gapSize`.\n                 *\n                 * In practice, this option is most often used to visualize gaps\n                 * in time series. In a stock chart, intraday data is available\n                 * for daytime hours, while gaps will appear in nights and\n                 * weekends.\n                 *\n                 * @see [gapUnit](plotOptions.series.gapUnit)\n                 * @see [xAxis.breaks](#xAxis.breaks)\n                 *\n                 * @sample {highstock} stock/plotoptions/series-gapsize/\n                 * Setting the gap size to 2 introduces gaps for weekends in\n                 * daily datasets.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @product   highstock\n                 * @requires  modules/broken-axis\n                 * @apioption plotOptions.series.gapSize\n                 */\n                /**\n                 * Together with [gapSize](plotOptions.series.gapSize), this\n                 * option defines where to draw gaps in the graph.\n                 *\n                 * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n                 * means that if the distance between two points is greater than\n                 * 5 times that of the two closest points, the graph will be\n                 * broken.\n                 *\n                 * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n                 * axis values, which on a datetime axis is milliseconds. This\n                 * also applies to the navigator series that inherits gap\n                 * options from the base series.\n                 *\n                 * @see [gapSize](plotOptions.series.gapSize)\n                 *\n                 * @type       {string}\n                 * @default    relative\n                 * @since      5.0.13\n                 * @product    highstock\n                 * @validvalue [\"relative\", \"value\"]\n                 * @requires   modules/broken-axis\n                 * @apioption  plotOptions.series.gapUnit\n                 */\n                if (gapSize && i > 0) { // #5008\n                    // Gap unit is relative\n                    if (this.options.gapUnit !== 'value') {\n                        gapSize *= this.basePointRange;\n                    }\n                    // Setting a new gapSize in case dataGrouping is enabled\n                    // (#7686)\n                    if (groupingSize &&\n                        groupingSize > gapSize &&\n                        // Except when DG is forced (e.g. from other series)\n                        // and has lower granularity than actual points (#11351)\n                        groupingSize >= this.basePointRange) {\n                        gapSize = groupingSize;\n                    }\n                    // extension for ordinal breaks\n                    var current = void 0, next = void 0;\n                    while (i--) {\n                        // Reassign next if it is not visible\n                        if (!(next && next.visible !== false)) {\n                            next = points[i + 1];\n                        }\n                        current = points[i];\n                        // Skip iteration if one of the points is not visible\n                        if (next.visible === false || current.visible === false) {\n                            continue;\n                        }\n                        if (next.x - current.x > gapSize) {\n                            var xRange = (current.x + next.x) / 2;\n                            points.splice(// insert after this one\n                            i + 1, 0, {\n                                isNull: true,\n                                x: xRange\n                            });\n                            // For stacked chart generate empty stack items, #6546\n                            if (yAxis.stacking && this.options.stacking) {\n                                stack = yAxis.stacking.stacks[this.stackKey][xRange] = new StackItem(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                                stack.total = 0;\n                            }\n                        }\n                        // Assign current to next for the upcoming iteration\n                        next = current;\n                    }\n                }\n                // Call base method\n                return this.getGraphPath(points);\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Provides support for broken axes.\n             * @private\n             * @class\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                function Additions(axis) {\n                    this.hasBreaks = false;\n                    this.axis = axis;\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Additions.isInBreak = function (brk, val) {\n                    var repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                        (val - from) % repeat :\n                        repeat - ((from - val) % repeat));\n                    var ret;\n                    if (!brk.inclusive) {\n                        ret = test < length && test !== 0;\n                    }\n                    else {\n                        ret = test <= length;\n                    }\n                    return ret;\n                };\n                /**\n                 * @private\n                 */\n                Additions.lin2Val = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.from >= nval) {\n                            break;\n                        }\n                        else if (brk.to < nval) {\n                            nval += brk.len;\n                        }\n                        else if (Additions.isInBreak(brk, nval)) {\n                            nval += brk.len;\n                        }\n                    }\n                    return nval;\n                };\n                /**\n                 * @private\n                 */\n                Additions.val2Lin = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.to <= val) {\n                            nval -= brk.len;\n                        }\n                        else if (brk.from >= val) {\n                            break;\n                        }\n                        else if (Additions.isInBreak(brk, val)) {\n                            nval -= (val - brk.from);\n                            break;\n                        }\n                    }\n                    return nval;\n                };\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Returns the first break found where the x is larger then break.from\n                 * and smaller then break.to.\n                 *\n                 * @param {number} x\n                 * The number which should be within a break.\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n                 * The array of breaks to search within.\n                 *\n                 * @return {Highcharts.XAxisBreaksOptions|undefined}\n                 * Returns the first break found that matches, returns false if no break\n                 * is found.\n                 */\n                Additions.prototype.findBreakAt = function (x, breaks) {\n                    return find(breaks, function (b) {\n                        return b.from < x && x < b.to;\n                    });\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.isInAnyBreak = function (val, testKeep) {\n                    var brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n                    var i = breaks.length, inbrk, keep, ret;\n                    if (i && isNumber(val)) {\n                        while (i--) {\n                            if (Additions.isInBreak(breaks[i], val)) {\n                                inbrk = true;\n                                if (!keep) {\n                                    keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                                }\n                            }\n                        }\n                        if (inbrk && testKeep) {\n                            ret = inbrk && !keep;\n                        }\n                        else {\n                            ret = inbrk;\n                        }\n                    }\n                    return ret;\n                };\n                /**\n                 * Dynamically set or unset breaks in an axis. This function in lighter\n                 * than usin Axis.update, and it also preserves animation.\n                 *\n                 * @private\n                 * @function Highcharts.Axis#setBreaks\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n                 * The breaks to add. When `undefined` it removes existing breaks.\n                 *\n                 * @param {boolean} [redraw=true]\n                 * Whether to redraw the chart immediately.\n                 */\n                Additions.prototype.setBreaks = function (breaks, redraw) {\n                    var brokenAxis = this;\n                    var axis = brokenAxis.axis;\n                    var hasBreaks = isArray(breaks) &&\n                        !!breaks.length &&\n                        !!Object.keys(breaks[0]).length; // Check for [{}], #16368.\n                    axis.isDirty = brokenAxis.hasBreaks !== hasBreaks;\n                    brokenAxis.hasBreaks = hasBreaks;\n                    if (breaks !== axis.options.breaks) {\n                        axis.options.breaks = axis.userOptions.breaks = breaks;\n                    }\n                    axis.forceRedraw = true; // Force recalculation in setScale\n                    // Recalculate series related to the axis.\n                    axis.series.forEach(function (series) {\n                        series.isDirty = true;\n                    });\n                    if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                        // Revert to prototype functions\n                        delete axis.val2lin;\n                        delete axis.lin2val;\n                    }\n                    if (hasBreaks) {\n                        axis.userOptions.ordinal = false;\n                        axis.lin2val = Additions.lin2Val;\n                        axis.val2lin = Additions.val2Lin;\n                        axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                            // If trying to set extremes inside a break, extend min to\n                            // after, and max to before the break ( #3857 )\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_1 = (this.options.breaks || []);\n                                var axisBreak = void 0;\n                                while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                                    newMin = axisBreak.to;\n                                }\n                                while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                                    newMax = axisBreak.from;\n                                }\n                                // If both min and max is within the same break.\n                                if (newMax < newMin) {\n                                    newMax = newMin;\n                                }\n                            }\n                            axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                        };\n                        axis.setAxisTranslation = function () {\n                            axis.constructor.prototype.setAxisTranslation.call(this);\n                            brokenAxis.unitLength = void 0;\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_2 = axis.options.breaks || [], \n                                // Temporary one:\n                                breakArrayT_1 = [], breakArray_1 = [], pointRangePadding = pick(axis.pointRangePadding, 0);\n                                var length_1 = 0, inBrk_1, repeat_1, min_1 = axis.userMin || axis.min, max_1 = axis.userMax || axis.max, start_1, i_1;\n                                // Min & max check (#4247)\n                                breaks_2.forEach(function (brk) {\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        if (Additions.isInBreak(brk, min_1)) {\n                                            min_1 += ((brk.to % repeat_1) -\n                                                (min_1 % repeat_1));\n                                        }\n                                        if (Additions.isInBreak(brk, max_1)) {\n                                            max_1 -= ((max_1 % repeat_1) -\n                                                (brk.from % repeat_1));\n                                        }\n                                    }\n                                });\n                                // Construct an array holding all breaks in the axis\n                                breaks_2.forEach(function (brk) {\n                                    start_1 = brk.from;\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        while (start_1 - repeat_1 > min_1) {\n                                            start_1 -= repeat_1;\n                                        }\n                                        while (start_1 < min_1) {\n                                            start_1 += repeat_1;\n                                        }\n                                        for (i_1 = start_1; i_1 < max_1; i_1 += repeat_1) {\n                                            breakArrayT_1.push({\n                                                value: i_1,\n                                                move: 'in'\n                                            });\n                                            breakArrayT_1.push({\n                                                value: i_1 + brk.to - brk.from,\n                                                move: 'out',\n                                                size: brk.breakSize\n                                            });\n                                        }\n                                    }\n                                });\n                                breakArrayT_1.sort(function (a, b) {\n                                    return ((a.value === b.value) ?\n                                        ((a.move === 'in' ? 0 : 1) -\n                                            (b.move === 'in' ? 0 : 1)) :\n                                        a.value - b.value);\n                                });\n                                // Simplify the breaks\n                                inBrk_1 = 0;\n                                start_1 = min_1;\n                                breakArrayT_1.forEach(function (brk) {\n                                    inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                                    if (inBrk_1 === 1 && brk.move === 'in') {\n                                        start_1 = brk.value;\n                                    }\n                                    if (inBrk_1 === 0 && isNumber(start_1)) {\n                                        breakArray_1.push({\n                                            from: start_1,\n                                            to: brk.value,\n                                            len: brk.value - start_1 - (brk.size || 0)\n                                        });\n                                        length_1 += (brk.value -\n                                            start_1 -\n                                            (brk.size || 0));\n                                    }\n                                });\n                                brokenAxis.breakArray = breakArray_1;\n                                // Used with staticScale, and below the actual axis\n                                // length, when breaks are substracted.\n                                if (isNumber(min_1) &&\n                                    isNumber(max_1) &&\n                                    isNumber(axis.min)) {\n                                    brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                        pointRangePadding;\n                                    fireEvent(axis, 'afterBreaks');\n                                    if (axis.staticScale) {\n                                        axis.transA = axis.staticScale;\n                                    }\n                                    else if (brokenAxis.unitLength) {\n                                        axis.transA *=\n                                            (max_1 - axis.min + pointRangePadding) /\n                                                brokenAxis.unitLength;\n                                    }\n                                    if (pointRangePadding) {\n                                        axis.minPixelPadding =\n                                            axis.transA * (axis.minPointOffset || 0);\n                                    }\n                                    axis.min = min_1;\n                                    axis.max = max_1;\n                                }\n                            }\n                        };\n                    }\n                    if (pick(redraw, true)) {\n                        axis.chart.redraw();\n                    }\n                };\n                return Additions;\n            }());\n            BrokenAxis.Additions = Additions;\n        })(BrokenAxis || (BrokenAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BrokenAxis;\n    });\n    _registerModule(_modules, 'masters/modules/broken-axis.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/BrokenAxis.js']], function (Highcharts, BrokenAxis) {\n\n        var G = Highcharts;\n        // Compositions\n        BrokenAxis.compose(G.Axis, G.Series);\n\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationRegistry.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define the available approximation types. The data grouping\n         * approximations takes an array or numbers as the first parameter. In case\n         * of ohlc, four arrays are sent in as four parameters. Each array consists\n         * only of numbers. In case null values belong to the group, the property\n         * .hasNulls will be set to true on the array.\n         *\n         * @product highstock\n         *\n         * @private\n         */\n        var ApproximationRegistry = {\n        // approximations added programmatically\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ApproximationRegistry;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationDefaults.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, extend = U.extend, isNumber = U.isNumber;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function average(arr) {\n            var len = arr.length;\n            var ret = sum(arr);\n            // If we have a number, return it divided by the length. If not,\n            // return null or undefined based on what the sum method finds.\n            if (isNumber(ret) && len) {\n                ret = correctFloat(ret / len);\n            }\n            return ret;\n        }\n        /**\n         * The same as average, but for series with multiple values, like area ranges.\n         * @private\n         */\n        function averages() {\n            var ret = [];\n            [].forEach.call(arguments, function (arr) {\n                ret.push(average(arr));\n            });\n            // Return undefined when first elem. is undefined and let\n            // sum method handle null (#7377)\n            return typeof ret[0] === 'undefined' ? void 0 : ret;\n        }\n        /**\n         * @private\n         */\n        function close(arr) {\n            return arr.length ?\n                arr[arr.length - 1] :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function high(arr) {\n            return arr.length ?\n                arrayMax(arr) :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * HLC, OHLC and range are special cases where a multidimensional array is input\n         * and an array is output.\n         * @private\n         */\n        function hlc(high, low, close) {\n            high = ApproximationRegistry.high(high);\n            low = ApproximationRegistry.low(low);\n            close = ApproximationRegistry.close(close);\n            if (isNumber(high) ||\n                isNumber(low) ||\n                isNumber(close)) {\n                return [high, low, close];\n            }\n        }\n        /**\n         * @private\n         */\n        function low(arr) {\n            return arr.length ?\n                arrayMin(arr) :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function ohlc(open, high, low, close) {\n            open = ApproximationRegistry.open(open);\n            high = ApproximationRegistry.high(high);\n            low = ApproximationRegistry.low(low);\n            close = ApproximationRegistry.close(close);\n            if (isNumber(open) ||\n                isNumber(high) ||\n                isNumber(low) ||\n                isNumber(close)) {\n                return [open, high, low, close];\n            }\n        }\n        /**\n         * @private\n         */\n        function open(arr) {\n            return arr.length ? arr[0] : (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function range(low, high) {\n            low = ApproximationRegistry.low(low);\n            high = ApproximationRegistry.high(high);\n            if (isNumber(low) || isNumber(high)) {\n                return [low, high];\n            }\n            if (low === null && high === null) {\n                return null;\n            }\n            // else, return is undefined\n        }\n        /**\n         * @private\n         */\n        function sum(arr) {\n            var len = arr.length, ret;\n            // 1. it consists of nulls exclusive\n            if (!len && arr.hasNulls) {\n                ret = null;\n                // 2. it has a length and real values\n            }\n            else if (len) {\n                ret = 0;\n                while (len--) {\n                    ret += arr[len];\n                }\n            }\n            // 3. it has zero length, so just return undefined\n            // => doNothing()\n            return ret;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ApproximationDefaults = {\n            average: average,\n            averages: averages,\n            close: close,\n            high: high,\n            hlc: hlc,\n            low: low,\n            ohlc: ohlc,\n            open: open,\n            range: range,\n            sum: sum\n        };\n        extend(ApproximationRegistry, ApproximationDefaults);\n\n        return ApproximationDefaults;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Common options\n         * @private\n         */\n        var common = {\n            // enabled: null, // (true for stock charts, false for basic),\n            // forced: undefined,\n            groupPixelWidth: 2,\n            // the first one is the point or start value, the second is the start\n            // value if we're dealing with range, the third one is the end value if\n            // dealing with a range\n            dateTimeLabelFormats: {\n                millisecond: [\n                    '%A, %e %b, %H:%M:%S.%L',\n                    '%A, %e %b, %H:%M:%S.%L',\n                    '-%H:%M:%S.%L'\n                ],\n                second: [\n                    '%A, %e %b, %H:%M:%S',\n                    '%A, %e %b, %H:%M:%S',\n                    '-%H:%M:%S'\n                ],\n                minute: [\n                    '%A, %e %b, %H:%M',\n                    '%A, %e %b, %H:%M',\n                    '-%H:%M'\n                ],\n                hour: [\n                    '%A, %e %b, %H:%M',\n                    '%A, %e %b, %H:%M',\n                    '-%H:%M'\n                ],\n                day: [\n                    '%A, %e %b %Y',\n                    '%A, %e %b',\n                    '-%A, %e %b %Y'\n                ],\n                week: [\n                    'Week from %A, %e %b %Y',\n                    '%A, %e %b',\n                    '-%A, %e %b %Y'\n                ],\n                month: [\n                    '%B %Y',\n                    '%B',\n                    '-%B %Y'\n                ],\n                year: [\n                    '%Y',\n                    '%Y',\n                    '-%Y'\n                ]\n            }\n            // smoothed = false, // enable this for navigator series only\n        };\n        /**\n         * Extends common options\n         * @private\n         */\n        var seriesSpecific = {\n            line: {},\n            spline: {},\n            area: {},\n            areaspline: {},\n            arearange: {},\n            column: {\n                groupPixelWidth: 10\n            },\n            columnrange: {\n                groupPixelWidth: 10\n            },\n            candlestick: {\n                groupPixelWidth: 10\n            },\n            ohlc: {\n                groupPixelWidth: 5\n            },\n            hlc: {\n                groupPixelWidth: 5\n                // Move to HeikinAshiSeries.ts aftre refactoring data grouping.\n            },\n            heikinashi: {\n                groupPixelWidth: 10\n            }\n        };\n        /**\n         * Units are defined in a separate array to allow complete overriding in\n         * case of a user option.\n         * @private\n         */\n        var units = [\n            [\n                'millisecond',\n                [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n            ], [\n                'second',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'minute',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'hour',\n                [1, 2, 3, 4, 6, 8, 12]\n            ], [\n                'day',\n                [1]\n            ], [\n                'week',\n                [1]\n            ], [\n                'month',\n                [1, 3, 6]\n            ], [\n                'year',\n                null\n            ]\n        ];\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingDefaults = {\n            common: common,\n            seriesSpecific: seriesSpecific,\n            units: units\n        };\n\n        return DataGroupingDefaults;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingAxisComposition.js', [_modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (DataGroupingDefaults, H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var AxisConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Check the groupPixelWidth and apply the grouping if needed.\n         * Fired only after processing the data.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Axis#applyGrouping\n         */\n        function applyGrouping(e) {\n            var axis = this, series = axis.series;\n            // Reset the groupPixelWidth for all series, #17141.\n            series.forEach(function (series) {\n                series.groupPixelWidth = void 0; // #2110\n            });\n            series.forEach(function (series) {\n                series.groupPixelWidth = (axis.getGroupPixelWidth &&\n                    axis.getGroupPixelWidth());\n                if (series.groupPixelWidth) {\n                    series.hasProcessed = true; // #2692\n                }\n                // Fire independing on series.groupPixelWidth to always set a proper\n                // dataGrouping state, (#16238)\n                series.applyGrouping(!!e.hasExtremesChanged);\n            });\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass) {\n            AxisConstructor = AxisClass;\n            if (pushUnique(composed, compose)) {\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                // When all series are processed, calculate the group pixel width and\n                // then if this value is different than zero apply groupings.\n                addEvent(AxisClass, 'postProcessData', applyGrouping);\n                extend(AxisClass.prototype, {\n                    applyGrouping: applyGrouping,\n                    getGroupPixelWidth: getGroupPixelWidth,\n                    setDataGrouping: setDataGrouping\n                });\n            }\n        }\n        /**\n         * Get the data grouping pixel width based on the greatest defined individual\n         * width of the axis' series, and if whether one of the axes need grouping.\n         * @private\n         */\n        function getGroupPixelWidth() {\n            var series = this.series;\n            var i = series.length, groupPixelWidth = 0, doGrouping = false, dataLength, dgOptions;\n            // If one of the series needs grouping, apply it to all (#1634)\n            while (i--) {\n                dgOptions = series[i].options.dataGrouping;\n                if (dgOptions) { // #2692\n                    // If multiple series are compared on the same x axis, give them the\n                    // same group pixel width (#334)\n                    groupPixelWidth = Math.max(groupPixelWidth, \n                    // Fallback to commonOptions (#9693)\n                    pick(dgOptions.groupPixelWidth, DataGroupingDefaults.common.groupPixelWidth));\n                    dataLength = (series[i].processedXData || series[i].data).length;\n                    // Execute grouping if the amount of points is greater than the\n                    // limit defined in groupPixelWidth\n                    if (series[i].groupPixelWidth ||\n                        (dataLength >\n                            (this.chart.plotSizeX / groupPixelWidth)) ||\n                        (dataLength && dgOptions.forced)) {\n                        doGrouping = true;\n                    }\n                }\n            }\n            return doGrouping ? groupPixelWidth : 0;\n        }\n        /**\n         * When resetting the scale reset the hasProccessed flag to avoid taking\n         * previous data grouping of neighbour series into accound when determining\n         * group pixel width (#2692).\n         * @private\n         */\n        function onAfterSetScale() {\n            this.series.forEach(function (series) {\n                series.hasProcessed = false;\n            });\n        }\n        /**\n         * Highcharts Stock only. Force data grouping on all the axis' series.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Axis#setDataGrouping\n         *\n         * @param {boolean|Highcharts.DataGroupingOptionsObject} [dataGrouping]\n         *        A `dataGrouping` configuration. Use `false` to disable data grouping\n         *        dynamically.\n         *\n         * @param {boolean} [redraw=true]\n         *        Whether to redraw the chart or wait for a later call to\n         *        {@link Chart#redraw}.\n         */\n        function setDataGrouping(dataGrouping, redraw) {\n            var axis = this;\n            var i;\n            redraw = pick(redraw, true);\n            if (!dataGrouping) {\n                dataGrouping = {\n                    forced: false,\n                    units: null\n                };\n            }\n            // Axis is instantiated, update all series\n            if (this instanceof AxisConstructor) {\n                i = this.series.length;\n                while (i--) {\n                    this.series[i].update({\n                        dataGrouping: dataGrouping\n                    }, false);\n                }\n                // Axis not yet instanciated, alter series options\n            }\n            else {\n                this.chart.options.series.forEach(function (seriesOptions) {\n                    // Merging dataGrouping options with already defined options #16759\n                    seriesOptions.dataGrouping = typeof dataGrouping === 'boolean' ?\n                        dataGrouping :\n                        merge(dataGrouping, seriesOptions.dataGrouping);\n                });\n            }\n            // Clear ordinal slope, so we won't accidentaly use the old one (#7827)\n            if (axis.ordinal) {\n                axis.ordinal.slope = void 0;\n            }\n            if (redraw) {\n                this.chart.redraw();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingAxisComposition = {\n            compose: compose\n        };\n\n        return DataGroupingAxisComposition;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingSeriesComposition.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Core/Axis/DateTimeAxis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, DataGroupingDefaults, DateTimeAxis, D, H, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var seriesProto = SeriesRegistry.series.prototype;\n        var addEvent = U.addEvent, defined = U.defined, error = U.error, extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var baseGeneratePoints = seriesProto.generatePoints;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function adjustExtremes(xAxis, groupedXData) {\n            // Make sure the X axis extends to show the first group (#2533)\n            // But only for visible series (#5493, #6393)\n            if (defined(groupedXData[0]) &&\n                isNumber(xAxis.min) &&\n                isNumber(xAxis.dataMin) &&\n                groupedXData[0] < xAxis.min) {\n                if ((!defined(xAxis.options.min) &&\n                    xAxis.min <= xAxis.dataMin) ||\n                    xAxis.min === xAxis.dataMin) {\n                    xAxis.min = Math.min(groupedXData[0], xAxis.min);\n                }\n                xAxis.dataMin = Math.min(groupedXData[0], xAxis.dataMin);\n            }\n            // When the last anchor set, change the extremes that\n            // the last point is visible (#12455).\n            if (defined(groupedXData[groupedXData.length - 1]) &&\n                isNumber(xAxis.max) &&\n                isNumber(xAxis.dataMax) &&\n                groupedXData[groupedXData.length - 1] > xAxis.max) {\n                if ((!defined(xAxis.options.max) &&\n                    isNumber(xAxis.dataMax) &&\n                    xAxis.max >= xAxis.dataMax) || xAxis.max === xAxis.dataMax) {\n                    xAxis.max = Math.max(groupedXData[groupedXData.length - 1], xAxis.max);\n                }\n                xAxis.dataMax = Math.max(groupedXData[groupedXData.length - 1], xAxis.dataMax);\n            }\n        }\n        /**\n         * @private\n         */\n        function anchorPoints(series, groupedXData, xMax) {\n            var options = series.options, dataGroupingOptions = options.dataGrouping, totalRange = (series.currentDataGrouping && series.currentDataGrouping.gapSize);\n            if (!(dataGroupingOptions &&\n                series.xData &&\n                totalRange &&\n                series.groupMap)) {\n                return;\n            }\n            var groupedDataLastIndex = groupedXData.length - 1, anchor = dataGroupingOptions.anchor, firstAnchor = dataGroupingOptions.firstAnchor, lastAnchor = dataGroupingOptions.lastAnchor;\n            var anchorIndexIterator = groupedXData.length - 1, anchorFirstIndex = 0;\n            // Change the first point position, but only when it is\n            // the first point in the data set not in the current zoom.\n            if (firstAnchor && series.xData[0] >= groupedXData[0]) {\n                anchorFirstIndex++;\n                var groupStart = series.groupMap[0].start, groupLength = series.groupMap[0].length;\n                var firstGroupEnd = void 0;\n                if (isNumber(groupStart) && isNumber(groupLength)) {\n                    firstGroupEnd = groupStart + (groupLength - 1);\n                }\n                groupedXData[0] = {\n                    start: groupedXData[0],\n                    middle: groupedXData[0] + 0.5 * totalRange,\n                    end: groupedXData[0] + totalRange,\n                    firstPoint: series.xData[0],\n                    lastPoint: firstGroupEnd && series.xData[firstGroupEnd]\n                }[firstAnchor];\n            }\n            // Change the last point position but only when it is\n            // the last point in the data set not in the current zoom,\n            // or if it is not the 1st point simutainously.\n            if (groupedDataLastIndex > 0 &&\n                lastAnchor &&\n                totalRange &&\n                groupedXData[groupedDataLastIndex] >= xMax - totalRange) {\n                anchorIndexIterator--;\n                var lastGroupStart = series.groupMap[series.groupMap.length - 1].start;\n                groupedXData[groupedDataLastIndex] = {\n                    start: groupedXData[groupedDataLastIndex],\n                    middle: groupedXData[groupedDataLastIndex] + 0.5 * totalRange,\n                    end: groupedXData[groupedDataLastIndex] + totalRange,\n                    firstPoint: lastGroupStart && series.xData[lastGroupStart],\n                    lastPoint: series.xData[series.xData.length - 1]\n                }[lastAnchor];\n            }\n            if (anchor && anchor !== 'start') {\n                var shiftInterval = (totalRange *\n                    { middle: 0.5, end: 1 }[anchor]);\n                // Anchor the rest of the points apart from the ones, that were\n                // previously moved.\n                while (anchorIndexIterator >= anchorFirstIndex) {\n                    groupedXData[anchorIndexIterator] += shiftInterval;\n                    anchorIndexIterator--;\n                }\n            }\n        }\n        /**\n         * For the processed data, calculate the grouped data if needed.\n         *\n         * @private\n         * @function Highcharts.Series#applyGrouping\n         */\n        function applyGrouping(hasExtremesChanged) {\n            var series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = series.allowDG !== false && dataGroupingOptions &&\n                pick(dataGroupingOptions.enabled, chart.options.isStock), reserveSpace = series.reserveSpace(), lastDataGrouping = this.currentDataGrouping;\n            var currentDataGrouping, croppedData, revertRequireSorting = false;\n            // Data needs to be sorted for dataGrouping\n            if (groupingEnabled && !series.requireSorting) {\n                series.requireSorting = revertRequireSorting = true;\n            }\n            // Skip if skipDataGrouping method returns false or if grouping is disabled\n            // (in that order).\n            var skip = skipDataGrouping(series, hasExtremesChanged) === false || !groupingEnabled;\n            // Revert original requireSorting value if changed\n            if (revertRequireSorting) {\n                series.requireSorting = false;\n            }\n            if (skip) {\n                return;\n            }\n            series.destroyGroupedData();\n            var processedXData = dataGroupingOptions.groupAll ?\n                series.xData :\n                series.processedXData, processedYData = dataGroupingOptions.groupAll ?\n                series.yData :\n                series.processedYData, plotSizeX = chart.plotSizeX, xAxis = series.xAxis, ordinal = xAxis.options.ordinal, groupPixelWidth = series.groupPixelWidth;\n            var i, hasGroupedData;\n            // Execute grouping if the amount of points is greater than the limit\n            // defined in groupPixelWidth\n            if (groupPixelWidth &&\n                processedXData &&\n                processedXData.length &&\n                plotSizeX) {\n                hasGroupedData = true;\n                // Force recreation of point instances in series.translate, #5699\n                series.isDirty = true;\n                series.points = null; // #6709\n                var extremes = xAxis.getExtremes(), xMin = extremes.min, xMax = extremes.max, groupIntervalFactor = (ordinal &&\n                    xAxis.ordinal &&\n                    xAxis.ordinal.getGroupIntervalFactor(xMin, xMax, series)) || 1, interval = (groupPixelWidth * (xMax - xMin) / plotSizeX) *\n                    groupIntervalFactor, groupPositions = xAxis.getTimeTicks(DateTimeAxis.Additions.prototype.normalizeTimeTickInterval(interval, dataGroupingOptions.units ||\n                    DataGroupingDefaults.units), \n                // Processed data may extend beyond axis (#4907)\n                Math.min(xMin, processedXData[0]), Math.max(xMax, processedXData[processedXData.length - 1]), xAxis.options.startOfWeek, processedXData, series.closestPointRange), groupedData = seriesProto.groupData.apply(series, [\n                    processedXData,\n                    processedYData,\n                    groupPositions,\n                    dataGroupingOptions.approximation\n                ]);\n                var groupedXData = groupedData.groupedXData, groupedYData = groupedData.groupedYData, gapSize = 0;\n                // The smoothed option is deprecated, instead, there is a fallback\n                // to the new anchoring mechanism. #12455.\n                if (dataGroupingOptions &&\n                    dataGroupingOptions.smoothed &&\n                    groupedXData.length) {\n                    dataGroupingOptions.firstAnchor = 'firstPoint';\n                    dataGroupingOptions.anchor = 'middle';\n                    dataGroupingOptions.lastAnchor = 'lastPoint';\n                    error(32, false, chart, {\n                        'dataGrouping.smoothed': 'use dataGrouping.anchor'\n                    });\n                }\n                // Record what data grouping values were used\n                for (i = 1; i < groupPositions.length; i++) {\n                    // The grouped gapSize needs to be the largest distance between\n                    // the group to capture varying group sizes like months or DST\n                    // crossing (#10000). Also check that the gap is not at the\n                    // start of a segment.\n                    if (!groupPositions.info.segmentStarts ||\n                        groupPositions.info.segmentStarts.indexOf(i) === -1) {\n                        gapSize = Math.max(groupPositions[i] - groupPositions[i - 1], gapSize);\n                    }\n                }\n                currentDataGrouping = groupPositions.info;\n                currentDataGrouping.gapSize = gapSize;\n                series.closestPointRange = groupPositions.info.totalRange;\n                series.groupMap = groupedData.groupMap;\n                series.currentDataGrouping = currentDataGrouping;\n                anchorPoints(series, groupedXData, xMax);\n                if (reserveSpace) {\n                    adjustExtremes(xAxis, groupedXData);\n                }\n                // We calculated all group positions but we should render\n                // only the ones within the visible range\n                if (dataGroupingOptions.groupAll) {\n                    // Keep the reference to all grouped points\n                    // for further calculation (eg. heikinashi).\n                    series.allGroupedData = groupedYData;\n                    croppedData = series.cropData(groupedXData, groupedYData, xAxis.min, xAxis.max);\n                    groupedXData = croppedData.xData;\n                    groupedYData = croppedData.yData;\n                    series.cropStart = croppedData.start; // #15005\n                }\n                // Set series props\n                series.processedXData = groupedXData;\n                series.processedYData = groupedYData;\n            }\n            else {\n                series.groupMap = null;\n            }\n            series.hasGroupedData = hasGroupedData;\n            series.preventGraphAnimation =\n                (lastDataGrouping && lastDataGrouping.totalRange) !==\n                    (currentDataGrouping && currentDataGrouping.totalRange);\n        }\n        /**\n         * @private\n         */\n        function compose(SeriesClass) {\n            var PointClass = SeriesClass.prototype.pointClass;\n            if (pushUnique(composed, compose)) {\n                // Override point prototype to throw a warning when trying to update\n                // grouped points.\n                addEvent(PointClass, 'update', function () {\n                    if (this.dataGroup) {\n                        error(24, false, this.series.chart);\n                        return false;\n                    }\n                });\n                addEvent(SeriesClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(SeriesClass, 'destroy', destroyGroupedData);\n                extend(SeriesClass.prototype, {\n                    applyGrouping: applyGrouping,\n                    destroyGroupedData: destroyGroupedData,\n                    generatePoints: generatePoints,\n                    getDGApproximation: getDGApproximation,\n                    groupData: groupData\n                });\n            }\n        }\n        /**\n         * Destroy the grouped data points. #622, #740\n         * @private\n         */\n        function destroyGroupedData() {\n            // Clear previous groups\n            if (this.groupedData) {\n                this.groupedData.forEach(function (point, i) {\n                    if (point) {\n                        this.groupedData[i] = point.destroy ?\n                            point.destroy() : null;\n                    }\n                }, this);\n                // Clears all:\n                // - `this.groupedData`\n                // - `this.points`\n                // - `preserve` object in series.update()\n                this.groupedData.length = 0;\n                delete this.allGroupedData; // #19892\n            }\n        }\n        /**\n         * Override the generatePoints method by adding a reference to grouped data\n         * @private\n         */\n        function generatePoints() {\n            baseGeneratePoints.apply(this);\n            // Record grouped data in order to let it be destroyed the next time\n            // processData runs\n            this.destroyGroupedData(); // #622\n            this.groupedData = this.hasGroupedData ? this.points : null;\n        }\n        /**\n         * Set default approximations to the prototypes if present. Properties are\n         * inherited down. Can be overridden for individual series types.\n         * @private\n         */\n        function getDGApproximation() {\n            if (this.is('arearange')) {\n                return 'range';\n            }\n            if (this.is('ohlc')) {\n                return 'ohlc';\n            }\n            if (this.is('hlc')) {\n                return 'hlc';\n            }\n            if (\n            // #18974, default approximation for cumulative\n            // should be `sum` when `dataGrouping` is enabled\n            this.is('column') ||\n                this.options.cumulative) {\n                return 'sum';\n            }\n            return 'average';\n        }\n        /**\n         * Highcharts Stock only. Takes parallel arrays of x and y data and groups the\n         * data into intervals defined by groupPositions, a collection of starting x\n         * values for each group.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Series#groupData\n         * @param {Array<number>} xData\n         *        Parallel array of x data.\n         * @param {Array<(number|null|undefined)>|Array<Array<(number|null|undefined)>>} yData\n         *        Parallel array of y data.\n         * @param {Array<number>} groupPositions\n         *        Group positions.\n         * @param {string|Function} [approximation]\n         *        Approximation to use.\n         * @return {Highcharts.DataGroupingResultObject}\n         *         Mapped groups.\n         */\n        function groupData(xData, yData, groupPositions, approximation) {\n            var series = this, data = series.data, dataOptions = series.options && series.options.data, groupedXData = [], groupedYData = [], groupMap = [], dataLength = xData.length, \n            // when grouping the fake extended axis for panning,\n            // we don't need to consider y\n            handleYData = !!yData, values = [], pointArrayMap = series.pointArrayMap, pointArrayMapLength = pointArrayMap && pointArrayMap.length, extendedPointArrayMap = ['x'].concat(pointArrayMap || ['y']), groupAll = (this.options.dataGrouping &&\n                this.options.dataGrouping.groupAll);\n            var pointX, pointY, groupedY, pos = 0, start = 0;\n            var approximationFn = (typeof approximation === 'function' ?\n                approximation :\n                approximation && ApproximationRegistry[approximation] ?\n                    ApproximationRegistry[approximation] :\n                    ApproximationRegistry[(series.getDGApproximation && series.getDGApproximation() ||\n                        'average')]);\n            // Calculate values array size from pointArrayMap length\n            if (pointArrayMapLength) {\n                var len = pointArrayMap.length;\n                while (len--) {\n                    values.push([]);\n                }\n            }\n            else {\n                values.push([]);\n            }\n            var valuesLen = pointArrayMapLength || 1;\n            for (var i = 0; i <= dataLength; i++) {\n                // Start with the first point within the X axis range (#2696)\n                if (xData[i] < groupPositions[0]) {\n                    continue; // with next point\n                }\n                // when a new group is entered, summarize and initialize\n                // the previous group\n                while ((typeof groupPositions[pos + 1] !== 'undefined' &&\n                    xData[i] >= groupPositions[pos + 1]) ||\n                    i === dataLength) { // get the last group\n                    // get group x and y\n                    pointX = groupPositions[pos];\n                    series.dataGroupInfo = {\n                        start: groupAll ? start : (series.cropStart + start),\n                        length: values[0].length,\n                        groupStart: pointX\n                    };\n                    groupedY = approximationFn.apply(series, values);\n                    // By default, let options of the first grouped point be passed over\n                    // to the grouped point. This allows preserving properties like\n                    // `name` and `color` or custom properties. Implementers can\n                    // override this from the approximation function, where they can\n                    // write custom options to `this.dataGroupInfo.options`.\n                    if (series.pointClass && !defined(series.dataGroupInfo.options)) {\n                        // Convert numbers and arrays into objects\n                        series.dataGroupInfo.options = merge(series.pointClass.prototype\n                            .optionsToObject.call({ series: series }, series.options.data[series.cropStart + start]));\n                        // Make sure the raw data (x, y, open, high etc) is not copied\n                        // over and overwriting approximated data.\n                        extendedPointArrayMap.forEach(function (key) {\n                            delete series.dataGroupInfo.options[key];\n                        });\n                    }\n                    // push the grouped data\n                    if (typeof groupedY !== 'undefined') {\n                        groupedXData.push(pointX);\n                        groupedYData.push(groupedY);\n                        groupMap.push(series.dataGroupInfo);\n                    }\n                    // reset the aggregate arrays\n                    start = i;\n                    for (var j = 0; j < valuesLen; j++) {\n                        values[j].length = 0; // faster than values[j] = []\n                        values[j].hasNulls = false;\n                    }\n                    // Advance on the group positions\n                    pos += 1;\n                    // don't loop beyond the last group\n                    if (i === dataLength) {\n                        break;\n                    }\n                }\n                // break out\n                if (i === dataLength) {\n                    break;\n                }\n                // for each raw data point, push it to an array that contains all values\n                // for this specific group\n                if (pointArrayMap) {\n                    var index = (series.options.dataGrouping &&\n                        series.options.dataGrouping.groupAll ?\n                        i : series.cropStart + i), point = (data && data[index]) ||\n                        series.pointClass.prototype.applyOptions.apply({\n                            series: series\n                        }, [dataOptions[index]]);\n                    var val = void 0;\n                    for (var j = 0; j < pointArrayMapLength; j++) {\n                        val = point[pointArrayMap[j]];\n                        if (isNumber(val)) {\n                            values[j].push(val);\n                        }\n                        else if (val === null) {\n                            values[j].hasNulls = true;\n                        }\n                    }\n                }\n                else {\n                    pointY = handleYData ? yData[i] : null;\n                    if (isNumber(pointY)) {\n                        values[0].push(pointY);\n                    }\n                    else if (pointY === null) {\n                        values[0].hasNulls = true;\n                    }\n                }\n            }\n            return {\n                groupedXData: groupedXData,\n                groupedYData: groupedYData,\n                groupMap: groupMap\n            };\n        }\n        /**\n         * Handle default options for data grouping. This must be set at runtime because\n         * some series types are defined after this.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = e.options, type = this.type, plotOptions = this.chart.options.plotOptions, \n            // External series, for example technical indicators should also inherit\n            // commonOptions which are not available outside this module\n            baseOptions = (this.useCommonDataGrouping &&\n                DataGroupingDefaults.common), seriesSpecific = DataGroupingDefaults.seriesSpecific;\n            var defaultOptions = D.defaultOptions.plotOptions[type].dataGrouping;\n            if (plotOptions && (seriesSpecific[type] || baseOptions)) { // #1284\n                var rangeSelector = this.chart.rangeSelector;\n                if (!defaultOptions) {\n                    defaultOptions = merge(DataGroupingDefaults.common, seriesSpecific[type]);\n                }\n                options.dataGrouping = merge(baseOptions, defaultOptions, plotOptions.series && plotOptions.series.dataGrouping, // #1228\n                // Set by the StockChart constructor:\n                plotOptions[type].dataGrouping, this.userOptions.dataGrouping, !options.isInternal &&\n                    rangeSelector &&\n                    isNumber(rangeSelector.selected) &&\n                    rangeSelector.buttonOptions[rangeSelector.selected].dataGrouping);\n            }\n        }\n        /**\n         * @private\n         */\n        function skipDataGrouping(series, force) {\n            return !(series.isCartesian &&\n                !series.isDirty &&\n                !series.xAxis.isDirty &&\n                !series.yAxis.isDirty &&\n                !force);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingSeriesComposition = {\n            compose: compose,\n            groupData: groupData\n        };\n\n        return DataGroupingSeriesComposition;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGrouping.js', [_modules['Extensions/DataGrouping/DataGroupingAxisComposition.js'], _modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Extensions/DataGrouping/DataGroupingSeriesComposition.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (DataGroupingAxisComposition, DataGroupingDefaults, DataGroupingSeriesComposition, F, H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var format = F.format;\n        var composed = H.composed;\n        var addEvent = U.addEvent, extend = U.extend, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, SeriesClass, TooltipClass) {\n            DataGroupingAxisComposition.compose(AxisClass);\n            DataGroupingSeriesComposition.compose(SeriesClass);\n            if (TooltipClass &&\n                pushUnique(composed, compose)) {\n                addEvent(TooltipClass, 'headerFormatter', onTooltipHeaderFormatter);\n            }\n        }\n        /**\n         * Extend the original method, make the tooltip's header reflect the grouped\n         * range.\n         * @private\n         */\n        function onTooltipHeaderFormatter(e) {\n            var _a;\n            var chart = this.chart, time = chart.time, labelConfig = e.labelConfig, series = labelConfig.series, point = labelConfig.point, options = series.options, tooltipOptions = series.tooltipOptions, dataGroupingOptions = options.dataGrouping, xAxis = series.xAxis;\n            var xDateFormat = tooltipOptions.xDateFormat, xDateFormatEnd, currentDataGrouping, dateTimeLabelFormats, labelFormats, formattedKey, formatString = tooltipOptions[e.isFooter ? 'footerFormat' : 'headerFormat'];\n            // apply only to grouped series\n            if (xAxis &&\n                xAxis.options.type === 'datetime' &&\n                dataGroupingOptions &&\n                isNumber(labelConfig.key)) {\n                // set variables\n                currentDataGrouping = series.currentDataGrouping;\n                dateTimeLabelFormats = dataGroupingOptions.dateTimeLabelFormats ||\n                    // Fallback to commonOptions (#9693)\n                    DataGroupingDefaults.common.dateTimeLabelFormats;\n                // if we have grouped data, use the grouping information to get the\n                // right format\n                if (currentDataGrouping) {\n                    labelFormats = dateTimeLabelFormats[currentDataGrouping.unitName];\n                    if (currentDataGrouping.count === 1) {\n                        xDateFormat = labelFormats[0];\n                    }\n                    else {\n                        xDateFormat = labelFormats[1];\n                        xDateFormatEnd = labelFormats[2];\n                    }\n                    // if not grouped, and we don't have set the xDateFormat option, get the\n                    // best fit, so if the least distance between points is one minute, show\n                    // it, but if the least distance is one day, skip hours and minutes etc.\n                }\n                else if (!xDateFormat && dateTimeLabelFormats && xAxis.dateTime) {\n                    xDateFormat = xAxis.dateTime.getXDateFormat(labelConfig.x, tooltipOptions.dateTimeLabelFormats);\n                }\n                var groupStart = pick((_a = series.groupMap) === null || _a === void 0 ? void 0 : _a[point.index].groupStart, labelConfig.key), groupEnd = groupStart + (currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.totalRange) - 1;\n                formattedKey = time.dateFormat(xDateFormat, groupStart);\n                if (xDateFormatEnd) {\n                    formattedKey += time.dateFormat(xDateFormatEnd, groupEnd);\n                }\n                // Replace default header style with class name\n                if (series.chart.styledMode) {\n                    formatString = this.styledModeFormat(formatString);\n                }\n                // return the replaced format\n                e.text = format(formatString, {\n                    point: extend(labelConfig.point, { key: formattedKey }),\n                    series: series\n                }, chart);\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingComposition = {\n            compose: compose,\n            groupData: DataGroupingSeriesComposition.groupData\n        };\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"average\"|\"averages\"|\"open\"|\"high\"|\"low\"|\"close\"|\"sum\"} Highcharts.DataGroupingApproximationValue\n         */\n        /**\n         * The position of the point inside the group.\n         *\n         * @typedef    {\"start\"|\"middle\"|\"end\"} Highcharts.DataGroupingAnchor\n         */\n        /**\n         * The position of the first or last point in the series inside the group.\n         *\n         * @typedef    {\"start\"|\"middle\"|\"end\"|\"firstPoint\"|\"lastPoint\"} Highcharts.DataGroupingAnchorExtremes\n         */\n        /**\n         * Highcharts Stock only.\n         *\n         * @product highstock\n         * @interface Highcharts.DataGroupingInfoObject\n         */ /**\n        * @name Highcharts.DataGroupingInfoObject#length\n        * @type {number}\n        */ /**\n        * @name Highcharts.DataGroupingInfoObject#options\n        * @type {Highcharts.SeriesOptionsType|undefined}\n        */ /**\n        * @name Highcharts.DataGroupingInfoObject#start\n        * @type {number}\n        */\n        /**\n         * Highcharts Stock only.\n         *\n         * @product highstock\n         * @interface Highcharts.DataGroupingResultObject\n         */ /**\n        * @name Highcharts.DataGroupingResultObject#groupedXData\n        * @type {Array<number>}\n        */ /**\n        * @name Highcharts.DataGroupingResultObject#groupedYData\n        * @type {Array<(number|null|undefined)>|Array<Array<(number|null|undefined)>>}\n        */ /**\n        * @name Highcharts.DataGroupingResultObject#groupMap\n        * @type {Array<DataGroupingInfoObject>}\n        */\n        /**\n         * Highcharts Stock only. If a point object is created by data\n         * grouping, it doesn't reflect actual points in the raw\n         * data. In this case, the `dataGroup` property holds\n         * information that points back to the raw data.\n         *\n         * - `dataGroup.start` is the index of the first raw data\n         *   point in the group.\n         *\n         * - `dataGroup.length` is the amount of points in the\n         *   group.\n         *\n         * @sample stock/members/point-datagroup\n         *         Click to inspect raw data points\n         *\n         * @product highstock\n         *\n         * @name Highcharts.Point#dataGroup\n         * @type {Highcharts.DataGroupingInfoObject|undefined}\n         */\n        (''); // detach doclets above\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Data grouping is the concept of sampling the data values into larger\n         * blocks in order to ease readability and increase performance of the\n         * JavaScript charts. Highcharts Stock by default applies data grouping when\n         * the points become closer than a certain pixel value, determined by\n         * the `groupPixelWidth` option.\n         *\n         * If data grouping is applied, the grouping information of grouped\n         * points can be read from the [Point.dataGroup](\n         * /class-reference/Highcharts.Point#dataGroup). If point options other than\n         * the data itself are set, for example `name` or `color` or custom properties,\n         * the grouping logic doesn't know how to group it. In this case the options of\n         * the first point instance are copied over to the group point. This can be\n         * altered through a custom `approximation` callback function.\n         *\n         * @declare   Highcharts.DataGroupingOptionsObject\n         * @product   highstock\n         * @requires  product:highstock\n         * @requires  module:modules/datagrouping\n         * @apioption plotOptions.series.dataGrouping\n         */\n        /**\n         * Specifies how the points should be located on the X axis inside the group.\n         * Points that are extremes can be set separately. Available options:\n         *\n         * - `start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * - `middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * - `end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-anchor\n         *         Changing the point x-coordinate inside the group.\n         *\n         * @see [dataGrouping.firstAnchor](#plotOptions.series.dataGrouping.firstAnchor)\n         * @see [dataGrouping.lastAnchor](#plotOptions.series.dataGrouping.lastAnchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchor}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.anchor\n         */\n        /**\n         * The method of approximation inside a group. When for example 30 days\n         * are grouped into one month, this determines what value should represent\n         * the group. Possible values are \"average\", \"averages\", \"open\", \"high\",\n         * \"low\", \"close\" and \"sum\". For OHLC and candlestick series the approximation\n         * is \"ohlc\" by default, which finds the open, high, low and close values\n         * within all the grouped data. For ranges, the approximation is \"range\",\n         * which finds the low and high values. For multi-dimensional data,\n         * like ranges and OHLC, \"averages\" will compute the average for each\n         * dimension.\n         *\n         * Custom aggregate methods can be added by assigning a callback function\n         * as the approximation. This function takes a numeric array as the\n         * argument and should return a single numeric value or `null`. Note\n         * that the numeric array will never contain null values, only true\n         * numbers. Instead, if null values are present in the raw data, the\n         * numeric array will have an `.hasNulls` property set to `true`. For\n         * single-value data sets the data is available in the first argument\n         * of the callback function. For OHLC data sets, all the open values\n         * are in the first argument, all high values in the second etc.\n         *\n         * Since v4.2.7, grouping meta data is available in the approximation\n         * callback from `this.dataGroupInfo`. It can be used to extract information\n         * from the raw data.\n         *\n         * Defaults to `average` for line-type series, `sum` for columns, `range`\n         * for range series, `hlc` for HLC, and `ohlc` for OHLC and candlestick.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-approximation\n         *         Approximation callback with custom data\n         * @sample {highstock} stock/plotoptions/series-datagrouping-simple-approximation\n         *         Simple approximation demo\n         *\n         * @type       {Highcharts.DataGroupingApproximationValue|Function}\n         * @apioption  plotOptions.series.dataGrouping.approximation\n         */\n        /**\n         * Datetime formats for the header of the tooltip in a stock chart.\n         * The format can vary within a chart depending on the currently selected\n         * time range and the current data grouping.\n         *\n         * The default formats are:\n         * ```js\n         * {\n         *     millisecond: [\n         *         '%A, %e %b, %H:%M:%S.%L', '%A, %e %b, %H:%M:%S.%L', '-%H:%M:%S.%L'\n         *     ],\n         *     second: ['%A, %e %b, %H:%M:%S', '%A, %e %b, %H:%M:%S', '-%H:%M:%S'],\n         *     minute: ['%A, %e %b, %H:%M', '%A, %e %b, %H:%M', '-%H:%M'],\n         *     hour: ['%A, %e %b, %H:%M', '%A, %e %b, %H:%M', '-%H:%M'],\n         *     day: ['%A, %e %b %Y', '%A, %e %b', '-%A, %e %b %Y'],\n         *     week: ['Week from %A, %e %b %Y', '%A, %e %b', '-%A, %e %b %Y'],\n         *     month: ['%B %Y', '%B', '-%B %Y'],\n         *     year: ['%Y', '%Y', '-%Y']\n         * }\n         * ```\n         *\n         * For each of these array definitions, the first item is the format\n         * used when the active time span is one unit. For instance, if the\n         * current data applies to one week, the first item of the week array\n         * is used. The second and third items are used when the active time\n         * span is more than two units. For instance, if the current data applies\n         * to two weeks, the second and third item of the week array are used,\n         *  and applied to the start and end date of the time span.\n         *\n         * @type      {Object}\n         * @apioption plotOptions.series.dataGrouping.dateTimeLabelFormats\n         */\n        /**\n         * Enable or disable data grouping.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @apioption plotOptions.series.dataGrouping.enabled\n         */\n        /**\n         * Specifies how the first grouped point is positioned on the xAxis.\n         * If firstAnchor and/or lastAnchor are defined, then those options take\n         * precedence over anchor for the first and/or last grouped points.\n         * Available options:\n         *\n         * -`start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * -`middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * -`end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * -`firstPoint` the first point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:13)\n         *\n         * -`lastPoint` the last point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-first-anchor\n         *         Applying first and last anchor.\n         *\n         * @see [dataGrouping.anchor](#plotOptions.series.dataGrouping.anchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchorExtremes}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.firstAnchor\n         */\n        /**\n         * When data grouping is forced, it runs no matter how small the intervals\n         * are. This can be handy for example when the sum should be calculated\n         * for values appearing at random times within each hour.\n         *\n         * @type      {boolean}\n         * @default   false\n         * @apioption plotOptions.series.dataGrouping.forced\n         */\n        /**\n         * The approximate pixel width of each group. If for example a series\n         * with 30 points is displayed over a 600 pixel wide plot area, no grouping\n         * is performed. If however the series contains so many points that\n         * the spacing is less than the groupPixelWidth, Highcharts will try\n         * to group it into appropriate groups so that each is more or less\n         * two pixels wide. If multiple series with different group pixel widths\n         * are drawn on the same x axis, all series will take the greatest width.\n         * For example, line series have 2px default group width, while column\n         * series have 10px. If combined, both the line and the column will\n         * have 10px by default.\n         *\n         * @type      {number}\n         * @default   2\n         * @apioption plotOptions.series.dataGrouping.groupPixelWidth\n         */\n        /**\n         * By default only points within the visible range are grouped. Enabling this\n         * option will force data grouping to calculate all grouped points for a given\n         * dataset. That option prevents for example a column series from calculating\n         * a grouped point partially. The effect is similar to\n         * [Series.getExtremesFromAll](#plotOptions.series.getExtremesFromAll) but does\n         * not affect yAxis extremes.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-groupall/\n         *         Two series with the same data but different groupAll setting\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since     6.1.0\n         * @apioption plotOptions.series.dataGrouping.groupAll\n         */\n        /**\n         * Specifies how the last grouped point is positioned on the xAxis.\n         * If firstAnchor and/or lastAnchor are defined, then those options take\n         * precedence over anchor for the first and/or last grouped points.\n         * Available options:\n         *\n         * -`start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * -`middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * -`end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * -`firstPoint` the first point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:13)\n         *\n         * -`lastPoint` the last point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-first-anchor\n         *         Applying first and last anchor.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-last-anchor\n         *         Applying the last anchor in the chart with live data.\n         *\n         * @see [dataGrouping.anchor](#plotOptions.series.dataGrouping.anchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchorExtremes}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.lastAnchor\n         */\n        /**\n         * Normally, a group is indexed by the start of that group, so for example\n         * when 30 daily values are grouped into one month, that month's x value\n         * will be the 1st of the month. This apparently shifts the data to\n         * the left. When the smoothed option is true, this is compensated for.\n         * The data is shifted to the middle of the group, and min and max\n         * values are preserved. Internally, this is used in the Navigator series.\n         *\n         * @type      {boolean}\n         * @default   false\n         * @deprecated\n         * @apioption plotOptions.series.dataGrouping.smoothed\n         */\n        /**\n         * An array determining what time intervals the data is allowed to be\n         * grouped to. Each array item is an array where the first value is\n         * the time unit and the second value another array of allowed multiples.\n         *\n         * Defaults to:\n         * ```js\n         * units: [[\n         *     'millisecond', // unit name\n         *     [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n         * ], [\n         *     'second',\n         *     [1, 2, 5, 10, 15, 30]\n         * ], [\n         *     'minute',\n         *     [1, 2, 5, 10, 15, 30]\n         * ], [\n         *     'hour',\n         *     [1, 2, 3, 4, 6, 8, 12]\n         * ], [\n         *     'day',\n         *     [1]\n         * ], [\n         *     'week',\n         *     [1]\n         * ], [\n         *     'month',\n         *     [1, 3, 6]\n         * ], [\n         *     'year',\n         *     null\n         * ]]\n         * ```\n         *\n         * @type      {Array<Array<string,(Array<number>|null)>>}\n         * @apioption plotOptions.series.dataGrouping.units\n         */\n        /**\n         * The approximate pixel width of each group. If for example a series\n         * with 30 points is displayed over a 600 pixel wide plot area, no grouping\n         * is performed. If however the series contains so many points that\n         * the spacing is less than the groupPixelWidth, Highcharts will try\n         * to group it into appropriate groups so that each is more or less\n         * two pixels wide. Defaults to `10`.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-grouppixelwidth/\n         *         Two series with the same data density but different groupPixelWidth\n         *\n         * @type      {number}\n         * @default   10\n         * @apioption plotOptions.column.dataGrouping.groupPixelWidth\n         */\n        ''; // required by JSDoc parsing\n\n        return DataGroupingComposition;\n    });\n    _registerModule(_modules, 'masters/modules/datagrouping.src.js', [_modules['Core/Globals.js'], _modules['Extensions/DataGrouping/ApproximationDefaults.js'], _modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Extensions/DataGrouping/DataGrouping.js']], function (Highcharts, ApproximationDefaults, ApproximationRegistry, DataGrouping) {\n\n        var G = Highcharts;\n        G.dataGrouping = {\n            approximationDefaults: ApproximationDefaults,\n            approximations: ApproximationRegistry\n        };\n        DataGrouping.compose(G.Axis, G.Series, G.Tooltip);\n\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindingsUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define types for editable fields per annotation. There is no need to define\n         * numbers, because they won't change their type to string.\n         * @private\n         */\n        var annotationsFieldsTypes = {\n            backgroundColor: 'string',\n            borderColor: 'string',\n            borderRadius: 'string',\n            color: 'string',\n            fill: 'string',\n            fontSize: 'string',\n            labels: 'string',\n            name: 'string',\n            stroke: 'string',\n            title: 'string'\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first xAxis or yAxis that was clicked with its value.\n         *\n         * @private\n         *\n         * @param {Array<Highcharts.PointerAxisCoordinateObject>} coords\n         *        All the chart's x or y axes with a current pointer's axis value.\n         *\n         * @return {Highcharts.PointerAxisCoordinateObject}\n         *         Object with a first found axis and its value that pointer\n         *         is currently pointing.\n         */\n        function getAssignedAxis(coords) {\n            return coords.filter(function (coord) {\n                var extremes = coord.axis.getExtremes(), axisMin = extremes.min, axisMax = extremes.max, \n                // Correct axis edges when axis has series\n                // with pointRange (like column)\n                minPointOffset = pick(coord.axis.minPointOffset, 0);\n                return isNumber(axisMin) && isNumber(axisMax) &&\n                    coord.value >= (axisMin - minPointOffset) &&\n                    coord.value <= (axisMax + minPointOffset) &&\n                    // don't count navigator axis\n                    !coord.axis.options.isInternal;\n            })[0]; // If the axes overlap, return the first axis that was found.\n        }\n        /**\n         * Get field type according to value\n         *\n         * @private\n         *\n         * @param {'boolean'|'number'|'string'} value\n         * Atomic type (one of: string, number, boolean)\n         *\n         * @return {'checkbox'|'number'|'text'}\n         * Field type (one of: text, number, checkbox)\n         */\n        function getFieldType(key, value) {\n            var predefinedType = annotationsFieldsTypes[key];\n            var fieldType = typeof value;\n            if (defined(predefinedType)) {\n                fieldType = predefinedType;\n            }\n            return {\n                'string': 'text',\n                'number': 'number',\n                'boolean': 'checkbox'\n            }[fieldType];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigationBindingUtilities = {\n            annotationsFieldsTypes: annotationsFieldsTypes,\n            getAssignedAxis: getAssignedAxis,\n            getFieldType: getFieldType\n        };\n\n        return NavigationBindingUtilities;\n    });\n    _registerModule(_modules, 'Extensions/MouseWheelZoom/MouseWheelZoom.js', [_modules['Core/Utilities.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js']], function (U, NBU) {\n        /* *\n         *\n         *  (c) 2023 Torstein Honsi, Askel Eirik Johansson\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, isObject = U.isObject, pick = U.pick, defined = U.defined, merge = U.merge, isNumber = U.isNumber;\n        var getAssignedAxis = NBU.getAssignedAxis;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [], defaultOptions = {\n            enabled: true,\n            sensitivity: 1.1\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        var optionsToObject = function (options) {\n            if (!isObject(options)) {\n                return merge(defaultOptions, { enabled: defined(options) ? options : true });\n            }\n            return merge(defaultOptions, options);\n        };\n        /**\n         * Fit a segment inside a range.\n         * @private\n         * @param {number} outerStart\n         * Beginning of the range.\n         * @param {number} outerWidth\n         * Width of the range.\n         * @param {number} innerStart\n         * Beginning of the segment.\n         * @param {number} innerWidth\n         * Width of the segment.\n         * @return {Object}\n         * Object containing rangeStart and rangeWidth.\n         */\n        var fitToRange = function (outerStart, outerWidth, innerStart, innerWidth) {\n            if (innerStart + innerWidth > outerStart + outerWidth) {\n                if (innerWidth > outerWidth) {\n                    innerWidth = outerWidth;\n                    innerStart = outerStart;\n                }\n                else {\n                    innerStart = outerStart + outerWidth - innerWidth;\n                }\n            }\n            if (innerWidth > outerWidth) {\n                innerWidth = outerWidth;\n            }\n            if (innerStart < outerStart) {\n                innerStart = outerStart;\n            }\n            return {\n                rangeStart: innerStart,\n                rangeWidth: innerWidth\n            };\n        };\n        var wheelTimer, startOnTick, endOnTick;\n        /**\n         * Temporarly disable `axis.startOnTick` and `axis.endOnTick` to allow zooming\n         * for small values.\n         * @private\n        */\n        var waitForAutomaticExtremes = function (axis) {\n            var axisOptions = axis.options;\n            // Options interfering with yAxis zoom by setExtremes() returning\n            // integers by default.\n            if (defined(wheelTimer)) {\n                clearTimeout(wheelTimer);\n            }\n            if (!defined(startOnTick)) {\n                startOnTick = axisOptions.startOnTick;\n                endOnTick = axisOptions.endOnTick;\n            }\n            // Temporarily disable start and end on tick, because they would\n            // prevent small increments of zooming.\n            if (startOnTick || endOnTick) {\n                axisOptions.startOnTick = false;\n                axisOptions.endOnTick = false;\n            }\n            wheelTimer = setTimeout(function () {\n                if (defined(startOnTick) && defined(endOnTick)) {\n                    // Repeat merge after the wheel zoom is finished, #19178\n                    axisOptions.startOnTick = startOnTick;\n                    axisOptions.endOnTick = endOnTick;\n                    // Set the extremes to the same as they already are, but now\n                    // with the original startOnTick and endOnTick. We need\n                    // `forceRedraw` otherwise it will detect that the values\n                    // haven't changed. We do not use a simple yAxis.update()\n                    // because it will destroy the ticks and prevent animation.\n                    var _a = axis.getExtremes(), min = _a.min, max = _a.max;\n                    axis.forceRedraw = true;\n                    axis.setExtremes(min, max);\n                    startOnTick = endOnTick = void 0;\n                }\n            }, 400);\n        };\n        /**\n        * Calculate the ratio of mouse position on the axis to its length. If mousePos\n        * doesn't exist, returns 0.5;\n        * @private\n        */\n        var getMouseAxisRatio = function (chart, axis, mousePos) {\n            if (!defined(mousePos)) {\n                return 0.5;\n            }\n            var mouseAxisRatio = (mousePos - axis.minPixelPadding - axis.pos) /\n                (axis.len - 2 * axis.minPixelPadding), // Prevent sticking (#19976)\n            isXAxis = axis.isXAxis;\n            if (isXAxis && (!axis.reversed !== !chart.inverted) ||\n                !isXAxis && axis.reversed) {\n                // We are taking into account that xAxis automatically gets\n                // reversed when chart.inverted\n                return 1 - mouseAxisRatio;\n            }\n            return mouseAxisRatio;\n        };\n        /**\n        * Perform zooming on the passed axis.\n        * @private\n        * @param {Highcharts.Chart} chart\n        * Chart object.\n        * @param {Highcharts.Axis} axis\n        * Axis to zoom.\n        * @param {number} mousePos\n        * Mouse position on the plot.\n        * @param {number} howMuch\n        * Amount of zoom to apply.\n        * @param {number} centerArg\n        * Mouse position in axis units.\n        * @return {boolean}\n        * True if axis extremes were changed.\n        */\n        var zoomOnDirection = function (chart, axis, mousePos, howMuch, centerArg) {\n            var isXAxis = axis.isXAxis;\n            var hasZoomed = false;\n            if (defined(axis.max) && defined(axis.min) &&\n                defined(axis.dataMax) && defined(axis.dataMin)) {\n                if (!isXAxis) {\n                    waitForAutomaticExtremes(axis);\n                }\n                var range = axis.max - axis.min, center = isNumber(centerArg) ? centerArg :\n                    axis.min + range / 2, mouseAxisRatio = getMouseAxisRatio(chart, axis, mousePos), newRange = range * howMuch, newMin = center - newRange * mouseAxisRatio, dataRange = pick(axis.options.max, axis.dataMax) -\n                    pick(axis.options.min, axis.dataMin), minPaddingOffset = axis.options.min ? 0 :\n                    dataRange * axis.options.minPadding, maxPaddingOffset = axis.options.max ? 0 :\n                    dataRange * axis.options.maxPadding, outerMin = pick(axis.options.min, axis.dataMin) - minPaddingOffset, outerRange = dataRange + maxPaddingOffset + minPaddingOffset, newExt = fitToRange(outerMin, outerRange, newMin, newRange), zoomOut = (newExt.rangeStart < pick(axis.options.min, outerMin) ||\n                    newExt.rangeStart === axis.min &&\n                        (newExt.rangeWidth > outerRange &&\n                            newExt.rangeStart + newExt.rangeWidth <\n                                pick(axis.options.max, Number.MIN_VALUE)) ||\n                    newExt.rangeWidth === axis.max - axis.min);\n                if (defined(howMuch) && !zoomOut) { // Zoom\n                    axis.setExtremes(newExt.rangeStart, newExt.rangeStart + newExt.rangeWidth, false);\n                    hasZoomed = true;\n                }\n                else { // Reset zoom\n                    axis.setExtremes(void 0, void 0, false);\n                }\n            }\n            return hasZoomed;\n        };\n        /**\n         * @private\n         */\n        var zoomBy = function (chart, howMuch, xAxis, yAxis, mouseX, mouseY, options) {\n            var type = pick(options.type, chart.zooming.type, ''), zoomX = /x/.test(type), zoomY = /y/.test(type);\n            var centerXArg = xAxis.toValue(mouseX), centerYArg = yAxis.toValue(mouseY);\n            if (chart.inverted) {\n                var emulateRoof = yAxis.pos + yAxis.len;\n                // Get the correct values\n                centerXArg = xAxis.toValue(mouseY);\n                centerYArg = yAxis.toValue(mouseX);\n                // Swapping x and y for simplicity when chart is inverted.\n                var tmp = mouseX;\n                mouseX = mouseY;\n                mouseY = emulateRoof - tmp + yAxis.pos;\n            }\n            var hasZoomedX = zoomX && zoomOnDirection(chart, xAxis, mouseX, howMuch, centerXArg), hasZoomedY = zoomY && zoomOnDirection(chart, yAxis, mouseY, howMuch, centerYArg), hasZoomed = hasZoomedX || hasZoomedY;\n            if (hasZoomed) {\n                chart.redraw(false);\n            }\n            return hasZoomed;\n        };\n        /**\n         * @private\n         */\n        function onAfterGetContainer() {\n            var _this = this;\n            var chart = this, wheelZoomOptions = optionsToObject(chart.zooming.mouseWheel);\n            if (wheelZoomOptions.enabled) {\n                addEvent(this.container, 'wheel', function (e) {\n                    e = _this.pointer.normalize(e);\n                    var allowZoom = !chart.pointer.inClass(e.target, 'highcharts-no-mousewheel');\n                    // Firefox uses e.detail, WebKit and IE uses deltaX, deltaY, deltaZ.\n                    if (chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop) && allowZoom) {\n                        var wheelSensitivity = wheelZoomOptions.sensitivity || 1.1, delta = e.detail || ((e.deltaY || 0) / 120), xAxisCoords = getAssignedAxis(_this.pointer.getCoordinates(e).xAxis), yAxisCoords = getAssignedAxis(_this.pointer.getCoordinates(e).yAxis);\n                        var hasZoomed = zoomBy(chart, Math.pow(wheelSensitivity, delta), xAxisCoords ? xAxisCoords.axis : chart.xAxis[0], yAxisCoords ? yAxisCoords.axis : chart.yAxis[0], e.chartX, e.chartY, wheelZoomOptions);\n                        // Prevent page scroll\n                        if (hasZoomed && e.preventDefault) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function compose(ChartClass) {\n            if (composedClasses.indexOf(ChartClass) === -1) {\n                composedClasses.push(ChartClass);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var MouseWheelZoomComposition = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The mouse wheel zoom is a feature included in Highcharts Stock, but is also\n         * available for Highcharts Core as a module. Zooming with the mouse wheel is\n         * enabled by default in Highcharts Stock. In Highcharts Core it is enabled if\n         * [chart.zooming.type](chart.zooming.type) is set. It can be disabled by\n         * setting this option to `false`.\n         *\n         * @type      {boolean|object}\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @sample    {highcharts} highcharts/mouse-wheel-zoom/enabled\n         *            Enable or disable\n         * @sample    {highstock} stock/mouse-wheel-zoom/enabled\n         *            Enable or disable\n         * @apioption chart.zooming.mouseWheel\n         */\n        /**\n         * Zooming with the mouse wheel can be disabled by setting this option to\n         * `false`.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @apioption chart.zooming.mouseWheel.enabled\n         */\n        /**\n         * Adjust the sensitivity of the zoom. Sensitivity of mouse wheel or trackpad\n         * scrolling. `1` is no sensitivity, while with `2`, one mouse wheel delta will\n         * zoom in `50%`.\n         *\n         * @type      {number}\n         * @default   1.1\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @sample    {highcharts} highcharts/mouse-wheel-zoom/sensitivity\n         *            Change mouse wheel zoom sensitivity\n         * @sample    {highstock} stock/mouse-wheel-zoom/sensitivity\n         *            Change mouse wheel zoom sensitivity\n         * @apioption chart.zooming.mouseWheel.sensitivity\n         */\n        /**\n         * Decides in what dimensions the user can zoom scrolling the wheel. Can be one\n         * of `x`, `y` or `xy`. In Highcharts Core, if not specified here, it will\n         * inherit the type from [chart.zooming.type](chart.zooming.type). In Highcharts\n         * Stock, it defaults to `x`.\n         *\n         * Note that particularly with mouse wheel in the y direction, the zoom is\n         * affected by the default [yAxis.startOnTick](#yAxis.startOnTick) and\n         * [endOnTick]((#yAxis.endOnTick)) settings. In order to respect these settings,\n         * the zoom level will adjust after the user has stopped zooming. To prevent\n         * this, consider setting `startOnTick` and `endOnTick` to `false`.\n         *\n         * @type      {string}\n         * @default   {highcharts} undefined\n         * @default   {highstock} x\n         * @validvalue [\"x\", \"y\", \"xy\"]\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @apioption chart.zooming.mouseWheel.type\n         */\n        (''); // Keeps doclets above in JS file\n\n        return MouseWheelZoomComposition;\n    });\n    _registerModule(_modules, 'masters/modules/mouse-wheel-zoom.src.js', [_modules['Core/Globals.js'], _modules['Extensions/MouseWheelZoom/MouseWheelZoom.js']], function (Highcharts, MouseWheelZoom) {\n\n        var G = Highcharts;\n        MouseWheelZoom.compose(G.Chart);\n\n    });\n    _registerModule(_modules, 'Series/DataModifyComposition.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, H, Point, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var pointTooltipFormatter = Point.prototype.tooltipFormatter;\n        var addEvent = U.addEvent, arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, defined = U.defined, isArray = U.isArray, isNumber = U.isNumber, isString = U.isString, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var DataModifyComposition;\n        (function (DataModifyComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the series, axis and point classes with\n             * compare and cumulative support.\n             *\n             * @private\n             *\n             * @param SeriesClass\n             * Series class to use.\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param PointClass\n             * Point class to use.\n             */\n            function compose(SeriesClass, AxisClass, PointClass) {\n                if (pushUnique(composed, compose)) {\n                    var axisProto = AxisClass.prototype, pointProto = PointClass.prototype, seriesProto = SeriesClass.prototype;\n                    seriesProto.setCompare = seriesSetCompare;\n                    seriesProto.setCumulative = seriesSetCumulative;\n                    addEvent(SeriesClass, 'afterInit', afterInit);\n                    addEvent(SeriesClass, 'afterGetExtremes', afterGetExtremes);\n                    addEvent(SeriesClass, 'afterProcessData', afterProcessData);\n                    axisProto.setCompare = axisSetCompare;\n                    axisProto.setModifier = setModifier;\n                    axisProto.setCumulative = axisSetCumulative;\n                    pointProto.tooltipFormatter = tooltipFormatter;\n                }\n                return SeriesClass;\n            }\n            DataModifyComposition.compose = compose;\n            /* ********************************************************************** *\n             *  Start shared compare and cumulative logic                             *\n             * ********************************************************************** */\n            /**\n             * Shared code for the axis.setCompare() and the axis.setCumulative()\n             * methods. Inits the 'compare' or the 'cumulative' mode.\n             * @private\n             */\n            function setModifier(mode, modeState, redraw) {\n                if (!this.isXAxis) {\n                    this.series.forEach(function (series) {\n                        if (mode === 'compare' &&\n                            typeof modeState !== 'boolean') {\n                            series.setCompare(modeState, false);\n                        }\n                        else if (mode === 'cumulative' &&\n                            !isString(modeState)) {\n                            series.setCumulative(modeState, false);\n                        }\n                    });\n                    if (pick(redraw, true)) {\n                        this.chart.redraw();\n                    }\n                }\n            }\n            /**\n             * Extend the tooltip formatter by adding support for the point.change\n             * variable as well as the changeDecimals option.\n             *\n             * @ignore\n             * @function Highcharts.Point#tooltipFormatter\n             *\n             * @param {string} pointFormat\n             */\n            function tooltipFormatter(pointFormat) {\n                var point = this, numberFormatter = point.series.chart.numberFormatter, replace = function (value) {\n                    pointFormat = pointFormat.replace('{point.' + value + '}', (point[value] > 0 && value === 'change' ? '+' : '') +\n                        numberFormatter(point[value], pick(point.series.tooltipOptions.changeDecimals, 2)));\n                };\n                if (defined(point.change)) {\n                    replace('change');\n                }\n                if (defined(point.cumulativeSum)) {\n                    replace('cumulativeSum');\n                }\n                return pointTooltipFormatter.apply(this, [pointFormat]);\n            }\n            /**\n             * Extend series.init by adding a methods to modify the y values used\n             * for plotting on the y axis. For compare mode, this method is called both\n             * from the axis when finding dataMin and dataMax,\n             * and from the series.translate method.\n             *\n             * @ignore\n             * @function Highcharts.Series#init\n             */\n            function afterInit() {\n                var compare = this.options.compare;\n                var dataModify;\n                if (compare === 'percent' ||\n                    compare === 'value' ||\n                    this.options.cumulative) {\n                    dataModify = new Additions(this);\n                    if (compare === 'percent' || compare === 'value') {\n                        // Set comparison mode\n                        dataModify.initCompare(compare);\n                    }\n                    else {\n                        // Set Cumulative Sum mode\n                        dataModify.initCumulative();\n                    }\n                }\n                this.dataModify = dataModify;\n            }\n            /**\n             * Adjust the extremes (compare and cumulative modify the data).\n             * @private\n             */\n            function afterGetExtremes(e) {\n                var dataExtremes = e.dataExtremes, activeYData = dataExtremes.activeYData;\n                if (this.dataModify && dataExtremes) {\n                    var extremes = void 0;\n                    if (this.options.compare) {\n                        extremes = [\n                            this.dataModify.modifyValue(dataExtremes.dataMin),\n                            this.dataModify.modifyValue(dataExtremes.dataMax)\n                        ];\n                    }\n                    else if (this.options.cumulative &&\n                        isArray(activeYData) &&\n                        // If only one y visible, sum doesn't change\n                        // so no need to change extremes\n                        activeYData.length >= 2) {\n                        extremes = Additions.getCumulativeExtremes(activeYData);\n                    }\n                    if (extremes) {\n                        dataExtremes.dataMin = arrayMin(extremes);\n                        dataExtremes.dataMax = arrayMax(extremes);\n                    }\n                }\n            }\n            /* ********************************************************************** *\n             *  End shared compare and cumulative logic                               *\n             * ********************************************************************** */\n            /* ********************************************************************** *\n             *  Start value compare logic                                             *\n             * ********************************************************************** */\n            /**\n             * Highcharts Stock only. Set the\n             * [compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n             * mode of the series after render time.\n             * In most cases it is more useful running\n             * {@link Axis#setCompare} on the X axis to update all its series.\n             *\n             * @function Highcharts.Series#setCompare\n             *\n             * @param {string|null} [compare]\n             *        Can be one of `undefined` (default), `null`, `\"percent\"`\n             *        or `\"value\"`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function seriesSetCompare(compare, redraw) {\n                // Survive to export, #5485 (and for options generally)\n                this.options.compare = this.userOptions.compare = compare;\n                // Fire series.init() that will set or delete series.dataModify\n                this.update({}, pick(redraw, true));\n                if (this.dataModify && (compare === 'value' || compare === 'percent')) {\n                    this.dataModify.initCompare(compare);\n                }\n                else {\n                    // When disabling, clear the points\n                    this.points.forEach(function (point) {\n                        delete point.change;\n                    });\n                }\n            }\n            /**\n             * Extend series.processData by finding the first y value in the plot area,\n             * used for comparing the following values\n             *\n             * @ignore\n             * @function Highcharts.Series#processData\n             */\n            function afterProcessData() {\n                var series = this;\n                if (series.xAxis && // not pies\n                    series.processedYData &&\n                    series.dataModify) {\n                    var processedXData = series.processedXData, processedYData = series.processedYData, length_1 = processedYData.length, compareStart = series.options.compareStart === true ? 0 : 1;\n                    var keyIndex = -1, i = void 0;\n                    // For series with more than one value (range, OHLC etc), compare\n                    // against close or the pointValKey (#4922, #3112, #9854)\n                    if (series.pointArrayMap) {\n                        keyIndex = series.pointArrayMap.indexOf(series.options.pointValKey || series.pointValKey || 'y');\n                    }\n                    // find the first value for comparison\n                    for (i = 0; i < length_1 - compareStart; i++) {\n                        var compareValue = processedYData[i] && keyIndex > -1 ?\n                            processedYData[i][keyIndex] : processedYData[i];\n                        if (isNumber(compareValue) &&\n                            compareValue !== 0 &&\n                            processedXData[i + compareStart] >= (series.xAxis.min || 0)) {\n                            series.dataModify.compareValue = compareValue;\n                            break;\n                        }\n                    }\n                }\n            }\n            /**\n             * Highcharts Stock only. Set the compare mode on all series\n             * belonging to a Y axis.\n             *\n             * @see [plotOptions.series.compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n             *\n             * @sample stock/members/axis-setcompare/\n             *         Set compare\n             *\n             * @function Highcharts.Axis#setCompare\n             *\n             * @param {string|null} [compare]\n             *        The compare mode. Can be one of `undefined` (default), `null`,\n             *        `\"value\"` or `\"percent\"`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function axisSetCompare(compare, redraw) {\n                this.setModifier('compare', compare, redraw);\n            }\n            /* ********************************************************************** *\n             *  End value compare logic                                               *\n             * ********************************************************************** */\n            /* ********************************************************************** *\n             *  Start Cumulative Sum logic, author: Rafal Sebestjanski                *\n             * ********************************************************************** */\n            /**\n             * Highcharts Stock only. Set the\n             * [cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n             * mode of the series after render time.\n             * In most cases it is more useful running\n             * {@link Axis#setCumulative} on the Y axis to update all its series.\n             *\n             * @function Highcharts.Series#setCumulative\n             *\n             * @param {boolean} [cumulative=false]\n             *        Either enable or disable Cumulative Sum mode.\n             *        Can be one of `false` (default) or `true`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function seriesSetCumulative(cumulative, redraw) {\n                // Set default value to false\n                cumulative = pick(cumulative, false);\n                // Survive to export, #5485 (and for options generally)\n                this.options.cumulative = this.userOptions.cumulative = cumulative;\n                // Fire series.init() that will set or delete series.dataModify\n                this.update({}, pick(redraw, true));\n                // If should, turn on the Cumulative Sum mode\n                if (this.dataModify) {\n                    this.dataModify.initCumulative();\n                }\n                else {\n                    // When disabling, clear the points\n                    this.points.forEach(function (point) {\n                        delete point.cumulativeSum;\n                    });\n                }\n            }\n            /**\n             * Highcharts Stock only. Set the cumulative mode on all series\n             * belonging to a Y axis.\n             *\n             * @see [plotOptions.series.cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n             *\n             * @sample stock/members/axis-setcumulative/\n             *         Set cumulative\n             *\n             * @function Highcharts.Axis#setCumulative\n             *\n             * @param {boolean} [cumulative]\n             *        Whether to disable or enable the cumulative mode.\n             *        Can be one of `undefined` (default, treated as `false`),\n             *        `false` or `true`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function axisSetCumulative(cumulative, redraw) {\n                this.setModifier('cumulative', cumulative, redraw);\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(series) {\n                    this.series = series;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * @private\n                 */\n                Additions.prototype.modifyValue = function () {\n                    return 0;\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#getCumulativeExtremes\n                 *\n                 * @param {Array} [activeYData]\n                 *        An array cointaining all the points' y values\n                 *        in a visible range.\n                 */\n                Additions.getCumulativeExtremes = function (activeYData) {\n                    var cumulativeDataMin = Infinity, cumulativeDataMax = -Infinity;\n                    activeYData.reduce(function (prev, cur) {\n                        var sum = prev + cur;\n                        cumulativeDataMin = Math.min(cumulativeDataMin, sum, prev);\n                        cumulativeDataMax = Math.max(cumulativeDataMax, sum, prev);\n                        return sum;\n                    });\n                    return [cumulativeDataMin, cumulativeDataMax];\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#initCompare\n                 *\n                 * @param {string} [compare]\n                 *        Can be one of `\"percent\"` or `\"value\"`.\n                 */\n                Additions.prototype.initCompare = function (compare) {\n                    // Set the modifyValue method\n                    this.modifyValue = function (value, index) {\n                        if (value === null) {\n                            value = 0;\n                        }\n                        var compareValue = this.compareValue;\n                        if (typeof value !== 'undefined' &&\n                            typeof compareValue !== 'undefined') { // #2601, #5814\n                            // Get the modified value\n                            if (compare === 'value') {\n                                value -= compareValue;\n                                // Compare percent\n                            }\n                            else {\n                                var compareBase = this.series.options.compareBase;\n                                value = 100 * (value / compareValue) -\n                                    (compareBase === 100 ? 0 : 100);\n                            }\n                            // record for tooltip etc.\n                            if (typeof index !== 'undefined') {\n                                var point = this.series.points[index];\n                                if (point) {\n                                    point.change = value;\n                                }\n                            }\n                            return value;\n                        }\n                        return 0;\n                    };\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#initCumulative\n                 */\n                Additions.prototype.initCumulative = function () {\n                    // Set the modifyValue method\n                    this.modifyValue = function (value, index) {\n                        if (value === null) {\n                            value = 0;\n                        }\n                        if (value !== void 0 && index !== void 0) {\n                            var prevPoint = index > 0 ?\n                                this.series.points[index - 1] : null;\n                            // Get the modified value\n                            if (prevPoint && prevPoint.cumulativeSum) {\n                                value = correctFloat(prevPoint.cumulativeSum + value);\n                            }\n                            // Record for tooltip etc.\n                            var point = this.series.points[index];\n                            if (point) {\n                                point.cumulativeSum = value;\n                            }\n                            return value;\n                        }\n                        return 0;\n                    };\n                };\n                return Additions;\n            }());\n            DataModifyComposition.Additions = Additions;\n        })(DataModifyComposition || (DataModifyComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Compare the values of the series against the first non-null, non-\n         * zero value in the visible range. The y axis will show percentage\n         * or absolute change depending on whether `compare` is set to `\"percent\"`\n         * or `\"value\"`. When this is applied to multiple series, it allows\n         * comparing the development of the series against each other. Adds\n         * a `change` field to every point object.\n         *\n         * @see [compareBase](#plotOptions.series.compareBase)\n         * @see [Axis.setCompare()](/class-reference/Highcharts.Axis#setCompare)\n         * @see [Series.setCompare()](/class-reference/Highcharts.Series#setCompare)\n         *\n         * @sample {highstock} stock/plotoptions/series-compare-percent/\n         *         Percent\n         * @sample {highstock} stock/plotoptions/series-compare-value/\n         *         Value\n         *\n         * @type      {string}\n         * @since     1.0.1\n         * @product   highstock\n         * @validvalue [\"percent\", \"value\"]\n         * @apioption plotOptions.series.compare\n         */\n        /**\n         * Defines if comparison should start from the first point within the visible\n         * range or should start from the first point **before** the range.\n         *\n         * In other words, this flag determines if first point within the visible range\n         * will have 0% (`compareStart=true`) or should have been already calculated\n         * according to the previous point (`compareStart=false`).\n         *\n         * @sample {highstock} stock/plotoptions/series-comparestart/\n         *         Calculate compare within visible range\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since     6.0.0\n         * @product   highstock\n         * @apioption plotOptions.series.compareStart\n         */\n        /**\n         * When [compare](#plotOptions.series.compare) is `percent`, this option\n         * dictates whether to use 0 or 100 as the base of comparison.\n         *\n         * @sample {highstock} stock/plotoptions/series-comparebase/\n         *         Compare base is 100\n         *\n         * @type       {number}\n         * @default    0\n         * @since      5.0.6\n         * @product    highstock\n         * @validvalue [0, 100]\n         * @apioption  plotOptions.series.compareBase\n         */\n        /**\n         * Cumulative Sum feature replaces points' values with the following formula:\n         * `sum of all previous points' values + current point's value`.\n         * Works only for points in a visible range.\n         * Adds the `cumulativeSum` field to each point object that can be accessed\n         * e.g. in the [tooltip.pointFormat](https://api.highcharts.com/highstock/tooltip.pointFormat).\n         *\n         * With `dataGrouping` enabled, default grouping approximation is set to `sum`.\n         *\n         * @see [Axis.setCumulative()](/class-reference/Highcharts.Axis#setCumulative)\n         * @see [Series.setCumulative()](/class-reference/Highcharts.Series#setCumulative)\n         *\n         * @sample {highstock} stock/plotoptions/series-cumulative-sum/\n         *         Cumulative Sum\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since 9.3.0\n         * @product   highstock\n         * @apioption plotOptions.series.cumulative\n         */\n        ''; // keeps doclets above in transpiled file\n\n        return DataModifyComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed, isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisZoom(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            if (axis.isXAxis && ((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y') {\n                    e.zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom\n                    // selection, then when the reset button is pressed, revert to\n                    // this state. This should apply only if the chart is\n                    // initialized with a range (#6612), otherwise zoom all the way\n                    // out.\n                }\n                else if (((!isTouchDevice && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    if (defined(e.newMin)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                    }\n                    else if (previousZoom) {\n                        e.newMin = previousZoom[0];\n                        e.newMax = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof e.zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (pushUnique(composed, this.compose)) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'zoom', onAxisZoom);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var axis = this.axis, chart = axis.chart;\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                var fixedRange = chart && chart.fixedRange, halfPointRange = (axis.pointRange || 0) / 2;\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                // Make sure panning to the edges does not decrease the zoomed range\n                if (fixedRange && axis.dataMin && axis.dataMax) {\n                    if (newMax >= axis.dataMax) {\n                        newMin = correctFloat(axis.dataMax - fixedRange);\n                    }\n                    if (newMin <= axis.dataMin) {\n                        newMax = correctFloat(axis.dataMin + fixedRange);\n                    }\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null,\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * xAxis.maxPadding, but value is set in milliseconds.\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @since   6.0.0\n                 */\n                overscroll: 0,\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = Math.round(halfWidth / 3) + 0.5;\n            height = options.height || height;\n            return [\n                ['M', -halfWidth - 1, 0.5],\n                ['L', halfWidth, 0.5],\n                ['L', halfWidth, height + 0.5],\n                ['L', -halfWidth - 1, height + 0.5],\n                ['L', -halfWidth - 1, 0.5],\n                ['M', -markerPosition, 4],\n                ['L', -markerPosition, height - 3],\n                ['M', markerPosition - 1, 4],\n                ['L', markerPosition - 1, height - 3]\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions, setOptions = D.setOptions;\n        var composed = H.composed, isTouchDevice = H.isTouchDevice;\n        var getRendererType = RendererRegistry.getRendererType;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, NavigatorClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            NavigatorConstructor = NavigatorClass;\n            if (pushUnique(composed, compose)) {\n                var chartProto = ChartClass.prototype;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                extend(defaultOptions, { navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // false if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, compose)) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can  also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)',\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                // Mouse events\n                var _events = [\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler]\n                ];\n                // Touch events\n                if (H.hasTouch) {\n                    _events.push([bar, 'touchstart', mouseDownHandler], [bar.ownerDocument, 'touchmove', mouseMoveHandler], [bar.ownerDocument, 'touchend', mouseUpHandler]);\n                }\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // minWidth distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        // +1 to compensate for crispifying in rect method\n                        width: size + 1,\n                        height: size + 1,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scorllbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -trackBorderWidth % 2 / 2,\n                    y: -trackBorderWidth % 2 / 2\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-scroller.scrollbarStrokeWidth % 2 / 2, -scroller.scrollbarStrokeWidth % 2 / 2);\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var scroller = this;\n                var normalizedEvent = scroller.chart.pointer.normalize(e), range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Utilities.js']], function (Axis, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var hasTouch = H.hasTouch, isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Navigator.compose = function (AxisClass, ChartClass, SeriesClass) {\n                NavigatorComposition.compose(AxisClass, ChartClass, Navigator, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin],\n                        ['M', left, zoomedMax],\n                        ['L', left + height, zoomedMax],\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // left\n                        ['M', left, lineTop],\n                        // upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            navigatorTop + halfOutline\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add();\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var shade = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup);\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ?\n                                navigatorOptions.maskFill :\n                                'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                    navigator.shades[index] = shade;\n                });\n                // Create the outline:\n                navigator.outline = renderer.path()\n                    .addClass('highcharts-navigator-outline')\n                    .add(navigatorGroup);\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles && navigatorOptions.handles.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        navigator.handles[index] = renderer.symbol(handlesOptions_1.symbols[index], -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        // zIndex = 6 for right handle, 7 for left.\n                        // Can't be 10, because of the tooltip in inverted chart #2908\n                        navigator.handles[index].attr({ zIndex: 7 - index })\n                            .addClass('highcharts-navigator-handle ' +\n                            'highcharts-navigator-handle-' +\n                            ['left', 'right'][index]).add(navigatorGroup);\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options) {\n                // Remove references to old navigator series in base series\n                (this.series || []).forEach(function (series) {\n                    if (series.baseSeries) {\n                        delete series.baseSeries.navigatorSeries;\n                    }\n                });\n                // Destroy and rebuild navigator\n                this.destroy();\n                var chartOptions = this.chart.options;\n                merge(true, chartOptions.navigator, options);\n                this.init(this.chart);\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // in case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                // Add mouse move and mouseup events. These are bind to doc/container,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                eventsToUnbind.push(addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler));\n                // Touch events\n                if (hasTouch) {\n                    eventsToUnbind.push(addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                    eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                }\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                e = this.chart.pointer.normalize(e);\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // it has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, null, // auto animation\n                            { trigger: 'navigator' });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                e = this.chart.pointer.normalize(e);\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.fixedRange = null;\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = chart.pointer.normalize(e);\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // outside left\n                            chartX = dragOffset;\n                            // outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, \n                        // Run animation when clicking buttons, scrollbar track etc,\n                        // but not when dragging handles or scrollbar\n                        navigator.hasDragged ? false : null, {\n                            trigger: 'navigator',\n                            triggerOp: 'navigator-drag',\n                            DOMEvent: DOMEvent // #1838\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    // an x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // inherit base xAxis' break and ordinal options\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal\n                    }, navigatorOptions.xAxis, {\n                        id: 'navigator-x-axis',\n                        yAxis: 'navigator-y-axis',\n                        type: 'datetime',\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true,\n                        startOnTick: false,\n                        endOnTick: false,\n                        minPadding: 0,\n                        maxPadding: 0,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: [scrollButtonSize, 0, -scrollButtonSize, 0],\n                        width: height\n                    } : {\n                        offsets: [0, -scrollButtonSize, 0, scrollButtonSize],\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        id: 'navigator-y-axis',\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false),\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // in case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // from pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // from value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null,\n                    linkedTo: null,\n                    group: 'nav',\n                    padXAxis: false,\n                    xAxis: 'navigator-x-axis',\n                    yAxis: 'navigator-y-axis',\n                    showInLegend: false,\n                    stacking: void 0,\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitily\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick(baseXAxis.options.overscroll, 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator, marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'Février', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'Août',\n         *             'Septembre', 'Octobre', 'Novembre', 'Décembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: '→'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected. If the selected range\n             * exceeds the total data range and the 'all' option is available,\n             * the 'all' option, showing the full range, is automatically selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n            lang: lang,\n            rangeSelector: rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, H, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                var timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.fixedRange = max - min;\n                }\n            }\n            var dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (pushUnique(composed, compose)) {\n                var chartProto = ChartClass.prototype;\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'render', onChartRender);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                chartProto.callbacks.push(onChartCallback);\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this, axes = chart.axes, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                axes.forEach(function (axis) {\n                    axis.updateNames();\n                    axis.setScale();\n                });\n                chart.getAxisMargins();\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var extremes, legend, alignTo, verticalAlign;\n            var rangeSelector = chart.rangeSelector, redraw = function () {\n                if (rangeSelector) {\n                    extremes = chart.xAxis[0].getExtremes();\n                    legend = chart.legend;\n                    verticalAlign = (rangeSelector &&\n                        rangeSelector.options.verticalAlign);\n                    if (isNumber(extremes.min)) {\n                        rangeSelector.render(extremes.min, extremes.max);\n                    }\n                    // Re-align the legend so that it's below the rangeselector\n                    if (legend.display &&\n                        verticalAlign === 'top' &&\n                        verticalAlign === legend.options.verticalAlign) {\n                        // Create a new alignment box for the legend.\n                        alignTo = merge(chart.spacingBox);\n                        if (legend.options.layout === 'vertical') {\n                            alignTo.y = chart.plotTop;\n                        }\n                        else {\n                            alignTo.y += rangeSelector.getHeight();\n                        }\n                        legend.group.placed = false; // Don't animate the alignment.\n                        legend.align(alignTo);\n                    }\n                }\n            };\n            if (rangeSelector) {\n                var events = find(chartDestroyEvents, function (e) { return e[0] === chart; });\n                if (!events) {\n                    chartDestroyEvents.push([chart, [\n                            // redraw the scroller on setExtremes\n                            addEvent(chart.xAxis[0], 'afterSetExtremes', function (e) {\n                                if (rangeSelector) {\n                                    rangeSelector.render(e.min, e.max);\n                                }\n                            }),\n                            // redraw the scroller chart resize\n                            addEvent(chart, 'redraw', redraw)\n                        ]]);\n                }\n                // do it now\n                redraw();\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector && !rangeSelector.options.floating) {\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (verticalAlign === 'bottom') {\n                    this.extraBottomMargin = true;\n                }\n                else if (verticalAlign !== 'middle') {\n                    this.extraTopMargin = true;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                onChartCallback(this);\n                var verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n            compose: compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, discardElement = U.discardElement, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pad = U.pad, pick = U.pick, pInt = U.pInt, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function RangeSelector(chart) {\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.chart = chart;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, minSetting, rangeSetting, ctx, ytdExtremes, addOffsetMin = true;\n                // chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                // Set the fixed range before range is altered\n                chart.fixedRange = range;\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instanciated. Temporarily set min and range\n                    // options and remove them on chart load (#4317).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    rangeSetting = baseXAxisOptions.range;\n                    baseXAxisOptions.range = range;\n                    minSetting = baseXAxisOptions.min;\n                    baseXAxisOptions.min = rangeMin;\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        baseXAxisOptions.range = rangeSetting;\n                        baseXAxisOptions.min = minSetting;\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    var minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (this.max - this.min !==\n                                chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this, chart = this.chart, dropdown = this.dropdown, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttons = rangeSelector.buttons;\n                var selectedExists = isNumber(selected), isSelectedTooGreat = false;\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, button = buttons[i], offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed in\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    var state = 0, \n                    // Do not select the YTD button if not explicitly told so\n                    isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isAllButAlreadyShowingAll = false, isSameRange = range === actualRange;\n                    if (isSelected && isTooGreatRange) {\n                        isSelectedTooGreat = true;\n                    }\n                    // Months and years have a variable range so we check the extremes\n                    if ((type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                        isAllButAlreadyShowingAll = (!isSelected &&\n                            selectedExists &&\n                            isSameRange);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                        !(isSelectedTooGreat && type === 'all') &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            isAllButAlreadyShowingAll ||\n                            hasNoData));\n                    var select = ((isSelectedTooGreat && type === 'all') ||\n                        (isSelected && isSameRange) ||\n                        (isSameRange && !selectedExists && !isYTDButNotSelected) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        state = 3;\n                    }\n                    else if (select) {\n                        selectedExists = true; // Only one button can be selected\n                        state = 2;\n                    }\n                    // If state has changed, update the button\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = disable;\n                            if (state === 2) {\n                                dropdown.selectedIndex = i + 1;\n                            }\n                        }\n                        // Reset (#9209)\n                        if (state === 0 && selected === i) {\n                            rangeSelector.setSelected();\n                        }\n                        else if ((state === 2 && !defined(selected)) ||\n                            isSelectedTooGreat) {\n                            rangeSelector.setSelected(i);\n                        }\n                    }\n                });\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type, count = rangeOptions.count || 1, \n                // these time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                    .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text', _a = this.inputGroup, _b = _a.translateX, translateX = _b === void 0 ? 0 : _b, _c = _a.translateY, translateY = _c === void 0 ? 0 : _c, _d = dateBox.x, x = _d === void 0 ? 0 : _d, _e = dateBox.width, width = _e === void 0 ? 0 : _e, _f = dateBox.height, height = _f === void 0 ? 0 : _f, inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                    return str.length > 6 &&\n                        (str.lastIndexOf('-') === str.length - 6 ||\n                            str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this, chart = _a.chart, div = _a.div, inputGroup = _a.inputGroup;\n                var rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes() {\n                    var maxInput = rangeSelector.maxInput, minInput = rangeSelector.minInput, chartAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax;\n                    var value = rangeSelector.getInputValue(name);\n                    if (value !== Number(input.getAttribute('data-hc-time-previous')) &&\n                        isNumber(value)) {\n                        input.setAttribute('data-hc-time-previous', value);\n                        // Validate the extremes. If it goes beyound the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and and records\n                // click events that bring in the HTML input.\n                var dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // update extermes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes();\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes();\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.keyCode === 38 || event.keyCode === 40) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // set offset only for varticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputsZIndex = pick(chartOptions.chart.style &&\n                    chartOptions.chart.style.zIndex, 0) + 1, inputEnabled = options.inputEnabled, rendered = this.rendered;\n                if (options.enabled === false) {\n                    return;\n                }\n                // create the elements\n                if (!rendered) {\n                    this.group = renderer.g('range-selector-group')\n                        .attr({\n                        zIndex: 7\n                    })\n                        .add();\n                    this.div = createElement('div', void 0, {\n                        position: 'relative',\n                        height: 0,\n                        zIndex: inputsZIndex\n                    });\n                    if (this.buttonOptions.length) {\n                        this.renderButtons();\n                    }\n                    // First create a wrapper outside the container in order to make\n                    // the inputs work and make export correct\n                    if (container.parentNode) {\n                        container.parentNode.insertBefore(this.div, container);\n                    }\n                    if (inputEnabled) {\n                        // Create the group to keep the inputs\n                        this.inputGroup = renderer.g('input-group').add(this.group);\n                        var minElems = this.drawInput('min');\n                        this.minDateBox = minElems.dateBox;\n                        this.minLabel = minElems.label;\n                        this.minInput = minElems.input;\n                        var maxElems = this.drawInput('max');\n                        this.maxDateBox = maxElems.dateBox;\n                        this.maxLabel = maxElems.label;\n                        this.maxInput = maxElems.input;\n                    }\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.rendered = true;\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    padding: 0,\n                    border: 0,\n                    top: '-9999em',\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                [\n                    [H.isMS ? 'mouseover' : 'mouseenter'],\n                    [H.isMS ? 'mouseout' : 'mouseleave'],\n                    ['change', 'click']\n                ].forEach(function (_a) {\n                    var from = _a[0], to = _a[1];\n                    addEvent(dropdown, from, function () {\n                        var button = buttons[_this.currentButtonIndex()];\n                        if (button) {\n                            fireEvent(button.element, to || from);\n                        }\n                    });\n                });\n                this.zoomText = renderer\n                    .label((lang && lang.rangeSelectorZoom) || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, group = _a.group, inputGroup = _a.inputGroup, options = _a.options, zoomText = _a.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition, inputPosition = options.inputPosition, verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group, position) {\n                    if (navButtonOptions &&\n                        _this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        this.updateButtonStates();\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                    var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _b = this, minInput = _b.minInput, maxInput = _b.maxInput, dropdown = _b.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this, chart = _a.chart, options = _a.options, buttonGroup = _a.buttonGroup, buttons = _a.buttons;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options, zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this, chart = _a.chart, buttonGroup = _a.buttonGroup, inputGroup = _a.inputGroup;\n                var _b = this.options, buttonPosition = _b.buttonPosition, dropdown = _b.dropdown, inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                    var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                    if (inputGroup && buttonGroup) {\n                        var inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // getBBox for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        var inputGroupWidth = inputGroup.alignOptions.width;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons(xOffsetForExportButton);\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons(xOffsetForExportButton);\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons(xOffsetForExportButton);\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and put the select element on top.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function (xOffsetForExportButton) {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, chart = _a.chart, dropdown = _a.dropdown, options = _a.options, zoomText = _a.zoomText;\n                // If the buttons are already collapsed do nothing.\n                if (this.isCollapsed === true) {\n                    return;\n                }\n                this.isCollapsed = true;\n                var userButtonTheme = (chart.userOptions.rangeSelector &&\n                    chart.userOptions.rangeSelector.buttonTheme) || {};\n                var getAttribs = function (text) { return ({\n                    text: text ? \"\".concat(text, \" \\u25BE\") : '▾',\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme.padding, 8)\n                }); };\n                if (zoomText) {\n                    zoomText.hide();\n                }\n                var hasActiveButton = false;\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    if (button.state !== 2) {\n                        button.hide();\n                    }\n                    else {\n                        button.show();\n                        button.attr(getAttribs(rangeOptions.text));\n                        hasActiveButton = true;\n                    }\n                });\n                if (!hasActiveButton) {\n                    if (dropdown) {\n                        dropdown.selectedIndex = 0;\n                    }\n                    buttons[0].show();\n                    buttons[0].attr(getAttribs(this.zoomText && this.zoomText.textStr));\n                }\n                var align = options.buttonPosition.align;\n                this.positionButtons();\n                if (align === 'right' || align === 'center') {\n                    this.alignButtonGroup(xOffsetForExportButton, buttons[this.currentButtonIndex()].getBBox().width);\n                }\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, options = _a.options, zoomText = _a.zoomText;\n                this.hideDropdown();\n                // If buttons are already not collapsed, do nothing.\n                if (this.isCollapsed === false) {\n                    return;\n                }\n                this.isCollapsed = false;\n                if (zoomText) {\n                    zoomText.show();\n                }\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    button.show();\n                    button.attr({\n                        text: rangeOptions.text,\n                        width: options.buttonTheme.width || 28,\n                        paddingLeft: pick(options.buttonTheme.paddingLeft, 'unset'),\n                        paddingRight: pick(options.buttonTheme.paddingRight, 'unset')\n                    });\n                    if (button.state < 2) {\n                        button.setState(0);\n                    }\n                });\n                this.positionButtons();\n            };\n            /**\n             * Get the index of the visible button when the buttons are collapsed.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#currentButtonIndex\n             */\n            RangeSelector.prototype.currentButtonIndex = function () {\n                var dropdown = this.dropdown;\n                if (dropdown && dropdown.selectedIndex > 0) {\n                    return dropdown.selectedIndex - 1;\n                }\n                return 0;\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var _b = buttonGroup.translateX, translateX = _b === void 0 ? 0 : _b, _c = buttonGroup.translateY, translateY = _c === void 0 ? 0 : _c, bBox = buttons[this.currentButtonIndex()].getBBox();\n                    css(dropdown, {\n                        left: (chart.plotLeft + translateX) + 'px',\n                        top: (translateY + 0.5) + 'px',\n                        width: bBox.width + 'px',\n                        height: bBox.height + 'px'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    css(dropdown, {\n                        top: '-9999em',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options) {\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                this.render();\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Core/Axis/OrdinalAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, css = U.css, defined = U.defined, error = U.error, pick = U.pick, pushUnique = U.pushUnique, timeUnits = U.timeUnits;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Extends the axis with ordinal support.\n         * @private\n         */\n        var OrdinalAxis;\n        (function (OrdinalAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the axis with ordinal support.\n             *\n             * @private\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param ChartClass\n             * Chart class to use.\n             *\n             * @param SeriesClass\n             * Series class to use.\n             */\n            function compose(AxisClass, SeriesClass, ChartClass) {\n                if (pushUnique(composed, compose)) {\n                    var axisProto = AxisClass.prototype;\n                    axisProto.getTimeTicks = getTimeTicks;\n                    axisProto.index2val = index2val;\n                    axisProto.lin2val = lin2val;\n                    axisProto.val2lin = val2lin;\n                    // Record this to prevent overwriting by broken-axis module (#5979)\n                    axisProto.ordinal2lin = axisProto.val2lin;\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'foundExtremes', onAxisFoundExtremes);\n                    addEvent(AxisClass, 'afterSetScale', onAxisAfterSetScale);\n                    addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n                    addEvent(ChartClass, 'pan', onChartPan);\n                    addEvent(SeriesClass, 'updatedData', onSeriesUpdatedData);\n                }\n                return AxisClass;\n            }\n            OrdinalAxis.compose = compose;\n            /**\n             * In an ordinal axis, there might be areas with dense consentrations of\n             * points, then large gaps between some. Creating equally distributed\n             * ticks over this entire range may lead to a huge number of ticks that\n             * will later be removed. So instead, break the positions up in\n             * segments, find the tick positions for each segment then concatenize\n             * them. This method is used from both data grouping logic and X axis\n             * tick position logic.\n             * @private\n             */\n            function getTimeTicks(normalizedInterval, min, max, startOfWeek, positions, closestDistance, findHigherRanks) {\n                if (positions === void 0) { positions = []; }\n                if (closestDistance === void 0) { closestDistance = 0; }\n                var higherRanks = {}, tickPixelIntervalOption = this.options.tickPixelInterval, time = this.chart.time, \n                // Record all the start positions of a segment, to use when\n                // deciding what's a gap in the data.\n                segmentStarts = [];\n                var end, segmentPositions, hasCrossedHigherRank, info, outsideMax, start = 0, groupPositions = [], lastGroupPosition = -Number.MAX_VALUE;\n                // The positions are not always defined, for example for ordinal\n                // positions when data has regular interval (#1557, #2090)\n                if ((!this.options.ordinal && !this.options.breaks) ||\n                    !positions ||\n                    positions.length < 3 ||\n                    typeof min === 'undefined') {\n                    return time.getTimeTicks.apply(time, arguments);\n                }\n                // Analyze the positions array to split it into segments on gaps\n                // larger than 5 times the closest distance. The closest distance is\n                // already found at this point, so we reuse that instead of\n                // computing it again.\n                var posLength = positions.length;\n                for (end = 0; end < posLength; end++) {\n                    outsideMax = end && positions[end - 1] > max;\n                    if (positions[end] < min) { // Set the last position before min\n                        start = end;\n                    }\n                    if (end === posLength - 1 ||\n                        positions[end + 1] - positions[end] > closestDistance * 5 ||\n                        outsideMax) {\n                        // For each segment, calculate the tick positions from the\n                        // getTimeTicks utility function. The interval will be the\n                        // same regardless of how long the segment is.\n                        if (positions[end] > lastGroupPosition) { // #1475\n                            segmentPositions = time.getTimeTicks(normalizedInterval, positions[start], positions[end], startOfWeek);\n                            // Prevent duplicate groups, for example for multiple\n                            // segments within one larger time frame (#1475)\n                            while (segmentPositions.length &&\n                                segmentPositions[0] <= lastGroupPosition) {\n                                segmentPositions.shift();\n                            }\n                            if (segmentPositions.length) {\n                                lastGroupPosition =\n                                    segmentPositions[segmentPositions.length - 1];\n                            }\n                            segmentStarts.push(groupPositions.length);\n                            groupPositions = groupPositions.concat(segmentPositions);\n                        }\n                        // Set start of next segment\n                        start = end + 1;\n                    }\n                    if (outsideMax) {\n                        break;\n                    }\n                }\n                // Get the grouping info from the last of the segments. The info is\n                // the same for all segments.\n                if (segmentPositions) {\n                    info = segmentPositions.info;\n                    // Optionally identify ticks with higher rank, for example\n                    // when the ticks have crossed midnight.\n                    if (findHigherRanks && info.unitRange <= timeUnits.hour) {\n                        end = groupPositions.length - 1;\n                        // Compare points two by two\n                        for (start = 1; start < end; start++) {\n                            if (time.dateFormat('%d', groupPositions[start]) !==\n                                time.dateFormat('%d', groupPositions[start - 1])) {\n                                higherRanks[groupPositions[start]] = 'day';\n                                hasCrossedHigherRank = true;\n                            }\n                        }\n                        // If the complete array has crossed midnight, we want\n                        // to mark the first positions also as higher rank\n                        if (hasCrossedHigherRank) {\n                            higherRanks[groupPositions[0]] = 'day';\n                        }\n                        info.higherRanks = higherRanks;\n                    }\n                    // Save the info\n                    info.segmentStarts = segmentStarts;\n                    groupPositions.info = info;\n                }\n                else {\n                    error(12, false, this.chart);\n                }\n                // Don't show ticks within a gap in the ordinal axis, where the\n                // space between two points is greater than a portion of the tick\n                // pixel interval\n                if (findHigherRanks && defined(tickPixelIntervalOption)) {\n                    var length_1 = groupPositions.length, translatedArr = [], distances = [];\n                    var itemToRemove = void 0, translated = void 0, lastTranslated = void 0, medianDistance = void 0, distance = void 0, i = length_1;\n                    // Find median pixel distance in order to keep a reasonably even\n                    // distance between ticks (#748)\n                    while (i--) {\n                        translated = this.translate(groupPositions[i]);\n                        if (lastTranslated) {\n                            distances[i] = lastTranslated - translated;\n                        }\n                        translatedArr[i] = lastTranslated = translated;\n                    }\n                    distances.sort();\n                    medianDistance = distances[Math.floor(distances.length / 2)];\n                    if (medianDistance < tickPixelIntervalOption * 0.6) {\n                        medianDistance = null;\n                    }\n                    // Now loop over again and remove ticks where needed\n                    i = groupPositions[length_1 - 1] > max ? length_1 - 1 : length_1; // #817\n                    lastTranslated = void 0;\n                    while (i--) {\n                        translated = translatedArr[i];\n                        distance = Math.abs(lastTranslated - translated);\n                        // #4175 - when axis is reversed, the distance, is negative but\n                        // tickPixelIntervalOption positive, so we need to compare the\n                        // same values\n                        // Remove ticks that are closer than 0.6 times the pixel\n                        // interval from the one to the right, but not if it is close to\n                        // the median distance (#748).\n                        if (lastTranslated &&\n                            distance < tickPixelIntervalOption * 0.8 &&\n                            (medianDistance === null || distance < medianDistance * 0.8)) {\n                            // Is this a higher ranked position with a normal\n                            // position to the right?\n                            if (higherRanks[groupPositions[i]] &&\n                                !higherRanks[groupPositions[i + 1]]) {\n                                // Yes: remove the lower ranked neighbour to the\n                                // right\n                                itemToRemove = i + 1;\n                                lastTranslated = translated; // #709\n                            }\n                            else {\n                                // No: remove this one\n                                itemToRemove = i;\n                            }\n                            groupPositions.splice(itemToRemove, 1);\n                        }\n                        else {\n                            lastTranslated = translated;\n                        }\n                    }\n                }\n                return groupPositions;\n            }\n            /**\n             * Get axis position of given index of the extended ordinal positions.\n             * Used only when panning an ordinal axis.\n             *\n             * @private\n             * @function Highcharts.Axis#index2val\n             * @param {number} index\n             * The index value of searched point\n             */\n            function index2val(index) {\n                var axis = this, ordinal = axis.ordinal, \n                // Context could be changed to extendedOrdinalPositions.\n                ordinalPositions = ordinal.positions;\n                // The visible range contains only equally spaced values.\n                if (!ordinalPositions) {\n                    return index;\n                }\n                var i = ordinalPositions.length - 1, distance;\n                if (index < 0) { // out of range, in effect panning to the left\n                    index = ordinalPositions[0];\n                }\n                else if (index > i) { // out of range, panning to the right\n                    index = ordinalPositions[i];\n                }\n                else { // split it up\n                    i = Math.floor(index);\n                    distance = index - i; // the decimal\n                }\n                if (typeof distance !== 'undefined' &&\n                    typeof ordinalPositions[i] !== 'undefined') {\n                    return ordinalPositions[i] + (distance ?\n                        distance *\n                            (ordinalPositions[i + 1] - ordinalPositions[i]) :\n                        0);\n                }\n                return index;\n            }\n            /**\n             * Translate from linear (internal) to axis value.\n             *\n             * @private\n             * @function Highcharts.Axis#lin2val\n             * @param {number} val\n             * The linear abstracted value.\n             */\n            function lin2val(val) {\n                var axis = this, ordinal = axis.ordinal, localMin = axis.old ? axis.old.min : axis.min, localA = axis.old ? axis.old.transA : axis.transA;\n                // Always use extendedPositions (#19816)\n                var positions = ordinal.getExtendedPositions();\n                // In some cases (especially in early stages of the chart creation) the\n                // getExtendedPositions might return undefined.\n                if (positions.length) {\n                    // Convert back from modivied value to pixels. // #15970\n                    var pixelVal = correctFloat((val - localMin) * localA +\n                        axis.minPixelPadding), index = correctFloat(ordinal.getIndexOfPoint(pixelVal, positions)), mantissa = correctFloat(index % 1);\n                    // Check if the index is inside position array. If true,\n                    // read/approximate value for that exact index.\n                    if (index >= 0 && index <= positions.length - 1) {\n                        var leftNeighbour = positions[Math.floor(index)], rightNeighbour = positions[Math.ceil(index)], distance = rightNeighbour - leftNeighbour;\n                        return positions[Math.floor(index)] + mantissa * distance;\n                    }\n                }\n                // If the value is outside positions array, return initial value\n                return val; // #16784\n            }\n            /**\n             * Internal function to calculate the precise index in ordinalPositions\n             * array.\n             * @private\n             */\n            function getIndexInArray(ordinalPositions, val) {\n                var index = OrdinalAxis.Additions.findIndexOf(ordinalPositions, val, true);\n                if (ordinalPositions[index] === val) {\n                    return index;\n                }\n                var percent = (val - ordinalPositions[index]) /\n                    (ordinalPositions[index + 1] - ordinalPositions[index]);\n                return index + percent;\n            }\n            /**\n            * @private\n            */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (!axis.ordinal) {\n                    axis.ordinal = new OrdinalAxis.Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisFoundExtremes() {\n                var axis = this;\n                if (axis.isXAxis &&\n                    defined(axis.options.overscroll) &&\n                    axis.max === axis.dataMax &&\n                    (\n                    // Panning is an execption. We don't want to apply\n                    // overscroll when panning over the dataMax\n                    !axis.chart.mouseIsDown ||\n                        axis.isInternal) && (\n                // Scrollbar buttons are the other execption:\n                !axis.eventArgs ||\n                    axis.eventArgs && axis.eventArgs.trigger !== 'navigator')) {\n                    axis.max += axis.options.overscroll;\n                    // Live data and buttons require translation for the min:\n                    if (!axis.isInternal && defined(axis.userMin)) {\n                        axis.min += axis.options.overscroll;\n                    }\n                }\n            }\n            /**\n             * For ordinal axis, that loads data async, redraw axis after data is\n             * loaded. If we don't do that, axis will have the same extremes as\n             * previously, but ordinal positions won't be calculated. See #10290\n             * @private\n             */\n            function onAxisAfterSetScale() {\n                var axis = this;\n                if (axis.horiz && !axis.isDirty) {\n                    axis.isDirty = axis.isOrdinal &&\n                        axis.chart.navigator &&\n                        !axis.chart.navigator.adaptToUpdatedData;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInitialAxisTranslation() {\n                var axis = this;\n                if (axis.ordinal) {\n                    axis.ordinal.beforeSetTickPositions();\n                    axis.tickInterval = axis.ordinal.postProcessTickInterval(axis.tickInterval);\n                }\n            }\n            /**\n             * Extending the Chart.pan method for ordinal axes\n             * @private\n             */\n            function onChartPan(e) {\n                var chart = this, xAxis = chart.xAxis[0], overscroll = xAxis.options.overscroll, chartX = e.originalEvent.chartX, panning = chart.options.chart.panning;\n                var runBase = false;\n                if (panning &&\n                    panning.type !== 'y' &&\n                    xAxis.options.ordinal &&\n                    xAxis.series.length) {\n                    var mouseDownX = chart.mouseDownX, extremes = xAxis.getExtremes(), dataMax = extremes.dataMax, min = extremes.min, max = extremes.max, hoverPoints = chart.hoverPoints, closestPointRange = (xAxis.closestPointRange ||\n                        (xAxis.ordinal && xAxis.ordinal.overscrollPointsRange)), pointPixelWidth = (xAxis.translationSlope *\n                        (xAxis.ordinal.slope || closestPointRange)), \n                    // how many ordinal units did we move?\n                    movedUnits = Math.round((mouseDownX - chartX) / pointPixelWidth), \n                    // get index of all the chart's points\n                    extendedOrdinalPositions = xAxis.ordinal.getExtendedPositions(), extendedAxis = {\n                        ordinal: {\n                            positions: extendedOrdinalPositions,\n                            extendedOrdinalPositions: extendedOrdinalPositions\n                        }\n                    }, index2val_1 = xAxis.index2val, val2lin_1 = xAxis.val2lin;\n                    var trimmedRange = void 0, ordinalPositions = void 0, searchAxisLeft = void 0, searchAxisRight = void 0;\n                    // we have an ordinal axis, but the data is equally spaced\n                    if (!extendedAxis.ordinal.positions) {\n                        runBase = true;\n                    }\n                    else if (Math.abs(movedUnits) > 1) {\n                        // Remove active points for shared tooltip\n                        if (hoverPoints) {\n                            hoverPoints.forEach(function (point) {\n                                point.setState();\n                            });\n                        }\n                        if (movedUnits < 0) {\n                            searchAxisLeft = extendedAxis;\n                            searchAxisRight = xAxis.ordinal.positions ?\n                                xAxis : extendedAxis;\n                        }\n                        else {\n                            searchAxisLeft = xAxis.ordinal.positions ?\n                                xAxis : extendedAxis;\n                            searchAxisRight = extendedAxis;\n                        }\n                        // In grouped data series, the last ordinal position represents\n                        // the grouped data, which is to the left of the real data max.\n                        // If we don't compensate for this, we will be allowed to pan\n                        // grouped data series passed the right of the plot area.\n                        ordinalPositions = searchAxisRight.ordinal.positions;\n                        if (dataMax >\n                            ordinalPositions[ordinalPositions.length - 1]) {\n                            ordinalPositions.push(dataMax);\n                        }\n                        // Get the new min and max values by getting the ordinal index\n                        // for the current extreme, then add the moved units and\n                        // translate back to values. This happens on the extended\n                        // ordinal positions if the new position is out of range, else\n                        // it happens on the current x axis which is smaller and faster.\n                        chart.fixedRange = max - min;\n                        trimmedRange = xAxis.navigatorAxis\n                            .toFixedRange(void 0, void 0, index2val_1.apply(searchAxisLeft, [\n                            val2lin_1.apply(searchAxisLeft, [min, true]) +\n                                movedUnits\n                        ]), index2val_1.apply(searchAxisRight, [\n                            val2lin_1.apply(searchAxisRight, [max, true]) +\n                                movedUnits\n                        ]));\n                        // Apply it if it is within the available data range\n                        if (trimmedRange.min >= Math.min(extremes.dataMin, min) &&\n                            trimmedRange.max <= Math.max(dataMax, max) +\n                                overscroll) {\n                            xAxis.setExtremes(trimmedRange.min, trimmedRange.max, true, false, { trigger: 'pan' });\n                        }\n                        chart.mouseDownX = chartX; // set new reference for next run\n                        css(chart.container, { cursor: 'move' });\n                    }\n                }\n                else {\n                    runBase = true;\n                }\n                // revert to the linear chart.pan version\n                if (runBase || (panning && /y/.test(panning.type))) {\n                    if (overscroll) {\n                        xAxis.max = xAxis.dataMax + overscroll;\n                    }\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesUpdatedData() {\n                var xAxis = this.xAxis;\n                // Destroy the extended ordinal index on updated data\n                // and destroy extendedOrdinalPositions, #16055.\n                if (xAxis && xAxis.options.ordinal) {\n                    delete xAxis.ordinal.index;\n                }\n            }\n            /**\n             * Translate from a linear axis value to the corresponding ordinal axis\n             * position. If there are no gaps in the ordinal axis this will be the\n             * same. The translated value is the value that the point would have if\n             * the axis was linear, using the same min and max.\n             *\n             * @private\n             * @function Highcharts.Axis#val2lin\n             * @param {number} val\n             * The axis value.\n             * @param {boolean} [toIndex]\n             * Whether to return the index in the ordinalPositions or the new value.\n             */\n            function val2lin(val, toIndex) {\n                var axis = this, ordinal = axis.ordinal, ordinalPositions = ordinal.positions;\n                var slope = ordinal.slope, extendedOrdinalPositions;\n                if (!ordinalPositions) {\n                    return val;\n                }\n                var ordinalLength = ordinalPositions.length;\n                var ordinalIndex;\n                // If the searched value is inside visible plotArea, ivastigate the\n                // value basing on ordinalPositions.\n                if (ordinalPositions[0] <= val &&\n                    ordinalPositions[ordinalLength - 1] >= val) {\n                    ordinalIndex = getIndexInArray(ordinalPositions, val);\n                    // final return value is based on ordinalIndex\n                }\n                else {\n                    extendedOrdinalPositions =\n                        ordinal.getExtendedPositions &&\n                            ordinal.getExtendedPositions();\n                    if (!(extendedOrdinalPositions && extendedOrdinalPositions.length)) {\n                        return val;\n                    }\n                    var length_2 = extendedOrdinalPositions.length;\n                    if (!slope) {\n                        slope =\n                            (extendedOrdinalPositions[length_2 - 1] -\n                                extendedOrdinalPositions[0]) /\n                                length_2;\n                    }\n                    // OriginalPointReference is equal to the index of\n                    // first point of ordinalPositions in extendedOrdinalPositions.\n                    var originalPositionsReference = getIndexInArray(extendedOrdinalPositions, ordinalPositions[0]);\n                    // If the searched value is outside the visiblePlotArea,\n                    // check if it is inside extendedOrdinalPositions.\n                    if (val >= extendedOrdinalPositions[0] &&\n                        val <=\n                            extendedOrdinalPositions[length_2 - 1]) {\n                        // Return Value\n                        ordinalIndex = getIndexInArray(extendedOrdinalPositions, val) -\n                            originalPositionsReference;\n                    }\n                    else {\n                        if (!toIndex) {\n                            // If the value is outside positions array,\n                            // return initial value, #16784\n                            return val;\n                        }\n                        // Since ordinal.slope is the average distance between 2\n                        // points on visible plotArea, this can be used to calculete\n                        // the approximate position of the point, which is outside\n                        // the extededOrdinalPositions.\n                        if (val < extendedOrdinalPositions[0]) {\n                            var diff = extendedOrdinalPositions[0] - val, approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                -originalPositionsReference -\n                                    approximateIndexOffset;\n                        }\n                        else {\n                            var diff = val -\n                                extendedOrdinalPositions[length_2 - 1], approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                approximateIndexOffset +\n                                    length_2 -\n                                    originalPositionsReference;\n                        }\n                    }\n                }\n                return toIndex ? ordinalIndex : slope * (ordinalIndex || 0) +\n                    ordinal.offset;\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(axis) {\n                    this.index = {};\n                    this.axis = axis;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * Calculate the ordinal positions before tick positions are calculated.\n                 * @private\n                 */\n                Additions.prototype.beforeSetTickPositions = function () {\n                    var _a;\n                    var axis = this.axis, ordinal = axis.ordinal, extremes = axis.getExtremes(), min = extremes.min, max = extremes.max, hasBreaks = (_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks, isOrdinal = axis.options.ordinal;\n                    var len, uniqueOrdinalPositions, dist, minIndex, maxIndex, slope, i, ordinalPositions = [], overscrollPointsRange = Number.MAX_VALUE, useOrdinal = false, adjustOrdinalExtremesPoints = false, isBoosted = false;\n                    // Apply the ordinal logic\n                    if (isOrdinal || hasBreaks) { // #4167 YAxis is never ordinal ?\n                        var distanceBetweenPoint_1 = 0;\n                        axis.series.forEach(function (series, i) {\n                            uniqueOrdinalPositions = [];\n                            // For an axis with multiple series, check if the distance\n                            // between points is identical throughout all series.\n                            if (i > 0 &&\n                                series.options.id !== 'highcharts-navigator-series' &&\n                                series.processedXData.length > 1) {\n                                adjustOrdinalExtremesPoints =\n                                    distanceBetweenPoint_1 !== series.processedXData[1] -\n                                        series.processedXData[0];\n                            }\n                            distanceBetweenPoint_1 =\n                                series.processedXData[1] - series.processedXData[0];\n                            if (series.boosted) {\n                                isBoosted = series.boosted;\n                            }\n                            if (series.reserveSpace() &&\n                                (series\n                                    .takeOrdinalPosition !== false || hasBreaks)) {\n                                // concatenate the processed X data into the existing\n                                // positions, or the empty array\n                                ordinalPositions = ordinalPositions.concat(series.processedXData);\n                                len = ordinalPositions.length;\n                                // remove duplicates (#1588)\n                                ordinalPositions.sort(function (a, b) {\n                                    // without a custom function it is sorted as strings\n                                    return a - b;\n                                });\n                                overscrollPointsRange = Math.min(overscrollPointsRange, pick(\n                                // Check for a single-point series:\n                                series.closestPointRange, overscrollPointsRange));\n                                if (len) {\n                                    i = 0;\n                                    while (i < len - 1) {\n                                        if (ordinalPositions[i] !==\n                                            ordinalPositions[i + 1]) {\n                                            uniqueOrdinalPositions.push(ordinalPositions[i + 1]);\n                                        }\n                                        i++;\n                                    }\n                                    // Check first item:\n                                    if (uniqueOrdinalPositions[0] !==\n                                        ordinalPositions[0]) {\n                                        uniqueOrdinalPositions.unshift(ordinalPositions[0]);\n                                    }\n                                    ordinalPositions = uniqueOrdinalPositions;\n                                }\n                            }\n                        });\n                        // If the distance between points is not identical throughout\n                        // all series, remove the first and last ordinal position to\n                        // avoid enabling ordinal logic when it is not needed, #17405.\n                        // Only for boosted series because changes are negligible.\n                        if (adjustOrdinalExtremesPoints && isBoosted) {\n                            ordinalPositions.pop();\n                            ordinalPositions.shift();\n                        }\n                        // cache the length\n                        len = ordinalPositions.length;\n                        // Check if we really need the overhead of mapping axis data\n                        // against the ordinal positions. If the series consist of\n                        // evenly spaced data any way, we don't need any ordinal logic.\n                        if (len > 2) { // two points have equal distance by default\n                            dist = ordinalPositions[1] - ordinalPositions[0];\n                            i = len - 1;\n                            while (i-- && !useOrdinal) {\n                                if (ordinalPositions[i + 1] - ordinalPositions[i] !==\n                                    dist) {\n                                    useOrdinal = true;\n                                }\n                            }\n                            // When zooming in on a week, prevent axis padding for\n                            // weekends even though the data within the week is evenly\n                            // spaced.\n                            if (!axis.options.keepOrdinalPadding &&\n                                (ordinalPositions[0] - min > dist ||\n                                    (max -\n                                        ordinalPositions[ordinalPositions.length - 1]) > dist)) {\n                                useOrdinal = true;\n                            }\n                        }\n                        else if (axis.options.overscroll) {\n                            if (len === 2) {\n                                // Exactly two points, distance for overscroll is fixed:\n                                overscrollPointsRange =\n                                    ordinalPositions[1] - ordinalPositions[0];\n                            }\n                            else if (len === 1) {\n                                // We have just one point, closest distance is unknown.\n                                // Assume then it is last point and overscrolled range:\n                                overscrollPointsRange = axis.options.overscroll;\n                                ordinalPositions = [\n                                    ordinalPositions[0],\n                                    ordinalPositions[0] + overscrollPointsRange\n                                ];\n                            }\n                            else {\n                                // In case of zooming in on overscrolled range, stick to\n                                // the old range:\n                                overscrollPointsRange = ordinal.overscrollPointsRange;\n                            }\n                        }\n                        // Record the slope and offset to compute the linear values from\n                        // the array index. Since the ordinal positions may exceed the\n                        // current range, get the start and end positions within it\n                        // (#719, #665b)\n                        if (useOrdinal || axis.forceOrdinal) {\n                            if (axis.options.overscroll) {\n                                ordinal.overscrollPointsRange = overscrollPointsRange;\n                                ordinalPositions = ordinalPositions.concat(ordinal.getOverscrollPositions());\n                            }\n                            // Register\n                            ordinal.positions = ordinalPositions;\n                            // This relies on the ordinalPositions being set. Use\n                            // Math.max and Math.min to prevent padding on either sides\n                            // of the data.\n                            minIndex = axis.ordinal2lin(// #5979\n                            Math.max(min, ordinalPositions[0]), true);\n                            maxIndex = Math.max(axis.ordinal2lin(Math.min(max, ordinalPositions[ordinalPositions.length - 1]), true), 1); // #3339\n                            // Set the slope and offset of the values compared to the\n                            // indices in the ordinal positions.\n                            ordinal.slope = slope =\n                                (max - min) / (maxIndex - minIndex);\n                            ordinal.offset = min - (minIndex * slope);\n                        }\n                        else {\n                            ordinal.overscrollPointsRange = pick(axis.closestPointRange, ordinal.overscrollPointsRange);\n                            ordinal.positions = axis.ordinal.slope = ordinal.offset =\n                                void 0;\n                        }\n                    }\n                    axis.isOrdinal = isOrdinal && useOrdinal; // #3818, #4196, #4926\n                    ordinal.groupIntervalFactor = null; // reset for next run\n                };\n                /**\n                 * Faster way of using the Array.indexOf method.\n                 * Works for sorted arrays only with unique values.\n                 *\n                 * @param {Array} sortedArray\n                 *        The sorted array inside which we are looking for.\n                 * @param {number} key\n                 *        The key to being found.\n                 * @param {boolean} indirectSearch\n                 *        In case of lack of the point in the array, should return\n                 *        value be equal to -1 or the closest smaller index.\n                 *  @private\n                 */\n                Additions.findIndexOf = function (sortedArray, key, indirectSearch) {\n                    var start = 0, end = sortedArray.length - 1, middle;\n                    while (start < end) {\n                        middle = Math.ceil((start + end) / 2);\n                        // Key found as the middle element.\n                        if (sortedArray[middle] <= key) {\n                            // Continue searching to the right.\n                            start = middle;\n                        }\n                        else {\n                            // Continue searching to the left.\n                            end = middle - 1;\n                        }\n                    }\n                    if (sortedArray[start] === key) {\n                        return start;\n                    }\n                    // Key could not be found.\n                    return !indirectSearch ? -1 : start;\n                };\n                /**\n                 * Get the ordinal positions for the entire data set. This is necessary\n                 * in chart panning because we need to find out what points or data\n                 * groups are available outside the visible range. When a panning\n                 * operation starts, if an index for the given grouping does not exists,\n                 * it is created and cached. This index is deleted on updated data, so\n                 * it will be regenerated the next time a panning operation starts.\n                 * @private\n                 */\n                Additions.prototype.getExtendedPositions = function () {\n                    var ordinal = this, axis = ordinal.axis, axisProto = axis.constructor.prototype, chart = axis.chart, grouping = axis.series[0].currentDataGrouping, key = grouping ?\n                        grouping.count + grouping.unitName :\n                        'raw', overscroll = axis.options.overscroll, extremes = axis.getExtremes();\n                    var fakeAxis, fakeSeries = void 0, ordinalIndex = ordinal.index;\n                    // If this is the first time, or the ordinal index is deleted by\n                    // updatedData,\n                    // create it.\n                    if (!ordinalIndex) {\n                        ordinalIndex = ordinal.index = {};\n                    }\n                    if (!ordinalIndex[key]) {\n                        // Create a fake axis object where the extended ordinal\n                        // positions are emulated\n                        fakeAxis = {\n                            series: [],\n                            chart: chart,\n                            forceOrdinal: false,\n                            getExtremes: function () {\n                                return {\n                                    min: extremes.dataMin,\n                                    max: extremes.dataMax + overscroll\n                                };\n                            },\n                            applyGrouping: axisProto.applyGrouping,\n                            getGroupPixelWidth: axisProto.getGroupPixelWidth,\n                            getTimeTicks: axisProto.getTimeTicks,\n                            options: {\n                                ordinal: true\n                            },\n                            ordinal: {\n                                getGroupIntervalFactor: this.getGroupIntervalFactor\n                            },\n                            ordinal2lin: axisProto.ordinal2lin,\n                            getIndexOfPoint: axisProto.getIndexOfPoint,\n                            val2lin: axisProto.val2lin // #2590\n                        };\n                        fakeAxis.ordinal.axis = fakeAxis;\n                        // Add the fake series to hold the full data, then apply\n                        // processData to it\n                        axis.series.forEach(function (series) {\n                            fakeSeries = {\n                                xAxis: fakeAxis,\n                                xData: series.xData.slice(),\n                                chart: chart,\n                                groupPixelWidth: series.groupPixelWidth,\n                                destroyGroupedData: H.noop,\n                                getProcessedData: Series.prototype.getProcessedData,\n                                applyGrouping: Series.prototype.applyGrouping,\n                                reserveSpace: Series.prototype.reserveSpace,\n                                visible: series.visible\n                            };\n                            fakeSeries.xData = fakeSeries.xData.concat(ordinal.getOverscrollPositions());\n                            fakeSeries.options = {\n                                dataGrouping: grouping ? {\n                                    firstAnchor: 'firstPoint',\n                                    anchor: 'middle',\n                                    lastAnchor: 'lastPoint',\n                                    enabled: true,\n                                    forced: true,\n                                    // doesn't matter which, use the fastest\n                                    approximation: 'open',\n                                    units: [[\n                                            grouping.unitName,\n                                            [grouping.count]\n                                        ]]\n                                } : {\n                                    enabled: false\n                                }\n                            };\n                            fakeAxis.series.push(fakeSeries);\n                            series.processData.apply(fakeSeries);\n                        });\n                        fakeAxis.applyGrouping({ hasExtremesChanged: true });\n                        // Force to use the ordinal when points are evenly spaced (e.g.\n                        // weeks), #3825.\n                        if ((fakeSeries.closestPointRange !==\n                            fakeSeries.basePointRange) &&\n                            fakeSeries.currentDataGrouping) {\n                            fakeAxis.forceOrdinal = true;\n                        }\n                        // Run beforeSetTickPositions to compute the ordinalPositions\n                        axis.ordinal.beforeSetTickPositions.apply({ axis: fakeAxis });\n                        // Cache it\n                        ordinalIndex[key] = fakeAxis.ordinal.positions;\n                    }\n                    return ordinalIndex[key];\n                };\n                /**\n                 * Find the factor to estimate how wide the plot area would have been if\n                 * ordinal gaps were included. This value is used to compute an imagined\n                 * plot width in order to establish the data grouping interval.\n                 *\n                 * A real world case is the intraday-candlestick example. Without this\n                 * logic, it would show the correct data grouping when viewing a range\n                 * within each day, but once moving the range to include the gap between\n                 * two days, the interval would include the cut-away night hours and the\n                 * data grouping would be wrong. So the below method tries to compensate\n                 * by identifying the most common point interval, in this case days.\n                 *\n                 * An opposite case is presented in issue #718. We have a long array of\n                 * daily data, then one point is appended one hour after the last point.\n                 * We expect the data grouping not to change.\n                 *\n                 * In the future, if we find cases where this estimation doesn't work\n                 * optimally, we might need to add a second pass to the data grouping\n                 * logic, where we do another run with a greater interval if the number\n                 * of data groups is more than a certain fraction of the desired group\n                 * count.\n                 * @private\n                 */\n                Additions.prototype.getGroupIntervalFactor = function (xMin, xMax, series) {\n                    var ordinal = this, axis = ordinal.axis, processedXData = series.processedXData, len = processedXData.length, distances = [];\n                    var median, i, groupIntervalFactor = ordinal.groupIntervalFactor;\n                    // Only do this computation for the first series, let the other\n                    // inherit it (#2416)\n                    if (!groupIntervalFactor) {\n                        // Register all the distances in an array\n                        for (i = 0; i < len - 1; i++) {\n                            distances[i] = (processedXData[i + 1] -\n                                processedXData[i]);\n                        }\n                        // Sort them and find the median\n                        distances.sort(function (a, b) {\n                            return a - b;\n                        });\n                        median = distances[Math.floor(len / 2)];\n                        // Compensate for series that don't extend through the entire\n                        // axis extent. #1675.\n                        xMin = Math.max(xMin, processedXData[0]);\n                        xMax = Math.min(xMax, processedXData[len - 1]);\n                        ordinal.groupIntervalFactor = groupIntervalFactor =\n                            (len * median) / (xMax - xMin);\n                    }\n                    // Return the factor needed for data grouping\n                    return groupIntervalFactor;\n                };\n                /**\n                 * Get index of point inside the ordinal positions array.\n                 *\n                 * @private\n                 * @param {number} val\n                 * The pixel value of a point.\n                 *\n                 * @param {Array<number>} [ordinallArray]\n                 * An array of all points available on the axis for the given data set.\n                 * Either ordinalPositions if the value is inside the plotArea or\n                 * extendedOrdinalPositions if not.\n                 */\n                Additions.prototype.getIndexOfPoint = function (val, ordinalArray) {\n                    var ordinal = this, axis = ordinal.axis;\n                    var firstPointVal = 0;\n                    // Check whether the series has at least one point inside the chart\n                    var hasPointsInside = function (series) {\n                        var min = axis.min, max = axis.max;\n                        if (defined(min) && defined(max)) {\n                            return series.points.some(function (point) {\n                                return point.x >= min && point.x <= max;\n                            });\n                        }\n                        return false;\n                    };\n                    var firstPointX;\n                    // When more series assign to axis, find the smallest one, #15987.\n                    axis.series.forEach(function (series) {\n                        var _a;\n                        var firstPoint = (_a = series.points) === null || _a === void 0 ? void 0 : _a[0];\n                        if (defined(firstPoint === null || firstPoint === void 0 ? void 0 : firstPoint.plotX) &&\n                            (firstPoint.plotX < firstPointX ||\n                                !defined(firstPointX)) &&\n                            hasPointsInside(series)) {\n                            firstPointX = firstPoint.plotX;\n                            firstPointVal = firstPoint.x;\n                        }\n                    });\n                    // If undefined, give a default value\n                    firstPointX !== null && firstPointX !== void 0 ? firstPointX : (firstPointX = axis.minPixelPadding);\n                    // Distance in pixels between two points on the ordinal axis in the\n                    // current zoom.\n                    var ordinalPointPixelInterval = axis.translationSlope * (ordinal.slope ||\n                        axis.closestPointRange ||\n                        ordinal.overscrollPointsRange), \n                    // toValue for the first point.\n                    shiftIndex = correctFloat((val - firstPointX) / ordinalPointPixelInterval);\n                    return Additions.findIndexOf(ordinalArray, firstPointVal, true) + shiftIndex;\n                };\n                /**\n                 * Get ticks for an ordinal axis within a range where points don't\n                 * exist. It is required when overscroll is enabled. We can't base on\n                 * points, because we may not have any, so we use approximated\n                 * pointRange and generate these ticks between Axis.dataMax,\n                 * Axis.dataMax + Axis.overscroll evenly spaced. Used in panning and\n                 * navigator scrolling.\n                 * @private\n                 */\n                Additions.prototype.getOverscrollPositions = function () {\n                    var ordinal = this, axis = ordinal.axis, extraRange = axis.options.overscroll, distance = ordinal.overscrollPointsRange, positions = [];\n                    var max = axis.dataMax;\n                    if (defined(distance)) {\n                        // Max + pointRange because we need to scroll to the last\n                        while (max <= axis.dataMax + extraRange) {\n                            max += distance;\n                            positions.push(max);\n                        }\n                    }\n                    return positions;\n                };\n                /**\n                 * Make the tick intervals closer because the ordinal gaps make the\n                 * ticks spread out or cluster.\n                 * @private\n                 */\n                Additions.prototype.postProcessTickInterval = function (tickInterval) {\n                    // Problem: https://jsfiddle.net/highcharts/FQm4E/1/. This is a case\n                    // where this algorithm doesn't work optimally. In this case, the\n                    // tick labels are spread out per week, but all the gaps reside\n                    // within weeks. So we have a situation where the labels are courser\n                    // than the ordinal gaps, and thus the tick interval should not be\n                    // altered.\n                    var ordinal = this, axis = ordinal.axis, ordinalSlope = ordinal.slope;\n                    var ret;\n                    if (ordinalSlope) {\n                        if (!axis.options.breaks) {\n                            ret = (tickInterval /\n                                (ordinalSlope / axis.closestPointRange));\n                        }\n                        else {\n                            ret = axis.closestPointRange || tickInterval; // #7275\n                        }\n                    }\n                    else {\n                        ret = tickInterval;\n                    }\n                    return ret;\n                };\n                return Additions;\n            }());\n            OrdinalAxis.Additions = Additions;\n        })(OrdinalAxis || (OrdinalAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OrdinalAxis;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var HLCPoint = /** @class */ (function (_super) {\n            __extends(HLCPoint, _super);\n            function HLCPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            return HLCPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCPoint;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An HLC chart is a style of financial chart used to describe price\n         * movements over time. It displays high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/hlc/\n         *         HLC chart\n         *\n         * @extends      plotOptions.column\n         * @excluding    borderColor, borderRadius, borderWidth, crisp, stacking,\n         *               stack\n         * @product      highstock\n         * @optionparent plotOptions.hlc\n         */\n        var HLCSeriesDefaults = {\n            /**\n             * The approximate pixel width of each group. If for example a series\n             * with 30 points is displayed over a 600 pixel wide plot area, no\n             * grouping is performed. If however the series contains so many points\n             * that the spacing is less than the groupPixelWidth, Highcharts will\n             * try to group it into appropriate groups so that each is more or less\n             * two pixels wide. Defaults to `5`.\n             *\n             * @type      {number}\n             * @default   5\n             * @product   highstock\n             * @apioption plotOptions.hlc.dataGrouping.groupPixelWidth\n             */\n            /**\n             * @type      {Highcharts.DataGroupingApproximationValue|Function}\n             * @default   hlc\n             * @product   highstock\n             * @apioption plotOptions.hlc.dataGrouping.approximation\n             */\n            /**\n             * @default   close\n             * @apioption plotOptions.hlc.colorKey\n             */\n            /**\n             * The pixel width of the line/border. Defaults to `1`.\n             *\n             * @sample {highstock} stock/plotoptions/hlc-linewidth/\n             *         A greater line width\n             *\n             * @type    {number}\n             * @default 1\n             * @product highstock\n             *\n             * @public\n             */\n            lineWidth: 1,\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<b> {series.name}</b><br/>' +\n                    'High: {point.high}<br/>' +\n                    'Low: {point.low}<br/>' +\n                    'Close: {point.close}<br/>'\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: null,\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The pixel width of the line representing the HLC point.\n                     *\n                     * @type    {number}\n                     * @default 3\n                     * @product highstock\n                     */\n                    lineWidth: 3\n                }\n            },\n            /**\n             * Determines which one of  `high`, `low`, `close` values should\n             * be represented as `point.y`, which is later used to set dataLabel\n             * position and [compare](#plotOptions.series.compare).\n             *\n             * @sample {highstock} stock/plotoptions/hlc-pointvalkey/\n             *         Possible values\n             *\n             * @declare    Highcharts.OptionsHLCPointValKeyValue\n             * @type       {string}\n             * @default    close\n             * @validvalue [\"high\", \"low\", \"close\"]\n             * @product    highstock\n             * @apioption  plotOptions.hlc.pointValKey\n             */\n            /**\n             * @default   close\n             * @apioption plotOptions.hlc.colorKey\n             */\n            stickyTracking: true\n        };\n        /**\n         * A `hlc` series. If the [type](#series.hlc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.hlc\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @apioption series.hlc\n         */\n        /**\n         * An array of data points for the series. For the `hlc` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 4 or 3 values. In this case, the values correspond\n         *    to `x,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length of 3\\.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 5, 6, 7],\n         *        [1, 4, 8, 2],\n         *        [2, 3, 4, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.hlc.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        high: 4,\n         *        low: 5,\n         *        close: 2,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        high: 3,\n         *        low: 6,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number>|Array<(number|string),number,number,number>|*>}\n         * @extends   series.arearange.data\n         * @excluding y, marker\n         * @product   highstock\n         * @apioption series.hlc.data\n         */\n        /**\n         * The closing value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.hlc.data.close\n         */\n        (''); // keeps doclets above in JS file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCSeries.js', [_modules['Series/HLC/HLCPoint.js'], _modules['Series/HLC/HLCSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (HLCPoint, HLCSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var extend = U.extend, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The hlc series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.hlc\n         *\n         * @augments Highcharts.Series\n         */\n        var HLCSeries = /** @class */ (function (_super) {\n            __extends(HLCSeries, _super);\n            function HLCSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extend the path if close is not between high and low.\n             *\n             * @param {SVGPath} path the path array of the point\n             * @param {number} halfStrokeWidth\n             * @param {number} value value of the point to which the stem should be extended\n             */\n            HLCSeries.prototype.extendStem = function (path, halfStrokeWidth, value) {\n                var start = path[0];\n                var end = path[1];\n                // We don't need to worry about crisp - close value\n                // is already crisped and halfStrokeWidth should remove it.\n                if (typeof start[2] === 'number') {\n                    start[2] = Math.max(value + halfStrokeWidth, start[2]);\n                }\n                if (typeof end[2] === 'number') {\n                    end[2] = Math.min(value - halfStrokeWidth, end[2]);\n                }\n            };\n            /**\n             * Function to create SVGPath of the point based on the\n             * plot positions of this point.\n             * @private\n             */\n            HLCSeries.prototype.getPointPath = function (point, graphic) {\n                // crisp vector coordinates\n                var strokeWidth = graphic.strokeWidth(), series = point.series, crispCorr = (strokeWidth % 2) / 2, \n                // #2596:\n                crispX = Math.round(point.plotX) - crispCorr, halfWidth = Math.round(point.shapeArgs.width / 2);\n                var plotClose = point.plotClose;\n                // the vertical stem\n                var path = [\n                    ['M', crispX, Math.round(point.yBottom)],\n                    ['L', crispX, Math.round(point.plotHigh)]\n                ];\n                // close\n                if (point.close !== null) {\n                    plotClose = Math.round(point.plotClose) + crispCorr;\n                    path.push(['M', crispX, plotClose], ['L', crispX + halfWidth, plotClose]);\n                    series.extendStem(path, strokeWidth / 2, plotClose);\n                }\n                return path;\n            };\n            /**\n             * Draw single point\n             * @private\n             */\n            HLCSeries.prototype.drawSinglePoint = function (point) {\n                var series = point.series, chart = series.chart;\n                var path, graphic = point.graphic;\n                if (typeof point.plotY !== 'undefined') {\n                    // Create and/or update the graphic\n                    if (!graphic) {\n                        point.graphic = graphic = chart.renderer.path()\n                            .add(series.group);\n                    }\n                    if (!chart.styledMode) {\n                        graphic.attr(series.pointAttribs(point, (point.selected && 'select'))); // #3897\n                    }\n                    // crisp vector coordinates\n                    path = series.getPointPath(point, graphic);\n                    graphic[!graphic ? 'attr' : 'animate']({ d: path })\n                        .addClass(point.getClassName(), true);\n                }\n            };\n            /**\n             * Draw the data points\n             * @private\n             */\n            HLCSeries.prototype.drawPoints = function () {\n                this.points.forEach(this.drawSinglePoint);\n            };\n            /**\n             * @private\n             * @function Highcharts.seriesTypes.hlc#init\n             */\n            HLCSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.options.stacking = void 0; // #8817\n            };\n            /**\n             * Postprocess mapping between options and SVG attributes\n             * @private\n             */\n            HLCSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state);\n                delete attribs.fill;\n                return attribs;\n            };\n            HLCSeries.prototype.toYData = function (point) {\n                // return a plain array for speedy calculation\n                return [point.high, point.low, point.close];\n            };\n            /**\n             * Translate data points from raw values x and y to plotX and plotY\n             *\n             * @private\n             * @function Highcharts.seriesTypes.hlc#translate\n             */\n            HLCSeries.prototype.translate = function () {\n                var series = this, yAxis = series.yAxis, names = (this.pointArrayMap && this.pointArrayMap.slice()) || [], translated = names.map(function (name) {\n                    return \"plot\".concat(name.charAt(0).toUpperCase() + name.slice(1));\n                });\n                translated.push('yBottom');\n                names.push('low');\n                _super.prototype.translate.apply(series);\n                // Do the translation\n                series.points.forEach(function (point) {\n                    names.forEach(function (name, i) {\n                        var value = point[name];\n                        if (value !== null) {\n                            if (series.dataModify) {\n                                value = series.dataModify.modifyValue(value);\n                            }\n                            point[translated[i]] =\n                                yAxis.toPixels(value, true);\n                        }\n                    });\n                    // Align the tooltip to the high value to avoid covering the\n                    // point\n                    point.tooltipPos[1] =\n                        point.plotHigh + yAxis.pos - series.chart.plotTop;\n                });\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            HLCSeries.defaultOptions = merge(ColumnSeries.defaultOptions, HLCSeriesDefaults);\n            return HLCSeries;\n        }(ColumnSeries));\n        extend(HLCSeries.prototype, {\n            pointClass: HLCPoint,\n            animate: null,\n            directTouch: false,\n            pointArrayMap: ['high', 'low', 'close'],\n            pointAttrToOptions: {\n                stroke: 'color',\n                'stroke-width': 'lineWidth'\n            },\n            pointValKey: 'close'\n        });\n        SeriesRegistry.registerSeriesType('hlc', HLCSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCSeries;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var HLCSeries = SeriesRegistry.seriesTypes.hlc;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var OHLCPoint = /** @class */ (function (_super) {\n            __extends(OHLCPoint, _super);\n            function OHLCPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extend the parent method by adding up or down to the class name.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#getClassName\n             */\n            OHLCPoint.prototype.getClassName = function () {\n                return _super.prototype.getClassName.call(this) +\n                    (this.open < this.close ?\n                        ' highcharts-point-up' :\n                        ' highcharts-point-down');\n            };\n            /**\n             * Save upColor as point color (#14826).\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#resolveUpColor\n             */\n            OHLCPoint.prototype.resolveUpColor = function () {\n                if (this.open < this.close &&\n                    !this.options.color &&\n                    this.series.options.upColor) {\n                    this.color = this.series.options.upColor;\n                }\n            };\n            /**\n             * Extend the parent method by saving upColor.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#resolveColor\n             */\n            OHLCPoint.prototype.resolveColor = function () {\n                _super.prototype.resolveColor.call(this);\n                if (!this.series.is('heikinashi')) {\n                    this.resolveUpColor();\n                }\n            };\n            /**\n             * Extend the parent method by saving upColor.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#getZone\n             *\n             * @return {Highcharts.SeriesZonesOptionsObject}\n             *         The zone item.\n             */\n            OHLCPoint.prototype.getZone = function () {\n                var zone = _super.prototype.getZone.call(this);\n                this.resolveUpColor();\n                return zone;\n            };\n            /**\n             * Extend the parent method by resolving up/down colors (#15849)\n             * @private\n             **/\n            OHLCPoint.prototype.applyOptions = function () {\n                _super.prototype.applyOptions.apply(this, arguments);\n                if (this.resolveColor) {\n                    this.resolveColor();\n                }\n                return this;\n            };\n            return OHLCPoint;\n        }(HLCSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCPoint;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An OHLC chart is a style of financial chart used to describe price\n         * movements over time. It displays open, high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/ohlc\n         *         OHLC chart\n         *\n         * @extends      plotOptions.hlc\n         * @product      highstock\n         * @optionparent plotOptions.ohlc\n         */\n        var OHLCSeriesDefaults = {\n            /**\n             * @type      {Highcharts.DataGroupingApproximationValue|Function}\n             * @default   ohlc\n             * @product   highstock\n             * @apioption plotOptions.ohlc.dataGrouping.approximation\n             */\n            /**\n             * Determines which one of  `open`, `high`, `low`, `close` values should\n             * be represented as `point.y`, which is later used to set dataLabel\n             * position and [compare](#plotOptions.series.compare).\n             *\n             * @declare    Highcharts.OptionsPointValKeyValue\n             * @default    close\n             * @validvalue [\"open\", \"high\", \"low\", \"close\"]\n             * @product    highstock\n             * @apioption  plotOptions.ohlc.pointValKey\n             */\n            /**\n             * Line color for up points.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highstock\n             * @apioption plotOptions.ohlc.upColor\n             */\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<b> {series.name}</b><br/>' +\n                    'Open: {point.open}<br/>' +\n                    'High: {point.high}<br/>' +\n                    'Low: {point.low}<br/>' +\n                    'Close: {point.close}<br/>'\n            }\n        };\n        /**\n         * The parameter allows setting line series type and use OHLC indicators.\n         * Data in OHLC format is required.\n         *\n         * @sample {highstock} stock/indicators/use-ohlc-data\n         *         Use OHLC data format to plot line chart\n         *\n         * @type      {boolean}\n         * @product   highstock\n         * @apioption plotOptions.line.useOhlcData\n         */\n        /**\n         * A `ohlc` series. If the [type](#series.ohlc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ohlc\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @apioption series.ohlc\n         */\n        /**\n         * An array of data points for the series. For the `ohlc` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4\\.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 6, 5, 6, 7],\n         *        [1, 9, 4, 8, 2],\n         *        [2, 6, 3, 4, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.ohlc.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 3,\n         *        high: 4,\n         *        low: 5,\n         *        close: 2,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 4,\n         *        high: 3,\n         *        low: 6,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.arearange.data\n         * @excluding y, marker\n         * @product   highstock\n         * @apioption series.ohlc.data\n         */\n        /**\n         * The closing value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.ohlc.data.close\n         */\n        /**\n         * The opening value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.ohlc.data.open\n         */\n        ''; // adds doclets above to transpilat\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCSeries.js', [_modules['Core/Globals.js'], _modules['Series/OHLC/OHLCPoint.js'], _modules['Series/OHLC/OHLCSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, OHLCPoint, OHLCSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var composed = H.composed;\n        var HLCSeries = SeriesRegistry.seriesTypes.hlc;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onSeriesAfterSetOptions(e) {\n            var options = e.options, dataGrouping = options.dataGrouping;\n            if (dataGrouping &&\n                options.useOhlcData &&\n                options.id !== 'highcharts-navigator-series') {\n                dataGrouping.approximation = 'ohlc';\n            }\n        }\n        /**\n         * Add useOhlcData option\n         * @private\n         */\n        function onSeriesInit(eventOptions) {\n            // eslint-disable-next-line no-invalid-this\n            var series = this, options = eventOptions.options;\n            if (options.useOhlcData &&\n                options.id !== 'highcharts-navigator-series') {\n                extend(series, {\n                    pointValKey: OHLCSeries.prototype.pointValKey,\n                    // keys: ohlcProto.keys, // @todo potentially nonsense\n                    pointArrayMap: OHLCSeries.prototype.pointArrayMap,\n                    toYData: OHLCSeries.prototype.toYData\n                });\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ohlc series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ohlc\n         *\n         * @augments Highcharts.Series\n         */\n        var OHLCSeries = /** @class */ (function (_super) {\n            __extends(OHLCSeries, _super);\n            function OHLCSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            OHLCSeries.compose = function (SeriesClass) {\n                var _args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    _args[_i - 1] = arguments[_i];\n                }\n                if (pushUnique(composed, this.compose)) {\n                    addEvent(SeriesClass, 'afterSetOptions', onSeriesAfterSetOptions);\n                    addEvent(SeriesClass, 'init', onSeriesInit);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            OHLCSeries.prototype.getPointPath = function (point, graphic) {\n                var path = _super.prototype.getPointPath.call(this, point, graphic), strokeWidth = graphic.strokeWidth(), crispCorr = (strokeWidth % 2) / 2, crispX = Math.round(point.plotX) - crispCorr, halfWidth = Math.round(point.shapeArgs.width / 2);\n                var plotOpen = point.plotOpen;\n                // crisp vector coordinates\n                if (point.open !== null) {\n                    plotOpen = Math.round(point.plotOpen) + crispCorr;\n                    path.push(['M', crispX, plotOpen], ['L', crispX - halfWidth, plotOpen]);\n                    _super.prototype.extendStem.call(this, path, strokeWidth / 2, plotOpen);\n                }\n                return path;\n            };\n            /**\n             * Postprocess mapping between options and SVG attributes\n             * @private\n             */\n            OHLCSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state), options = this.options;\n                delete attribs.fill;\n                if (!point.options.color &&\n                    options.upColor &&\n                    point.open < point.close) {\n                    attribs.stroke = options.upColor;\n                }\n                return attribs;\n            };\n            OHLCSeries.prototype.toYData = function (point) {\n                // return a plain array for speedy calculation\n                return [point.open, point.high, point.low, point.close];\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            OHLCSeries.defaultOptions = merge(HLCSeries.defaultOptions, OHLCSeriesDefaults);\n            return OHLCSeries;\n        }(HLCSeries));\n        extend(OHLCSeries.prototype, {\n            pointClass: OHLCPoint,\n            pointArrayMap: ['open', 'high', 'low', 'close']\n        });\n        SeriesRegistry.registerSeriesType('ohlc', OHLCSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCSeries;\n    });\n    _registerModule(_modules, 'Series/Candlestick/CandlestickSeriesDefaults.js', [_modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (D, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var merge = U.merge;\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A candlestick chart is a style of financial chart used to describe\n         * price movements over time.\n         *\n         * @sample stock/demo/candlestick/\n         *         Candlestick chart\n         *\n         * @extends      plotOptions.ohlc\n         * @excluding    borderColor,borderRadius,borderWidth\n         * @product      highstock\n         * @optionparent plotOptions.candlestick\n         */\n        var CandlestickSeriesDefaults = {\n            /**\n             * The specific line color for up candle sticks. The default is to\n             * inherit the general `lineColor` setting.\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n             *         Candlestick line colors\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since     1.3.6\n             * @product   highstock\n             * @apioption plotOptions.candlestick.upLineColor\n             */\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The pixel width of the line/border around the\n                     * candlestick.\n                     *\n                     * @product highstock\n                     */\n                    lineWidth: 2\n                }\n            },\n            /**\n             * @type    {number|null}\n             * @product highstock\n             */\n            threshold: null,\n            /**\n             * The color of the line/border of the candlestick.\n             *\n             * In styled mode, the line stroke can be set with the\n             * `.highcharts-candlestick-series .highcahrts-point` rule.\n             *\n             * @see [upLineColor](#plotOptions.candlestick.upLineColor)\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n             *         Candlestick line colors\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #000000\n             * @product highstock\n             */\n            lineColor: \"#000000\" /* Palette.neutralColor100 */,\n            /**\n             * The pixel width of the candlestick line/border. Defaults to `1`.\n             *\n             *\n             * In styled mode, the line stroke width can be set with the\n             * `.highcharts-candlestick-series .highcahrts-point` rule.\n             *\n             * @product highstock\n             */\n            lineWidth: 1,\n            /**\n             * The fill color of the candlestick when values are rising.\n             *\n             * In styled mode, the up color can be set with the\n             * `.highcharts-candlestick-series .highcharts-point-up` rule.\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-color/\n             *         Custom colors\n             * @sample {highstock} highcharts/css/candlestick/\n             *         Colors in styled mode\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #ffffff\n             * @product highstock\n            */\n            upColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * @product highstock\n             */\n            stickyTracking: true\n        };\n        /**\n         * A `candlestick` series. If the [type](#series.candlestick.type)\n         * option is not specified, it is inherited from [chart.type](\n         * #chart.type).\n         *\n         * @type      {*}\n         * @extends   series,plotOptions.candlestick\n         * @excluding dataParser, dataURL, marker\n         * @product   highstock\n         * @apioption series.candlestick\n         */\n        /**\n         * An array of data points for the series. For the `candlestick` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 7, 2, 0, 4],\n         *        [1, 1, 4, 2, 8],\n         *        [2, 3, 3, 9, 3]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.candlestick.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 9,\n         *        high: 2,\n         *        low: 4,\n         *        close: 6,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 1,\n         *        high: 4,\n         *        low: 7,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.ohlc.data\n         * @excluding y\n         * @product   highstock\n         * @apioption series.candlestick.data\n         */\n        ''; // adds doclets above to transpilat\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return CandlestickSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Candlestick/CandlestickSeries.js', [_modules['Series/Candlestick/CandlestickSeriesDefaults.js'], _modules['Core/Defaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (CandlestickSeriesDefaults, D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defaultOptions = D.defaultOptions;\n        var _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, OHLCSeries = _a.ohlc;\n        var merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The candlestick series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.candlestick\n         *\n         * @augments Highcharts.seriesTypes.ohlc\n         */\n        var CandlestickSeries = /** @class */ (function (_super) {\n            __extends(CandlestickSeries, _super);\n            function CandlestickSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Postprocess mapping between options and SVG attributes\n             *\n             * @private\n             * @function Highcharts.seriesTypes.candlestick#pointAttribs\n             */\n            CandlestickSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = ColumnSeries.prototype.pointAttribs.call(this, point, state), options = this.options, isUp = point.open < point.close, stroke = options.lineColor || this.color, color = point.color || this.color; // (#14826)\n                attribs['stroke-width'] = options.lineWidth;\n                attribs.fill = point.options.color ||\n                    (isUp ? (options.upColor || color) : color);\n                attribs.stroke = point.options.lineColor ||\n                    (isUp ? (options.upLineColor || stroke) : stroke);\n                // Select or hover states\n                if (state) {\n                    var stateOptions = options.states[state];\n                    attribs.fill = stateOptions.color || attribs.fill;\n                    attribs.stroke = stateOptions.lineColor || attribs.stroke;\n                    attribs['stroke-width'] =\n                        stateOptions.lineWidth || attribs['stroke-width'];\n                }\n                return attribs;\n            };\n            /**\n             * Draw the data points.\n             *\n             * @private\n             * @function Highcharts.seriesTypes.candlestick#drawPoints\n             */\n            CandlestickSeries.prototype.drawPoints = function () {\n                var series = this, points = series.points, chart = series.chart, reversedYAxis = series.yAxis.reversed;\n                for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                    var point = points_1[_i];\n                    var graphic = point.graphic, plotOpen = void 0, plotClose = void 0, topBox = void 0, bottomBox = void 0, hasTopWhisker = void 0, hasBottomWhisker = void 0, crispCorr = void 0, crispX = void 0, path = void 0, halfWidth = void 0;\n                    var isNew = !graphic;\n                    if (typeof point.plotY !== 'undefined') {\n                        if (!graphic) {\n                            point.graphic = graphic = chart.renderer.path()\n                                .add(series.group);\n                        }\n                        if (!series.chart.styledMode) {\n                            graphic\n                                .attr(series.pointAttribs(point, (point.selected && 'select'))) // #3897\n                                .shadow(series.options.shadow);\n                        }\n                        // Crisp vector coordinates\n                        crispCorr = (graphic.strokeWidth() % 2) / 2;\n                        // #2596:\n                        crispX = Math.round(point.plotX) - crispCorr;\n                        plotOpen = point.plotOpen;\n                        plotClose = point.plotClose;\n                        topBox = Math.min(plotOpen, plotClose);\n                        bottomBox = Math.max(plotOpen, plotClose);\n                        halfWidth = Math.round(point.shapeArgs.width / 2);\n                        hasTopWhisker = reversedYAxis ?\n                            bottomBox !== point.yBottom :\n                            Math.round(topBox) !==\n                                Math.round(point.plotHigh);\n                        hasBottomWhisker = reversedYAxis ?\n                            Math.round(topBox) !==\n                                Math.round(point.plotHigh) :\n                            bottomBox !== point.yBottom;\n                        topBox = Math.round(topBox) + crispCorr;\n                        bottomBox = Math.round(bottomBox) + crispCorr;\n                        // Create the path. Due to a bug in Chrome 49, the path is\n                        // first instanciated with no values, then the values\n                        // pushed. For unknown reasons, instanciating the path array\n                        // with all the values would lead to a crash when updating\n                        // frequently (#5193).\n                        path = [];\n                        path.push(['M', crispX - halfWidth, bottomBox], ['L', crispX - halfWidth, topBox], ['L', crispX + halfWidth, topBox], ['L', crispX + halfWidth, bottomBox], ['Z'], // Ensure a nice rectangle #2602\n                        ['M', crispX, topBox], [\n                            'L',\n                            // #460, #2094\n                            crispX,\n                            hasTopWhisker ?\n                                Math.round(reversedYAxis ?\n                                    point.yBottom :\n                                    point.plotHigh) :\n                                topBox\n                        ], ['M', crispX, bottomBox], [\n                            'L',\n                            // #460, #2094\n                            crispX,\n                            hasBottomWhisker ?\n                                Math.round(reversedYAxis ?\n                                    point.plotHigh :\n                                    point.yBottom) :\n                                bottomBox\n                        ]);\n                        graphic[isNew ? 'attr' : 'animate']({ d: path })\n                            .addClass(point.getClassName(), true);\n                    }\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            CandlestickSeries.defaultOptions = merge(OHLCSeries.defaultOptions, defaultOptions.plotOptions, { tooltip: OHLCSeries.defaultOptions.tooltip }, CandlestickSeriesDefaults);\n            return CandlestickSeries;\n        }(OHLCSeries));\n        SeriesRegistry.registerSeriesType('candlestick', CandlestickSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return CandlestickSeries;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var FlagsPoint = /** @class */ (function (_super) {\n            __extends(FlagsPoint, _super);\n            function FlagsPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.ttBelow = false;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            FlagsPoint.prototype.isValid = function () {\n                // #9233 - Prevent from treating flags as null points (even if\n                // they have no y values defined).\n                return isNumber(this.y) || typeof this.y === 'undefined';\n            };\n            /**\n             * @private\n             */\n            FlagsPoint.prototype.hasNewShapeType = function () {\n                var shape = this.options.shape || this.series.options.shape;\n                return this.graphic && shape && shape !== this.graphic.symbolKey;\n            };\n            return FlagsPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsPoint;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Flags are used to mark events in stock charts. They can be added on the\n         * timeline, or attached to a specific series.\n         *\n         * @sample stock/demo/flags-general/\n         *         Flags on a line series\n         *\n         * @extends      plotOptions.column\n         * @excluding    animation, borderColor, borderRadius, borderWidth,\n         *               colorByPoint, cropThreshold, dataGrouping, pointPadding,\n         *               pointWidth, turboThreshold\n         * @product      highstock\n         * @optionparent plotOptions.flags\n         */\n        var FlagsSeriesDefaults = {\n            /**\n             * In case the flag is placed on a series, on what point key to place\n             * it. Line and columns have one key, `y`. In range or OHLC-type series,\n             * however, the flag can optionally be placed on the `open`, `high`,\n             * `low` or `close` key.\n             *\n             * @sample {highstock} stock/plotoptions/flags-onkey/\n             *         Range series, flag on high\n             *\n             * @type       {string}\n             * @default    y\n             * @since      4.2.2\n             * @product    highstock\n             * @validvalue [\"y\", \"open\", \"high\", \"low\", \"close\"]\n             * @apioption  plotOptions.flags.onKey\n             */\n            /**\n             * The id of the series that the flags should be drawn on. If no id\n             * is given, the flags are drawn on the x axis.\n             *\n             * @sample {highstock} stock/plotoptions/flags/\n             *         Flags on series and on x axis\n             *\n             * @type      {string}\n             * @product   highstock\n             * @apioption plotOptions.flags.onSeries\n             */\n            pointRange: 0,\n            /**\n             * Whether the flags are allowed to overlap sideways. If `false`, the\n             * flags are moved sideways using an algorithm that seeks to place every\n             * flag as close as possible to its original position.\n             *\n             * @sample {highstock} stock/plotoptions/flags-allowoverlapx\n             *         Allow sideways overlap\n             *\n             * @since 6.0.4\n             */\n            allowOverlapX: false,\n            /**\n             * The shape of the marker. Can be one of \"flag\", \"circlepin\",\n             * \"squarepin\", or an image of the format `url(/path-to-image.jpg)`.\n             * Individual shapes can also be set for each point.\n             *\n             * @sample {highstock} stock/plotoptions/flags/\n             *         Different shapes\n             *\n             * @type    {Highcharts.FlagsShapeValue}\n             * @product highstock\n             */\n            shape: 'flag',\n            /**\n             * When multiple flags in the same series fall on the same value, this\n             * number determines the vertical offset between them.\n             *\n             * @sample {highstock} stock/plotoptions/flags-stackdistance/\n             *         A greater stack distance\n             *\n             * @product highstock\n             */\n            stackDistance: 12,\n            /**\n             * Text alignment for the text inside the flag.\n             *\n             * @since      5.0.0\n             * @product    highstock\n             * @validvalue [\"left\", \"center\", \"right\"]\n             */\n            textAlign: 'center',\n            /**\n             * Specific tooltip options for flag series. Flag series tooltips are\n             * different from most other types in that a flag doesn't have a data\n             * value, so the tooltip rather displays the `text` option for each\n             * point.\n             *\n             * @extends   plotOptions.series.tooltip\n             * @excluding changeDecimals, valueDecimals, valuePrefix, valueSuffix\n             * @product   highstock\n             */\n            tooltip: {\n                pointFormat: '{point.text}'\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: null,\n            /**\n             * The text to display on each flag. This can be defined on series\n             * level, or individually for each point. Defaults to `\"A\"`.\n             *\n             * @type      {string}\n             * @default   A\n             * @product   highstock\n             * @apioption plotOptions.flags.title\n             */\n            /**\n             * The y position of the top left corner of the flag relative to either\n             * the series (if onSeries is defined), or the x axis. Defaults to\n             * `-30`.\n             *\n             * @product highstock\n             */\n            y: -30,\n            /**\n             * Whether to use HTML to render the flag texts. Using HTML allows for\n             * advanced formatting, images and reliable bi-directional text\n             * rendering. Note that exported images won't respect the HTML, and that\n             * HTML won't respect Z-index settings.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     1.3\n             * @product   highstock\n             * @apioption plotOptions.flags.useHTML\n             */\n            /**\n             * Fixed width of the flag's shape. By default, width is autocalculated\n             * according to the flag's title.\n             *\n             * @sample {highstock} stock/demo/flags-shapes/\n             *         Flags with fixed width\n             *\n             * @type      {number}\n             * @product   highstock\n             * @apioption plotOptions.flags.width\n             */\n            /**\n             * Fixed height of the flag's shape. By default, height is\n             * autocalculated according to the flag's title.\n             *\n             * @type      {number}\n             * @product   highstock\n             * @apioption plotOptions.flags.height\n             */\n            /**\n             * The fill color for the flags.\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highstock\n             */\n            fillColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * The color of the line/border of the flag.\n             *\n             * In styled mode, the stroke is set in the\n             * `.highcharts-flag-series.highcharts-point` rule.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default   #000000\n             * @product   highstock\n             * @apioption plotOptions.flags.lineColor\n             */\n            /**\n             * The pixel width of the flag's line/border.\n             *\n             * @product highstock\n             */\n            lineWidth: 1,\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The color of the line/border of the flag.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highstock\n                     */\n                    lineColor: \"#000000\" /* Palette.neutralColor100 */,\n                    /**\n                     * The fill or background color of the flag.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highstock\n                     */\n                    fillColor: \"#ccd3ff\" /* Palette.highlightColor20 */\n                }\n            },\n            /**\n             * The text styles of the flag.\n             *\n             * In styled mode, the styles are set in the\n             * `.highcharts-flag-series .highcharts-point` rule.\n             *\n             * @type    {Highcharts.CSSObject}\n             * @default {\"fontSize\": \"11px\", \"fontWeight\": \"bold\"}\n             * @product highstock\n             */\n            style: {\n                /** @ignore-option */\n                fontSize: '0.7em',\n                /** @ignore-option */\n                fontWeight: 'bold'\n            }\n        };\n        /**\n         * A `flags` series. If the [type](#series.flags.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.flags\n         * @excluding animation, borderColor, borderRadius, borderWidth, colorByPoint,\n         *            connectNulls, cropThreshold, dashStyle, dataGrouping, dataParser,\n         *            dataURL, gapSize, gapUnit, linecap, lineWidth, marker,\n         *            pointPadding, pointWidth, step, turboThreshold, useOhlcData\n         * @product   highstock\n         * @apioption series.flags\n         */\n        /**\n         * An array of data points for the series. For the `flags` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.flags.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        title: \"A\",\n         *        text: \"First event\"\n         *    }, {\n         *        x: 1,\n         *        title: \"B\",\n         *        text: \"Second event\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @excluding dataLabels, marker, name, y\n         * @product   highstock\n         * @apioption series.flags.data\n         */\n        /**\n         * The fill color of an individual flag. By default it inherits from\n         * the series color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highstock\n         * @apioption series.flags.data.fillColor\n         */\n        /**\n         * The longer text to be shown in the flag's tooltip.\n         *\n         * @type      {string}\n         * @product   highstock\n         * @apioption series.flags.data.text\n         */\n        /**\n         * The short text to be shown on the flag.\n         *\n         * @type      {string}\n         * @product   highstock\n         * @apioption series.flags.data.title\n         */\n        ''; // keeps doclets above in transpiled file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSymbols.js', [_modules['Core/Renderer/RendererRegistry.js']], function (RendererRegistry) {\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var FlagsSymbols;\n        (function (FlagsSymbols) {\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var modifiedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SVGRendererClass) {\n                if (modifiedMembers.indexOf(SVGRendererClass) === -1) {\n                    modifiedMembers.push(SVGRendererClass);\n                    var symbols = SVGRendererClass.prototype.symbols;\n                    symbols.flag = flag;\n                    createPinSymbol(symbols, 'circle');\n                    createPinSymbol(symbols, 'square');\n                }\n                var RendererClass = RendererRegistry.getRendererType();\n                // The symbol callbacks are generated on the SVGRenderer object in all\n                // browsers.\n                if (modifiedMembers.indexOf(RendererClass)) {\n                    modifiedMembers.push(RendererClass);\n                }\n            }\n            FlagsSymbols.compose = compose;\n            /**\n             * Create the flag icon with anchor.\n             * @private\n             */\n            function flag(x, y, w, h, options) {\n                var anchorX = (options && options.anchorX) || x, anchorY = (options && options.anchorY) || y;\n                // To do: unwanted any cast because symbols.circle has wrong type, it\n                // actually returns an SVGPathArray\n                var path = this.circle(anchorX - 1, anchorY - 1, 2, 2);\n                path.push(['M', anchorX, anchorY], ['L', x, y + h], ['L', x, y], ['L', x + w, y], ['L', x + w, y + h], ['L', x, y + h], ['Z']);\n                return path;\n            }\n            /**\n             * Create the circlepin and squarepin icons with anchor.\n             * @private\n             */\n            function createPinSymbol(symbols, shape) {\n                symbols[(shape + 'pin')] = function (x, y, w, h, options) {\n                    var anchorX = options && options.anchorX, anchorY = options && options.anchorY;\n                    var path;\n                    // For single-letter flags, make sure circular flags are not taller\n                    // than their width\n                    if (shape === 'circle' && h > w) {\n                        x -= Math.round((h - w) / 2);\n                        w = h;\n                    }\n                    path = (symbols[shape])(x, y, w, h);\n                    if (anchorX && anchorY) {\n                        /**\n                         * If the label is below the anchor, draw the connecting line\n                         * from the top edge of the label, otherwise start drawing from\n                         * the bottom edge\n                         */\n                        var labelX = anchorX;\n                        if (shape === 'circle') {\n                            labelX = x + w / 2;\n                        }\n                        else {\n                            var startSeg = path[0];\n                            var endSeg = path[1];\n                            if (startSeg[0] === 'M' && endSeg[0] === 'L') {\n                                labelX = (startSeg[1] + endSeg[1]) / 2;\n                            }\n                        }\n                        var labelY = (y > anchorY) ? y : y + h;\n                        path.push([\n                            'M',\n                            labelX,\n                            labelY\n                        ], [\n                            'L',\n                            anchorX,\n                            anchorY\n                        ]);\n                        path = path.concat(symbols.circle(anchorX - 1, anchorY - 1, 2, 2));\n                    }\n                    return path;\n                };\n            }\n        })(FlagsSymbols || (FlagsSymbols = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsSymbols;\n    });\n    _registerModule(_modules, 'Series/OnSeriesComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (ColumnSeries, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var columnProto = ColumnSeries.prototype;\n        var seriesProto = Series.prototype;\n        var defined = U.defined, pushUnique = U.pushUnique, stableSort = U.stableSort;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var OnSeriesComposition;\n        (function (OnSeriesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, compose)) {\n                    var seriesProto_1 = SeriesClass.prototype;\n                    seriesProto_1.getPlotBox = getPlotBox;\n                    seriesProto_1.translate = translate;\n                }\n                return SeriesClass;\n            }\n            OnSeriesComposition.compose = compose;\n            /**\n             * Override getPlotBox. If the onSeries option is valid, return the plot box\n             * of the onSeries, otherwise proceed as usual.\n             *\n             * @private\n             */\n            function getPlotBox(name) {\n                return seriesProto.getPlotBox.call((this.options.onSeries &&\n                    this.chart.get(this.options.onSeries)) || this, name);\n            }\n            OnSeriesComposition.getPlotBox = getPlotBox;\n            /**\n             * Extend the translate method by placing the point on the related series\n             *\n             * @private\n             */\n            function translate() {\n                var _a, _b;\n                columnProto.translate.apply(this);\n                var series = this, options = series.options, chart = series.chart, points = series.points, optionsOnSeries = options.onSeries, onSeries = (optionsOnSeries &&\n                    chart.get(optionsOnSeries)), step = onSeries && onSeries.options.step, onData = (onSeries && onSeries.points), inverted = chart.inverted, xAxis = series.xAxis, yAxis = series.yAxis;\n                var cursor = points.length - 1, point, lastPoint, onKey = options.onKey || 'y', i = onData && onData.length, xOffset = 0, leftPoint, lastX, rightPoint, currentDataGrouping, distanceRatio;\n                // relate to a master series\n                if (onSeries && onSeries.visible && i) {\n                    xOffset = (onSeries.pointXOffset || 0) + (onSeries.barW || 0) / 2;\n                    currentDataGrouping = onSeries.currentDataGrouping;\n                    lastX = (onData[i - 1].x +\n                        (currentDataGrouping ? currentDataGrouping.totalRange : 0)); // #2374\n                    // sort the data points\n                    stableSort(points, function (a, b) { return (a.x - b.x); });\n                    onKey = 'plot' + onKey[0].toUpperCase() + onKey.substr(1);\n                    var _loop_1 = function () {\n                        leftPoint = onData[i];\n                        point = points[cursor];\n                        point.y = leftPoint.y;\n                        if (leftPoint.x <= point.x &&\n                            typeof leftPoint[onKey] !== 'undefined') {\n                            if (point.x <= lastX) { // #803\n                                point.plotY = leftPoint[onKey];\n                                // interpolate between points, #666\n                                if (leftPoint.x < point.x &&\n                                    !step) {\n                                    rightPoint = onData[i + 1];\n                                    if (rightPoint &&\n                                        typeof rightPoint[onKey] !== 'undefined') {\n                                        // If the series is spline, calculate Y of the\n                                        // point on the bezier line. #19264\n                                        if (defined(point.plotX) &&\n                                            onSeries.is('spline')) {\n                                            leftPoint = leftPoint;\n                                            rightPoint = rightPoint;\n                                            var p0_1 = [\n                                                leftPoint.plotX || 0,\n                                                leftPoint.plotY || 0\n                                            ], p3_1 = [\n                                                rightPoint.plotX || 0,\n                                                rightPoint.plotY || 0\n                                            ], p1_1 = (((_a = leftPoint.controlPoints) === null || _a === void 0 ? void 0 : _a.high) ||\n                                                p0_1), p2_1 = (((_b = rightPoint.controlPoints) === null || _b === void 0 ? void 0 : _b.low) ||\n                                                p3_1), pixelThreshold = 0.25, maxIterations = 100, calculateCoord = function (t, key) { return (\n                                            // The parametric formula for the\n                                            // cubic Bezier curve.\n                                            Math.pow(1 - t, 3) * p0_1[key] +\n                                                3 * (1 - t) * (1 - t) * t *\n                                                    p1_1[key] + 3 * (1 - t) * t * t *\n                                                p2_1[key] + t * t * t * p3_1[key]); };\n                                            var tMin = 0, tMax = 1, t = void 0;\n                                            // Find `t` of the parametric function of\n                                            // the bezier curve for the given `plotX`.\n                                            for (var i_1 = 0; i_1 < maxIterations; i_1++) {\n                                                var tMid = (tMin + tMax) / 2;\n                                                var xMid = calculateCoord(tMid, 0);\n                                                if (xMid === null) {\n                                                    break;\n                                                }\n                                                if (Math.abs(xMid - point.plotX) < pixelThreshold) {\n                                                    t = tMid;\n                                                    break;\n                                                }\n                                                if (xMid < point.plotX) {\n                                                    tMin = tMid;\n                                                }\n                                                else {\n                                                    tMax = tMid;\n                                                }\n                                            }\n                                            if (defined(t)) {\n                                                point.plotY =\n                                                    calculateCoord(t, 1);\n                                                point.y =\n                                                    yAxis.toValue(point.plotY, true);\n                                            }\n                                        }\n                                        else {\n                                            // the distance ratio, between 0 and 1\n                                            distanceRatio =\n                                                (point.x - leftPoint.x) /\n                                                    (rightPoint.x - leftPoint.x);\n                                            point.plotY +=\n                                                distanceRatio *\n                                                    // the plotY distance\n                                                    (rightPoint[onKey] - leftPoint[onKey]);\n                                            point.y +=\n                                                distanceRatio *\n                                                    (rightPoint.y - leftPoint.y);\n                                        }\n                                    }\n                                }\n                            }\n                            cursor--;\n                            i++; // check again for points in the same x position\n                            if (cursor < 0) {\n                                return \"break\";\n                            }\n                        }\n                    };\n                    while (i-- && points[cursor]) {\n                        var state_1 = _loop_1();\n                        if (state_1 === \"break\")\n                            break;\n                    }\n                }\n                // Add plotY position and handle stacking\n                points.forEach(function (point, i) {\n                    var stackIndex;\n                    point.plotX += xOffset; // #2049\n                    // Undefined plotY means the point is either on axis, outside series\n                    // range or hidden series. If the series is outside the range of the\n                    // x axis it should fall through with an undefined plotY, but then\n                    // we must remove the shapeArgs (#847). For inverted charts, we need\n                    // to calculate position anyway, because series.invertGroups is not\n                    // defined\n                    if (typeof point.plotY === 'undefined' || inverted) {\n                        if (point.plotX >= 0 &&\n                            point.plotX <= xAxis.len) {\n                            // We're inside xAxis range\n                            if (inverted) {\n                                point.plotY = xAxis.translate(point.x, 0, 1, 0, 1);\n                                point.plotX = defined(point.y) ?\n                                    yAxis.translate(point.y, 0, 0, 0, 1) :\n                                    0;\n                            }\n                            else {\n                                point.plotY = (xAxis.opposite ? 0 : series.yAxis.len) +\n                                    xAxis.offset; // For the windbarb demo\n                            }\n                        }\n                        else {\n                            point.shapeArgs = {}; // 847\n                        }\n                    }\n                    // if multiple flags appear at the same x, order them into a stack\n                    lastPoint = points[i - 1];\n                    if (lastPoint && lastPoint.plotX === point.plotX) {\n                        if (typeof lastPoint.stackIndex === 'undefined') {\n                            lastPoint.stackIndex = 0;\n                        }\n                        stackIndex = lastPoint.stackIndex + 1;\n                    }\n                    point.stackIndex = stackIndex; // #3639\n                });\n                this.onSeries = onSeries;\n            }\n            OnSeriesComposition.translate = translate;\n        })(OnSeriesComposition || (OnSeriesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OnSeriesComposition;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSeries.js', [_modules['Series/Flags/FlagsPoint.js'], _modules['Series/Flags/FlagsSeriesDefaults.js'], _modules['Series/Flags/FlagsSymbols.js'], _modules['Core/Globals.js'], _modules['Series/OnSeriesComposition.js'], _modules['Core/Renderer/RendererUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (FlagsPoint, FlagsSeriesDefaults, FlagsSymbols, H, OnSeriesComposition, R, SeriesRegistry, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var noop = H.noop;\n        var distribute = R.distribute;\n        var Series = SeriesRegistry.series, ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, merge = U.merge, objectEach = U.objectEach, wrap = U.wrap;\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * The Flags series.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.flags\n         *\n         * @augments Highcharts.Series\n         */\n        var FlagsSeries = /** @class */ (function (_super) {\n            __extends(FlagsSeries, _super);\n            function FlagsSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Disable animation, but keep clipping (#8546).\n             * @private\n             */\n            FlagsSeries.prototype.animate = function (init) {\n                if (init) {\n                    this.setClip();\n                }\n            };\n            /**\n             * Draw the markers.\n             * @private\n             */\n            FlagsSeries.prototype.drawPoints = function () {\n                var series = this, points = series.points, chart = series.chart, renderer = chart.renderer, inverted = chart.inverted, options = series.options, optionsY = options.y, yAxis = series.yAxis, boxesMap = {}, boxes = [];\n                var plotX, plotY, shape, i, point, graphic, stackIndex, anchorY, attribs, outsideRight, centered;\n                i = points.length;\n                while (i--) {\n                    point = points[i];\n                    outsideRight =\n                        (inverted ? point.plotY : point.plotX) >\n                            series.xAxis.len;\n                    plotX = point.plotX;\n                    stackIndex = point.stackIndex;\n                    shape = point.options.shape || options.shape;\n                    plotY = point.plotY;\n                    if (typeof plotY !== 'undefined') {\n                        plotY = point.plotY + optionsY -\n                            (typeof stackIndex !== 'undefined' &&\n                                (stackIndex * options.stackDistance));\n                    }\n                    // skip connectors for higher level stacked points\n                    point.anchorX = stackIndex ? void 0 : point.plotX;\n                    anchorY = stackIndex ? void 0 : point.plotY;\n                    centered = shape !== 'flag';\n                    graphic = point.graphic;\n                    // Only draw the point if y is defined and the flag is within\n                    // the visible area\n                    if (typeof plotY !== 'undefined' &&\n                        plotX >= 0 &&\n                        !outsideRight) {\n                        // #15384\n                        if (graphic && point.hasNewShapeType()) {\n                            graphic = graphic.destroy();\n                        }\n                        // Create the flag\n                        if (!graphic) {\n                            graphic = point.graphic = renderer.label('', null, null, shape, null, null, options.useHTML)\n                                .addClass('highcharts-point')\n                                .add(series.markerGroup);\n                            // Add reference to the point for tracker (#6303)\n                            if (point.graphic.div) {\n                                point.graphic.div.point = point;\n                            }\n                            graphic.isNew = true;\n                        }\n                        graphic.attr({\n                            align: centered ? 'center' : 'left',\n                            width: options.width,\n                            height: options.height,\n                            'text-align': options.textAlign\n                        });\n                        if (!chart.styledMode) {\n                            graphic\n                                .attr(series.pointAttribs(point))\n                                .css(merge(options.style, point.style))\n                                .shadow(options.shadow);\n                        }\n                        if (plotX > 0) { // #3119\n                            plotX -= graphic.strokeWidth() % 2; // #4285\n                        }\n                        // Plant the flag\n                        attribs = {\n                            y: plotY,\n                            anchorY: anchorY\n                        };\n                        if (options.allowOverlapX) {\n                            attribs.x = plotX;\n                            attribs.anchorX = point.anchorX;\n                        }\n                        graphic.attr({\n                            text: point.options.title || options.title || 'A'\n                        })[graphic.isNew ? 'attr' : 'animate'](attribs);\n                        // Rig for the distribute function\n                        if (!options.allowOverlapX) {\n                            if (!boxesMap[point.plotX]) {\n                                boxesMap[point.plotX] = {\n                                    align: centered ? 0.5 : 0,\n                                    size: graphic.width || 0,\n                                    target: plotX,\n                                    anchorX: plotX\n                                };\n                            }\n                            else {\n                                boxesMap[point.plotX].size = Math.max(boxesMap[point.plotX].size, graphic.width || 0);\n                            }\n                        }\n                        // Set the tooltip anchor position\n                        point.tooltipPos = [\n                            plotX,\n                            plotY + yAxis.pos - chart.plotTop\n                        ]; // #6327\n                    }\n                    else if (graphic) {\n                        point.graphic = graphic.destroy();\n                    }\n                }\n                // Handle X-dimension overlapping\n                if (!options.allowOverlapX) {\n                    var maxDistance_1 = 100;\n                    objectEach(boxesMap, function (box) {\n                        box.plotX = box.anchorX;\n                        boxes.push(box);\n                        maxDistance_1 = Math.max(box.size, maxDistance_1);\n                    });\n                    // If necessary (for overlapping or long labels)  distribute it\n                    // depending on the label width or a hardcoded value, #16041.\n                    distribute(boxes, inverted ? yAxis.len : this.xAxis.len, maxDistance_1);\n                    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                        var point_1 = points_1[_i];\n                        var plotX_1 = point_1.plotX, graphic_1 = point_1.graphic, box = graphic_1 && boxesMap[plotX_1];\n                        if (box && graphic_1) {\n                            // Hide flag when its box position is not specified\n                            // (#8573, #9299)\n                            if (!defined(box.pos)) {\n                                graphic_1.hide().isNew = true;\n                            }\n                            else {\n                                graphic_1[graphic_1.isNew ? 'attr' : 'animate']({\n                                    x: box.pos + (box.align || 0) * box.size,\n                                    anchorX: point_1.anchorX\n                                }).show().isNew = false;\n                            }\n                        }\n                    }\n                }\n                // Can be a mix of SVG and HTML and we need events for both (#6303)\n                if (options.useHTML && series.markerGroup) {\n                    wrap(series.markerGroup, 'on', function (proceed) {\n                        return SVGElement.prototype.on.apply(\n                        // for HTML\n                        // eslint-disable-next-line no-invalid-this\n                        proceed.apply(this, [].slice.call(arguments, 1)), \n                        // and for SVG\n                        [].slice.call(arguments, 1));\n                    });\n                }\n            };\n            /**\n             * Extend the column trackers with listeners to expand and contract\n             * stacks.\n             * @private\n             */\n            FlagsSeries.prototype.drawTracker = function () {\n                var series = this, points = series.points;\n                _super.prototype.drawTracker.call(this);\n                var _loop_1 = function (point) {\n                    var graphic = point.graphic;\n                    if (graphic) {\n                        if (point.unbindMouseOver) {\n                            point.unbindMouseOver();\n                        }\n                        point.unbindMouseOver = addEvent(graphic.element, 'mouseover', function () {\n                            // Raise this point\n                            if (point.stackIndex > 0 &&\n                                !point.raised) {\n                                point._y = graphic.y;\n                                graphic.attr({\n                                    y: point._y - 8\n                                });\n                                point.raised = true;\n                            }\n                            // Revert other raised points\n                            for (var _i = 0, points_3 = points; _i < points_3.length; _i++) {\n                                var otherPoint = points_3[_i];\n                                if (otherPoint !== point &&\n                                    otherPoint.raised &&\n                                    otherPoint.graphic) {\n                                    otherPoint.graphic.attr({\n                                        y: otherPoint._y\n                                    });\n                                    otherPoint.raised = false;\n                                }\n                            }\n                        });\n                    }\n                };\n                /* *\n                * Bring each stacked flag up on mouse over, this allows readability\n                * of vertically stacked elements as well as tight points on the x\n                * axis. #1924.\n                */\n                for (var _i = 0, points_2 = points; _i < points_2.length; _i++) {\n                    var point = points_2[_i];\n                    _loop_1(point);\n                }\n            };\n            /**\n             * Get presentational attributes\n             * @private\n             */\n            FlagsSeries.prototype.pointAttribs = function (point, state) {\n                var options = this.options, color = (point && point.color) || this.color;\n                var lineColor = options.lineColor, lineWidth = (point && point.lineWidth), fill = (point && point.fillColor) || options.fillColor;\n                if (state) {\n                    fill = options.states[state].fillColor;\n                    lineColor = options.states[state].lineColor;\n                    lineWidth = options.states[state].lineWidth;\n                }\n                return {\n                    fill: fill || color,\n                    stroke: lineColor || color,\n                    'stroke-width': lineWidth || options.lineWidth || 0\n                };\n            };\n            /**\n             * @private\n             */\n            FlagsSeries.prototype.setClip = function () {\n                Series.prototype.setClip.apply(this, arguments);\n                if (this.options.clip !== false &&\n                    this.sharedClipKey &&\n                    this.markerGroup) {\n                    this.markerGroup.clip(this.chart.sharedClips[this.sharedClipKey]);\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            FlagsSeries.compose = FlagsSymbols.compose;\n            FlagsSeries.defaultOptions = merge(ColumnSeries.defaultOptions, FlagsSeriesDefaults);\n            return FlagsSeries;\n        }(ColumnSeries));\n        OnSeriesComposition.compose(FlagsSeries);\n        extend(FlagsSeries.prototype, {\n            allowDG: false,\n            forceCrop: true,\n            invertible: false,\n            noSharedTooltip: true,\n            pointClass: FlagsPoint,\n            sorted: false,\n            takeOrdinalPosition: false,\n            trackerGroups: ['markerGroup'],\n            buildKDTree: noop,\n            /**\n             * Inherit the initialization from base Series.\n             * @private\n             */\n            init: Series.prototype.init\n        });\n        SeriesRegistry.registerSeriesType('flags', FlagsSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"circlepin\"|\"flag\"|\"squarepin\"} Highcharts.FlagsShapeValue\n         */\n        ''; // detach doclets above\n\n        return FlagsSeries;\n    });\n    _registerModule(_modules, 'Core/Chart/StockChart.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Templating.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (Chart, F, D, H, NavigatorDefaults, RangeSelectorDefaults, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var format = F.format;\n        var getOptions = D.getOptions;\n        var composed = H.composed;\n        var addEvent = U.addEvent, clamp = U.clamp, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, isString = U.isString, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get stock-specific default axis options.\n         *\n         * @private\n         * @function getDefaultAxisOptions\n         */\n        function getDefaultAxisOptions(coll, options, defaultOptions) {\n            var _a, _b, _c, _d;\n            if (coll === 'xAxis') {\n                return {\n                    minPadding: 0,\n                    maxPadding: 0,\n                    overscroll: 0,\n                    ordinal: true\n                };\n            }\n            if (coll === 'yAxis') {\n                return {\n                    labels: {\n                        y: -2\n                    },\n                    opposite: (_b = (_a = defaultOptions.opposite) !== null && _a !== void 0 ? _a : options.opposite) !== null && _b !== void 0 ? _b : true,\n                    showLastLabel: !!(\n                    // #6104, show last label by default for category axes\n                    options.categories ||\n                        options.type === 'category'),\n                    title: {\n                        text: ((_c = defaultOptions.title) === null || _c === void 0 ? void 0 : _c.text) !== 'Values' ?\n                            (_d = defaultOptions.title) === null || _d === void 0 ? void 0 : _d.text :\n                            null\n                    }\n                };\n            }\n            return {};\n        }\n        /**\n         * Get stock-specific forced axis options.\n         *\n         * @private\n         * @function getForcedAxisOptions\n         */\n        function getForcedAxisOptions(type, chartOptions) {\n            if (type === 'xAxis') {\n                // Always disable startOnTick:true on the main axis when the navigator\n                // is enabled (#1090)\n                var navigatorEnabled = pick(chartOptions.navigator && chartOptions.navigator.enabled, NavigatorDefaults.enabled, true);\n                var axisOptions = {\n                    type: 'datetime',\n                    categories: void 0\n                };\n                if (navigatorEnabled) {\n                    axisOptions.startOnTick = false;\n                    axisOptions.endOnTick = false;\n                }\n                return axisOptions;\n            }\n            return {};\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Stock-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n         *\n         * @requires modules/stock\n         *\n         * @class\n         * @name Highcharts.StockChart\n         * @extends Highcharts.Chart\n         */\n        var StockChart = /** @class */ (function (_super) {\n            __extends(StockChart, _super);\n            function StockChart() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the chart. The constructor's arguments are passed on\n             * directly.\n             *\n             * @function Highcharts.StockChart#init\n             *\n             * @param {Highcharts.Options} userOptions\n             *        Custom options.\n             *\n             * @param {Function} [callback]\n             *        Function to run when the chart has loaded and and all external\n             *        images are loaded.\n             *\n             *\n             * @emits Highcharts.StockChart#event:init\n             * @emits Highcharts.StockChart#event:afterInit\n             */\n            StockChart.prototype.init = function (userOptions, callback) {\n                var defaultOptions = getOptions(), xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis, \n                // Always disable startOnTick:true on the main axis when the\n                // navigator is enabled (#1090)\n                navigatorEnabled = pick(userOptions.navigator && userOptions.navigator.enabled, NavigatorDefaults.enabled, true);\n                // Avoid doing these twice\n                userOptions.xAxis = userOptions.yAxis = void 0;\n                var options = merge({\n                    chart: {\n                        panning: {\n                            enabled: true,\n                            type: 'x'\n                        },\n                        zooming: {\n                            pinchType: 'x',\n                            mouseWheel: {\n                                type: 'x'\n                            }\n                        }\n                    },\n                    navigator: {\n                        enabled: navigatorEnabled\n                    },\n                    scrollbar: {\n                        // #4988 - check if setOptions was called\n                        enabled: pick(ScrollbarDefaults.enabled, true)\n                    },\n                    rangeSelector: {\n                        // #4988 - check if setOptions was called\n                        enabled: pick(RangeSelectorDefaults.rangeSelector.enabled, true)\n                    },\n                    title: {\n                        text: null\n                    },\n                    tooltip: {\n                        split: pick(defaultOptions.tooltip && defaultOptions.tooltip.split, true),\n                        crosshairs: true\n                    },\n                    legend: {\n                        enabled: false\n                    }\n                }, userOptions, // User's options\n                {\n                    isStock: true // Internal flag\n                });\n                userOptions.xAxis = xAxisOptions;\n                userOptions.yAxis = yAxisOptions;\n                // Apply X axis options to both single and multi y axes\n                options.xAxis = splat(userOptions.xAxis || {}).map(function (xAxisOptions, i) { return merge(getDefaultAxisOptions('xAxis', xAxisOptions, defaultOptions.xAxis), \n                // #7690\n                xAxisOptions, // User options\n                getForcedAxisOptions('xAxis', userOptions)); });\n                // Apply Y axis options to both single and multi y axes\n                options.yAxis = splat(userOptions.yAxis || {}).map(function (yAxisOptions, i) { return merge(getDefaultAxisOptions('yAxis', yAxisOptions, defaultOptions.yAxis), \n                // #7690\n                yAxisOptions // User options\n                ); });\n                _super.prototype.init.call(this, options, callback);\n            };\n            /**\n             * Factory for creating different axis types.\n             * Extended to add stock defaults.\n             *\n             * @private\n             * @function Highcharts.StockChart#createAxis\n             * @param {string} coll\n             * An axis type.\n             * @param {Chart.CreateAxisOptionsObject} options\n             * The axis creation options.\n             */\n            StockChart.prototype.createAxis = function (coll, options) {\n                options.axis = merge(getDefaultAxisOptions(coll, options.axis, getOptions()[coll]), options.axis, getForcedAxisOptions(coll, this.userOptions));\n                return _super.prototype.createAxis.call(this, coll, options);\n            };\n            return StockChart;\n        }(Chart));\n        addEvent(Chart, 'update', function (e) {\n            var chart = this, options = e.options;\n            // Use case: enabling scrollbar from a disabled state.\n            // Scrollbar needs to be initialized from a controller, Navigator in this\n            // case (#6615)\n            if ('scrollbar' in options && chart.navigator) {\n                merge(true, chart.options.scrollbar, options.scrollbar);\n                chart.navigator.update({});\n                delete options.scrollbar;\n            }\n        });\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        (function (StockChart) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(AxisClass, SeriesClass, SVGRendererClass) {\n                if (pushUnique(composed, compose)) {\n                    addEvent(AxisClass, 'afterDrawCrosshair', onAxisAfterDrawCrosshair);\n                    addEvent(AxisClass, 'afterHideCrosshair', onAxisAfterHideCrosshair);\n                    addEvent(AxisClass, 'autoLabelAlign', onAxisAutoLabelAlign);\n                    addEvent(AxisClass, 'destroy', onAxisDestroy);\n                    addEvent(AxisClass, 'getPlotLinePath', onAxisGetPlotLinePath);\n                    SeriesClass.prototype.forceCropping = seriesForceCropping;\n                    addEvent(SeriesClass, 'setOptions', onSeriesSetOptions);\n                    SVGRendererClass.prototype.crispPolyLine = svgRendererCrispPolyLine;\n                }\n            }\n            StockChart.compose = compose;\n            /**\n             * Extend crosshairs to also draw the label.\n             * @private\n             */\n            function onAxisAfterDrawCrosshair(event) {\n                var axis = this;\n                // Check if the label has to be drawn\n                if (!axis.crosshair ||\n                    !axis.crosshair.label ||\n                    !axis.crosshair.label.enabled ||\n                    !axis.cross ||\n                    !isNumber(axis.min) ||\n                    !isNumber(axis.max)) {\n                    return;\n                }\n                var chart = axis.chart, log = axis.logarithmic, options = axis.crosshair.label, // the label's options\n                horiz = axis.horiz, // axis orientation\n                opposite = axis.opposite, // axis position\n                left = axis.left, // left position\n                top = axis.top, // top position\n                width = axis.width, tickInside = axis.options.tickPosition === 'inside', snap = axis.crosshair.snap !== false, e = event.e || (axis.cross && axis.cross.e), point = event.point;\n                var crossLabel = axis.crossLabel, // the svgElement\n                posx, posy, formatOption = options.format, formatFormat = '', limit, offset = 0, \n                // Use last available event (#5287)\n                min = axis.min, max = axis.max;\n                if (log) {\n                    min = log.lin2log(axis.min);\n                    max = log.lin2log(axis.max);\n                }\n                var align = (horiz ? 'center' : opposite ?\n                    (axis.labelAlign === 'right' ? 'right' : 'left') :\n                    (axis.labelAlign === 'left' ? 'left' : 'center'));\n                // If the label does not exist yet, create it.\n                if (!crossLabel) {\n                    crossLabel = axis.crossLabel = chart.renderer\n                        .label('', 0, void 0, options.shape || 'callout')\n                        .addClass('highcharts-crosshair-label highcharts-color-' + (point && point.series ?\n                        point.series.colorIndex :\n                        axis.series[0] && this.series[0].colorIndex))\n                        .attr({\n                        align: options.align || align,\n                        padding: pick(options.padding, 8),\n                        r: pick(options.borderRadius, 3),\n                        zIndex: 2\n                    })\n                        .add(axis.labelGroup);\n                    // Presentational\n                    if (!chart.styledMode) {\n                        crossLabel\n                            .attr({\n                            fill: options.backgroundColor ||\n                                ( // #14888\n                                point && point.series &&\n                                    point.series.color) ||\n                                \"#666666\" /* Palette.neutralColor60 */,\n                            stroke: options.borderColor || '',\n                            'stroke-width': options.borderWidth || 0\n                        })\n                            .css(extend({\n                            color: \"#ffffff\" /* Palette.backgroundColor */,\n                            fontWeight: 'normal',\n                            fontSize: '0.7em',\n                            textAlign: 'center'\n                        }, options.style || {}));\n                    }\n                }\n                if (horiz) {\n                    posx = snap ? (point.plotX || 0) + left : e.chartX;\n                    posy = top + (opposite ? 0 : axis.height);\n                }\n                else {\n                    posx = left + axis.offset + (opposite ? width : 0);\n                    posy = snap ? (point.plotY || 0) + top : e.chartY;\n                }\n                if (!formatOption && !options.formatter) {\n                    if (axis.dateTime) {\n                        formatFormat = '%b %d, %Y';\n                    }\n                    formatOption =\n                        '{value' + (formatFormat ? ':' + formatFormat : '') + '}';\n                }\n                // Show the label\n                var value = snap ?\n                    (axis.isXAxis ? point.x : point.y) :\n                    axis.toValue(horiz ? e.chartX : e.chartY);\n                // Crosshair should be rendered within Axis range (#7219) and the point\n                // of currentPriceIndicator should be inside the plot area (#14879).\n                var isInside = point && point.series ?\n                    point.series.isPointInside(point) :\n                    (isNumber(value) && value > min && value < max);\n                var text = '';\n                if (formatOption) {\n                    text = format(formatOption, { value: value }, chart);\n                }\n                else if (options.formatter && isNumber(value)) {\n                    text = options.formatter.call(axis, value);\n                }\n                crossLabel.attr({\n                    text: text,\n                    x: posx,\n                    y: posy,\n                    visibility: isInside ? 'inherit' : 'hidden'\n                });\n                var crossBox = crossLabel.getBBox();\n                // Now it is placed we can correct its position\n                if (isNumber(crossLabel.x) && !horiz && !opposite) {\n                    posx = crossLabel.x - (crossBox.width / 2);\n                }\n                if (isNumber(crossLabel.y)) {\n                    if (horiz) {\n                        if ((tickInside && !opposite) || (!tickInside && opposite)) {\n                            posy = crossLabel.y - crossBox.height;\n                        }\n                    }\n                    else {\n                        posy = crossLabel.y - (crossBox.height / 2);\n                    }\n                }\n                // Check the edges\n                if (horiz) {\n                    limit = {\n                        left: left - crossBox.x,\n                        right: left + axis.width - crossBox.x\n                    };\n                }\n                else {\n                    limit = {\n                        left: axis.labelAlign === 'left' ? left : 0,\n                        right: axis.labelAlign === 'right' ?\n                            left + axis.width :\n                            chart.chartWidth\n                    };\n                }\n                var translateX = crossLabel.translateX || 0;\n                // Left edge\n                if (translateX < limit.left) {\n                    offset = limit.left - translateX;\n                }\n                // Right edge\n                if (translateX + crossBox.width >= limit.right) {\n                    offset = -(translateX + crossBox.width - limit.right);\n                }\n                // Show the crosslabel\n                crossLabel.attr({\n                    x: posx + offset,\n                    y: posy,\n                    // First set x and y, then anchorX and anchorY, when box is actually\n                    // calculated, #5702\n                    anchorX: horiz ?\n                        posx :\n                        (axis.opposite ? 0 : chart.chartWidth),\n                    anchorY: horiz ?\n                        (axis.opposite ? chart.chartHeight : 0) :\n                        posy + crossBox.height / 2\n                });\n            }\n            /**\n             * Wrapper to hide the label.\n             * @private\n             */\n            function onAxisAfterHideCrosshair() {\n                var axis = this;\n                if (axis.crossLabel) {\n                    axis.crossLabel = axis.crossLabel.hide();\n                }\n            }\n            /**\n             * Override the automatic label alignment so that the first Y axis' labels\n             * are drawn on top of the grid line, and subsequent axes are drawn outside.\n             * @private\n             */\n            function onAxisAutoLabelAlign(e) {\n                var axis = this, chart = axis.chart, options = axis.options, panes = chart._labelPanes = chart._labelPanes || {}, labelOptions = options.labels;\n                if (chart.options.isStock && axis.coll === 'yAxis') {\n                    var key = options.top + ',' + options.height;\n                    // Do it only for the first Y axis of each pane\n                    if (!panes[key] && labelOptions.enabled) {\n                        if (labelOptions.distance === 15 && // default\n                            axis.side === 1) {\n                            labelOptions.distance = 0;\n                        }\n                        if (typeof labelOptions.align === 'undefined') {\n                            labelOptions.align = 'right';\n                        }\n                        panes[key] = axis;\n                        e.align = 'right';\n                        e.preventDefault();\n                    }\n                }\n            }\n            /**\n             * Clear axis from label panes. (#6071)\n             * @private\n             */\n            function onAxisDestroy() {\n                var axis = this, chart = axis.chart, key = (axis.options &&\n                    (axis.options.top + ',' + axis.options.height));\n                if (key && chart._labelPanes && chart._labelPanes[key] === axis) {\n                    delete chart._labelPanes[key];\n                }\n            }\n            /**\n             * Override getPlotLinePath to allow for multipane charts.\n             * @private\n             */\n            function onAxisGetPlotLinePath(e) {\n                var axis = this, series = (axis.isLinked && !axis.series && axis.linkedParent ?\n                    axis.linkedParent.series :\n                    axis.series), chart = axis.chart, renderer = chart.renderer, axisLeft = axis.left, axisTop = axis.top, result = [], translatedValue = e.translatedValue, value = e.value, force = e.force, \n                /**\n                 * Return the other axis based on either the axis option or on\n                 * related series.\n                 * @private\n                 */\n                getAxis = function (coll) {\n                    var otherColl = coll === 'xAxis' ? 'yAxis' : 'xAxis', opt = axis.options[otherColl];\n                    // Other axis indexed by number\n                    if (isNumber(opt)) {\n                        return [chart[otherColl][opt]];\n                    }\n                    // Other axis indexed by id (like navigator)\n                    if (isString(opt)) {\n                        return [chart.get(opt)];\n                    }\n                    // Auto detect based on existing series\n                    return series.map(function (s) { return s[otherColl]; });\n                };\n                var x1, y1, x2, y2, axes = [], // #3416 need a default array\n                axes2, uniqueAxes, transVal;\n                if ( // For stock chart, by default render paths across the panes\n                // except the case when `acrossPanes` is disabled by user (#6644)\n                (chart.options.isStock && e.acrossPanes !== false) &&\n                    // Ignore in case of colorAxis or zAxis. #3360, #3524, #6720\n                    axis.coll === 'xAxis' || axis.coll === 'yAxis') {\n                    e.preventDefault();\n                    // Get the related axes based on series\n                    axes = getAxis(axis.coll);\n                    // Get the related axes based options.*Axis setting #2810\n                    axes2 = (axis.isXAxis ? chart.yAxis : chart.xAxis);\n                    for (var _i = 0, axes2_1 = axes2; _i < axes2_1.length; _i++) {\n                        var A = axes2_1[_i];\n                        if (defined(A.options.id) ?\n                            A.options.id.indexOf('navigator') === -1 :\n                            true) {\n                            var a = (A.isXAxis ? 'yAxis' : 'xAxis'), rax = (defined(A.options[a]) ?\n                                chart[a][A.options[a]] :\n                                chart[a][0]);\n                            if (axis === rax) {\n                                axes.push(A);\n                            }\n                        }\n                    }\n                    // Remove duplicates in the axes array. If there are no axes in the\n                    // axes array, we are adding an axis without data, so we need to\n                    // populate this with grid lines (#2796).\n                    uniqueAxes = axes.length ?\n                        [] :\n                        [axis.isXAxis ? chart.yAxis[0] : chart.xAxis[0]]; // #3742\n                    var _loop_1 = function (axis2) {\n                        if (uniqueAxes.indexOf(axis2) === -1 &&\n                            // Do not draw on axis which overlap completely. #5424\n                            !find(uniqueAxes, function (unique) { return (unique.pos === axis2.pos &&\n                                unique.len === axis2.len); })) {\n                            uniqueAxes.push(axis2);\n                        }\n                    };\n                    for (var _a = 0, axes_1 = axes; _a < axes_1.length; _a++) {\n                        var axis2 = axes_1[_a];\n                        _loop_1(axis2);\n                    }\n                    transVal = pick(translatedValue, axis.translate(value || 0, void 0, void 0, e.old));\n                    if (isNumber(transVal)) {\n                        if (axis.horiz) {\n                            for (var _b = 0, uniqueAxes_1 = uniqueAxes; _b < uniqueAxes_1.length; _b++) {\n                                var axis2 = uniqueAxes_1[_b];\n                                var skip = void 0;\n                                y1 = axis2.pos;\n                                y2 = y1 + axis2.len;\n                                x1 = x2 = Math.round(transVal + axis.transB);\n                                // outside plot area\n                                if (force !== 'pass' &&\n                                    (x1 < axisLeft || x1 > axisLeft + axis.width)) {\n                                    if (force) {\n                                        x1 = x2 = clamp(x1, axisLeft, axisLeft + axis.width);\n                                    }\n                                    else {\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    result.push(['M', x1, y1], ['L', x2, y2]);\n                                }\n                            }\n                        }\n                        else {\n                            for (var _c = 0, uniqueAxes_2 = uniqueAxes; _c < uniqueAxes_2.length; _c++) {\n                                var axis2 = uniqueAxes_2[_c];\n                                var skip = void 0;\n                                x1 = axis2.pos;\n                                x2 = x1 + axis2.len;\n                                y1 = y2 = Math.round(axisTop + axis.height - transVal);\n                                // outside plot area\n                                if (force !== 'pass' &&\n                                    (y1 < axisTop || y1 > axisTop + axis.height)) {\n                                    if (force) {\n                                        y1 = y2 = clamp(y1, axisTop, axisTop + axis.height);\n                                    }\n                                    else {\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    result.push(['M', x1, y1], ['L', x2, y2]);\n                                }\n                            }\n                        }\n                    }\n                    e.path = result.length > 0 ?\n                        renderer.crispPolyLine(result, e.lineWidth || 1) :\n                        // #3557 getPlotLinePath in regular Highcharts also returns null\n                        void 0;\n                }\n            }\n            /**\n             * Handle som Stock-specific series defaults, override the plotOptions\n             * before series options are handled.\n             * @private\n             */\n            function onSeriesSetOptions(e) {\n                var series = this;\n                if (series.chart.options.isStock) {\n                    var overrides = void 0;\n                    if (series.is('column') || series.is('columnrange')) {\n                        overrides = {\n                            borderWidth: 0,\n                            shadow: false\n                        };\n                    }\n                    else if (!series.is('scatter') && !series.is('sma')) {\n                        overrides = {\n                            marker: {\n                                enabled: false,\n                                radius: 2\n                            }\n                        };\n                    }\n                    if (overrides) {\n                        e.plotOptions[series.type] = merge(e.plotOptions[series.type], overrides);\n                    }\n                }\n            }\n            /**\n             * Based on the data grouping options decides whether\n             * the data should be cropped while processing.\n             *\n             * @ignore\n             * @function Highcharts.Series#forceCropping\n             */\n            function seriesForceCropping() {\n                var series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = (series.allowDG !== false &&\n                    dataGroupingOptions &&\n                    pick(dataGroupingOptions.enabled, chart.options.isStock));\n                return groupingEnabled;\n            }\n            /* eslint-disable jsdoc/check-param-names */\n            /**\n             * Factory function for creating new stock charts. Creates a new\n             * {@link Highcharts.StockChart|StockChart} object with different default\n             * options than the basic Chart.\n             *\n             * @example\n             * let chart = Highcharts.stockChart('container', {\n             *     series: [{\n             *         data: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n             *         pointInterval: 24 * 60 * 60 * 1000\n             *     }]\n             * });\n             *\n             * @function Highcharts.stockChart\n             *\n             * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n             *        The DOM element to render to, or its id.\n             *\n             * @param {Highcharts.Options} options\n             *        The chart options structure as described in the\n             *        [options reference](https://api.highcharts.com/highstock).\n             *\n             * @param {Highcharts.ChartCallbackFunction} [callback]\n             *        A function to execute when the chart object is finished\n             *        rendering and all external image files (`chart.backgroundImage`,\n             *        `chart.plotBackgroundImage` etc) are loaded. Defining a\n             *        [chart.events.load](https://api.highcharts.com/highstock/chart.events.load)\n             *        handler is equivalent.\n             *\n             * @return {Highcharts.StockChart}\n             *         The chart object.\n             */\n            function stockChart(a, b, c) {\n                return new StockChart(a, b, c);\n            }\n            StockChart.stockChart = stockChart;\n            /* eslint-enable jsdoc/check-param-names */\n            /**\n             * Function to crisp a line with multiple segments\n             *\n             * @private\n             * @function Highcharts.SVGRenderer#crispPolyLine\n             */\n            function svgRendererCrispPolyLine(points, width) {\n                // points format: [['M', 0, 0], ['L', 100, 0]]\n                // normalize to a crisp line\n                for (var i = 0; i < points.length; i = i + 2) {\n                    var start = points[i], end = points[i + 1];\n                    if (start[1] === end[1]) {\n                        // Substract due to #1129. Now bottom and left axis gridlines\n                        // behave the same.\n                        start[1] = end[1] =\n                            Math.round(start[1]) - (width % 2 / 2);\n                    }\n                    if (start[2] === end[2]) {\n                        start[2] = end[2] =\n                            Math.round(start[2]) + (width % 2 / 2);\n                    }\n                }\n                return points;\n            }\n        })(StockChart || (StockChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return StockChart;\n    });\n    _registerModule(_modules, 'masters/modules/stock.src.js', [_modules['Core/Globals.js'], _modules['Series/DataModifyComposition.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Axis/OrdinalAxis.js'], _modules['Series/OHLC/OHLCSeries.js'], _modules['Series/Flags/FlagsSeries.js'], _modules['Core/Chart/StockChart.js']], function (Highcharts, DataModifyComposition, Navigator, RangeSelector, Scrollbar, OrdinalAxis, OHLCSeries, FlagsSeries, StockChart) {\n\n        var G = Highcharts;\n        // Classes\n        G.Navigator = Navigator;\n        G.RangeSelector = RangeSelector;\n        G.Scrollbar = Scrollbar;\n        G.StockChart = G.stockChart = StockChart.stockChart;\n        // Compositions\n        DataModifyComposition.compose(G.Series, G.Axis, G.Point);\n        FlagsSeries.compose(G.Renderer);\n        Navigator.compose(G.Axis, G.Chart, G.Series);\n        OHLCSeries.compose(G.Series);\n        OrdinalAxis.compose(G.Axis, G.Series, G.Chart);\n        RangeSelector.compose(G.Axis, G.Chart);\n        Scrollbar.compose(G.Axis);\n        StockChart.compose(G.Axis, G.Series, G.SVGRenderer);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","H","StackItem","U","BrokenAxis","composed","addEvent","find","fireEvent","isArray","isNumber","pick","pushUnique","onAxisAfterInit","brokenAxis","setBreaks","options","breaks","onAxisAfterSetOptions","_a","axis","hasBreaks","ordinal","onAxisAfterSetTickPositions","tickPositions","info","newPositions","i","length","isInAnyBreak","push","onAxisInit","Additions","onSeriesAfterGeneratePoints","_b","isDirty","_c","connectNulls","points","xAxis","yAxis","point","isPointInBreak","y","x","visible","onSeriesAfterRender","drawBreaks","pointArrayMap","seriesDrawBreaks","keys","threshold","series","brokenAxis_1","forEach","key","breakArray","isXAxis","min","breaksOutOfRange","filter","brk","isOut","otherBreak","from","to","toUpperCase","eventName","seriesGappedPath","currentDataGrouping","groupingSize","gapSize","slice","gapUnit","basePointRange","current","next","xRange","splice","isNull","stacking","stack","stacks","stackKey","stackLabels","total","getGraphPath","compose","AxisClass","SeriesClass","keepProps","seriesProto","prototype","gappedPath","isInBreak","val","repeat","Infinity","test","inclusive","lin2Val","nval","len","val2Lin","findBreakAt","b","testKeep","inbrk","keep","ret","showPoints","redraw","Object","userOptions","forceRedraw","val2lin","lin2val","setExtremes","newMin","newMax","animation","eventArguments","breaks_1","axisBreak","constructor","call","setAxisTranslation","unitLength","inBrk_1","repeat_1","start_1","i_1","breaks_2","breakArrayT_1","breakArray_1","pointRangePadding","length_1","min_1","userMin","max_1","userMax","max","value","move","size","breakSize","sort","a","staticScale","transA","minPixelPadding","minPointOffset","chart","G","Axis","Series","ApproximationRegistry","arrayMax","arrayMin","correctFloat","extend","average","arr","sum","hasNulls","ApproximationDefaults","averages","arguments","close","high","hlc","low","ohlc","open","range","common","groupPixelWidth","dateTimeLabelFormats","millisecond","second","minute","hour","day","week","month","year","seriesSpecific","line","spline","area","areaspline","arearange","column","columnrange","candlestick","heikinashi","units","DataGroupingDefaults","AxisConstructor","merge","applyGrouping","e","getGroupPixelWidth","hasProcessed","hasExtremesChanged","dataLength","dgOptions","doGrouping","dataGrouping","Math","processedXData","data","plotSizeX","forced","onAfterSetScale","setDataGrouping","update","seriesOptions","slope","DateTimeAxis","D","SeriesRegistry","defined","error","baseGeneratePoints","generatePoints","hasGroupedData","croppedData","dataGroupingOptions","groupingEnabled","allowDG","enabled","isStock","reserveSpace","lastDataGrouping","revertRequireSorting","requireSorting","skip","skipDataGrouping","isCartesian","destroyGroupedData","groupAll","xData","processedYData","yData","groupedXData","extremes","getExtremes","xMin","xMax","groupIntervalFactor","getGroupIntervalFactor","interval","groupPositions","getTimeTicks","normalizeTimeTickInterval","startOfWeek","closestPointRange","groupedData","groupData","approximation","groupedYData","smoothed","firstAnchor","anchor","lastAnchor","segmentStarts","indexOf","totalRange","groupMap","anchorPoints","groupedDataLastIndex","anchorIndexIterator","anchorFirstIndex","groupStart","start","groupLength","firstGroupEnd","middle","end","firstPoint","lastPoint","lastGroupStart","shiftInterval","dataMin","dataMax","allGroupedData","cropData","cropStart","preventGraphAnimation","destroy","getDGApproximation","is","cumulative","pointX","pointY","groupedY","dataOptions","handleYData","values","pointArrayMapLength","extendedPointArrayMap","concat","pos","approximationFn","valuesLen","dataGroupInfo","pointClass","optionsToObject","j","index","applyOptions","onAfterSetOptions","type","plotOptions","baseOptions","useCommonDataGrouping","defaultOptions","rangeSelector","isInternal","selected","buttonOptions","PointClass","dataGroup","DataGroupingAxisComposition","DataGroupingSeriesComposition","F","format","onTooltipHeaderFormatter","xDateFormatEnd","labelFormats","formattedKey","time","labelConfig","tooltipOptions","xDateFormat","formatString","isFooter","unitName","count","dateTime","getXDateFormat","groupEnd","dateFormat","styledMode","styledModeFormat","text","preventDefault","TooltipClass","DataGrouping","approximationDefaults","approximations","Tooltip","annotationsFieldsTypes","backgroundColor","borderColor","borderRadius","color","fill","fontSize","labels","name","stroke","title","getAssignedAxis","coords","coord","axisMin","axisMax","getFieldType","predefinedType","fieldType","NBU","wheelTimer","startOnTick","endOnTick","isObject","composedClasses","sensitivity","waitForAutomaticExtremes","axisOptions","clearTimeout","setTimeout","getMouseAxisRatio","mousePos","mouseAxisRatio","reversed","inverted","zoomOnDirection","howMuch","centerArg","hasZoomed","innerStart","innerWidth","center","newRange","dataRange","minPaddingOffset","minPadding","maxPaddingOffset","maxPadding","outerMin","outerRange","newExt","outerStart","rangeStart","rangeWidth","zoomOut","Number","MIN_VALUE","zoomBy","mouseX","mouseY","zooming","zoomX","zoomY","centerXArg","toValue","centerYArg","emulateRoof","tmp","hasZoomedX","hasZoomedY","onAfterGetContainer","_this","wheelZoomOptions","mouseWheel","container","pointer","normalize","allowZoom","inClass","target","isInsidePlot","chartX","plotLeft","chartY","plotTop","wheelSensitivity","delta","deltaY","xAxisCoords","getCoordinates","yAxisCoords","pow","ChartClass","MouseWheelZoom","Chart","Point","DataModifyComposition","pointTooltipFormatter","tooltipFormatter","isString","setModifier","mode","modeState","setCompare","setCumulative","pointFormat","numberFormatter","replace","changeDecimals","change","cumulativeSum","afterInit","dataModify","compare","initCompare","initCumulative","afterGetExtremes","dataExtremes","activeYData","modifyValue","getCumulativeExtremes","seriesSetCompare","afterProcessData","compareStart","keyIndex","pointValKey","compareValue","axisSetCompare","seriesSetCumulative","axisSetCumulative","axisProto","pointProto","cumulativeDataMin","cumulativeDataMax","reduce","prev","cur","compareBase","prevPoint","isTouchDevice","navigatorAxis","NavigatorAxisAdditions","onAxisZoom","chartOptions","navigator","pinchType","zoomType","zoomed","previousZoom","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","translate","horiz","fixedRange","halfPointRange","pointRange","Color","parse","seriesTypes","height","margin","maskInside","handles","width","symbols","lineWidth","maskFill","setOpacity","get","outlineColor","outlineWidth","fillOpacity","sonification","dataLabels","zIndex","id","className","lineColor","marker","overscroll","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","align","style","opacity","textOutline","crosshair","tickWidth","_x","_y","halfWidth","markerPosition","round","NavigatorDefaults","NavigatorSymbols","RendererRegistry","NavigatorConstructor","setOptions","getRendererType","onChartAfterAddSeries","setBaseSeries","onChartAfterSetChartSize","legendOptions","legend","scrollbarHeight","scrollButtonSize","left","opposite","chartWidth","spacing","top","navigatorOptions","chartHeight","scrollbar","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","onChartBeforeRender","onChartBeforeShowResetZoom","onChartCallback","render","onChartUpdate","scrollbarOptions","onSeriesAfterUpdate","NavigatorClass","chartProto","callbacks","ScrollbarAxis","Scrollbar","scrollMin","scrollMax","onAxisAfterGetOffset","scrollbarsOffsets","axisOffset","vertical","renderer","unitedMin","unitedMax","shouldUpdateExtremes","DOMType","animate","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","destroyObjectProperties","removeEvent","_events","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","init","swapXY","seg","temp","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","hasTouch","updatePosition","trigger","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","group","g","add","rect","addClass","attr","crisp","r","strokeWidth","arrow","mousePosition","initPositions","grabbedCenter","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","NavigatorComposition","clamp","erase","splat","numExt","extreme","_i","numbers","Navigator","drawHandle","verb","parseInt","drawOutline","zoomedMin","zoomedMax","verticalMin","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","d","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions_1","height_1","width_1","symbol","rotation","rotationOriginX","rotationOriginY","baseSeries","navigatorSeries","navigatorWidth","scrollbarXAxis","fake","navigatorEnabled","minRange","maxRange","plotWidth","plotHeight","toPixels","abs","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","eventsToUnbind","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","events","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","unionExtremes","triggerOp","unbind","removeBaseSeriesEvents","adaptToUpdatedData","updatedDataHandler","modifyBaseAxisExtremes","scrollbarEnabled","Boolean","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","keepOrdinalPadding","zoomEnabled","offsets","alignTicks","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","returnFalseOnNoBaseSeries","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","states","inactive","navSeries","base","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","navigatorSeriesData","hasNavigatorData","initSeries","userSeriesOptions","colors","setVisible","remove","getBaseSeriesMin","currentSeriesMin","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","hasSetExtremes","eventArgs","MAX_VALUE","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","timeName","date","Date","basePeriod","set","getTime","_offsetMin","onChartAfterGetContainer","deferredYTDClick","clickButton","updateNames","setScale","getAxisMargins","extraTopMargin","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","onChartGetMargins","rangeSelectorHeight","marginBottom","onChartRender","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","RangeSelectorComposition","SVGElement","createElement","discardElement","objectEach","pad","pInt","RangeSelector","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","rangeMin","minSetting","rangeSetting","ctx","ytdExtremes","_range","addOffsetMin","setSelected","forcedDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","updateButtonStates","actualRange","hasNoData","hasVisibleSeries","ytdMin","ytdMax","selectedExists","isSelectedTooGreat","button","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","state","isYTDButNotSelected","isAllButAlreadyShowingAll","isSameRange","disable","select","setState","disabled","fixedTimes","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","getAttribute","updatedTime","previousTime","setAttribute","inputTypeFormats","setInputExtremes","showInput","inputGroup","isTextInput","_d","_e","_f","border","offsetWidth","offsetHeight","hideInput","inputDate","str","split","join","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","label","on","focus","preferredInputType","some","char","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","now","startOfYear","ts","inputsZIndex","renderButtons","parentNode","insertBefore","minElems","minLabel","maxElems","maxLabel","x_1","getBBox","alignElements","buttonGroup","isMS","currentButtonIndex","zoomText","paddingLeft","paddingRight","textContent","textStr","callDefaultEvent","buttonEvents","click","isActive","hover","navButtonOptions","exporting","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton_1","alignButtonGroup","hasLoaded","xOffsetForExportButton","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","buttonLeft","maxButtonWidth","buttonWidth","bBox","groupsOverlap","buttonGroupWidth","inputGroupX","alignOptions","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","isCollapsed","userButtonTheme","getAttribs","hasActiveButton","showDropdown","hideDropdown","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","subtitle","rSelector","HTMLElement","OrdinalAxis","timeUnits","normalizedInterval","positions","closestDistance","findHigherRanks","segmentPositions","hasCrossedHigherRank","outsideMax","higherRanks","tickPixelIntervalOption","lastGroupPosition","posLength","shift","unitRange","translatedArr","distances","itemToRemove","translated","lastTranslated","medianDistance","distance","index2val","ordinalPositions","localMin","old","localA","getExtendedPositions","pixelVal","getIndexOfPoint","mantissa","leftNeighbour","rightNeighbour","getIndexInArray","findIndexOf","percent","onAxisFoundExtremes","mouseIsDown","onAxisAfterSetScale","isOrdinal","onAxisInitialAxisTranslation","beforeSetTickPositions","tickInterval","postProcessTickInterval","onChartPan","originalEvent","panning","runBase","mouseDownX","hoverPoints","overscrollPointsRange","movedUnits","translationSlope","extendedOrdinalPositions","extendedAxis","index2val_1","val2lin_1","trimmedRange","searchAxisLeft","searchAxisRight","onSeriesUpdatedData","toIndex","ordinalIndex","ordinalLength","length_2","originalPositionsReference","diff","approximateIndexOffset","ordinal2lin","uniqueOrdinalPositions","dist","minIndex","maxIndex","useOrdinal","adjustOrdinalExtremesPoints","isBoosted","distanceBetweenPoint_1","takeOrdinalPosition","unshift","pop","forceOrdinal","getOverscrollPositions","sortedArray","indirectSearch","fakeAxis","grouping","fakeSeries","noop","getProcessedData","processData","median","ordinalArray","firstPointX","firstPointVal","hasPointsInside","plotX","ordinalPointPixelInterval","shiftIndex","extraRange","ordinalSlope","extendStatics","__extends","setPrototypeOf","__proto__","Array","p","TypeError","String","__","create","_super","HLCPoint","tooltip","stickyTracking","HLCSeriesDefaults","ColumnSeries","HLCSeries","extendStem","halfStrokeWidth","getPointPath","graphic","crispCorr","crispX","shapeArgs","plotClose","yBottom","plotHigh","drawSinglePoint","plotY","pointAttribs","getClassName","drawPoints","attribs","toYData","names","map","charAt","tooltipPos","directTouch","pointAttrToOptions","registerSeriesType","OHLCPoint","resolveUpColor","upColor","resolveColor","getZone","zone","OHLCSeriesDefaults","onSeriesAfterSetOptions","useOhlcData","onSeriesInit","eventOptions","OHLCSeries","_args","plotOpen","CandlestickSeriesDefaults","CandlestickSeries","isUp","upLineColor","stateOptions","reversedYAxis","points_1","topBox","bottomBox","hasTopWhisker","hasBottomWhisker","isNew","shadow","ColumnPoint","FlagsPoint","ttBelow","isValid","hasNewShapeType","shape","symbolKey","allowOverlapX","stackDistance","fillColor","fontWeight","FlagsSymbols","modifiedMembers","flag","w","h","anchorX","anchorY","circle","createPinSymbol","labelX","startSeg","endSeg","labelY","SVGRendererClass","RendererClass","OnSeriesComposition","columnProto","stableSort","getPlotBox","onSeries","leftPoint","lastX","rightPoint","distanceRatio","optionsOnSeries","onData","onKey","pointXOffset","barW","substr","state_1","_loop_1","p0_1","p3_1","p1_1","controlPoints","p2_1","calculateCoord","t","tMin","tMax","tMid","xMid","stackIndex","seriesProto_1","FlagsSeriesDefaults","R","distribute","wrap","FlagsSeries","setClip","outsideRight","centered","optionsY","boxesMap","boxes","useHTML","markerGroup","maxDistance_1","box","point_1","plotX_1","graphic_1","proceed","drawTracker","unbindMouseOver","raised","points_3","otherPoint","points_2","clip","sharedClipKey","sharedClips","forceCrop","invertible","noSharedTooltip","sorted","trackerGroups","buildKDTree","getOptions","getDefaultAxisOptions","showLastLabel","categories","getForcedAxisOptions","StockChart","callback","xAxisOptions","yAxisOptions","crosshairs","createAxis","onAxisAfterDrawCrosshair","cross","posx","posy","limit","log","logarithmic","tickInside","tickPosition","snap","crossLabel","formatOption","formatFormat","lin2log","labelAlign","colorIndex","labelGroup","borderWidth","formatter","isInside","isPointInside","crossBox","right","onAxisAfterHideCrosshair","onAxisAutoLabelAlign","panes","_labelPanes","labelOptions","side","onAxisDestroy","onAxisGetPlotLinePath","x1","y1","x2","y2","axes2","uniqueAxes","transVal","isLinked","linkedParent","axisLeft","axisTop","result","translatedValue","force","acrossPanes","otherColl","opt","axes2_1","A","axis2","unique","axes_1","uniqueAxes_1","transB","uniqueAxes_2","crispPolyLine","onSeriesSetOptions","overrides","radius","seriesForceCropping","svgRendererCrispPolyLine","forceCropping","stockChart","c","Renderer","SVGRenderer"],"mappings":"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"}