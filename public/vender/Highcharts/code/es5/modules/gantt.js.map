{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v11.3.0 (2024-01-10)\n *\n * Gantt series\n *\n * (c) 2016-2024 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/gantt', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/ArrowSymbols.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2017 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Creates an arrow symbol. Like a triangle, except not filled.\n         * ```\n         *                   o\n         *             o\n         *       o\n         * o\n         *       o\n         *             o\n         *                   o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the arrow\n         *\n         * @param {number} y\n         *        y position of the arrow\n         *\n         * @param {number} w\n         *        width of the arrow\n         *\n         * @param {number} h\n         *        height of the arrow\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function arrow(x, y, w, h) {\n            return [\n                ['M', x, y + h / 2],\n                ['L', x + w, y],\n                ['L', x, y + h / 2],\n                ['L', x + w, y + h]\n            ];\n        }\n        /**\n         * Creates a half-width arrow symbol. Like a triangle, except not filled.\n         * ```\n         *       o\n         *    o\n         * o\n         *    o\n         *       o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the arrow\n         *\n         * @param {number} y\n         *        y position of the arrow\n         *\n         * @param {number} w\n         *        width of the arrow\n         *\n         * @param {number} h\n         *        height of the arrow\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function arrowHalf(x, y, w, h) {\n            return arrow(x, y, w / 2, h);\n        }\n        /**\n         * @private\n         */\n        function compose(SVGRendererClass) {\n            if (pushUnique(composed, compose)) {\n                var symbols = SVGRendererClass.prototype.symbols;\n                symbols.arrow = arrow;\n                symbols['arrow-filled'] = triangleLeft;\n                symbols['arrow-filled-half'] = triangleLeftHalf;\n                symbols['arrow-half'] = arrowHalf;\n                symbols['triangle-left'] = triangleLeft;\n                symbols['triangle-left-half'] = triangleLeftHalf;\n            }\n        }\n        /**\n         * Creates a left-oriented triangle.\n         * ```\n         *             o\n         *       ooooooo\n         * ooooooooooooo\n         *       ooooooo\n         *             o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the triangle\n         *\n         * @param {number} y\n         *        y position of the triangle\n         *\n         * @param {number} w\n         *        width of the triangle\n         *\n         * @param {number} h\n         *        height of the triangle\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function triangleLeft(x, y, w, h) {\n            return [\n                ['M', x + w, y],\n                ['L', x, y + h / 2],\n                ['L', x + w, y + h],\n                ['Z']\n            ];\n        }\n        /**\n         * Creates a half-width, left-oriented triangle.\n         * ```\n         *       o\n         *    oooo\n         * ooooooo\n         *    oooo\n         *       o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the triangle\n         *\n         * @param {number} y\n         *        y position of the triangle\n         *\n         * @param {number} w\n         *        width of the triangle\n         *\n         * @param {number} h\n         *        height of the triangle\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function triangleLeftHalf(x, y, w, h) {\n            return triangleLeft(x, y, w / 2, h);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ArrowSymbols = {\n            compose: compose\n        };\n\n        return ArrowSymbols;\n    });\n    _registerModule(_modules, 'Gantt/Connection.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, error = U.error, merge = U.merge, objectEach = U.objectEach;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var deg2rad = H.deg2rad, max = Math.max, min = Math.min;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Connection class. Used internally to represent a connection between two\n         * points.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Connection\n         *\n         * @param {Highcharts.Point} from\n         *        Connection runs from this Point.\n         *\n         * @param {Highcharts.Point} to\n         *        Connection runs to this Point.\n         *\n         * @param {Highcharts.ConnectorsOptions} [options]\n         *        Connection options.\n         */\n        var Connection = /** @class */ (function () {\n            function Connection(from, to, options) {\n                this.init(from, to, options);\n            }\n            /**\n             * Initialize the Connection object. Used as constructor only.\n             *\n             * @function Highcharts.Connection#init\n             *\n             * @param {Highcharts.Point} from\n             *        Connection runs from this Point.\n             *\n             * @param {Highcharts.Point} to\n             *        Connection runs to this Point.\n             *\n             * @param {Highcharts.ConnectorsOptions} [options]\n             *        Connection options.\n             */\n            Connection.prototype.init = function (from, to, options) {\n                this.fromPoint = from;\n                this.toPoint = to;\n                this.options = options;\n                this.chart = from.series.chart;\n                this.pathfinder = this.chart.pathfinder;\n            };\n            /**\n             * Add (or update) this connection's path on chart. Stores reference to the\n             * created element on this.graphics.path.\n             *\n             * @function Highcharts.Connection#renderPath\n             *\n             * @param {Highcharts.SVGPathArray} path\n             *        Path to render, in array format. E.g. ['M', 0, 0, 'L', 10, 10]\n             *\n             * @param {Highcharts.SVGAttributes} [attribs]\n             *        SVG attributes for the path.\n             *\n             * @param {Partial<Highcharts.AnimationOptionsObject>} [animation]\n             *        Animation options for the rendering.\n             */\n            Connection.prototype.renderPath = function (path, attribs) {\n                var connection = this, chart = this.chart, styledMode = chart.styledMode, pathfinder = this.pathfinder, anim = {};\n                var pathGraphic = connection.graphics && connection.graphics.path;\n                // Add the SVG element of the pathfinder group if it doesn't exist\n                if (!pathfinder.group) {\n                    pathfinder.group = chart.renderer.g()\n                        .addClass('highcharts-pathfinder-group')\n                        .attr({ zIndex: -1 })\n                        .add(chart.seriesGroup);\n                }\n                // Shift the group to compensate for plot area.\n                // Note: Do this always (even when redrawing a path) to avoid issues\n                // when updating chart in a way that changes plot metrics.\n                pathfinder.group.translate(chart.plotLeft, chart.plotTop);\n                // Create path if does not exist\n                if (!(pathGraphic && pathGraphic.renderer)) {\n                    pathGraphic = chart.renderer.path()\n                        .add(pathfinder.group);\n                    if (!styledMode) {\n                        pathGraphic.attr({\n                            opacity: 0\n                        });\n                    }\n                }\n                // Set path attribs and animate to the new path\n                pathGraphic.attr(attribs);\n                anim.d = path;\n                if (!styledMode) {\n                    anim.opacity = 1;\n                }\n                pathGraphic.animate(anim);\n                // Store reference on connection\n                this.graphics = this.graphics || {};\n                this.graphics.path = pathGraphic;\n            };\n            /**\n             * Calculate and add marker graphics for connection to the chart. The\n             * created/updated elements are stored on this.graphics.start and\n             * this.graphics.end.\n             *\n             * @function Highcharts.Connection#addMarker\n             *\n             * @param {string} type\n             *        Marker type, either 'start' or 'end'.\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} options\n             *        All options for this marker. Not calculated or merged with other\n             *        options.\n             *\n             * @param {Highcharts.SVGPathArray} path\n             *        Connection path in array format. This is used to calculate the\n             *        rotation angle of the markers.\n             */\n            Connection.prototype.addMarker = function (type, options, path) {\n                var connection = this, chart = connection.fromPoint.series.chart, pathfinder = chart.pathfinder, renderer = chart.renderer, point = (type === 'start' ?\n                    connection.fromPoint :\n                    connection.toPoint), anchor = point.getPathfinderAnchorPoint(options);\n                var markerVector, radians, rotation, box, width, height, pathVector, segment;\n                if (!options.enabled) {\n                    return;\n                }\n                // Last vector before start/end of path, used to get angle\n                if (type === 'start') {\n                    segment = path[1];\n                }\n                else { // 'end'\n                    segment = path[path.length - 2];\n                }\n                if (segment && segment[0] === 'M' || segment[0] === 'L') {\n                    pathVector = {\n                        x: segment[1],\n                        y: segment[2]\n                    };\n                    // Get angle between pathVector and anchor point and use it to\n                    // create marker position.\n                    radians = point.getRadiansToVector(pathVector, anchor);\n                    markerVector = point.getMarkerVector(radians, options.radius, anchor);\n                    // Rotation of marker is calculated from angle between pathVector\n                    // and markerVector.\n                    // (Note:\n                    //  Used to recalculate radians between markerVector and pathVector,\n                    //  but this should be the same as between pathVector and anchor.)\n                    rotation = -radians / deg2rad;\n                    if (options.width && options.height) {\n                        width = options.width;\n                        height = options.height;\n                    }\n                    else {\n                        width = height = options.radius * 2;\n                    }\n                    // Add graphics object if it does not exist\n                    connection.graphics = connection.graphics || {};\n                    box = {\n                        x: markerVector.x - (width / 2),\n                        y: markerVector.y - (height / 2),\n                        width: width,\n                        height: height,\n                        rotation: rotation,\n                        rotationOriginX: markerVector.x,\n                        rotationOriginY: markerVector.y\n                    };\n                    if (!connection.graphics[type]) {\n                        // Create new marker element\n                        connection.graphics[type] = renderer\n                            .symbol(options.symbol)\n                            .addClass('highcharts-point-connecting-path-' + type + '-marker' +\n                            ' highcharts-color-' + this.fromPoint.colorIndex)\n                            .attr(box)\n                            .add(pathfinder.group);\n                        if (!renderer.styledMode) {\n                            connection.graphics[type].attr({\n                                fill: options.color || connection.fromPoint.color,\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth,\n                                opacity: 0\n                            })\n                                .animate({\n                                opacity: 1\n                            }, point.series.options.animation);\n                        }\n                    }\n                    else {\n                        connection.graphics[type].animate(box);\n                    }\n                }\n            };\n            /**\n             * Calculate and return connection path.\n             * Note: Recalculates chart obstacles on demand if they aren't calculated.\n             *\n             * @function Highcharts.Connection#getPath\n             *\n             * @param {Highcharts.ConnectorsOptions} options\n             *        Connector options. Not calculated or merged with other options.\n             *\n             * @return {object|undefined}\n             *         Calculated SVG path data in array format.\n             */\n            Connection.prototype.getPath = function (options) {\n                var pathfinder = this.pathfinder, chart = this.chart, algorithm = pathfinder.algorithms[options.type];\n                var chartObstacles = pathfinder.chartObstacles;\n                if (typeof algorithm !== 'function') {\n                    error('\"' + options.type + '\" is not a Pathfinder algorithm.');\n                    return {\n                        path: [],\n                        obstacles: []\n                    };\n                }\n                // This function calculates obstacles on demand if they don't exist\n                if (algorithm.requiresObstacles && !chartObstacles) {\n                    chartObstacles =\n                        pathfinder.chartObstacles =\n                            pathfinder.getChartObstacles(options);\n                    // If the algorithmMargin was computed, store the result in default\n                    // options.\n                    chart.options.connectors.algorithmMargin =\n                        options.algorithmMargin;\n                    // Cache some metrics too\n                    pathfinder.chartObstacleMetrics =\n                        pathfinder.getObstacleMetrics(chartObstacles);\n                }\n                // Get the SVG path\n                return algorithm(\n                // From\n                this.fromPoint.getPathfinderAnchorPoint(options.startMarker), \n                // To\n                this.toPoint.getPathfinderAnchorPoint(options.endMarker), merge({\n                    chartObstacles: chartObstacles,\n                    lineObstacles: pathfinder.lineObstacles || [],\n                    obstacleMetrics: pathfinder.chartObstacleMetrics,\n                    hardBounds: {\n                        xMin: 0,\n                        xMax: chart.plotWidth,\n                        yMin: 0,\n                        yMax: chart.plotHeight\n                    },\n                    obstacleOptions: {\n                        margin: options.algorithmMargin\n                    },\n                    startDirectionX: pathfinder.getAlgorithmStartDirection(options.startMarker)\n                }, options));\n            };\n            /**\n             * (re)Calculate and (re)draw the connection.\n             *\n             * @function Highcharts.Connection#render\n             */\n            Connection.prototype.render = function () {\n                var connection = this, fromPoint = connection.fromPoint, series = fromPoint.series, chart = series.chart, pathfinder = chart.pathfinder, attribs = {};\n                var options = merge(chart.options.connectors, series.options.connectors, fromPoint.options.connectors, connection.options);\n                // Set path attribs\n                if (!chart.styledMode) {\n                    attribs.stroke = options.lineColor || fromPoint.color;\n                    attribs['stroke-width'] = options.lineWidth;\n                    if (options.dashStyle) {\n                        attribs.dashstyle = options.dashStyle;\n                    }\n                }\n                attribs['class'] = // eslint-disable-line dot-notation\n                    'highcharts-point-connecting-path ' +\n                        'highcharts-color-' + fromPoint.colorIndex;\n                options = merge(attribs, options);\n                // Set common marker options\n                if (!defined(options.marker.radius)) {\n                    options.marker.radius = min(max(Math.ceil((options.algorithmMargin || 8) / 2) - 1, 1), 5);\n                }\n                // Get the path\n                var pathResult = connection.getPath(options), path = pathResult.path;\n                // Always update obstacle storage with obstacles from this path.\n                // We don't know if future calls will need this for their algorithm.\n                if (pathResult.obstacles) {\n                    pathfinder.lineObstacles =\n                        pathfinder.lineObstacles || [];\n                    pathfinder.lineObstacles =\n                        pathfinder.lineObstacles.concat(pathResult.obstacles);\n                }\n                // Add the calculated path to the pathfinder group\n                connection.renderPath(path, attribs);\n                // Render the markers\n                connection.addMarker('start', merge(options.marker, options.startMarker), path);\n                connection.addMarker('end', merge(options.marker, options.endMarker), path);\n            };\n            /**\n             * Destroy connection by destroying the added graphics elements.\n             *\n             * @function Highcharts.Connection#destroy\n             */\n            Connection.prototype.destroy = function () {\n                if (this.graphics) {\n                    objectEach(this.graphics, function (val) {\n                        val.destroy();\n                    });\n                    delete this.graphics;\n                }\n            };\n            return Connection;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * The default pathfinder algorithm to use for a chart. It is possible to define\n         * your own algorithms by adding them to the\n         * `Highcharts.Pathfinder.prototype.algorithms`\n         * object before the chart has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Connection;\n    });\n    _registerModule(_modules, 'Extensions/CurrentDateIndication.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, merge = U.merge, pushUnique = U.pushUnique, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Show an indicator on the axis for the current date and time. Can be a\n         * boolean or a configuration object similar to\n         * [xAxis.plotLines](#xAxis.plotLines).\n         *\n         * @sample gantt/current-date-indicator/demo\n         *         Current date indicator enabled\n         * @sample gantt/current-date-indicator/object-config\n         *         Current date indicator with custom options\n         *\n         * @declare   Highcharts.CurrentDateIndicatorOptions\n         * @type      {boolean|CurrentDateIndicatorOptions}\n         * @default   true\n         * @extends   xAxis.plotLines\n         * @excluding value\n         * @product   gantt\n         * @apioption xAxis.currentDateIndicator\n         */\n        var defaultOptions = {\n            color: \"#ccd3ff\" /* Palette.highlightColor20 */,\n            width: 2,\n            /**\n             * @declare Highcharts.AxisCurrentDateIndicatorLabelOptions\n             */\n            label: {\n                /**\n                 * Format of the label. This options is passed as the fist argument to\n                 * [dateFormat](/class-reference/Highcharts.Time#dateFormat) function.\n                 *\n                 * @type      {string}\n                 * @default   %a, %b %d %Y, %H:%M\n                 * @product   gantt\n                 * @apioption xAxis.currentDateIndicator.label.format\n                 */\n                format: '%a, %b %d %Y, %H:%M',\n                formatter: function (value, format) {\n                    return this.axis.chart.time.dateFormat(format || '', value);\n                },\n                rotation: 0,\n                /**\n                 * @type {Highcharts.CSSObject}\n                 */\n                style: {\n                    /** @internal */\n                    fontSize: '0.7em'\n                }\n            }\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, PlotLineOrBandClass) {\n            if (pushUnique(composed, compose)) {\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                addEvent(PlotLineOrBandClass, 'render', onPlotLineOrBandRender);\n                wrap(PlotLineOrBandClass.prototype, 'getLabelText', wrapPlotLineOrBandGetLabelText);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            var options = this.options, cdiOptions = options.currentDateIndicator;\n            if (cdiOptions) {\n                var plotLineOptions = typeof cdiOptions === 'object' ?\n                    merge(defaultOptions, cdiOptions) :\n                    merge(defaultOptions);\n                plotLineOptions.value = Date.now();\n                plotLineOptions.className = 'highcharts-current-date-indicator';\n                if (!options.plotLines) {\n                    options.plotLines = [];\n                }\n                options.plotLines.push(plotLineOptions);\n            }\n        }\n        /**\n         * @private\n         */\n        function onPlotLineOrBandRender() {\n            // If the label already exists, update its text\n            if (this.label) {\n                this.label.attr({\n                    text: this.getLabelText(this.options.label)\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapPlotLineOrBandGetLabelText(defaultMethod, defaultLabelOptions) {\n            var options = this.options;\n            if (options &&\n                options.className &&\n                options.className.indexOf('highcharts-current-date-indicator') !== -1 &&\n                options.label &&\n                typeof options.label.formatter === 'function') {\n                options.value = Date.now();\n                return options.label.formatter\n                    .call(this, options.value, options.label.format);\n            }\n            return defaultMethod.call(this, defaultLabelOptions);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var CurrentDateIndication = {\n            compose: compose\n        };\n\n        return CurrentDateIndication;\n    });\n    _registerModule(_modules, 'Core/Chart/GanttChart.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (Chart, D, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defaultOptions = D.defaultOptions;\n        var isArray = U.isArray, merge = U.merge, splat = U.splat;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Gantt-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n         *\n         * @requires modules/gantt\n         *\n         * @class\n         * @name Highcharts.GanttChart\n         * @extends Highcharts.Chart\n         */\n        var GanttChart = /** @class */ (function (_super) {\n            __extends(GanttChart, _super);\n            function GanttChart() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the chart. The constructor's arguments are passed on\n             * directly.\n             *\n             * @function Highcharts.GanttChart#init\n             *\n             * @param {Highcharts.Options} userOptions\n             *        Custom options.\n             *\n             * @param {Function} [callback]\n             *        Function to run when the chart has loaded and and all external\n             *        images are loaded.\n             *\n             *\n             * @emits Highcharts.GanttChart#event:init\n             * @emits Highcharts.GanttChart#event:afterInit\n             */\n            GanttChart.prototype.init = function (userOptions, callback) {\n                var xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis;\n                var defaultLinkedTo;\n                // Avoid doing these twice\n                userOptions.xAxis = userOptions.yAxis = void 0;\n                var options = merge(true, {\n                    chart: {\n                        type: 'gantt'\n                    },\n                    title: {\n                        text: ''\n                    },\n                    legend: {\n                        enabled: false\n                    },\n                    navigator: {\n                        series: { type: 'gantt' },\n                        // Bars were clipped, #14060.\n                        yAxis: {\n                            type: 'category'\n                        }\n                    }\n                }, userOptions, // User's options\n                // forced options\n                {\n                    isGantt: true\n                });\n                userOptions.xAxis = xAxisOptions;\n                userOptions.yAxis = yAxisOptions;\n                // Apply X axis options to both single and multi x axes If user hasn't\n                // defined axes as array, make it into an array and add a second axis by\n                // default.\n                options.xAxis = (!isArray(userOptions.xAxis) ?\n                    [userOptions.xAxis || {}, {}] :\n                    userOptions.xAxis).map(function (xAxisOptions, i) {\n                    var _a, _b, _c;\n                    if (i === 1) { // Second xAxis\n                        defaultLinkedTo = 0;\n                    }\n                    return merge(\n                    // Defaults\n                    {\n                        grid: {\n                            borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n                            enabled: true\n                        },\n                        opposite: (_c = (_b = (_a = defaultOptions.xAxis) === null || _a === void 0 ? void 0 : _a.opposite) !== null && _b !== void 0 ? _b : xAxisOptions.opposite) !== null && _c !== void 0 ? _c : true,\n                        linkedTo: defaultLinkedTo\n                    }, \n                    // User options\n                    xAxisOptions, \n                    // Forced options\n                    {\n                        type: 'datetime'\n                    });\n                });\n                // Apply Y axis options to both single and multi y axes\n                options.yAxis = (splat(userOptions.yAxis || {})).map(function (yAxisOptions) { return merge(\n                // Defaults\n                {\n                    grid: {\n                        borderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n                        enabled: true\n                    },\n                    staticScale: 50,\n                    reversed: true,\n                    // Set default type treegrid, but only if 'categories' is\n                    // undefined\n                    type: yAxisOptions.categories ? yAxisOptions.type : 'treegrid'\n                }, \n                // User options\n                yAxisOptions); });\n                _super.prototype.init.call(this, options, callback);\n            };\n            return GanttChart;\n        }(Chart));\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (GanttChart) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable jsdoc/check-param-names */\n            /**\n             * The factory function for creating new gantt charts. Creates a new {@link\n             * Highcharts.GanttChart|GanttChart} object with different default options\n             * than the basic Chart.\n             *\n             * @example\n             * // Render a chart in to div#container\n             * let chart = Highcharts.ganttChart('container', {\n             *     title: {\n             *         text: 'My chart'\n             *     },\n             *     series: [{\n             *         data: ...\n             *     }]\n             * });\n             *\n             * @function Highcharts.ganttChart\n             *\n             * @param {string|Highcharts.HTMLDOMElement} renderTo\n             *        The DOM element to render to, or its id.\n             *\n             * @param {Highcharts.Options} options\n             *        The chart options structure.\n             *\n             * @param {Highcharts.ChartCallbackFunction} [callback]\n             *        Function to run when the chart has loaded and and all external\n             *        images are loaded. Defining a\n             *        [chart.events.load](https://api.highcharts.com/highcharts/chart.events.load)\n             *        handler is equivalent.\n             *\n             * @return {Highcharts.GanttChart}\n             *         Returns the Chart object.\n             */\n            function ganttChart(a, b, c) {\n                return new GanttChart(a, b, c);\n            }\n            GanttChart.ganttChart = ganttChart;\n            /* eslint-enable jsdoc/check-param-names */\n        })(GanttChart || (GanttChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttChart;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed, isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisZoom(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            if (axis.isXAxis && ((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y') {\n                    e.zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom\n                    // selection, then when the reset button is pressed, revert to\n                    // this state. This should apply only if the chart is\n                    // initialized with a range (#6612), otherwise zoom all the way\n                    // out.\n                }\n                else if (((!isTouchDevice && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    if (defined(e.newMin)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                    }\n                    else if (previousZoom) {\n                        e.newMin = previousZoom[0];\n                        e.newMax = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof e.zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (pushUnique(composed, this.compose)) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'zoom', onAxisZoom);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var axis = this.axis, chart = axis.chart;\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                var fixedRange = chart && chart.fixedRange, halfPointRange = (axis.pointRange || 0) / 2;\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                // Make sure panning to the edges does not decrease the zoomed range\n                if (fixedRange && axis.dataMin && axis.dataMax) {\n                    if (newMax >= axis.dataMax) {\n                        newMin = correctFloat(axis.dataMax - fixedRange);\n                    }\n                    if (newMin <= axis.dataMin) {\n                        newMax = correctFloat(axis.dataMin + fixedRange);\n                    }\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null,\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * xAxis.maxPadding, but value is set in milliseconds.\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @since   6.0.0\n                 */\n                overscroll: 0,\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = Math.round(halfWidth / 3) + 0.5;\n            height = options.height || height;\n            return [\n                ['M', -halfWidth - 1, 0.5],\n                ['L', halfWidth, 0.5],\n                ['L', halfWidth, height + 0.5],\n                ['L', -halfWidth - 1, height + 0.5],\n                ['L', -halfWidth - 1, 0.5],\n                ['M', -markerPosition, 4],\n                ['L', -markerPosition, height - 3],\n                ['M', markerPosition - 1, 4],\n                ['L', markerPosition - 1, height - 3]\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions, setOptions = D.setOptions;\n        var composed = H.composed, isTouchDevice = H.isTouchDevice;\n        var getRendererType = RendererRegistry.getRendererType;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, NavigatorClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            NavigatorConstructor = NavigatorClass;\n            if (pushUnique(composed, compose)) {\n                var chartProto = ChartClass.prototype;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                extend(defaultOptions, { navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // false if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, compose)) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can  also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)',\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                // Mouse events\n                var _events = [\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler]\n                ];\n                // Touch events\n                if (H.hasTouch) {\n                    _events.push([bar, 'touchstart', mouseDownHandler], [bar.ownerDocument, 'touchmove', mouseMoveHandler], [bar.ownerDocument, 'touchend', mouseUpHandler]);\n                }\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // minWidth distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        // +1 to compensate for crispifying in rect method\n                        width: size + 1,\n                        height: size + 1,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scorllbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -trackBorderWidth % 2 / 2,\n                    y: -trackBorderWidth % 2 / 2\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-scroller.scrollbarStrokeWidth % 2 / 2, -scroller.scrollbarStrokeWidth % 2 / 2);\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var scroller = this;\n                var normalizedEvent = scroller.chart.pointer.normalize(e), range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Utilities.js']], function (Axis, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var hasTouch = H.hasTouch, isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Navigator.compose = function (AxisClass, ChartClass, SeriesClass) {\n                NavigatorComposition.compose(AxisClass, ChartClass, Navigator, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin],\n                        ['M', left, zoomedMax],\n                        ['L', left + height, zoomedMax],\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // left\n                        ['M', left, lineTop],\n                        // upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            navigatorTop + halfOutline\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add();\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var shade = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup);\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ?\n                                navigatorOptions.maskFill :\n                                'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                    navigator.shades[index] = shade;\n                });\n                // Create the outline:\n                navigator.outline = renderer.path()\n                    .addClass('highcharts-navigator-outline')\n                    .add(navigatorGroup);\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles && navigatorOptions.handles.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        navigator.handles[index] = renderer.symbol(handlesOptions_1.symbols[index], -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        // zIndex = 6 for right handle, 7 for left.\n                        // Can't be 10, because of the tooltip in inverted chart #2908\n                        navigator.handles[index].attr({ zIndex: 7 - index })\n                            .addClass('highcharts-navigator-handle ' +\n                            'highcharts-navigator-handle-' +\n                            ['left', 'right'][index]).add(navigatorGroup);\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options) {\n                // Remove references to old navigator series in base series\n                (this.series || []).forEach(function (series) {\n                    if (series.baseSeries) {\n                        delete series.baseSeries.navigatorSeries;\n                    }\n                });\n                // Destroy and rebuild navigator\n                this.destroy();\n                var chartOptions = this.chart.options;\n                merge(true, chartOptions.navigator, options);\n                this.init(this.chart);\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // in case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                // Add mouse move and mouseup events. These are bind to doc/container,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                eventsToUnbind.push(addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler));\n                // Touch events\n                if (hasTouch) {\n                    eventsToUnbind.push(addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                    eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                }\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                e = this.chart.pointer.normalize(e);\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // it has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, null, // auto animation\n                            { trigger: 'navigator' });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                e = this.chart.pointer.normalize(e);\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.fixedRange = null;\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = chart.pointer.normalize(e);\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // outside left\n                            chartX = dragOffset;\n                            // outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, \n                        // Run animation when clicking buttons, scrollbar track etc,\n                        // but not when dragging handles or scrollbar\n                        navigator.hasDragged ? false : null, {\n                            trigger: 'navigator',\n                            triggerOp: 'navigator-drag',\n                            DOMEvent: DOMEvent // #1838\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    // an x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // inherit base xAxis' break and ordinal options\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal\n                    }, navigatorOptions.xAxis, {\n                        id: 'navigator-x-axis',\n                        yAxis: 'navigator-y-axis',\n                        type: 'datetime',\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true,\n                        startOnTick: false,\n                        endOnTick: false,\n                        minPadding: 0,\n                        maxPadding: 0,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: [scrollButtonSize, 0, -scrollButtonSize, 0],\n                        width: height\n                    } : {\n                        offsets: [0, -scrollButtonSize, 0, scrollButtonSize],\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        id: 'navigator-y-axis',\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false),\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // in case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // from pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // from value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null,\n                    linkedTo: null,\n                    group: 'nav',\n                    padXAxis: false,\n                    xAxis: 'navigator-x-axis',\n                    yAxis: 'navigator-y-axis',\n                    showInLegend: false,\n                    stacking: void 0,\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitily\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick(baseXAxis.options.overscroll, 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator, marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Series/PathUtilities.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getLinkPath = {\n            'default': getDefaultPath,\n            straight: getStraightPath,\n            curved: getCurvedPath\n        };\n        function getDefaultPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, radius = pathParams.radius, parentVisible = pathParams.parentVisible;\n            var path = [\n                ['M', x1, y1],\n                ['L', x1, y1],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2]\n            ];\n            return parentVisible ?\n                applyRadius([\n                    ['M', x1, y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y2],\n                    ['L', x2, y2]\n                ], radius) :\n                path;\n        }\n        function getStraightPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, parentVisible = pathParams.parentVisible;\n            return parentVisible ? [\n                ['M', x1, y1],\n                ['L', x1 + width * (inverted ? -1 : 1), y2],\n                ['L', x2, y2]\n            ] : [\n                ['M', x1, y1],\n                ['L', x1, y2],\n                ['L', x1, y2]\n            ];\n        }\n        function getCurvedPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.offset, offset = _a === void 0 ? 0 : _a, _b = pathParams.width, width = _b === void 0 ? 0 : _b, _c = pathParams.inverted, inverted = _c === void 0 ? false : _c, parentVisible = pathParams.parentVisible;\n            return parentVisible ?\n                [\n                    ['M', x1, y1],\n                    [\n                        'C',\n                        x1 + offset,\n                        y1,\n                        x1 - offset + width * (inverted ? -1 : 1),\n                        y2,\n                        x1 + width * (inverted ? -1 : 1),\n                        y2\n                    ],\n                    ['L', x2, y2]\n                ] :\n                [\n                    ['M', x1, y1],\n                    ['C', x1, y1, x1, y2, x1, y2],\n                    ['L', x2, y2]\n                ];\n        }\n        /**\n         * General function to apply corner radius to a path\n         * @private\n         */\n        function applyRadius(path, r) {\n            var d = [];\n            for (var i = 0; i < path.length; i++) {\n                var x = path[i][1];\n                var y = path[i][2];\n                if (typeof x === 'number' && typeof y === 'number') {\n                    // moveTo\n                    if (i === 0) {\n                        d.push(['M', x, y]);\n                    }\n                    else if (i === path.length - 1) {\n                        d.push(['L', x, y]);\n                        // curveTo\n                    }\n                    else if (r) {\n                        var prevSeg = path[i - 1];\n                        var nextSeg = path[i + 1];\n                        if (prevSeg && nextSeg) {\n                            var x1 = prevSeg[1], y1 = prevSeg[2], x2 = nextSeg[1], y2 = nextSeg[2];\n                            // Only apply to breaks\n                            if (typeof x1 === 'number' &&\n                                typeof x2 === 'number' &&\n                                typeof y1 === 'number' &&\n                                typeof y2 === 'number' &&\n                                x1 !== x2 &&\n                                y1 !== y2) {\n                                var directionX = x1 < x2 ? 1 : -1, directionY = y1 < y2 ? 1 : -1;\n                                d.push([\n                                    'L',\n                                    x - directionX * Math.min(Math.abs(x - x1), r),\n                                    y - directionY * Math.min(Math.abs(y - y1), r)\n                                ], [\n                                    'C',\n                                    x,\n                                    y,\n                                    x,\n                                    y,\n                                    x + directionX * Math.min(Math.abs(x - x2), r),\n                                    y + directionY * Math.min(Math.abs(y - y2), r)\n                                ]);\n                            }\n                        }\n                        // lineTo\n                    }\n                    else {\n                        d.push(['L', x, y]);\n                    }\n                }\n            }\n            return d;\n        }\n        var PathUtilities = {\n            applyRadius: applyRadius,\n            getLinkPath: getLinkPath\n        };\n\n        return PathUtilities;\n    });\n    _registerModule(_modules, 'Gantt/PathfinderAlgorithms.js', [_modules['Series/PathUtilities.js'], _modules['Core/Utilities.js']], function (PathUtilities, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Author: Ã˜ystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var min = Math.min, max = Math.max, abs = Math.abs;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get index of last obstacle before xMin. Employs a type of binary search, and\n         * thus requires that obstacles are sorted by xMin value.\n         *\n         * @private\n         * @function findLastObstacleBefore\n         *\n         * @param {Array<object>} obstacles\n         *        Array of obstacles to search in.\n         *\n         * @param {number} xMin\n         *        The xMin threshold.\n         *\n         * @param {number} [startIx]\n         *        Starting index to search from. Must be within array range.\n         *\n         * @return {number}\n         *         The index of the last obstacle element before xMin.\n         */\n        function findLastObstacleBefore(obstacles, xMin, startIx) {\n            var min = xMin - 0.0000001; // Make sure we include all obstacles at xMin\n            var left = startIx || 0, // Left limit\n            right = obstacles.length - 1, // Right limit\n            cursor, cmp;\n            while (left <= right) {\n                cursor = (right + left) >> 1;\n                cmp = min - obstacles[cursor].xMin;\n                if (cmp > 0) {\n                    left = cursor + 1;\n                }\n                else if (cmp < 0) {\n                    right = cursor - 1;\n                }\n                else {\n                    return cursor;\n                }\n            }\n            return left > 0 ? left - 1 : 0;\n        }\n        /**\n         * Test if a point lays within an obstacle.\n         *\n         * @private\n         * @function pointWithinObstacle\n         *\n         * @param {Object} obstacle\n         *        Obstacle to test.\n         *\n         * @param {Highcharts.Point} point\n         *        Point with x/y props.\n         *\n         * @return {boolean}\n         *         Whether point is within the obstacle or not.\n         */\n        function pointWithinObstacle(obstacle, point) {\n            return (point.x <= obstacle.xMax &&\n                point.x >= obstacle.xMin &&\n                point.y <= obstacle.yMax &&\n                point.y >= obstacle.yMin);\n        }\n        /**\n         * Find the index of an obstacle that wraps around a point.\n         * Returns -1 if not found.\n         *\n         * @private\n         * @function findObstacleFromPoint\n         *\n         * @param {Array<object>} obstacles\n         *        Obstacles to test.\n         *\n         * @param {Highcharts.Point} point\n         *        Point with x/y props.\n         *\n         * @return {number}\n         *         Ix of the obstacle in the array, or -1 if not found.\n         */\n        function findObstacleFromPoint(obstacles, point) {\n            var i = findLastObstacleBefore(obstacles, point.x + 1) + 1;\n            while (i--) {\n                if (obstacles[i].xMax >= point.x &&\n                    // Optimization using lazy evaluation\n                    pointWithinObstacle(obstacles[i], point)) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        /**\n         * Get SVG path array from array of line segments.\n         *\n         * @private\n         * @function pathFromSegments\n         *\n         * @param {Array<object>} segments\n         *        The segments to build the path from.\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         SVG path array as accepted by the SVG Renderer.\n         */\n        function pathFromSegments(segments) {\n            var path = [];\n            if (segments.length) {\n                path.push(['M', segments[0].start.x, segments[0].start.y]);\n                for (var i = 0; i < segments.length; ++i) {\n                    path.push(['L', segments[i].end.x, segments[i].end.y]);\n                }\n            }\n            return path;\n        }\n        /**\n         * Limits obstacle max/mins in all directions to bounds. Modifies input\n         * obstacle.\n         *\n         * @private\n         * @function limitObstacleToBounds\n         *\n         * @param {Object} obstacle\n         *        Obstacle to limit.\n         *\n         * @param {Object} bounds\n         *        Bounds to use as limit.\n         *\n         * @return {void}\n         */\n        function limitObstacleToBounds(obstacle, bounds) {\n            obstacle.yMin = max(obstacle.yMin, bounds.yMin);\n            obstacle.yMax = min(obstacle.yMax, bounds.yMax);\n            obstacle.xMin = max(obstacle.xMin, bounds.xMin);\n            obstacle.xMax = min(obstacle.xMax, bounds.xMax);\n        }\n        /**\n         * Get an SVG path from a starting coordinate to an ending coordinate.\n         * Draws a straight line.\n         *\n         * @function Highcharts.Pathfinder.algorithms.straight\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        function straight(start, end) {\n            return {\n                path: [\n                    ['M', start.x, start.y],\n                    ['L', end.x, end.y]\n                ],\n                obstacles: [{ start: start, end: end }]\n            };\n        }\n        /**\n         * Find a path from a starting coordinate to an ending coordinate, using\n         * right angles only, and taking only starting/ending obstacle into\n         * consideration.\n         *\n         * @function Highcharts.Pathfinder.algorithms.simpleConnect\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @param {Object} options\n         *        Options for the algorithm:\n         *        - chartObstacles: Array of chart obstacles to avoid\n         *        - startDirectionX: Optional. True if starting in the X direction.\n         *          If not provided, the algorithm starts in the direction that is\n         *          the furthest between start/end.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        var simpleConnect = function (start, end, options) {\n            var segments = [], chartObstacles = options.chartObstacles, startObstacleIx = findObstacleFromPoint(chartObstacles, start), endObstacleIx = findObstacleFromPoint(chartObstacles, end);\n            var endSegment, dir = pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)) ? 'x' : 'y', startObstacle, endObstacle, waypoint, useMax, endPoint;\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Return a clone of a point with a property set from a target object,\n             * optionally with an offset\n             * @private\n             */\n            function copyFromPoint(from, fromKey, to, toKey, offset) {\n                var point = {\n                    x: from.x,\n                    y: from.y\n                };\n                point[fromKey] = to[toKey || fromKey] + (offset || 0);\n                return point;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Return waypoint outside obstacle.\n             * @private\n             */\n            function getMeOut(obstacle, point, direction) {\n                var useMax = abs(point[direction] - obstacle[direction + 'Min']) >\n                    abs(point[direction] - obstacle[direction + 'Max']);\n                return copyFromPoint(point, direction, obstacle, direction + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1);\n            }\n            // Pull out end point\n            if (endObstacleIx > -1) {\n                endObstacle = chartObstacles[endObstacleIx];\n                waypoint = getMeOut(endObstacle, end, dir);\n                endSegment = {\n                    start: waypoint,\n                    end: end\n                };\n                endPoint = waypoint;\n            }\n            else {\n                endPoint = end;\n            }\n            // If an obstacle envelops the start point, add a segment to get out,\n            // and around it.\n            if (startObstacleIx > -1) {\n                startObstacle = chartObstacles[startObstacleIx];\n                waypoint = getMeOut(startObstacle, start, dir);\n                segments.push({\n                    start: start,\n                    end: waypoint\n                });\n                // If we are going back again, switch direction to get around start\n                // obstacle.\n                if (\n                // Going towards max from start:\n                waypoint[dir] >= start[dir] ===\n                    // Going towards min to end:\n                    waypoint[dir] >= endPoint[dir]) {\n                    dir = dir === 'y' ? 'x' : 'y';\n                    useMax = start[dir] < end[dir];\n                    segments.push({\n                        start: waypoint,\n                        end: copyFromPoint(waypoint, dir, startObstacle, dir + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1)\n                    });\n                    // Switch direction again\n                    dir = dir === 'y' ? 'x' : 'y';\n                }\n            }\n            // We are around the start obstacle. Go towards the end in one\n            // direction.\n            var prevWaypoint = segments.length ?\n                segments[segments.length - 1].end :\n                start;\n            waypoint = copyFromPoint(prevWaypoint, dir, endPoint);\n            segments.push({\n                start: prevWaypoint,\n                end: waypoint\n            });\n            // Final run to end point in the other direction\n            dir = dir === 'y' ? 'x' : 'y';\n            var waypoint2 = copyFromPoint(waypoint, dir, endPoint);\n            segments.push({\n                start: waypoint,\n                end: waypoint2\n            });\n            // Finally add the endSegment\n            segments.push(endSegment);\n            var path = PathUtilities.applyRadius(pathFromSegments(segments), options.radius);\n            return {\n                path: path,\n                obstacles: segments\n            };\n        };\n        simpleConnect.requiresObstacles = true;\n        /**\n         * Find a path from a starting coordinate to an ending coordinate, taking\n         * obstacles into consideration. Might not always find the optimal path,\n         * but is fast, and usually good enough.\n         *\n         * @function Highcharts.Pathfinder.algorithms.fastAvoid\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @param {Object} options\n         *        Options for the algorithm.\n         *        - chartObstacles:  Array of chart obstacles to avoid\n         *        - lineObstacles:   Array of line obstacles to jump over\n         *        - obstacleMetrics: Object with metrics of chartObstacles cached\n         *        - hardBounds:      Hard boundaries to not cross\n         *        - obstacleOptions: Options for the obstacles, including margin\n         *        - startDirectionX: Optional. True if starting in the X direction.\n         *                           If not provided, the algorithm starts in the\n         *                           direction that is the furthest between\n         *                           start/end.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        function fastAvoid(start, end, options) {\n            /*\n                Algorithm rules/description\n                - Find initial direction\n                - Determine soft/hard max for each direction.\n                - Move along initial direction until obstacle.\n                - Change direction.\n                - If hitting obstacle, first try to change length of previous line\n                    before changing direction again.\n\n                Soft min/max x = start/destination x +/- widest obstacle + margin\n                Soft min/max y = start/destination y +/- tallest obstacle + margin\n\n                @todo:\n                    - Make retrospective, try changing prev segment to reduce\n                        corners\n                    - Fix logic for breaking out of end-points - not always picking\n                        the best direction currently\n                    - When going around the end obstacle we should not always go the\n                        shortest route, rather pick the one closer to the end point\n            */\n            var dirIsX = pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)), dir = dirIsX ? 'x' : 'y', endSegments = [], \n            // Boundaries to stay within. If beyond soft boundary, prefer to\n            // change direction ASAP. If at hard max, always change immediately.\n            metrics = options.obstacleMetrics, softMinX = min(start.x, end.x) - metrics.maxWidth - 10, softMaxX = max(start.x, end.x) + metrics.maxWidth + 10, softMinY = min(start.y, end.y) - metrics.maxHeight - 10, softMaxY = max(start.y, end.y) + metrics.maxHeight + 10;\n            var segments, useMax, extractedEndPoint, forceObstacleBreak = false, // Used in clearPathTo to keep track of\n            // when to force break through an obstacle.\n            // Obstacles\n            chartObstacles = options.chartObstacles, endObstacleIx = findLastObstacleBefore(chartObstacles, softMaxX);\n            var startObstacleIx = findLastObstacleBefore(chartObstacles, softMinX);\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * How far can you go between two points before hitting an obstacle?\n             * Does not work for diagonal lines (because it doesn't have to).\n             * @private\n             */\n            function pivotPoint(fromPoint, toPoint, directionIsX) {\n                var searchDirection = fromPoint.x < toPoint.x ? 1 : -1;\n                var firstPoint, lastPoint, highestPoint, lowestPoint;\n                if (fromPoint.x < toPoint.x) {\n                    firstPoint = fromPoint;\n                    lastPoint = toPoint;\n                }\n                else {\n                    firstPoint = toPoint;\n                    lastPoint = fromPoint;\n                }\n                if (fromPoint.y < toPoint.y) {\n                    lowestPoint = fromPoint;\n                    highestPoint = toPoint;\n                }\n                else {\n                    lowestPoint = toPoint;\n                    highestPoint = fromPoint;\n                }\n                // Go through obstacle range in reverse if toPoint is before\n                // fromPoint in the X-dimension.\n                var i = searchDirection < 0 ?\n                    // Searching backwards, start at last obstacle before last point\n                    min(findLastObstacleBefore(chartObstacles, lastPoint.x), chartObstacles.length - 1) :\n                    // Forwards. Since we're not sorted by xMax, we have to look\n                    // at all obstacles.\n                    0;\n                // Go through obstacles in this X range\n                while (chartObstacles[i] && (searchDirection > 0 && chartObstacles[i].xMin <= lastPoint.x ||\n                    searchDirection < 0 && chartObstacles[i].xMax >= firstPoint.x)) {\n                    // If this obstacle is between from and to points in a straight\n                    // line, pivot at the intersection.\n                    if (chartObstacles[i].xMin <= lastPoint.x &&\n                        chartObstacles[i].xMax >= firstPoint.x &&\n                        chartObstacles[i].yMin <= highestPoint.y &&\n                        chartObstacles[i].yMax >= lowestPoint.y) {\n                        if (directionIsX) {\n                            return {\n                                y: fromPoint.y,\n                                x: fromPoint.x < toPoint.x ?\n                                    chartObstacles[i].xMin - 1 :\n                                    chartObstacles[i].xMax + 1,\n                                obstacle: chartObstacles[i]\n                            };\n                        }\n                        // Else ...\n                        return {\n                            x: fromPoint.x,\n                            y: fromPoint.y < toPoint.y ?\n                                chartObstacles[i].yMin - 1 :\n                                chartObstacles[i].yMax + 1,\n                            obstacle: chartObstacles[i]\n                        };\n                    }\n                    i += searchDirection;\n                }\n                return toPoint;\n            }\n            /**\n             * Decide in which direction to dodge or get out of an obstacle.\n             * Considers desired direction, which way is shortest, soft and hard\n             * bounds.\n             *\n             * (? Returns a string, either xMin, xMax, yMin or yMax.)\n             *\n             * @private\n             * @function\n             *\n             * @param {Object} obstacle\n             *        Obstacle to dodge/escape.\n             *\n             * @param {Object} fromPoint\n             *        Point with x/y props that's dodging/escaping.\n             *\n             * @param {Object} toPoint\n             *        Goal point.\n             *\n             * @param {boolean} dirIsX\n             *        Dodge in X dimension.\n             *\n             * @param {Object} bounds\n             *        Hard and soft boundaries.\n             *\n             * @return {boolean}\n             *         Use max or not.\n             */\n            function getDodgeDirection(obstacle, fromPoint, toPoint, dirIsX, bounds) {\n                var softBounds = bounds.soft, hardBounds = bounds.hard, dir = dirIsX ? 'x' : 'y', toPointMax = { x: fromPoint.x, y: fromPoint.y }, toPointMin = { x: fromPoint.x, y: fromPoint.y }, maxOutOfSoftBounds = obstacle[dir + 'Max'] >=\n                    softBounds[dir + 'Max'], minOutOfSoftBounds = obstacle[dir + 'Min'] <=\n                    softBounds[dir + 'Min'], maxOutOfHardBounds = obstacle[dir + 'Max'] >=\n                    hardBounds[dir + 'Max'], minOutOfHardBounds = obstacle[dir + 'Min'] <=\n                    hardBounds[dir + 'Min'], \n                // Find out if we should prefer one direction over the other if\n                // we can choose freely\n                minDistance = abs(obstacle[dir + 'Min'] - fromPoint[dir]), maxDistance = abs(obstacle[dir + 'Max'] - fromPoint[dir]);\n                var // If it's a small difference, pick the one leading towards dest\n                // point. Otherwise pick the shortest distance\n                useMax = abs(minDistance - maxDistance) < 10 ?\n                    fromPoint[dir] < toPoint[dir] :\n                    maxDistance < minDistance;\n                // Check if we hit any obstacles trying to go around in either\n                // direction.\n                toPointMin[dir] = obstacle[dir + 'Min'];\n                toPointMax[dir] = obstacle[dir + 'Max'];\n                var minPivot = pivotPoint(fromPoint, toPointMin, dirIsX)[dir] !==\n                    toPointMin[dir], maxPivot = pivotPoint(fromPoint, toPointMax, dirIsX)[dir] !==\n                    toPointMax[dir];\n                useMax = minPivot ?\n                    (maxPivot ? useMax : true) :\n                    (maxPivot ? false : useMax);\n                // `useMax` now contains our preferred choice, bounds not taken into\n                // account. If both or neither direction is out of bounds we want to\n                // use this.\n                // Deal with soft bounds\n                useMax = minOutOfSoftBounds ?\n                    (maxOutOfSoftBounds ? useMax : true) : // Out on min\n                    (maxOutOfSoftBounds ? false : useMax); // Not out on min\n                // Deal with hard bounds\n                useMax = minOutOfHardBounds ?\n                    (maxOutOfHardBounds ? useMax : true) : // Out on min\n                    (maxOutOfHardBounds ? false : useMax); // Not out on min\n                return useMax;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Find a clear path between point.\n             * @private\n             */\n            function clearPathTo(fromPoint, toPoint, dirIsX) {\n                // Don't waste time if we've hit goal\n                if (fromPoint.x === toPoint.x && fromPoint.y === toPoint.y) {\n                    return [];\n                }\n                var dir = dirIsX ? 'x' : 'y', obstacleMargin = options.obstacleOptions.margin, bounds = {\n                    soft: {\n                        xMin: softMinX,\n                        xMax: softMaxX,\n                        yMin: softMinY,\n                        yMax: softMaxY\n                    },\n                    hard: options.hardBounds\n                };\n                var pivot, segments, waypoint, waypointUseMax, envelopingObstacle, secondEnvelopingObstacle, envelopWaypoint;\n                // If fromPoint is inside an obstacle we have a problem. Break out\n                // by just going to the outside of this obstacle. We prefer to go to\n                // the nearest edge in the chosen direction.\n                envelopingObstacle =\n                    findObstacleFromPoint(chartObstacles, fromPoint);\n                if (envelopingObstacle > -1) {\n                    envelopingObstacle = chartObstacles[envelopingObstacle];\n                    waypointUseMax = getDodgeDirection(envelopingObstacle, fromPoint, toPoint, dirIsX, bounds);\n                    // Cut obstacle to hard bounds to make sure we stay within\n                    limitObstacleToBounds(envelopingObstacle, options.hardBounds);\n                    envelopWaypoint = dirIsX ? {\n                        y: fromPoint.y,\n                        x: envelopingObstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                            (waypointUseMax ? 1 : -1)\n                    } : {\n                        x: fromPoint.x,\n                        y: envelopingObstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                            (waypointUseMax ? 1 : -1)\n                    };\n                    // If we crashed into another obstacle doing this, we put the\n                    // waypoint between them instead\n                    secondEnvelopingObstacle = findObstacleFromPoint(chartObstacles, envelopWaypoint);\n                    if (secondEnvelopingObstacle > -1) {\n                        secondEnvelopingObstacle = chartObstacles[secondEnvelopingObstacle];\n                        // Cut obstacle to hard bounds\n                        limitObstacleToBounds(secondEnvelopingObstacle, options.hardBounds);\n                        // Modify waypoint to lay between obstacles\n                        envelopWaypoint[dir] = waypointUseMax ? max(envelopingObstacle[dir + 'Max'] - obstacleMargin + 1, (secondEnvelopingObstacle[dir + 'Min'] +\n                            envelopingObstacle[dir + 'Max']) / 2) :\n                            min((envelopingObstacle[dir + 'Min'] + obstacleMargin - 1), ((secondEnvelopingObstacle[dir + 'Max'] +\n                                envelopingObstacle[dir + 'Min']) / 2));\n                        // We are not going anywhere. If this happens for the first\n                        // time, do nothing. Otherwise, try to go to the extreme of\n                        // the obstacle pair in the current direction.\n                        if (fromPoint.x === envelopWaypoint.x &&\n                            fromPoint.y === envelopWaypoint.y) {\n                            if (forceObstacleBreak) {\n                                envelopWaypoint[dir] = waypointUseMax ?\n                                    max(envelopingObstacle[dir + 'Max'], secondEnvelopingObstacle[dir + 'Max']) + 1 :\n                                    min(envelopingObstacle[dir + 'Min'], secondEnvelopingObstacle[dir + 'Min']) - 1;\n                            }\n                            // Toggle on if off, and the opposite\n                            forceObstacleBreak = !forceObstacleBreak;\n                        }\n                        else {\n                            // This point is not identical to previous.\n                            // Clear break trigger.\n                            forceObstacleBreak = false;\n                        }\n                    }\n                    segments = [{\n                            start: fromPoint,\n                            end: envelopWaypoint\n                        }];\n                }\n                else { // If not enveloping, use standard pivot calculation\n                    pivot = pivotPoint(fromPoint, {\n                        x: dirIsX ? toPoint.x : fromPoint.x,\n                        y: dirIsX ? fromPoint.y : toPoint.y\n                    }, dirIsX);\n                    segments = [{\n                            start: fromPoint,\n                            end: {\n                                x: pivot.x,\n                                y: pivot.y\n                            }\n                        }];\n                    // Pivot before goal, use a waypoint to dodge obstacle\n                    if (pivot[dirIsX ? 'x' : 'y'] !== toPoint[dirIsX ? 'x' : 'y']) {\n                        // Find direction of waypoint\n                        waypointUseMax = getDodgeDirection(pivot.obstacle, pivot, toPoint, !dirIsX, bounds);\n                        // Cut waypoint to hard bounds\n                        limitObstacleToBounds(pivot.obstacle, options.hardBounds);\n                        waypoint = {\n                            x: dirIsX ?\n                                pivot.x :\n                                pivot.obstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                                    (waypointUseMax ? 1 : -1),\n                            y: dirIsX ?\n                                pivot.obstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                                    (waypointUseMax ? 1 : -1) :\n                                pivot.y\n                        };\n                        // We're changing direction here, store that to make sure we\n                        // also change direction when adding the last segment array\n                        // after handling waypoint.\n                        dirIsX = !dirIsX;\n                        segments = segments.concat(clearPathTo({\n                            x: pivot.x,\n                            y: pivot.y\n                        }, waypoint, dirIsX));\n                    }\n                }\n                // Get segments for the other direction too\n                // Recursion is our friend\n                segments = segments.concat(clearPathTo(segments[segments.length - 1].end, toPoint, !dirIsX));\n                return segments;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Extract point to outside of obstacle in whichever direction is\n             * closest. Returns new point outside obstacle.\n             * @private\n             */\n            function extractFromObstacle(obstacle, point, goalPoint) {\n                var dirIsX = min(obstacle.xMax - point.x, point.x - obstacle.xMin) <\n                    min(obstacle.yMax - point.y, point.y - obstacle.yMin), bounds = {\n                    soft: options.hardBounds,\n                    hard: options.hardBounds\n                }, useMax = getDodgeDirection(obstacle, point, goalPoint, dirIsX, bounds);\n                return dirIsX ? {\n                    y: point.y,\n                    x: obstacle[useMax ? 'xMax' : 'xMin'] + (useMax ? 1 : -1)\n                } : {\n                    x: point.x,\n                    y: obstacle[useMax ? 'yMax' : 'yMin'] + (useMax ? 1 : -1)\n                };\n            }\n            // Cut the obstacle array to soft bounds for optimization in large\n            // datasets.\n            chartObstacles =\n                chartObstacles.slice(startObstacleIx, endObstacleIx + 1);\n            // If an obstacle envelops the end point, move it out of there and add\n            // a little segment to where it was.\n            if ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n                extractedEndPoint = extractFromObstacle(chartObstacles[endObstacleIx], end, start);\n                endSegments.push({\n                    end: end,\n                    start: extractedEndPoint\n                });\n                end = extractedEndPoint;\n            }\n            // If it's still inside one or more obstacles, get out of there by\n            // force-moving towards the start point.\n            while ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n                useMax = end[dir] - start[dir] < 0;\n                extractedEndPoint = {\n                    x: end.x,\n                    y: end.y\n                };\n                extractedEndPoint[dir] = chartObstacles[endObstacleIx][useMax ? dir + 'Max' : dir + 'Min'] + (useMax ? 1 : -1);\n                endSegments.push({\n                    end: end,\n                    start: extractedEndPoint\n                });\n                end = extractedEndPoint;\n            }\n            // Find the path\n            segments = clearPathTo(start, end, dirIsX);\n            // Add the end-point segments\n            segments = segments.concat(endSegments.reverse());\n            return {\n                path: pathFromSegments(segments),\n                obstacles: segments\n            };\n        }\n        fastAvoid.requiresObstacles = true;\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        // Define the available pathfinding algorithms.\n        // Algorithms take up to 3 arguments: starting point, ending point, and an\n        // options object.\n        var algorithms = {\n            fastAvoid: fastAvoid,\n            straight: straight,\n            simpleConnect: simpleConnect\n        };\n\n        return algorithms;\n    });\n    _registerModule(_modules, 'Gantt/ConnectorsDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Defaults\n         *\n         * */\n        /*\n         @todo:\n             - Document how to write your own algorithms\n             - Consider adding a Point.pathTo method that wraps creating a connection\n               and rendering it\n        */\n        var connectorsDefaults = {\n            /**\n             * The Pathfinder module allows you to define connections between any two\n             * points, represented as lines - optionally with markers for the start\n             * and/or end points. Multiple algorithms are available for calculating how\n             * the connecting lines are drawn.\n             *\n             * Connector functionality requires Highcharts Gantt to be loaded. In Gantt\n             * charts, the connectors are used to draw dependencies between tasks.\n             *\n             * @see [dependency](series.gantt.data.dependency)\n             *\n             * @sample gantt/pathfinder/demo\n             *         Pathfinder connections\n             *\n             * @declare      Highcharts.ConnectorsOptions\n             * @product      gantt\n             * @optionparent connectors\n             */\n            connectors: {\n                /**\n                 * Enable connectors for this chart. Requires Highcharts Gantt.\n                 *\n                 * @type      {boolean}\n                 * @default   true\n                 * @since     6.2.0\n                 * @apioption connectors.enabled\n                 */\n                /**\n                 * Set the default dash style for this chart's connecting lines.\n                 *\n                 * @type      {string}\n                 * @default   solid\n                 * @since     6.2.0\n                 * @apioption connectors.dashStyle\n                 */\n                /**\n                 * Set the default color for this chart's Pathfinder connecting lines.\n                 * Defaults to the color of the point being connected.\n                 *\n                 * @type      {Highcharts.ColorString}\n                 * @since     6.2.0\n                 * @apioption connectors.lineColor\n                 */\n                /**\n                 * Set the default pathfinder margin to use, in pixels. Some Pathfinder\n                 * algorithms attempt to avoid obstacles, such as other points in the\n                 * chart. These algorithms use this margin to determine how close lines\n                 * can be to an obstacle. The default is to compute this automatically\n                 * from the size of the obstacles in the chart.\n                 *\n                 * To draw connecting lines close to existing points, set this to a low\n                 * number. For more space around existing points, set this number\n                 * higher.\n                 *\n                 * @sample gantt/pathfinder/algorithm-margin\n                 *         Small algorithmMargin\n                 *\n                 * @type      {number}\n                 * @since     6.2.0\n                 * @apioption connectors.algorithmMargin\n                 */\n                /**\n                 * Set the default pathfinder algorithm to use for this chart. It is\n                 * possible to define your own algorithms by adding them to the\n                 * Highcharts.Pathfinder.prototype.algorithms object before the chart\n                 * has been created.\n                 *\n                 * The default algorithms are as follows:\n                 *\n                 * `straight`:      Draws a straight line between the connecting\n                 *                  points. Does not avoid other points when drawing.\n                 *\n                 * `simpleConnect`: Finds a path between the points using right angles\n                 *                  only. Takes only starting/ending points into\n                 *                  account, and will not avoid other points.\n                 *\n                 * `fastAvoid`:     Finds a path between the points using right angles\n                 *                  only. Will attempt to avoid other points, but its\n                 *                  focus is performance over accuracy. Works well with\n                 *                  less dense datasets.\n                 *\n                 * Default value: `straight` is used as default for most series types,\n                 * while `simpleConnect` is used as default for Gantt series, to show\n                 * dependencies between points.\n                 *\n                 * @sample gantt/pathfinder/demo\n                 *         Different types used\n                 *\n                 * @type    {Highcharts.PathfinderTypeValue}\n                 * @default undefined\n                 * @since   6.2.0\n                 */\n                type: 'straight',\n                /**\n                 * The corner radius for the connector line.\n                 *\n                 * @since 11.2.0\n                 */\n                radius: 0,\n                /**\n                 * Set the default pixel width for this chart's Pathfinder connecting\n                 * lines.\n                 *\n                 * @since 6.2.0\n                 */\n                lineWidth: 1,\n                /**\n                 * Marker options for this chart's Pathfinder connectors. Note that\n                 * this option is overridden by the `startMarker` and `endMarker`\n                 * options.\n                 *\n                 * @declare Highcharts.ConnectorsMarkerOptions\n                 * @since   6.2.0\n                 */\n                marker: {\n                    /**\n                     * Set the radius of the connector markers. The default is\n                     * automatically computed based on the algorithmMargin setting.\n                     *\n                     * Setting marker.width and marker.height will override this\n                     * setting.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.radius\n                     */\n                    /**\n                     * Set the width of the connector markers. If not supplied, this\n                     * is inferred from the marker radius.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.width\n                     */\n                    /**\n                     * Set the height of the connector markers. If not supplied, this\n                     * is inferred from the marker radius.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.height\n                     */\n                    /**\n                     * Set the color of the connector markers. By default this is the\n                     * same as the connector color.\n                     *\n                     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.color\n                     */\n                    /**\n                     * Set the line/border color of the connector markers. By default\n                     * this is the same as the marker color.\n                     *\n                     * @type      {Highcharts.ColorString}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.lineColor\n                     */\n                    /**\n                     * Enable markers for the connectors.\n                     */\n                    enabled: false,\n                    /**\n                     * Horizontal alignment of the markers relative to the points.\n                     *\n                     * @type {Highcharts.AlignValue}\n                     */\n                    align: 'center',\n                    /**\n                     * Vertical alignment of the markers relative to the points.\n                     *\n                     * @type {Highcharts.VerticalAlignValue}\n                     */\n                    verticalAlign: 'middle',\n                    /**\n                     * Whether or not to draw the markers inside the points.\n                     */\n                    inside: false,\n                    /**\n                     * Set the line/border width of the pathfinder markers.\n                     */\n                    lineWidth: 1\n                },\n                /**\n                 * Marker options specific to the start markers for this chart's\n                 * Pathfinder connectors. Overrides the generic marker options.\n                 *\n                 * @declare Highcharts.ConnectorsStartMarkerOptions\n                 * @extends connectors.marker\n                 * @since   6.2.0\n                 */\n                startMarker: {\n                    /**\n                     * Set the symbol of the connector start markers.\n                     */\n                    symbol: 'diamond'\n                },\n                /**\n                 * Marker options specific to the end markers for this chart's\n                 * Pathfinder connectors. Overrides the generic marker options.\n                 *\n                 * @declare Highcharts.ConnectorsEndMarkerOptions\n                 * @extends connectors.marker\n                 * @since   6.2.0\n                 */\n                endMarker: {\n                    /**\n                     * Set the symbol of the connector end markers.\n                     */\n                    symbol: 'arrow-filled'\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Override Pathfinder connector options for a series. Requires Highcharts Gantt\n         * to be loaded.\n         *\n         * @declare   Highcharts.SeriesConnectorsOptionsObject\n         * @extends   connectors\n         * @since     6.2.0\n         * @excluding enabled, algorithmMargin\n         * @product   gantt\n         * @apioption plotOptions.series.connectors\n         */\n        /**\n         * Connect to a point. This option can be either a string, referring to the ID\n         * of another point, or an object, or an array of either. If the option is an\n         * array, each element defines a connection.\n         *\n         * @sample gantt/pathfinder/demo\n         *         Different connection types\n         *\n         * @declare   Highcharts.XrangePointConnectorsOptionsObject\n         * @type      {string|Array<string|*>|*}\n         * @extends   plotOptions.series.connectors\n         * @since     6.2.0\n         * @excluding enabled\n         * @product   gantt\n         * @requires  highcharts-gantt\n         * @apioption series.xrange.data.connect\n         */\n        /**\n         * The ID of the point to connect to.\n         *\n         * @type      {string}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.xrange.data.connect.to\n         */\n        ''; // Keeps doclets above in JS file\n\n        return connectorsDefaults;\n    });\n    _registerModule(_modules, 'Gantt/PathfinderComposition.js', [_modules['Gantt/ConnectorsDefaults.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (ConnectorsDefaults, D, H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var composed = H.composed;\n        var defined = U.defined, error = U.error, merge = U.merge, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get point bounding box using plotX/plotY and shapeArgs. If using\n         * graphic.getBBox() directly, the bbox will be affected by animation.\n         *\n         * @private\n         * @function\n         *\n         * @param {Highcharts.Point} point\n         *        The point to get BB of.\n         *\n         * @return {Highcharts.Dictionary<number>|null}\n         *         Result xMax, xMin, yMax, yMin.\n         */\n        function getPointBB(point) {\n            var shapeArgs = point.shapeArgs;\n            // Prefer using shapeArgs (columns)\n            if (shapeArgs) {\n                return {\n                    xMin: shapeArgs.x || 0,\n                    xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n                    yMin: shapeArgs.y || 0,\n                    yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n                };\n            }\n            // Otherwise use plotX/plotY and bb\n            var bb = point.graphic && point.graphic.getBBox();\n            return bb ? {\n                xMin: point.plotX - bb.width / 2,\n                xMax: point.plotX + bb.width / 2,\n                yMin: point.plotY - bb.height / 2,\n                yMax: point.plotY + bb.height / 2\n            } : null;\n        }\n        /**\n         * Warn if using legacy options. Copy the options over. Note that this will\n         * still break if using the legacy options in chart.update, addSeries etc.\n         * @private\n         */\n        function warnLegacy(chart) {\n            if (chart.options.pathfinder ||\n                chart.series.reduce(function (acc, series) {\n                    if (series.options) {\n                        merge(true, (series.options.connectors = series.options.connectors ||\n                            {}), series.options.pathfinder);\n                    }\n                    return acc || series.options && series.options.pathfinder;\n                }, false)) {\n                merge(true, (chart.options.connectors = chart.options.connectors || {}), chart.options.pathfinder);\n                error('WARNING: Pathfinder options have been renamed. ' +\n                    'Use \"chart.connectors\" or \"series.connectors\" instead.');\n            }\n        }\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ConnectionComposition;\n        (function (ConnectionComposition) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(ChartClass, PathfinderClass, PointClass) {\n                if (pushUnique(composed, compose)) {\n                    var pointProto = PointClass.prototype;\n                    // Initialize Pathfinder for charts\n                    ChartClass.prototype.callbacks.push(function (chart) {\n                        var options = chart.options;\n                        if (options.connectors.enabled !== false) {\n                            warnLegacy(chart);\n                            this.pathfinder = new PathfinderClass(this);\n                            this.pathfinder.update(true); // First draw, defer render\n                        }\n                    });\n                    pointProto.getMarkerVector = pointGetMarkerVector;\n                    pointProto.getPathfinderAnchorPoint = pointGetPathfinderAnchorPoint;\n                    pointProto.getRadiansToVector = pointGetRadiansToVector;\n                    // Set default Pathfinder options\n                    setOptions(ConnectorsDefaults);\n                }\n            }\n            ConnectionComposition.compose = compose;\n            /**\n             * Get coordinates of anchor point for pathfinder connection.\n             *\n             * @private\n             * @function Highcharts.Point#getPathfinderAnchorPoint\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n             *        Connection options for position on point.\n             *\n             * @return {Highcharts.PositionObject}\n             *         An object with x/y properties for the position. Coordinates are\n             *         in plot values, not relative to point.\n             */\n            function pointGetPathfinderAnchorPoint(markerOptions) {\n                var bb = getPointBB(this);\n                var x, y;\n                switch (markerOptions.align) { // eslint-disable-line default-case\n                    case 'right':\n                        x = 'xMax';\n                        break;\n                    case 'left':\n                        x = 'xMin';\n                }\n                switch (markerOptions.verticalAlign) { // eslint-disable-line default-case\n                    case 'top':\n                        y = 'yMin';\n                        break;\n                    case 'bottom':\n                        y = 'yMax';\n                }\n                return {\n                    x: x ? bb[x] : (bb.xMin + bb.xMax) / 2,\n                    y: y ? bb[y] : (bb.yMin + bb.yMax) / 2\n                };\n            }\n            /**\n             * Utility to get the angle from one point to another.\n             *\n             * @private\n             * @function Highcharts.Point#getRadiansToVector\n             *\n             * @param {Highcharts.PositionObject} v1\n             *        The first vector, as an object with x/y properties.\n             *\n             * @param {Highcharts.PositionObject} v2\n             *        The second vector, as an object with x/y properties.\n             *\n             * @return {number}\n             *         The angle in degrees\n             */\n            function pointGetRadiansToVector(v1, v2) {\n                var box;\n                if (!defined(v2)) {\n                    box = getPointBB(this);\n                    if (box) {\n                        v2 = {\n                            x: (box.xMin + box.xMax) / 2,\n                            y: (box.yMin + box.yMax) / 2\n                        };\n                    }\n                }\n                return Math.atan2(v2.y - v1.y, v1.x - v2.x);\n            }\n            /**\n             * Utility to get the position of the marker, based on the path angle and\n             * the marker's radius.\n             *\n             * @private\n             * @function Highcharts.Point#getMarkerVector\n             *\n             * @param {number} radians\n             *        The angle in radians from the point center to another vector.\n             *\n             * @param {number} markerRadius\n             *        The radius of the marker, to calculate the additional distance to\n             *        the center of the marker.\n             *\n             * @param {Object} anchor\n             *        The anchor point of the path and marker as an object with x/y\n             *        properties.\n             *\n             * @return {Object}\n             *         The marker vector as an object with x/y properties.\n             */\n            function pointGetMarkerVector(radians, markerRadius, anchor) {\n                var twoPI = Math.PI * 2.0, bb = getPointBB(this), rectWidth = bb.xMax - bb.xMin, rectHeight = bb.yMax - bb.yMin, rAtan = Math.atan2(rectHeight, rectWidth), rectHalfWidth = rectWidth / 2.0, rectHalfHeight = rectHeight / 2.0, rectHorizontalCenter = bb.xMin + rectHalfWidth, rectVerticalCenter = bb.yMin + rectHalfHeight, edgePoint = {\n                    x: rectHorizontalCenter,\n                    y: rectVerticalCenter\n                };\n                var theta = radians, tanTheta = 1, leftOrRightRegion = false, xFactor = 1, yFactor = 1;\n                while (theta < -Math.PI) {\n                    theta += twoPI;\n                }\n                while (theta > Math.PI) {\n                    theta -= twoPI;\n                }\n                tanTheta = Math.tan(theta);\n                if ((theta > -rAtan) && (theta <= rAtan)) {\n                    // Right side\n                    yFactor = -1;\n                    leftOrRightRegion = true;\n                }\n                else if (theta > rAtan && theta <= (Math.PI - rAtan)) {\n                    // Top side\n                    yFactor = -1;\n                }\n                else if (theta > (Math.PI - rAtan) || theta <= -(Math.PI - rAtan)) {\n                    // Left side\n                    xFactor = -1;\n                    leftOrRightRegion = true;\n                }\n                else {\n                    // Bottom side\n                    xFactor = -1;\n                }\n                // Correct the edgePoint according to the placement of the marker\n                if (leftOrRightRegion) {\n                    edgePoint.x += xFactor * (rectHalfWidth);\n                    edgePoint.y += yFactor * (rectHalfWidth) * tanTheta;\n                }\n                else {\n                    edgePoint.x += xFactor * (rectHeight / (2.0 * tanTheta));\n                    edgePoint.y += yFactor * (rectHalfHeight);\n                }\n                if (anchor.x !== rectHorizontalCenter) {\n                    edgePoint.x = anchor.x;\n                }\n                if (anchor.y !== rectVerticalCenter) {\n                    edgePoint.y = anchor.y;\n                }\n                return {\n                    x: edgePoint.x + (markerRadius * Math.cos(theta)),\n                    y: edgePoint.y - (markerRadius * Math.sin(theta))\n                };\n            }\n        })(ConnectionComposition || (ConnectionComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ConnectionComposition;\n    });\n    _registerModule(_modules, 'Gantt/Pathfinder.js', [_modules['Gantt/Connection.js'], _modules['Gantt/PathfinderAlgorithms.js'], _modules['Gantt/PathfinderComposition.js'], _modules['Core/Series/Point.js'], _modules['Core/Utilities.js']], function (Connection, PathfinderAlgorithms, PathfinderComposition, Point, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var max = Math.max, min = Math.min;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get point bounding box using plotX/plotY and shapeArgs. If using\n         * graphic.getBBox() directly, the bbox will be affected by animation.\n         *\n         * @private\n         * @function\n         *\n         * @param {Highcharts.Point} point\n         *        The point to get BB of.\n         *\n         * @return {Highcharts.Dictionary<number>|null}\n         *         Result xMax, xMin, yMax, yMin.\n         */\n        function getPointBB(point) {\n            var shapeArgs = point.shapeArgs;\n            // Prefer using shapeArgs (columns)\n            if (shapeArgs) {\n                return {\n                    xMin: shapeArgs.x || 0,\n                    xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n                    yMin: shapeArgs.y || 0,\n                    yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n                };\n            }\n            // Otherwise use plotX/plotY and bb\n            var bb = point.graphic && point.graphic.getBBox();\n            return bb ? {\n                xMin: point.plotX - bb.width / 2,\n                xMax: point.plotX + bb.width / 2,\n                yMin: point.plotY - bb.height / 2,\n                yMax: point.plotY + bb.height / 2\n            } : null;\n        }\n        /**\n         * Compute smallest distance between two rectangles.\n         * @private\n         */\n        function calculateObstacleDistance(a, b, bbMargin) {\n            // Count the distance even if we are slightly off\n            var margin = pick(bbMargin, 10), yOverlap = a.yMax + margin > b.yMin - margin &&\n                a.yMin - margin < b.yMax + margin, xOverlap = a.xMax + margin > b.xMin - margin &&\n                a.xMin - margin < b.xMax + margin, xDistance = yOverlap ? (a.xMin > b.xMax ? a.xMin - b.xMax : b.xMin - a.xMax) : Infinity, yDistance = xOverlap ? (a.yMin > b.yMax ? a.yMin - b.yMax : b.yMin - a.yMax) : Infinity;\n            // If the rectangles collide, try recomputing with smaller margin.\n            // If they collide anyway, discard the obstacle.\n            if (xOverlap && yOverlap) {\n                return (margin ?\n                    calculateObstacleDistance(a, b, Math.floor(margin / 2)) :\n                    Infinity);\n            }\n            return min(xDistance, yDistance);\n        }\n        /**\n         * Calculate margin to place around obstacles for the pathfinder in pixels.\n         * Returns a minimum of 1 pixel margin.\n         *\n         * @private\n         * @function\n         *\n         * @param {Array<object>} obstacles\n         *        Obstacles to calculate margin from.\n         *\n         * @return {number}\n         *         The calculated margin in pixels. At least 1.\n         */\n        function calculateObstacleMargin(obstacles) {\n            var len = obstacles.length, distances = [];\n            var onstacleDistance;\n            // Go over all obstacles and compare them to the others.\n            for (var i = 0; i < len; ++i) {\n                // Compare to all obstacles ahead. We will already have compared this\n                // obstacle to the ones before.\n                for (var j = i + 1; j < len; ++j) {\n                    onstacleDistance =\n                        calculateObstacleDistance(obstacles[i], obstacles[j]);\n                    // TODO: Magic number 80\n                    if (onstacleDistance < 80) { // Ignore large distances\n                        distances.push(onstacleDistance);\n                    }\n                }\n            }\n            // Ensure we always have at least one value, even in very spaceous charts\n            distances.push(80);\n            return max(Math.floor(distances.sort(function (a, b) {\n                return (a - b);\n            })[\n            // Discard first 10% of the relevant distances, and then grab\n            // the smallest one.\n            Math.floor(distances.length / 10)] / 2 - 1 // Divide the distance by 2 and subtract 1.\n            ), 1 // 1 is the minimum margin\n            );\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Pathfinder class.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Pathfinder\n         *\n         * @param {Highcharts.Chart} chart\n         *        The chart to operate on.\n         */\n        var Pathfinder = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Pathfinder(chart) {\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Pathfinder.compose = function (ChartClass, PointClass) {\n                PathfinderComposition.compose(ChartClass, Pathfinder, PointClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the Pathfinder object.\n             *\n             * @function Highcharts.Pathfinder#init\n             *\n             * @param {Highcharts.Chart} chart\n             *        The chart context.\n             */\n            Pathfinder.prototype.init = function (chart) {\n                // Initialize pathfinder with chart context\n                this.chart = chart;\n                // Init connection reference list\n                this.connections = [];\n                // Recalculate paths/obstacles on chart redraw\n                addEvent(chart, 'redraw', function () {\n                    this.pathfinder.update();\n                });\n            };\n            /**\n             * Update Pathfinder connections from scratch.\n             *\n             * @function Highcharts.Pathfinder#update\n             *\n             * @param {boolean} [deferRender]\n             *        Whether or not to defer rendering of connections until\n             *        series.afterAnimate event has fired. Used on first render.\n             */\n            Pathfinder.prototype.update = function (deferRender) {\n                var chart = this.chart, pathfinder = this, oldConnections = pathfinder.connections;\n                // Rebuild pathfinder connections from options\n                pathfinder.connections = [];\n                chart.series.forEach(function (series) {\n                    if (series.visible && !series.options.isInternal) {\n                        series.points.forEach(function (point) {\n                            var _a;\n                            var ganttPointOptions = point.options;\n                            // For Gantt series the connect could be\n                            // defined as a dependency\n                            if (ganttPointOptions && ganttPointOptions.dependency) {\n                                ganttPointOptions.connect = ganttPointOptions\n                                    .dependency;\n                            }\n                            var connects = (((_a = point.options) === null || _a === void 0 ? void 0 : _a.connect) &&\n                                splat(point.options.connect));\n                            var to;\n                            if (point.visible && point.isInside !== false && connects) {\n                                connects.forEach(function (connect) {\n                                    to = chart.get(typeof connect === 'string' ?\n                                        connect : connect.to);\n                                    if (to instanceof Point &&\n                                        to.series.visible &&\n                                        to.visible &&\n                                        to.isInside !== false) {\n                                        // Add new connection\n                                        pathfinder.connections.push(new Connection(point, // From\n                                        to, typeof connect === 'string' ?\n                                            {} :\n                                            connect));\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n                // Clear connections that should not be updated, and move old info over\n                // to new connections.\n                for (var j = 0, k = void 0, found = void 0, lenOld = oldConnections.length, lenNew = pathfinder.connections.length; j < lenOld; ++j) {\n                    found = false;\n                    var oldCon = oldConnections[j];\n                    for (k = 0; k < lenNew; ++k) {\n                        var newCon = pathfinder.connections[k];\n                        if ((oldCon.options && oldCon.options.type) ===\n                            (newCon.options && newCon.options.type) &&\n                            oldCon.fromPoint === newCon.fromPoint &&\n                            oldCon.toPoint === newCon.toPoint) {\n                            newCon.graphics = oldCon.graphics;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        oldCon.destroy();\n                    }\n                }\n                // Clear obstacles to force recalculation. This must be done on every\n                // redraw in case positions have changed. Recalculation is handled in\n                // Connection.getPath on demand.\n                delete this.chartObstacles;\n                delete this.lineObstacles;\n                // Draw the pending connections\n                pathfinder.renderConnections(deferRender);\n            };\n            /**\n             * Draw the chart's connecting paths.\n             *\n             * @function Highcharts.Pathfinder#renderConnections\n             *\n             * @param {boolean} [deferRender]\n             *        Whether or not to defer render until series animation is finished.\n             *        Used on first render.\n             */\n            Pathfinder.prototype.renderConnections = function (deferRender) {\n                if (deferRender) {\n                    // Render after series are done animating\n                    this.chart.series.forEach(function (series) {\n                        var render = function () {\n                            // Find pathfinder connections belonging to this series\n                            // that haven't rendered, and render them now.\n                            var pathfinder = series.chart.pathfinder, conns = pathfinder && pathfinder.connections || [];\n                            conns.forEach(function (connection) {\n                                if (connection.fromPoint &&\n                                    connection.fromPoint.series === series) {\n                                    connection.render();\n                                }\n                            });\n                            if (series.pathfinderRemoveRenderEvent) {\n                                series.pathfinderRemoveRenderEvent();\n                                delete series.pathfinderRemoveRenderEvent;\n                            }\n                        };\n                        if (series.options.animation === false) {\n                            render();\n                        }\n                        else {\n                            series.pathfinderRemoveRenderEvent = addEvent(series, 'afterAnimate', render);\n                        }\n                    });\n                }\n                else {\n                    // Go through connections and render them\n                    this.connections.forEach(function (connection) {\n                        connection.render();\n                    });\n                }\n            };\n            /**\n             * Get obstacles for the points in the chart. Does not include connecting\n             * lines from Pathfinder. Applies algorithmMargin to the obstacles.\n             *\n             * @function Highcharts.Pathfinder#getChartObstacles\n             *\n             * @param {Object} options\n             *        Options for the calculation. Currenlty only\n             *        options.algorithmMargin.\n             *\n             * @return {Array<object>}\n             *         An array of calculated obstacles. Each obstacle is defined as an\n             *         object with xMin, xMax, yMin and yMax properties.\n             */\n            Pathfinder.prototype.getChartObstacles = function (options) {\n                var series = this.chart.series, margin = pick(options.algorithmMargin, 0);\n                var obstacles = [], calculatedMargin;\n                for (var i = 0, sLen = series.length; i < sLen; ++i) {\n                    if (series[i].visible && !series[i].options.isInternal) {\n                        for (var j = 0, pLen = series[i].points.length, bb = void 0, point = void 0; j < pLen; ++j) {\n                            point = series[i].points[j];\n                            if (point.visible) {\n                                bb = getPointBB(point);\n                                if (bb) {\n                                    obstacles.push({\n                                        xMin: bb.xMin - margin,\n                                        xMax: bb.xMax + margin,\n                                        yMin: bb.yMin - margin,\n                                        yMax: bb.yMax + margin\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n                // Sort obstacles by xMin for optimization\n                obstacles = obstacles.sort(function (a, b) {\n                    return a.xMin - b.xMin;\n                });\n                // Add auto-calculated margin if the option is not defined\n                if (!defined(options.algorithmMargin)) {\n                    calculatedMargin =\n                        options.algorithmMargin =\n                            calculateObstacleMargin(obstacles);\n                    obstacles.forEach(function (obstacle) {\n                        obstacle.xMin -= calculatedMargin;\n                        obstacle.xMax += calculatedMargin;\n                        obstacle.yMin -= calculatedMargin;\n                        obstacle.yMax += calculatedMargin;\n                    });\n                }\n                return obstacles;\n            };\n            /**\n             * Utility function to get metrics for obstacles:\n             * - Widest obstacle width\n             * - Tallest obstacle height\n             *\n             * @function Highcharts.Pathfinder#getObstacleMetrics\n             *\n             * @param {Array<object>} obstacles\n             *        An array of obstacles to inspect.\n             *\n             * @return {Object}\n             *         The calculated metrics, as an object with maxHeight and maxWidth\n             *         properties.\n             */\n            Pathfinder.prototype.getObstacleMetrics = function (obstacles) {\n                var maxWidth = 0, maxHeight = 0, width, height, i = obstacles.length;\n                while (i--) {\n                    width = obstacles[i].xMax - obstacles[i].xMin;\n                    height = obstacles[i].yMax - obstacles[i].yMin;\n                    if (maxWidth < width) {\n                        maxWidth = width;\n                    }\n                    if (maxHeight < height) {\n                        maxHeight = height;\n                    }\n                }\n                return {\n                    maxHeight: maxHeight,\n                    maxWidth: maxWidth\n                };\n            };\n            /**\n             * Utility to get which direction to start the pathfinding algorithm\n             * (X vs Y), calculated from a set of marker options.\n             *\n             * @function Highcharts.Pathfinder#getAlgorithmStartDirection\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n             *        Marker options to calculate from.\n             *\n             * @return {boolean}\n             *         Returns true for X, false for Y, and undefined for autocalculate.\n             */\n            Pathfinder.prototype.getAlgorithmStartDirection = function (markerOptions) {\n                var xCenter = markerOptions.align !== 'left' &&\n                    markerOptions.align !== 'right', yCenter = markerOptions.verticalAlign !== 'top' &&\n                    markerOptions.verticalAlign !== 'bottom';\n                return xCenter ?\n                    (yCenter ? void 0 : false) : // When x is centered\n                    (yCenter ? true : void 0); // When x is off-center\n            };\n            return Pathfinder;\n        }());\n        /**\n         * @name Highcharts.Pathfinder#algorithms\n         * @type {Highcharts.Dictionary<Function>}\n         */\n        Pathfinder.prototype.algorithms = PathfinderAlgorithms;\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The default pathfinder algorithm to use for a chart. It is possible to define\n         * your own algorithms by adding them to the\n         * `Highcharts.Pathfinder.prototype.algorithms`\n         * object before the chart has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Pathfinder;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'FÃ©vrier', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'AoÃ»t',\n         *             'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: 'â†’'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected. If the selected range\n             * exceeds the total data range and the 'all' option is available,\n             * the 'all' option, showing the full range, is automatically selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n            lang: lang,\n            rangeSelector: rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, H, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                var timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.fixedRange = max - min;\n                }\n            }\n            var dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (pushUnique(composed, compose)) {\n                var chartProto = ChartClass.prototype;\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'render', onChartRender);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                chartProto.callbacks.push(onChartCallback);\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this, axes = chart.axes, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                axes.forEach(function (axis) {\n                    axis.updateNames();\n                    axis.setScale();\n                });\n                chart.getAxisMargins();\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var extremes, legend, alignTo, verticalAlign;\n            var rangeSelector = chart.rangeSelector, redraw = function () {\n                if (rangeSelector) {\n                    extremes = chart.xAxis[0].getExtremes();\n                    legend = chart.legend;\n                    verticalAlign = (rangeSelector &&\n                        rangeSelector.options.verticalAlign);\n                    if (isNumber(extremes.min)) {\n                        rangeSelector.render(extremes.min, extremes.max);\n                    }\n                    // Re-align the legend so that it's below the rangeselector\n                    if (legend.display &&\n                        verticalAlign === 'top' &&\n                        verticalAlign === legend.options.verticalAlign) {\n                        // Create a new alignment box for the legend.\n                        alignTo = merge(chart.spacingBox);\n                        if (legend.options.layout === 'vertical') {\n                            alignTo.y = chart.plotTop;\n                        }\n                        else {\n                            alignTo.y += rangeSelector.getHeight();\n                        }\n                        legend.group.placed = false; // Don't animate the alignment.\n                        legend.align(alignTo);\n                    }\n                }\n            };\n            if (rangeSelector) {\n                var events = find(chartDestroyEvents, function (e) { return e[0] === chart; });\n                if (!events) {\n                    chartDestroyEvents.push([chart, [\n                            // redraw the scroller on setExtremes\n                            addEvent(chart.xAxis[0], 'afterSetExtremes', function (e) {\n                                if (rangeSelector) {\n                                    rangeSelector.render(e.min, e.max);\n                                }\n                            }),\n                            // redraw the scroller chart resize\n                            addEvent(chart, 'redraw', redraw)\n                        ]]);\n                }\n                // do it now\n                redraw();\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector && !rangeSelector.options.floating) {\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (verticalAlign === 'bottom') {\n                    this.extraBottomMargin = true;\n                }\n                else if (verticalAlign !== 'middle') {\n                    this.extraTopMargin = true;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                onChartCallback(this);\n                var verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n            compose: compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, discardElement = U.discardElement, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pad = U.pad, pick = U.pick, pInt = U.pInt, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function RangeSelector(chart) {\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.chart = chart;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, minSetting, rangeSetting, ctx, ytdExtremes, addOffsetMin = true;\n                // chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                // Set the fixed range before range is altered\n                chart.fixedRange = range;\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instanciated. Temporarily set min and range\n                    // options and remove them on chart load (#4317).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    rangeSetting = baseXAxisOptions.range;\n                    baseXAxisOptions.range = range;\n                    minSetting = baseXAxisOptions.min;\n                    baseXAxisOptions.min = rangeMin;\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        baseXAxisOptions.range = rangeSetting;\n                        baseXAxisOptions.min = minSetting;\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    var minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (this.max - this.min !==\n                                chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this, chart = this.chart, dropdown = this.dropdown, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttons = rangeSelector.buttons;\n                var selectedExists = isNumber(selected), isSelectedTooGreat = false;\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, button = buttons[i], offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed in\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    var state = 0, \n                    // Do not select the YTD button if not explicitly told so\n                    isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isAllButAlreadyShowingAll = false, isSameRange = range === actualRange;\n                    if (isSelected && isTooGreatRange) {\n                        isSelectedTooGreat = true;\n                    }\n                    // Months and years have a variable range so we check the extremes\n                    if ((type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                        isAllButAlreadyShowingAll = (!isSelected &&\n                            selectedExists &&\n                            isSameRange);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                        !(isSelectedTooGreat && type === 'all') &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            isAllButAlreadyShowingAll ||\n                            hasNoData));\n                    var select = ((isSelectedTooGreat && type === 'all') ||\n                        (isSelected && isSameRange) ||\n                        (isSameRange && !selectedExists && !isYTDButNotSelected) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        state = 3;\n                    }\n                    else if (select) {\n                        selectedExists = true; // Only one button can be selected\n                        state = 2;\n                    }\n                    // If state has changed, update the button\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = disable;\n                            if (state === 2) {\n                                dropdown.selectedIndex = i + 1;\n                            }\n                        }\n                        // Reset (#9209)\n                        if (state === 0 && selected === i) {\n                            rangeSelector.setSelected();\n                        }\n                        else if ((state === 2 && !defined(selected)) ||\n                            isSelectedTooGreat) {\n                            rangeSelector.setSelected(i);\n                        }\n                    }\n                });\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type, count = rangeOptions.count || 1, \n                // these time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                    .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text', _a = this.inputGroup, _b = _a.translateX, translateX = _b === void 0 ? 0 : _b, _c = _a.translateY, translateY = _c === void 0 ? 0 : _c, _d = dateBox.x, x = _d === void 0 ? 0 : _d, _e = dateBox.width, width = _e === void 0 ? 0 : _e, _f = dateBox.height, height = _f === void 0 ? 0 : _f, inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                    return str.length > 6 &&\n                        (str.lastIndexOf('-') === str.length - 6 ||\n                            str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this, chart = _a.chart, div = _a.div, inputGroup = _a.inputGroup;\n                var rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes() {\n                    var maxInput = rangeSelector.maxInput, minInput = rangeSelector.minInput, chartAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax;\n                    var value = rangeSelector.getInputValue(name);\n                    if (value !== Number(input.getAttribute('data-hc-time-previous')) &&\n                        isNumber(value)) {\n                        input.setAttribute('data-hc-time-previous', value);\n                        // Validate the extremes. If it goes beyound the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and and records\n                // click events that bring in the HTML input.\n                var dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // update extermes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes();\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes();\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.keyCode === 38 || event.keyCode === 40) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // set offset only for varticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputsZIndex = pick(chartOptions.chart.style &&\n                    chartOptions.chart.style.zIndex, 0) + 1, inputEnabled = options.inputEnabled, rendered = this.rendered;\n                if (options.enabled === false) {\n                    return;\n                }\n                // create the elements\n                if (!rendered) {\n                    this.group = renderer.g('range-selector-group')\n                        .attr({\n                        zIndex: 7\n                    })\n                        .add();\n                    this.div = createElement('div', void 0, {\n                        position: 'relative',\n                        height: 0,\n                        zIndex: inputsZIndex\n                    });\n                    if (this.buttonOptions.length) {\n                        this.renderButtons();\n                    }\n                    // First create a wrapper outside the container in order to make\n                    // the inputs work and make export correct\n                    if (container.parentNode) {\n                        container.parentNode.insertBefore(this.div, container);\n                    }\n                    if (inputEnabled) {\n                        // Create the group to keep the inputs\n                        this.inputGroup = renderer.g('input-group').add(this.group);\n                        var minElems = this.drawInput('min');\n                        this.minDateBox = minElems.dateBox;\n                        this.minLabel = minElems.label;\n                        this.minInput = minElems.input;\n                        var maxElems = this.drawInput('max');\n                        this.maxDateBox = maxElems.dateBox;\n                        this.maxLabel = maxElems.label;\n                        this.maxInput = maxElems.input;\n                    }\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.rendered = true;\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    padding: 0,\n                    border: 0,\n                    top: '-9999em',\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                [\n                    [H.isMS ? 'mouseover' : 'mouseenter'],\n                    [H.isMS ? 'mouseout' : 'mouseleave'],\n                    ['change', 'click']\n                ].forEach(function (_a) {\n                    var from = _a[0], to = _a[1];\n                    addEvent(dropdown, from, function () {\n                        var button = buttons[_this.currentButtonIndex()];\n                        if (button) {\n                            fireEvent(button.element, to || from);\n                        }\n                    });\n                });\n                this.zoomText = renderer\n                    .label((lang && lang.rangeSelectorZoom) || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, group = _a.group, inputGroup = _a.inputGroup, options = _a.options, zoomText = _a.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition, inputPosition = options.inputPosition, verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group, position) {\n                    if (navButtonOptions &&\n                        _this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        this.updateButtonStates();\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                    var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _b = this, minInput = _b.minInput, maxInput = _b.maxInput, dropdown = _b.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this, chart = _a.chart, options = _a.options, buttonGroup = _a.buttonGroup, buttons = _a.buttons;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options, zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this, chart = _a.chart, buttonGroup = _a.buttonGroup, inputGroup = _a.inputGroup;\n                var _b = this.options, buttonPosition = _b.buttonPosition, dropdown = _b.dropdown, inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                    var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                    if (inputGroup && buttonGroup) {\n                        var inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // getBBox for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        var inputGroupWidth = inputGroup.alignOptions.width;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons(xOffsetForExportButton);\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons(xOffsetForExportButton);\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons(xOffsetForExportButton);\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and put the select element on top.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function (xOffsetForExportButton) {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, chart = _a.chart, dropdown = _a.dropdown, options = _a.options, zoomText = _a.zoomText;\n                // If the buttons are already collapsed do nothing.\n                if (this.isCollapsed === true) {\n                    return;\n                }\n                this.isCollapsed = true;\n                var userButtonTheme = (chart.userOptions.rangeSelector &&\n                    chart.userOptions.rangeSelector.buttonTheme) || {};\n                var getAttribs = function (text) { return ({\n                    text: text ? \"\".concat(text, \" \\u25BE\") : 'â–¾',\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme.padding, 8)\n                }); };\n                if (zoomText) {\n                    zoomText.hide();\n                }\n                var hasActiveButton = false;\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    if (button.state !== 2) {\n                        button.hide();\n                    }\n                    else {\n                        button.show();\n                        button.attr(getAttribs(rangeOptions.text));\n                        hasActiveButton = true;\n                    }\n                });\n                if (!hasActiveButton) {\n                    if (dropdown) {\n                        dropdown.selectedIndex = 0;\n                    }\n                    buttons[0].show();\n                    buttons[0].attr(getAttribs(this.zoomText && this.zoomText.textStr));\n                }\n                var align = options.buttonPosition.align;\n                this.positionButtons();\n                if (align === 'right' || align === 'center') {\n                    this.alignButtonGroup(xOffsetForExportButton, buttons[this.currentButtonIndex()].getBBox().width);\n                }\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, options = _a.options, zoomText = _a.zoomText;\n                this.hideDropdown();\n                // If buttons are already not collapsed, do nothing.\n                if (this.isCollapsed === false) {\n                    return;\n                }\n                this.isCollapsed = false;\n                if (zoomText) {\n                    zoomText.show();\n                }\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    button.show();\n                    button.attr({\n                        text: rangeOptions.text,\n                        width: options.buttonTheme.width || 28,\n                        paddingLeft: pick(options.buttonTheme.paddingLeft, 'unset'),\n                        paddingRight: pick(options.buttonTheme.paddingRight, 'unset')\n                    });\n                    if (button.state < 2) {\n                        button.setState(0);\n                    }\n                });\n                this.positionButtons();\n            };\n            /**\n             * Get the index of the visible button when the buttons are collapsed.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#currentButtonIndex\n             */\n            RangeSelector.prototype.currentButtonIndex = function () {\n                var dropdown = this.dropdown;\n                if (dropdown && dropdown.selectedIndex > 0) {\n                    return dropdown.selectedIndex - 1;\n                }\n                return 0;\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var _b = buttonGroup.translateX, translateX = _b === void 0 ? 0 : _b, _c = buttonGroup.translateY, translateY = _c === void 0 ? 0 : _c, bBox = buttons[this.currentButtonIndex()].getBBox();\n                    css(dropdown, {\n                        left: (chart.plotLeft + translateX) + 'px',\n                        top: (translateY + 0.5) + 'px',\n                        width: bBox.width + 'px',\n                        height: bBox.height + 'px'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    css(dropdown, {\n                        top: '-9999em',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options) {\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                this.render();\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Extensions/StaticScale.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Torstein Honsi, Lars Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, defined = U.defined, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /** @private */\n        function compose(AxisClass, ChartClass) {\n            if (pushUnique(composed, compose)) {\n                var chartProto = ChartClass.prototype;\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                chartProto.adjustHeight = chartAdjustHeight;\n                addEvent(ChartClass, 'render', chartProto.adjustHeight);\n            }\n        }\n        /** @private */\n        function onAxisAfterSetOptions() {\n            var chartOptions = this.chart.options.chart;\n            if (!this.horiz &&\n                isNumber(this.options.staticScale) &&\n                (!chartOptions.height ||\n                    (chartOptions.scrollablePlotArea &&\n                        chartOptions.scrollablePlotArea.minHeight))) {\n                this.staticScale = this.options.staticScale;\n            }\n        }\n        /** @private */\n        function chartAdjustHeight() {\n            var chart = this;\n            if (chart.redrawTrigger !== 'adjustHeight') {\n                var _loop_1 = function (axis) {\n                    var chart_1 = axis.chart, animate = !!chart_1.initiatedScale &&\n                        chart_1.options.animation, staticScale = axis.options.staticScale;\n                    if (axis.staticScale && defined(axis.min)) {\n                        var height = pick(axis.brokenAxis && axis.brokenAxis.unitLength, axis.max + axis.tickInterval - axis.min) * staticScale;\n                        // Minimum height is 1 x staticScale.\n                        height = Math.max(height, staticScale);\n                        var diff = height - chart_1.plotHeight;\n                        if (!chart_1.scrollablePixelsY && Math.abs(diff) >= 1) {\n                            chart_1.plotHeight = height;\n                            chart_1.redrawTrigger = 'adjustHeight';\n                            chart_1.setSize(void 0, chart_1.chartHeight + diff, animate);\n                        }\n                        // Make sure clip rects have the right height before initial\n                        // animation.\n                        axis.series.forEach(function (series) {\n                            var clipRect = series.sharedClipKey &&\n                                chart_1.sharedClips[series.sharedClipKey];\n                            if (clipRect) {\n                                clipRect.attr(chart_1.inverted ? {\n                                    width: chart_1.plotHeight\n                                } : {\n                                    height: chart_1.plotHeight\n                                });\n                            }\n                        });\n                    }\n                };\n                for (var _i = 0, _a = (chart.axes || []); _i < _a.length; _i++) {\n                    var axis = _a[_i];\n                    _loop_1(axis);\n                }\n                this.initiatedScale = true;\n            }\n            this.redrawTrigger = null;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var StaticScale = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * For vertical axes only. Setting the static scale ensures that each tick unit\n         * is translated into a fixed pixel height. For example, setting the static\n         * scale to 24 results in each Y axis category taking up 24 pixels, and the\n         * height of the chart adjusts. Adding or removing items will make the chart\n         * resize.\n         *\n         * @sample gantt/xrange-series/demo/\n         *         X-range series with static scale\n         *\n         * @type      {number}\n         * @default   50\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption yAxis.staticScale\n         */\n        ''; // keeps doclets above in JS file\n\n        return StaticScale;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangeSeriesDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var correctFloat = U.correctFloat, isNumber = U.isNumber, isObject = U.isObject;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The X-range series displays ranges on the X axis, typically time\n         * intervals with a start and end date.\n         *\n         * @sample {highcharts} highcharts/demo/x-range/\n         *         X-range\n         * @sample {highcharts} highcharts/css/x-range/\n         *         Styled mode X-range\n         * @sample {highcharts} highcharts/chart/inverted-xrange/\n         *         Inverted X-range\n         *\n         * @extends      plotOptions.column\n         * @since        6.0.0\n         * @product      highcharts highstock gantt\n         * @excluding    boostThreshold, crisp, cropThreshold, depth, edgeColor,\n         *               edgeWidth, findNearestPointBy, getExtremesFromAll,\n         *               negativeColor, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, softThreshold,\n         *               stacking, threshold, data, dataSorting, boostBlending\n         * @requires     modules/xrange\n         * @optionparent plotOptions.xrange\n         */\n        var XRangeSeriesDefaults = {\n            /**\n             * A partial fill for each point, typically used to visualize how much\n             * of a task is performed. The partial fill object can be set either on\n             * series or point level.\n             *\n             * @sample {highcharts} highcharts/demo/x-range\n             *         X-range with partial fill\n             *\n             * @product   highcharts highstock gantt\n             * @apioption plotOptions.xrange.partialFill\n             */\n            /**\n             * The fill color to be used for partial fills. Defaults to a darker\n             * shade of the point color.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highcharts highstock gantt\n             * @apioption plotOptions.xrange.partialFill.fill\n             */\n            /**\n             * A partial fill for each point, typically used to visualize how much\n             * of a task is performed. See [completed](series.gantt.data.completed).\n             *\n             * @sample gantt/demo/progress-indicator\n             *         Gantt with progress indicator\n             *\n             * @product   gantt\n             * @apioption plotOptions.gantt.partialFill\n             */\n            /**\n             * In an X-range series, this option makes all points of the same Y-axis\n             * category the same color.\n             */\n            colorByPoint: true,\n            dataLabels: {\n                formatter: function () {\n                    var point = this.point, amount = point.partialFill;\n                    if (isObject(amount)) {\n                        amount = amount.amount;\n                    }\n                    if (isNumber(amount) && amount > 0) {\n                        return correctFloat(amount * 100) + '%';\n                    }\n                },\n                inside: true,\n                verticalAlign: 'middle',\n                style: {\n                    whiteSpace: 'nowrap'\n                }\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size: 0.8em\">{point.x} - {point.x2}</span><br/>',\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.yCategory}</b><br/>'\n            },\n            borderRadius: 3,\n            pointRange: 0\n        };\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n        /* *\n         *\n         * API Options\n         *\n         * */\n        /**\n         * An `xrange` series. If the [type](#series.xrange.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.xrange\n         * @excluding boostThreshold, crisp, cropThreshold, depth, edgeColor, edgeWidth,\n         *            findNearestPointBy, getExtremesFromAll, negativeColor,\n         *            pointInterval, pointIntervalUnit, pointPlacement, pointRange,\n         *            pointStart, softThreshold, stacking, threshold, dataSorting,\n         *            boostBlending\n         * @product   highcharts highstock gantt\n         * @requires  modules/xrange\n         * @apioption series.xrange\n         */\n        /**\n         * An array of data points for the series. For the `xrange` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of objects with named values. The objects are point configuration\n         *    objects as seen below.\n         *    ```js\n         *    data: [{\n         *        x: Date.UTC(2017, 0, 1),\n         *        x2: Date.UTC(2017, 0, 3),\n         *        name: \"Test\",\n         *        y: 0,\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: Date.UTC(2017, 0, 4),\n         *        x2: Date.UTC(2017, 0, 5),\n         *        name: \"Deploy\",\n         *        y: 1,\n         *        color: \"#FF0000\"\n         *    }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @declare   Highcharts.XrangePointOptionsObject\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data\n         */\n        /**\n         * The starting X value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.x\n         */\n        /**\n         * The ending X value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.x2\n         */\n        /**\n         * The Y value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.y\n         */\n        /**\n         * A partial fill for each point, typically used to visualize how much of\n         * a task is performed. The partial fill object can be set either on series\n         * or point level.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range with partial fill\n         *\n         * @declare   Highcharts.XrangePointPartialFillOptionsObject\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill\n         */\n        /**\n         * The amount of the X-range point to be filled. Values can be 0-1 and are\n         * converted to percentages in the default data label formatter.\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill.amount\n         */\n        /**\n         * The fill color to be used for partial fills. Defaults to a darker shade\n         * of the point color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill.fill\n         */\n        (''); // adds doclets above to transpiled file\n\n        return XRangeSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangePoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var XRangePoint = /** @class */ (function (_super) {\n            __extends(XRangePoint, _super);\n            /**\n             * Extend init to have y default to 0.\n             *\n             * @private\n             */\n            function XRangePoint(series, options) {\n                var _this = _super.call(this, series, options) || this;\n                if (!_this.y) {\n                    _this.y = 0;\n                }\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * Return color of a point based on its category.\n             *\n             * @private\n             * @function getColorByCategory\n             *\n             * @param {object} series\n             *        The series which the point belongs to.\n             *\n             * @param {object} point\n             *        The point to calculate its color for.\n             *\n             * @return {object}\n             *         Returns an object containing the properties color and colorIndex.\n             */\n            XRangePoint.getColorByCategory = function (series, point) {\n                var colors = series.options.colors || series.chart.options.colors, colorCount = colors ?\n                    colors.length :\n                    series.chart.options.chart.colorCount, colorIndex = point.y % colorCount, color = colors && colors[colorIndex];\n                return {\n                    colorIndex: colorIndex,\n                    color: color\n                };\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            XRangePoint.prototype.resolveColor = function () {\n                var series = this.series;\n                if (series.options.colorByPoint && !this.options.color) {\n                    var colorByPoint = XRangePoint.getColorByCategory(series, this);\n                    if (!series.chart.styledMode) {\n                        this.color = colorByPoint.color;\n                    }\n                    if (!this.options.colorIndex) {\n                        this.colorIndex = colorByPoint.colorIndex;\n                    }\n                }\n                else if (!this.color) {\n                    this.color = series.color;\n                }\n            };\n            /**\n             * @private\n             */\n            XRangePoint.prototype.setState = function () {\n                _super.prototype.setState.apply(this, arguments);\n                this.series.drawPoint(this, this.series.getAnimationVerb());\n            };\n            /**\n             * Add x2 and yCategory to the available properties for tooltip formats.\n             *\n             * @private\n             */\n            XRangePoint.prototype.getLabelConfig = function () {\n                var cfg = _super.prototype.getLabelConfig.call(this), yCats = this.series.yAxis.categories;\n                cfg.x2 = this.x2;\n                cfg.yCategory = this.yCategory = yCats && yCats[this.y];\n                // Use 'category' as 'key' to ensure tooltip datetime formatting.\n                // Use 'name' only when 'category' is undefined.\n                cfg.key = this.category || this.name;\n                return cfg;\n            };\n            /**\n             * @private\n             */\n            XRangePoint.prototype.isValid = function () {\n                return typeof this.x === 'number' &&\n                    typeof this.x2 === 'number';\n            };\n            return XRangePoint;\n        }(ColumnPoint));\n        extend(XRangePoint.prototype, {\n            ttBelow: false,\n            tooltipDateKeys: ['x', 'x2']\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * The ending X value of the range point.\n         * @name Highcharts.Point#x2\n         * @type {number|undefined}\n         * @requires modules/xrange\n         */\n        /**\n         * Extend applyOptions so that `colorByPoint` for x-range means that one\n         * color is applied per Y axis category.\n         *\n         * @private\n         * @function Highcharts.Point#applyOptions\n         *\n         * @return {Highcharts.Series}\n         */\n        /**\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * The ending X value of the range point.\n        * @name Highcharts.PointOptionsObject#x2\n        * @type {number|undefined}\n        * @requires modules/xrange\n        */\n        (''); // keeps doclets above in JS file\n\n        return XRangePoint;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangeSeries.js', [_modules['Core/Globals.js'], _modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Series/XRange/XRangeSeriesDefaults.js'], _modules['Series/XRange/XRangePoint.js']], function (H, Color, SeriesRegistry, U, XRangeSeriesDefaults, XRangePoint) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2024 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var composed = H.composed, noop = H.noop;\n        var color = Color.parse;\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var addEvent = U.addEvent, clamp = U.clamp, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique, relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Max x2 should be considered in xAxis extremes\n         * @private\n         */\n        function onAxisAfterGetSeriesExtremes() {\n            var dataMax, modMax;\n            if (this.isXAxis) {\n                dataMax = pick(this.dataMax, -Number.MAX_VALUE);\n                for (var _i = 0, _a = this.series; _i < _a.length; _i++) {\n                    var series = _a[_i];\n                    if (series.x2Data) {\n                        for (var _b = 0, _c = series.x2Data; _b < _c.length; _b++) {\n                            var val = _c[_b];\n                            if (val && val > dataMax) {\n                                dataMax = val;\n                                modMax = true;\n                            }\n                        }\n                    }\n                }\n                if (modMax) {\n                    this.dataMax = dataMax;\n                }\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.xrange\n         *\n         * @augments Highcharts.Series\n         */\n        var XRangeSeries = /** @class */ (function (_super) {\n            __extends(XRangeSeries, _super);\n            function XRangeSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            XRangeSeries.compose = function (AxisClass) {\n                if (pushUnique(composed, this.compose)) {\n                    addEvent(AxisClass, 'afterGetSeriesExtremes', onAxisAfterGetSeriesExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.options.stacking = void 0; // #13161\n            };\n            /**\n             * Borrow the column series metrics, but with swapped axes. This gives\n             * free access to features like groupPadding, grouping, pointWidth etc.\n             * @private\n             */\n            XRangeSeries.prototype.getColumnMetrics = function () {\n                var _this = this;\n                var swapAxes = function () {\n                    for (var _i = 0, _a = _this.chart.series; _i < _a.length; _i++) {\n                        var series = _a[_i];\n                        var xAxis = series.xAxis;\n                        series.xAxis = series.yAxis;\n                        series.yAxis = xAxis;\n                    }\n                };\n                swapAxes();\n                var metrics = _super.prototype.getColumnMetrics.call(this);\n                swapAxes();\n                return metrics;\n            };\n            /**\n             * Override cropData to show a point where x or x2 is outside visible range,\n             * but one of them is inside.\n             * @private\n             */\n            XRangeSeries.prototype.cropData = function (xData, yData, min, max) {\n                // Replace xData with x2Data to find the appropriate cropStart\n                var crop = _super.prototype.cropData.call(this, this.x2Data, yData, min, max);\n                // Re-insert the cropped xData\n                crop.xData = xData.slice(crop.start, crop.end);\n                return crop;\n            };\n            /**\n             * Finds the index of an existing point that matches the given point\n             * options.\n             *\n             * @private\n             *\n             * @param {Highcharts.XRangePointOptions} options\n             *        The options of the point.\n             *\n             * @return {number|undefined}\n             *         Returns index of a matching point, or undefined if no match is\n             *         found.\n             */\n            XRangeSeries.prototype.findPointIndex = function (options) {\n                var _a = this, cropStart = _a.cropStart, points = _a.points;\n                var id = options.id;\n                var pointIndex;\n                if (id) {\n                    var point = find(points, function (point) { return point.id === id; });\n                    pointIndex = point ? point.index : void 0;\n                }\n                if (typeof pointIndex === 'undefined') {\n                    var point = find(points, function (point) { return (point.x === options.x &&\n                        point.x2 === options.x2 &&\n                        !point.touched); });\n                    pointIndex = point ? point.index : void 0;\n                }\n                // Reduce pointIndex if data is cropped\n                if (this.cropped &&\n                    isNumber(pointIndex) &&\n                    isNumber(cropStart) &&\n                    pointIndex >= cropStart) {\n                    pointIndex -= cropStart;\n                }\n                return pointIndex;\n            };\n            XRangeSeries.prototype.alignDataLabel = function (point) {\n                var _a;\n                var oldPlotX = point.plotX;\n                point.plotX = pick(point.dlBox && point.dlBox.centerX, point.plotX);\n                if (point.dataLabel && ((_a = point.shapeArgs) === null || _a === void 0 ? void 0 : _a.width)) {\n                    point.dataLabel.css({\n                        width: \"\".concat(point.shapeArgs.width, \"px\")\n                    });\n                }\n                _super.prototype.alignDataLabel.apply(this, arguments);\n                point.plotX = oldPlotX;\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.translatePoint = function (point) {\n                var xAxis = this.xAxis, yAxis = this.yAxis, metrics = this.columnMetrics, options = this.options, minPointLength = options.minPointLength || 0, oldColWidth = (point.shapeArgs && point.shapeArgs.width || 0) / 2, seriesXOffset = this.pointXOffset = metrics.offset, posX = pick(point.x2, point.x + (point.len || 0)), borderRadius = options.borderRadius, plotTop = this.chart.plotTop, plotLeft = this.chart.plotLeft;\n                var plotX = point.plotX, plotX2 = xAxis.translate(posX, 0, 0, 0, 1);\n                var length = Math.abs(plotX2 - plotX), inverted = this.chart.inverted, borderWidth = pick(options.borderWidth, 1), crisper = borderWidth % 2 / 2;\n                var widthDifference, partialFill, yOffset = metrics.offset, pointHeight = Math.round(metrics.width), dlLeft, dlRight, dlWidth, clipRectWidth;\n                if (minPointLength) {\n                    widthDifference = minPointLength - length;\n                    if (widthDifference < 0) {\n                        widthDifference = 0;\n                    }\n                    plotX -= widthDifference / 2;\n                    plotX2 += widthDifference / 2;\n                }\n                plotX = Math.max(plotX, -10);\n                plotX2 = clamp(plotX2, -10, xAxis.len + 10);\n                // Handle individual pointWidth\n                if (defined(point.options.pointWidth)) {\n                    yOffset -= ((Math.ceil(point.options.pointWidth) - pointHeight) / 2);\n                    pointHeight = Math.ceil(point.options.pointWidth);\n                }\n                // Apply pointPlacement to the Y axis\n                if (options.pointPlacement &&\n                    isNumber(point.plotY) &&\n                    yAxis.categories) {\n                    point.plotY = yAxis.translate(point.y, 0, 1, 0, 1, options.pointPlacement);\n                }\n                var x = Math.floor(Math.min(plotX, plotX2)) + crisper, x2 = Math.floor(Math.max(plotX, plotX2)) + crisper, width = x2 - x;\n                var r = Math.min(relativeLength((typeof borderRadius === 'object' ?\n                    borderRadius.radius :\n                    borderRadius || 0), pointHeight), Math.min(width, pointHeight) / 2);\n                var shapeArgs = {\n                    x: x,\n                    y: Math.floor(point.plotY + yOffset) + crisper,\n                    width: width,\n                    height: pointHeight,\n                    r: r\n                };\n                point.shapeArgs = shapeArgs;\n                // Move tooltip to default position\n                if (!inverted) {\n                    point.tooltipPos[0] -= oldColWidth +\n                        seriesXOffset -\n                        shapeArgs.width / 2;\n                }\n                else {\n                    point.tooltipPos[1] += seriesXOffset +\n                        oldColWidth;\n                }\n                // Align data labels inside the shape and inside the plot area\n                dlLeft = shapeArgs.x;\n                dlRight = dlLeft + shapeArgs.width;\n                if (dlLeft < 0 || dlRight > xAxis.len) {\n                    dlLeft = clamp(dlLeft, 0, xAxis.len);\n                    dlRight = clamp(dlRight, 0, xAxis.len);\n                    dlWidth = dlRight - dlLeft;\n                    point.dlBox = merge(shapeArgs, {\n                        x: dlLeft,\n                        width: dlRight - dlLeft,\n                        centerX: dlWidth ? dlWidth / 2 : null\n                    });\n                }\n                else {\n                    point.dlBox = null;\n                }\n                // Tooltip position\n                var tooltipPos = point.tooltipPos;\n                var xIndex = !inverted ? 0 : 1;\n                var yIndex = !inverted ? 1 : 0;\n                var tooltipYOffset = (this.columnMetrics ?\n                    this.columnMetrics.offset :\n                    -metrics.width / 2);\n                // Centering tooltip position (#14147)\n                if (inverted) {\n                    tooltipPos[xIndex] += shapeArgs.width / 2;\n                }\n                else {\n                    tooltipPos[xIndex] = clamp(tooltipPos[xIndex] +\n                        (xAxis.reversed ? -1 : 0) * shapeArgs.width, xAxis.left - plotLeft, xAxis.left + xAxis.len - plotLeft - 1);\n                }\n                tooltipPos[yIndex] = clamp(tooltipPos[yIndex] + ((inverted ? -1 : 1) * tooltipYOffset), yAxis.top - plotTop, yAxis.top + yAxis.len - plotTop - 1);\n                // Add a partShapeArgs to the point, based on the shapeArgs property\n                partialFill = point.partialFill;\n                if (partialFill) {\n                    // Get the partial fill amount\n                    if (isObject(partialFill)) {\n                        partialFill = partialFill.amount;\n                    }\n                    // If it was not a number, assume 0\n                    if (!isNumber(partialFill)) {\n                        partialFill = 0;\n                    }\n                    point.partShapeArgs = merge(shapeArgs);\n                    clipRectWidth = Math.max(Math.round(length * partialFill + point.plotX -\n                        plotX), 0);\n                    point.clipRectArgs = {\n                        x: xAxis.reversed ? // #10717\n                            shapeArgs.x + length - clipRectWidth :\n                            shapeArgs.x,\n                        y: shapeArgs.y,\n                        width: clipRectWidth,\n                        height: shapeArgs.height\n                    };\n                }\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    this.translatePoint(point);\n                }\n            };\n            /**\n             * Draws a single point in the series. Needed for partial fill.\n             *\n             * This override turns point.graphic into a group containing the\n             * original graphic and an overlay displaying the partial fill.\n             *\n             * @private\n             *\n             * @param {Highcharts.Point} point\n             *        An instance of Point in the series.\n             *\n             * @param {\"animate\"|\"attr\"} verb\n             *        'animate' (animates changes) or 'attr' (sets options)\n             */\n            XRangeSeries.prototype.drawPoint = function (point, verb) {\n                var seriesOpts = this.options, renderer = this.chart.renderer, type = point.shapeType, shapeArgs = point.shapeArgs, partShapeArgs = point.partShapeArgs, clipRectArgs = point.clipRectArgs, pointState = point.state, stateOpts = (seriesOpts.states[pointState || 'normal'] ||\n                    {}), pointStateVerb = typeof pointState === 'undefined' ?\n                    'attr' : verb, pointAttr = this.pointAttribs(point, pointState), animation = pick(this.chart.options.chart.animation, stateOpts.animation);\n                var graphic = point.graphic, pfOptions = point.partialFill;\n                if (!point.isNull && point.visible !== false) {\n                    // Original graphic\n                    if (graphic) { // update\n                        graphic.rect[verb](shapeArgs);\n                    }\n                    else {\n                        point.graphic = graphic = renderer.g('point')\n                            .addClass(point.getClassName())\n                            .add(point.group || this.group);\n                        graphic.rect = renderer[type](merge(shapeArgs))\n                            .addClass(point.getClassName())\n                            .addClass('highcharts-partfill-original')\n                            .add(graphic);\n                    }\n                    // Partial fill graphic\n                    if (partShapeArgs) {\n                        if (graphic.partRect) {\n                            graphic.partRect[verb](merge(partShapeArgs));\n                            graphic.partialClipRect[verb](merge(clipRectArgs));\n                        }\n                        else {\n                            graphic.partialClipRect = renderer.clipRect(clipRectArgs.x, clipRectArgs.y, clipRectArgs.width, clipRectArgs.height);\n                            graphic.partRect =\n                                renderer[type](partShapeArgs)\n                                    .addClass('highcharts-partfill-overlay')\n                                    .add(graphic)\n                                    .clip(graphic.partialClipRect);\n                        }\n                    }\n                    // Presentational\n                    if (!this.chart.styledMode) {\n                        graphic\n                            .rect[verb](pointAttr, animation)\n                            .shadow(seriesOpts.shadow);\n                        if (partShapeArgs) {\n                            // Ensure pfOptions is an object\n                            if (!isObject(pfOptions)) {\n                                pfOptions = {};\n                            }\n                            if (isObject(seriesOpts.partialFill)) {\n                                pfOptions = merge(seriesOpts.partialFill, pfOptions);\n                            }\n                            var fill = (pfOptions.fill ||\n                                color(pointAttr.fill).brighten(-0.3).get() ||\n                                color(point.color || this.color)\n                                    .brighten(-0.3).get());\n                            pointAttr.fill = fill;\n                            graphic\n                                .partRect[pointStateVerb](pointAttr, animation)\n                                .shadow(seriesOpts.shadow);\n                        }\n                    }\n                }\n                else if (graphic) {\n                    point.graphic = graphic.destroy(); // #1269\n                }\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.drawPoints = function () {\n                var verb = this.getAnimationVerb();\n                // Draw the columns\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    this.drawPoint(point, verb);\n                }\n            };\n            /**\n             * Returns \"animate\", or \"attr\" if the number of points is above the\n             * animation limit.\n             *\n             * @private\n             */\n            XRangeSeries.prototype.getAnimationVerb = function () {\n                return (this.chart.pointCount < (this.options.animationLimit || 250) ?\n                    'animate' :\n                    'attr');\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.isPointInside = function (point) {\n                var shapeArgs = point.shapeArgs, plotX = point.plotX, plotY = point.plotY;\n                if (!shapeArgs) {\n                    return _super.prototype.isPointInside.apply(this, arguments);\n                }\n                var isInside = typeof plotX !== 'undefined' &&\n                    typeof plotY !== 'undefined' &&\n                    plotY >= 0 &&\n                    plotY <= this.yAxis.len &&\n                    (shapeArgs.x || 0) + (shapeArgs.width || 0) >= 0 &&\n                    plotX <= this.xAxis.len;\n                return isInside;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            XRangeSeries.defaultOptions = merge(ColumnSeries.defaultOptions, XRangeSeriesDefaults);\n            return XRangeSeries;\n        }(ColumnSeries));\n        extend(XRangeSeries.prototype, {\n            pointClass: XRangePoint,\n            pointArrayMap: ['x2', 'y'],\n            getExtremesFromAll: true,\n            parallelArrays: ['x', 'x2', 'y'],\n            requireSorting: false,\n            type: 'xrange',\n            animate: SeriesRegistry.series.prototype.animate,\n            autoIncrement: noop,\n            buildKDTree: noop\n        });\n        SeriesRegistry.registerSeriesType('xrange', XRangeSeries);\n        /* *\n         *\n         * Default Export\n         *\n         * */\n\n        return XRangeSeries;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var XRangePoint = SeriesRegistry.seriesTypes.xrange.prototype.pointClass;\n        var pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var GanttPoint = /** @class */ (function (_super) {\n            __extends(GanttPoint, _super);\n            function GanttPoint() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            GanttPoint.setGanttPointAliases = function (options) {\n                /**\n                 * Add a value to options if the value exists.\n                 * @private\n                 */\n                function addIfExists(prop, val) {\n                    if (typeof val !== 'undefined') {\n                        options[prop] = val;\n                    }\n                }\n                addIfExists('x', pick(options.start, options.x));\n                addIfExists('x2', pick(options.end, options.x2));\n                addIfExists('partialFill', pick(options.completed, options.partialFill));\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Applies the options containing the x and y data and possible some\n             * extra properties. This is called on point init or from point.update.\n             *\n             * @private\n             * @function Highcharts.Point#applyOptions\n             *\n             * @param {Object} options\n             *        The point options\n             *\n             * @param {number} x\n             *        The x value\n             *\n             * @return {Highcharts.Point}\n             *         The Point instance\n             */\n            GanttPoint.prototype.applyOptions = function (options, x) {\n                var ganttPoint = _super.prototype.applyOptions.call(this, options, x);\n                GanttPoint.setGanttPointAliases(ganttPoint);\n                return ganttPoint;\n            };\n            GanttPoint.prototype.isValid = function () {\n                return ((typeof this.start === 'number' ||\n                    typeof this.x === 'number') &&\n                    (typeof this.end === 'number' ||\n                        typeof this.x2 === 'number' ||\n                        this.milestone));\n            };\n            return GanttPoint;\n        }(XRangePoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttPoint;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttSeriesDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `gantt` series. If the [type](#series.gantt.type) option is not specified,\n         * it is inherited from [chart.type](#chart.type).\n         *\n         * @extends      plotOptions.xrange\n         * @product      gantt\n         * @requires     highcharts-gantt\n         * @optionparent plotOptions.gantt\n         */\n        var GanttSeriesDefaults = {\n            // options - default options merged with parent\n            grouping: false,\n            dataLabels: {\n                enabled: true\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size: 0.8em\">{series.name}</span><br/>',\n                pointFormat: null,\n                pointFormatter: function () {\n                    var point = this, series = point.series, xAxis = series.xAxis, formats = series.tooltipOptions.dateTimeLabelFormats, startOfWeek = xAxis.options.startOfWeek, ttOptions = series.tooltipOptions, milestone = point.options.milestone;\n                    var format = ttOptions.xDateFormat, retVal = '<b>' + (point.name || point.yCategory) + '</b>';\n                    if (ttOptions.pointFormat) {\n                        return point.tooltipFormatter(ttOptions.pointFormat);\n                    }\n                    if (!format && isNumber(point.start)) {\n                        format = series.chart.time.getDateFormat(xAxis.closestPointRange, point.start, startOfWeek, formats || {});\n                    }\n                    var start = series.chart.time.dateFormat(format, point.start), end = series.chart.time.dateFormat(format, point.end);\n                    retVal += '<br/>';\n                    if (!milestone) {\n                        retVal += 'Start: ' + start + '<br/>';\n                        retVal += 'End: ' + end + '<br/>';\n                    }\n                    else {\n                        retVal += start + '<br/>';\n                    }\n                    return retVal;\n                }\n            },\n            connectors: {\n                type: 'simpleConnect',\n                /**\n                 * @declare Highcharts.ConnectorsAnimationOptionsObject\n                 */\n                animation: {\n                    reversed: true // Dependencies go from child to parent\n                },\n                radius: 0,\n                startMarker: {\n                    enabled: true,\n                    symbol: 'arrow-filled',\n                    radius: 4,\n                    fill: '#fa0',\n                    align: 'left'\n                },\n                endMarker: {\n                    enabled: false,\n                    align: 'right'\n                }\n            }\n        };\n        /**\n         * A `gantt` series.\n         *\n         * @extends   series,plotOptions.gantt\n         * @excluding boostThreshold, dashStyle, findNearestPointBy,\n         *            getExtremesFromAll, marker, negativeColor, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointStart\n         * @product   gantt\n         * @requires  highcharts-gantt\n         * @apioption series.gantt\n         */\n        /**\n         * Data for a Gantt series.\n         *\n         * @declare   Highcharts.GanttPointOptionsObject\n         * @type      {Array<*>}\n         * @extends   series.xrange.data\n         * @excluding className, connect, dataLabels, events,\n         *            partialFill, selected, x, x2\n         * @product   gantt\n         * @apioption series.gantt.data\n         */\n        /**\n         * Whether the grid node belonging to this point should start as collapsed. Used\n         * in axes of type treegrid.\n         *\n         * @sample {gantt} gantt/treegrid-axis/collapsed/\n         *         Start as collapsed\n         *\n         * @type      {boolean}\n         * @default   false\n         * @product   gantt\n         * @apioption series.gantt.data.collapsed\n         */\n        /**\n         * The start time of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.start\n         */\n        /**\n         * The end time of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.end\n         */\n        /**\n         * The Y value of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.y\n         */\n        /**\n         * The name of a task. If a `treegrid` y-axis is used (default in Gantt charts),\n         * this will be picked up automatically, and used to calculate the y-value.\n         *\n         * @type      {string}\n         * @product   gantt\n         * @apioption series.gantt.data.name\n         */\n        /**\n         * Progress indicator, how much of the task completed. If it is a number, the\n         * `fill` will be applied automatically.\n         *\n         * @sample {gantt} gantt/demo/progress-indicator\n         *         Progress indicator\n         *\n         * @type      {number|*}\n         * @extends   series.xrange.data.partialFill\n         * @product   gantt\n         * @apioption series.gantt.data.completed\n         */\n        /**\n         * The amount of the progress indicator, ranging from 0 (not started) to 1\n         * (finished).\n         *\n         * @type      {number}\n         * @default   0\n         * @apioption series.gantt.data.completed.amount\n         */\n        /**\n         * The fill of the progress indicator. Defaults to a darkened variety of the\n         * main color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @apioption series.gantt.data.completed.fill\n         */\n        /**\n         * The ID of the point (task) that this point depends on in Gantt charts.\n         * Aliases [connect](series.xrange.data.connect). Can also be an object,\n         * specifying further connecting [options](series.gantt.connectors) between the\n         * points. Multiple connections can be specified by providing an array.\n         *\n         * @sample gantt/demo/project-management\n         *         Dependencies\n         * @sample gantt/pathfinder/demo\n         *         Different connection types\n         *\n         * @type      {string|Array<string|*>|*}\n         * @extends   series.xrange.data.connect\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.dependency\n         */\n        /**\n         * Whether this point is a milestone. If so, only the `start` option is handled,\n         * while `end` is ignored.\n         *\n         * @sample gantt/gantt/milestones\n         *         Milestones\n         *\n         * @type      {boolean}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.milestone\n         */\n        /**\n         * The ID of the parent point (task) of this point in Gantt charts.\n         *\n         * @sample gantt/demo/subtasks\n         *         Gantt chart with subtasks\n         *\n         * @type      {string}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.parent\n         */\n        /**\n         * @excluding afterAnimate\n         * @apioption series.gantt.events\n         */\n        ''; // detachs doclets above\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttSeriesDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/BrokenAxis.js', [_modules['Core/Globals.js'], _modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (H, StackItem, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Axis with support of broken data rows.\n         * @private\n         */\n        var BrokenAxis;\n        (function (BrokenAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Adds support for broken axes.\n             * @private\n             */\n            function compose(AxisClass, SeriesClass) {\n                if (pushUnique(composed, compose)) {\n                    AxisClass.keepProps.push('brokenAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.drawBreaks = seriesDrawBreaks;\n                    seriesProto.gappedPath = seriesGappedPath;\n                    addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n                    addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n                }\n                return AxisClass;\n            }\n            BrokenAxis.compose = compose;\n            /**\n             * @private\n             */\n            function onAxisAfterInit() {\n                if (typeof this.brokenAxis !== 'undefined') {\n                    this.brokenAxis.setBreaks(this.options.breaks, false);\n                }\n            }\n            /**\n             * Force Axis to be not-ordinal when breaks are defined.\n             * @private\n             */\n            function onAxisAfterSetOptions() {\n                var _a;\n                var axis = this;\n                if ((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    axis.options.ordinal = false;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisAfterSetTickPositions() {\n                var axis = this, brokenAxis = axis.brokenAxis;\n                if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n                    var tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                            newPositions.push(tickPositions[i]);\n                        }\n                    }\n                    axis.tickPositions = newPositions;\n                    axis.tickPositions.info = info;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInit() {\n                var axis = this;\n                if (!axis.brokenAxis) {\n                    axis.brokenAxis = new Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterGeneratePoints() {\n                var _a, _b;\n                var _c = this, isDirty = _c.isDirty, connectNulls = _c.options.connectNulls, points = _c.points, xAxis = _c.xAxis, yAxis = _c.yAxis;\n                // Set, or reset visibility of the points. Axis.setBreaks marks\n                // the series as isDirty\n                if (isDirty) {\n                    var i = points.length;\n                    while (i--) {\n                        var point = points[i];\n                        // Respect nulls inside the break (#4275)\n                        var nullGap = point.y === null && connectNulls === false;\n                        var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x, true)) ||\n                            ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y, true))));\n                        // Set point.visible if in any break.\n                        // If not in break, reset visible to original value.\n                        point.visible = isPointInBreak ?\n                            false :\n                            point.options.visible !== false;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterRender() {\n                this.drawBreaks(this.xAxis, ['x']);\n                this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n            }\n            /**\n             * @private\n             */\n            function seriesDrawBreaks(axis, keys) {\n                var _a;\n                var series = this, points = series.points;\n                var breaks, threshold, y;\n                if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    var brokenAxis_1 = axis.brokenAxis;\n                    keys.forEach(function (key) {\n                        var _a, _b;\n                        breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                        threshold = axis.isXAxis ?\n                            axis.min :\n                            pick(series.options.threshold, axis.min);\n                        // Array of breaks that have been \"zoomed-out\" which means that\n                        // they were shown previously, but now after zoom, they are not\n                        // (#19885).\n                        var breaksOutOfRange = (_b = (_a = axis === null || axis === void 0 ? void 0 : axis.options) === null || _a === void 0 ? void 0 : _a.breaks) === null || _b === void 0 ? void 0 : _b.filter(function (brk) {\n                            var isOut = true;\n                            // Iterate to see if \"brk\" is in axis range\n                            for (var i = 0; i < breaks.length; i++) {\n                                var otherBreak = breaks[i];\n                                if (otherBreak.from === brk.from &&\n                                    otherBreak.to === brk.to) {\n                                    isOut = false;\n                                    break;\n                                }\n                            }\n                            return isOut;\n                        });\n                        points.forEach(function (point) {\n                            y = pick(point['stack' + key.toUpperCase()], point[key]);\n                            breaks.forEach(function (brk) {\n                                if (isNumber(threshold) && isNumber(y)) {\n                                    var eventName = '';\n                                    if ((threshold < brk.from && y > brk.to) ||\n                                        (threshold > brk.from && y < brk.from)) {\n                                        eventName = 'pointBreak';\n                                    }\n                                    else if ((threshold < brk.from &&\n                                        y > brk.from &&\n                                        y < brk.to) || (threshold > brk.from &&\n                                        y > brk.to &&\n                                        y < brk.from)) {\n                                        eventName = 'pointInBreak';\n                                    }\n                                    if (eventName) {\n                                        fireEvent(axis, eventName, { point: point, brk: brk });\n                                    }\n                                }\n                            });\n                            breaksOutOfRange === null || breaksOutOfRange === void 0 ? void 0 : breaksOutOfRange.forEach(function (brk) {\n                                fireEvent(axis, 'pointOutsideOfBreak', { point: point, brk: brk });\n                            });\n                        });\n                    });\n                }\n            }\n            /**\n             * Extend getGraphPath by identifying gaps in the data so that we\n             * can draw a gap in the line or area. This was moved from ordinal\n             * axis module to broken axis module as of #5045.\n             *\n             * @private\n             * @function Highcharts.Series#gappedPath\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Gapped path\n             */\n            function seriesGappedPath() {\n                var currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n                var gapSize = this.options.gapSize, i = points.length - 1, stack;\n                /**\n                 * Defines when to display a gap in the graph, together with the\n                 * [gapUnit](plotOptions.series.gapUnit) option.\n                 *\n                 * In case when `dataGrouping` is enabled, points can be grouped\n                 * into a larger time span. This can make the grouped points to\n                 * have a greater distance than the absolute value of `gapSize`\n                 * property, which will result in disappearing graph completely.\n                 * To prevent this situation the mentioned distance between\n                 * grouped points is used instead of previously defined\n                 * `gapSize`.\n                 *\n                 * In practice, this option is most often used to visualize gaps\n                 * in time series. In a stock chart, intraday data is available\n                 * for daytime hours, while gaps will appear in nights and\n                 * weekends.\n                 *\n                 * @see [gapUnit](plotOptions.series.gapUnit)\n                 * @see [xAxis.breaks](#xAxis.breaks)\n                 *\n                 * @sample {highstock} stock/plotoptions/series-gapsize/\n                 * Setting the gap size to 2 introduces gaps for weekends in\n                 * daily datasets.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @product   highstock\n                 * @requires  modules/broken-axis\n                 * @apioption plotOptions.series.gapSize\n                 */\n                /**\n                 * Together with [gapSize](plotOptions.series.gapSize), this\n                 * option defines where to draw gaps in the graph.\n                 *\n                 * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n                 * means that if the distance between two points is greater than\n                 * 5 times that of the two closest points, the graph will be\n                 * broken.\n                 *\n                 * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n                 * axis values, which on a datetime axis is milliseconds. This\n                 * also applies to the navigator series that inherits gap\n                 * options from the base series.\n                 *\n                 * @see [gapSize](plotOptions.series.gapSize)\n                 *\n                 * @type       {string}\n                 * @default    relative\n                 * @since      5.0.13\n                 * @product    highstock\n                 * @validvalue [\"relative\", \"value\"]\n                 * @requires   modules/broken-axis\n                 * @apioption  plotOptions.series.gapUnit\n                 */\n                if (gapSize && i > 0) { // #5008\n                    // Gap unit is relative\n                    if (this.options.gapUnit !== 'value') {\n                        gapSize *= this.basePointRange;\n                    }\n                    // Setting a new gapSize in case dataGrouping is enabled\n                    // (#7686)\n                    if (groupingSize &&\n                        groupingSize > gapSize &&\n                        // Except when DG is forced (e.g. from other series)\n                        // and has lower granularity than actual points (#11351)\n                        groupingSize >= this.basePointRange) {\n                        gapSize = groupingSize;\n                    }\n                    // extension for ordinal breaks\n                    var current = void 0, next = void 0;\n                    while (i--) {\n                        // Reassign next if it is not visible\n                        if (!(next && next.visible !== false)) {\n                            next = points[i + 1];\n                        }\n                        current = points[i];\n                        // Skip iteration if one of the points is not visible\n                        if (next.visible === false || current.visible === false) {\n                            continue;\n                        }\n                        if (next.x - current.x > gapSize) {\n                            var xRange = (current.x + next.x) / 2;\n                            points.splice(// insert after this one\n                            i + 1, 0, {\n                                isNull: true,\n                                x: xRange\n                            });\n                            // For stacked chart generate empty stack items, #6546\n                            if (yAxis.stacking && this.options.stacking) {\n                                stack = yAxis.stacking.stacks[this.stackKey][xRange] = new StackItem(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                                stack.total = 0;\n                            }\n                        }\n                        // Assign current to next for the upcoming iteration\n                        next = current;\n                    }\n                }\n                // Call base method\n                return this.getGraphPath(points);\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Provides support for broken axes.\n             * @private\n             * @class\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                function Additions(axis) {\n                    this.hasBreaks = false;\n                    this.axis = axis;\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Additions.isInBreak = function (brk, val) {\n                    var repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                        (val - from) % repeat :\n                        repeat - ((from - val) % repeat));\n                    var ret;\n                    if (!brk.inclusive) {\n                        ret = test < length && test !== 0;\n                    }\n                    else {\n                        ret = test <= length;\n                    }\n                    return ret;\n                };\n                /**\n                 * @private\n                 */\n                Additions.lin2Val = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.from >= nval) {\n                            break;\n                        }\n                        else if (brk.to < nval) {\n                            nval += brk.len;\n                        }\n                        else if (Additions.isInBreak(brk, nval)) {\n                            nval += brk.len;\n                        }\n                    }\n                    return nval;\n                };\n                /**\n                 * @private\n                 */\n                Additions.val2Lin = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.to <= val) {\n                            nval -= brk.len;\n                        }\n                        else if (brk.from >= val) {\n                            break;\n                        }\n                        else if (Additions.isInBreak(brk, val)) {\n                            nval -= (val - brk.from);\n                            break;\n                        }\n                    }\n                    return nval;\n                };\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Returns the first break found where the x is larger then break.from\n                 * and smaller then break.to.\n                 *\n                 * @param {number} x\n                 * The number which should be within a break.\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n                 * The array of breaks to search within.\n                 *\n                 * @return {Highcharts.XAxisBreaksOptions|undefined}\n                 * Returns the first break found that matches, returns false if no break\n                 * is found.\n                 */\n                Additions.prototype.findBreakAt = function (x, breaks) {\n                    return find(breaks, function (b) {\n                        return b.from < x && x < b.to;\n                    });\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.isInAnyBreak = function (val, testKeep) {\n                    var brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n                    var i = breaks.length, inbrk, keep, ret;\n                    if (i && isNumber(val)) {\n                        while (i--) {\n                            if (Additions.isInBreak(breaks[i], val)) {\n                                inbrk = true;\n                                if (!keep) {\n                                    keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                                }\n                            }\n                        }\n                        if (inbrk && testKeep) {\n                            ret = inbrk && !keep;\n                        }\n                        else {\n                            ret = inbrk;\n                        }\n                    }\n                    return ret;\n                };\n                /**\n                 * Dynamically set or unset breaks in an axis. This function in lighter\n                 * than usin Axis.update, and it also preserves animation.\n                 *\n                 * @private\n                 * @function Highcharts.Axis#setBreaks\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n                 * The breaks to add. When `undefined` it removes existing breaks.\n                 *\n                 * @param {boolean} [redraw=true]\n                 * Whether to redraw the chart immediately.\n                 */\n                Additions.prototype.setBreaks = function (breaks, redraw) {\n                    var brokenAxis = this;\n                    var axis = brokenAxis.axis;\n                    var hasBreaks = isArray(breaks) &&\n                        !!breaks.length &&\n                        !!Object.keys(breaks[0]).length; // Check for [{}], #16368.\n                    axis.isDirty = brokenAxis.hasBreaks !== hasBreaks;\n                    brokenAxis.hasBreaks = hasBreaks;\n                    if (breaks !== axis.options.breaks) {\n                        axis.options.breaks = axis.userOptions.breaks = breaks;\n                    }\n                    axis.forceRedraw = true; // Force recalculation in setScale\n                    // Recalculate series related to the axis.\n                    axis.series.forEach(function (series) {\n                        series.isDirty = true;\n                    });\n                    if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                        // Revert to prototype functions\n                        delete axis.val2lin;\n                        delete axis.lin2val;\n                    }\n                    if (hasBreaks) {\n                        axis.userOptions.ordinal = false;\n                        axis.lin2val = Additions.lin2Val;\n                        axis.val2lin = Additions.val2Lin;\n                        axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                            // If trying to set extremes inside a break, extend min to\n                            // after, and max to before the break ( #3857 )\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_1 = (this.options.breaks || []);\n                                var axisBreak = void 0;\n                                while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                                    newMin = axisBreak.to;\n                                }\n                                while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                                    newMax = axisBreak.from;\n                                }\n                                // If both min and max is within the same break.\n                                if (newMax < newMin) {\n                                    newMax = newMin;\n                                }\n                            }\n                            axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                        };\n                        axis.setAxisTranslation = function () {\n                            axis.constructor.prototype.setAxisTranslation.call(this);\n                            brokenAxis.unitLength = void 0;\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_2 = axis.options.breaks || [], \n                                // Temporary one:\n                                breakArrayT_1 = [], breakArray_1 = [], pointRangePadding = pick(axis.pointRangePadding, 0);\n                                var length_1 = 0, inBrk_1, repeat_1, min_1 = axis.userMin || axis.min, max_1 = axis.userMax || axis.max, start_1, i_1;\n                                // Min & max check (#4247)\n                                breaks_2.forEach(function (brk) {\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        if (Additions.isInBreak(brk, min_1)) {\n                                            min_1 += ((brk.to % repeat_1) -\n                                                (min_1 % repeat_1));\n                                        }\n                                        if (Additions.isInBreak(brk, max_1)) {\n                                            max_1 -= ((max_1 % repeat_1) -\n                                                (brk.from % repeat_1));\n                                        }\n                                    }\n                                });\n                                // Construct an array holding all breaks in the axis\n                                breaks_2.forEach(function (brk) {\n                                    start_1 = brk.from;\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        while (start_1 - repeat_1 > min_1) {\n                                            start_1 -= repeat_1;\n                                        }\n                                        while (start_1 < min_1) {\n                                            start_1 += repeat_1;\n                                        }\n                                        for (i_1 = start_1; i_1 < max_1; i_1 += repeat_1) {\n                                            breakArrayT_1.push({\n                                                value: i_1,\n                                                move: 'in'\n                                            });\n                                            breakArrayT_1.push({\n                                                value: i_1 + brk.to - brk.from,\n                                                move: 'out',\n                                                size: brk.breakSize\n                                            });\n                                        }\n                                    }\n                                });\n                                breakArrayT_1.sort(function (a, b) {\n                                    return ((a.value === b.value) ?\n                                        ((a.move === 'in' ? 0 : 1) -\n                                            (b.move === 'in' ? 0 : 1)) :\n                                        a.value - b.value);\n                                });\n                                // Simplify the breaks\n                                inBrk_1 = 0;\n                                start_1 = min_1;\n                                breakArrayT_1.forEach(function (brk) {\n                                    inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                                    if (inBrk_1 === 1 && brk.move === 'in') {\n                                        start_1 = brk.value;\n                                    }\n                                    if (inBrk_1 === 0 && isNumber(start_1)) {\n                                        breakArray_1.push({\n                                            from: start_1,\n                                            to: brk.value,\n                                            len: brk.value - start_1 - (brk.size || 0)\n                                        });\n                                        length_1 += (brk.value -\n                                            start_1 -\n                                            (brk.size || 0));\n                                    }\n                                });\n                                brokenAxis.breakArray = breakArray_1;\n                                // Used with staticScale, and below the actual axis\n                                // length, when breaks are substracted.\n                                if (isNumber(min_1) &&\n                                    isNumber(max_1) &&\n                                    isNumber(axis.min)) {\n                                    brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                        pointRangePadding;\n                                    fireEvent(axis, 'afterBreaks');\n                                    if (axis.staticScale) {\n                                        axis.transA = axis.staticScale;\n                                    }\n                                    else if (brokenAxis.unitLength) {\n                                        axis.transA *=\n                                            (max_1 - axis.min + pointRangePadding) /\n                                                brokenAxis.unitLength;\n                                    }\n                                    if (pointRangePadding) {\n                                        axis.minPixelPadding =\n                                            axis.transA * (axis.minPointOffset || 0);\n                                    }\n                                    axis.min = min_1;\n                                    axis.max = max_1;\n                                }\n                            }\n                        };\n                    }\n                    if (pick(redraw, true)) {\n                        axis.chart.redraw();\n                    }\n                };\n                return Additions;\n            }());\n            BrokenAxis.Additions = Additions;\n        })(BrokenAxis || (BrokenAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BrokenAxis;\n    });\n    _registerModule(_modules, 'Core/Axis/GridAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (Axis, H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed, dateFormats = H.dateFormats;\n        var addEvent = U.addEvent, defined = U.defined, erase = U.erase, find = U.find, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique, timeUnits = U.timeUnits, wrap = U.wrap;\n        /* *\n         *\n         *  Enums\n         *\n         * */\n        /**\n         * Enum for which side the axis is on. Maps to axis.side.\n         * @private\n         */\n        var GridAxisSide;\n        (function (GridAxisSide) {\n            GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n            GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n            GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n            GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n        })(GridAxisSide || (GridAxisSide = {}));\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function argsToArray(args) {\n            return Array.prototype.slice.call(args, 1);\n        }\n        /**\n         * @private\n         */\n        function isObject(x) {\n            // Always use strict mode\n            return U.isObject(x, true);\n        }\n        /**\n         * @private\n         */\n        function applyGridOptions(axis) {\n            var options = axis.options;\n            // Center-align by default\n            /*\n            if (!options.labels) {\n                options.labels = {};\n            }\n            */\n            options.labels.align = pick(options.labels.align, 'center');\n            // @todo: Check against tickLabelPlacement between/on etc\n            /* Prevents adding the last tick label if the axis is not a category\n               axis.\n               Since numeric labels are normally placed at starts and ends of a\n               range of value, and this module makes the label point at the value,\n               an \"extra\" label would appear. */\n            if (!axis.categories) {\n                options.showLastLabel = false;\n            }\n            // Prevents rotation of labels when squished, as rotating them would not\n            // help.\n            axis.labelRotation = 0;\n            options.labels.rotation = 0;\n            // Allow putting ticks closer than their data points.\n            options.minTickInterval = 1;\n        }\n        /**\n         * Extends axis class with grid support.\n         * @private\n         */\n        function compose(AxisClass, ChartClass, TickClass) {\n            if (pushUnique(composed, compose)) {\n                AxisClass.keepProps.push('grid');\n                AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n                wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n                wrap(AxisClass.prototype, 'getOffset', wrapGetOffset);\n                // Add event handlers\n                addEvent(AxisClass, 'init', onInit);\n                addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n                addEvent(AxisClass, 'afterInit', onAfterInit);\n                addEvent(AxisClass, 'afterRender', onAfterRender);\n                addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n                addEvent(AxisClass, 'trimTicks', onTrimTicks);\n                addEvent(AxisClass, 'destroy', onDestroy);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n            }\n            return AxisClass;\n        }\n        /**\n         * Get the largest label width and height.\n         *\n         * @private\n         * @function Highcharts.Axis#getMaxLabelDimensions\n         *\n         * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n         * All the ticks on one axis.\n         *\n         * @param {Array<number|string>} tickPositions\n         * All the tick positions on one axis.\n         *\n         * @return {Highcharts.SizeObject}\n         * Object containing the properties height and width.\n         *\n         * @todo Move this to the generic axis implementation, as it is used there.\n         */\n        function getMaxLabelDimensions(ticks, tickPositions) {\n            var dimensions = {\n                width: 0,\n                height: 0\n            };\n            tickPositions.forEach(function (pos) {\n                var tick = ticks[pos];\n                var labelHeight = 0, labelWidth = 0, label;\n                if (isObject(tick)) {\n                    label = isObject(tick.label) ? tick.label : {};\n                    // Find width and height of label\n                    labelHeight = label.getBBox ? label.getBBox().height : 0;\n                    if (label.textStr && !isNumber(label.textPxLength)) {\n                        label.textPxLength = label.getBBox().width;\n                    }\n                    labelWidth = isNumber(label.textPxLength) ?\n                        // Math.round ensures crisp lines\n                        Math.round(label.textPxLength) :\n                        0;\n                    if (label.textStr) {\n                        // Set the tickWidth same as the label width after ellipsis\n                        // applied #10281\n                        labelWidth = Math.round(label.getBBox().width);\n                    }\n                    // Update the result if width and/or height are larger\n                    dimensions.height = Math.max(labelHeight, dimensions.height);\n                    dimensions.width = Math.max(labelWidth, dimensions.width);\n                }\n            });\n            // For tree grid, add indentation\n            if (this.options.type === 'treegrid' &&\n                this.treeGrid &&\n                this.treeGrid.mapOfPosToGridNode) {\n                var treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n                dimensions.width += (this.options.labels.indentation *\n                    (treeDepth - 1));\n            }\n            return dimensions;\n        }\n        /**\n         * Handle columns and getOffset.\n         * @private\n         */\n        function wrapGetOffset(proceed) {\n            var grid = this.grid, \n            // On the left side we handle the columns first because the offset is\n            // calculated from the plot area and out\n            columnsFirst = this.side === 3;\n            if (!columnsFirst) {\n                proceed.apply(this);\n            }\n            if (!(grid === null || grid === void 0 ? void 0 : grid.isColumn)) {\n                var columns = (grid === null || grid === void 0 ? void 0 : grid.columns) || [];\n                if (columnsFirst) {\n                    columns = columns.slice().reverse();\n                }\n                columns\n                    .forEach(function (column) {\n                    column.getOffset();\n                });\n            }\n            if (columnsFirst) {\n                proceed.apply(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterGetTitlePosition(e) {\n            var axis = this;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                // compute anchor points for each of the title align options\n                var axisTitle = axis.axisTitle, axisHeight = axis.height, horiz = axis.horiz, axisLeft = axis.left, offset = axis.offset, opposite = axis.opposite, options_1 = axis.options, axisTop = axis.top, axisWidth = axis.width;\n                var tickSize = axis.tickSize();\n                var titleWidth = axisTitle && axisTitle.getBBox().width;\n                var xOption = options_1.title.x;\n                var yOption = options_1.title.y;\n                var titleMargin = pick(options_1.title.margin, horiz ? 5 : 10);\n                var titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n                var crispCorr = tickSize ? tickSize[0] / 2 : 0;\n                // TODO account for alignment\n                // the position in the perpendicular direction of the axis\n                var offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n                    (horiz ? 1 : -1) * // horizontal axis reverses the margin\n                        (opposite ? -1 : 1) * // so does opposite axes\n                        crispCorr +\n                    (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n                e.titlePosition.x = horiz ?\n                    axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n                    offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n                e.titlePosition.y = horiz ?\n                    (offAxis -\n                        (opposite ? axisHeight : 0) +\n                        (opposite ? titleFontSize : -titleFontSize) / 2 +\n                        offset +\n                        yOption) :\n                    axisTop - titleMargin + yOption;\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterInit() {\n            var axis = this;\n            var chart = axis.chart, _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a, userOptions = axis.userOptions;\n            if (gridOptions.enabled) {\n                applyGridOptions(axis);\n            }\n            if (gridOptions.columns) {\n                var columns = axis.grid.columns = [];\n                var columnIndex = axis.grid.columnIndex = 0;\n                // Handle columns, each column is a grid axis\n                while (++columnIndex < gridOptions.columns.length) {\n                    var columnOptions = merge(userOptions, gridOptions.columns[columnIndex], {\n                        isInternal: true,\n                        linkedTo: 0,\n                        // Disable by default the scrollbar on the grid axis\n                        scrollbar: {\n                            enabled: false\n                        }\n                    }, \n                    // Avoid recursion\n                    {\n                        grid: {\n                            columns: void 0\n                        }\n                    });\n                    var column = new Axis(axis.chart, columnOptions, 'yAxis');\n                    column.grid.isColumn = true;\n                    column.grid.columnIndex = columnIndex;\n                    // Remove column axis from chart axes array, and place it\n                    // in the columns array.\n                    erase(chart.axes, column);\n                    erase(chart[axis.coll] || [], column);\n                    columns.push(column);\n                }\n            }\n        }\n        /**\n         * Draw an extra line on the far side of the outermost axis,\n         * creating floor/roof/wall of a grid. And some padding.\n         * ```\n         * Make this:\n         *             (axis.min) __________________________ (axis.max)\n         *                           |    |    |    |    |\n         * Into this:\n         *             (axis.min) __________________________ (axis.max)\n         *                        ___|____|____|____|____|__\n         * ```\n         * @private\n         */\n        function onAfterRender() {\n            var axis = this, axisTitle = axis.axisTitle, grid = axis.grid, options = axis.options, gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                var min = axis.min || 0, max = axis.max || 0, firstTick = axis.ticks[axis.tickPositions[0]];\n                // Adjust the title max width to the column width (#19657)\n                if (axisTitle &&\n                    !axis.chart.styledMode &&\n                    (firstTick === null || firstTick === void 0 ? void 0 : firstTick.slotWidth) &&\n                    !axis.options.title.style.width) {\n                    axisTitle.css({ width: \"\".concat(firstTick.slotWidth, \"px\") });\n                }\n                // @todo acutual label padding (top, bottom, left, right)\n                axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n                // Remove right wall before rendering if updating\n                if (axis.rightWall) {\n                    axis.rightWall.destroy();\n                }\n                /*\n                Draw an extra axis line on outer axes\n                            >\n                Make this:    |______|______|______|___\n\n                            > _________________________\n                Into this:    |______|______|______|__|\n                                                        */\n                if (axis.grid && axis.grid.isOuterAxis() && axis.axisLine) {\n                    var lineWidth = options.lineWidth;\n                    if (lineWidth) {\n                        var linePath = axis.getLinePath(lineWidth), startPoint = linePath[0], endPoint = linePath[1], \n                        // Negate distance if top or left axis\n                        // Subtract 1px to draw the line at the end of the tick\n                        tickLength = (axis.tickSize('tick') || [1])[0], distance = (tickLength - 1) * ((axis.side === GridAxisSide.top ||\n                            axis.side === GridAxisSide.left) ? -1 : 1);\n                        // If axis is horizontal, reposition line path vertically\n                        if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                            if (axis.horiz) {\n                                startPoint[2] += distance;\n                                endPoint[2] += distance;\n                            }\n                            else {\n                                startPoint[1] += distance;\n                                endPoint[1] += distance;\n                            }\n                        }\n                        // If it doesn't exist, add an upper and lower border\n                        // for the vertical grid axis.\n                        if (!axis.horiz && axis.chart.marginRight) {\n                            var upperBorderStartPoint = startPoint, upperBorderEndPoint = [\n                                'L',\n                                axis.left,\n                                startPoint[2] || 0\n                            ], upperBorderPath = [\n                                upperBorderStartPoint,\n                                upperBorderEndPoint\n                            ], lowerBorderEndPoint = [\n                                'L',\n                                axis.chart.chartWidth - axis.chart.marginRight,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderStartPoint = [\n                                'M',\n                                endPoint[1] || 0,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderPath = [\n                                lowerBorderStartPoint,\n                                lowerBorderEndPoint\n                            ];\n                            if (!axis.grid.upperBorder && min % 1 !== 0) {\n                                axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                            }\n                            if (axis.grid.upperBorder) {\n                                axis.grid.upperBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.upperBorder.animate({\n                                    d: upperBorderPath\n                                });\n                            }\n                            if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                                axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                            }\n                            if (axis.grid.lowerBorder) {\n                                axis.grid.lowerBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.lowerBorder.animate({\n                                    d: lowerBorderPath\n                                });\n                            }\n                        }\n                        // Render an extra line parallel to the existing axes, to\n                        // close the grid.\n                        if (!axis.grid.axisLineExtra) {\n                            axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                        }\n                        else {\n                            axis.grid.axisLineExtra.attr({\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth\n                            });\n                            axis.grid.axisLineExtra.animate({\n                                d: linePath\n                            });\n                        }\n                        // show or hide the line depending on options.showEmpty\n                        axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n                    }\n                }\n                (grid && grid.columns || []).forEach(function (column) { return column.render(); });\n                // Manipulate the tick mark visibility\n                // based on the axis.max- allows smooth scrolling.\n                if (!axis.horiz &&\n                    axis.chart.hasRendered &&\n                    (axis.scrollbar ||\n                        (axis.linkedParent && axis.linkedParent.scrollbar)) &&\n                    axis.tickPositions.length) {\n                    var tickmarkOffset = axis.tickmarkOffset, lastTick = axis.tickPositions[axis.tickPositions.length - 1], firstTick_1 = axis.tickPositions[0];\n                    var label = void 0, tickMark = void 0;\n                    while ((label = axis.hiddenLabels.pop()) && label.element) {\n                        label.show(); // #15453\n                    }\n                    while ((tickMark = axis.hiddenMarks.pop()) &&\n                        tickMark.element) {\n                        tickMark.show(); // #16439\n                    }\n                    // Hide/show first tick label.\n                    label = axis.ticks[firstTick_1].label;\n                    if (label) {\n                        if (min - firstTick_1 > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    // Hide/show last tick mark/label.\n                    label = axis.ticks[lastTick].label;\n                    if (label) {\n                        if (lastTick - max > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    var mark = axis.ticks[lastTick].mark;\n                    if (mark &&\n                        lastTick - max < tickmarkOffset &&\n                        lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                        axis.hiddenMarks.push(mark.hide());\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetAxisTranslation() {\n            var axis = this;\n            var tickInfo = axis.tickPositions && axis.tickPositions.info;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            var userLabels = axis.userOptions.labels || {};\n            // Fire this only for the Gantt type chart, #14868.\n            if (gridOptions.enabled) {\n                if (axis.horiz) {\n                    axis.series.forEach(function (series) {\n                        series.options.pointRange = 0;\n                    });\n                    // Lower level time ticks, like hours or minutes, represent\n                    // points in time and not ranges. These should be aligned\n                    // left in the grid cell by default. The same applies to\n                    // years of higher order.\n                    if (tickInfo &&\n                        options.dateTimeLabelFormats &&\n                        options.labels &&\n                        !defined(userLabels.align) &&\n                        (options.dateTimeLabelFormats[tickInfo.unitName]\n                            .range === false ||\n                            tickInfo.count > 1 // years\n                        )) {\n                        options.labels.align = 'left';\n                        if (!defined(userLabels.x)) {\n                            options.labels.x = 3;\n                        }\n                    }\n                }\n                else {\n                    // Don't trim ticks which not in min/max range but\n                    // they are still in the min/max plus tickInterval.\n                    if (this.options.type !== 'treegrid' &&\n                        axis.grid &&\n                        axis.grid.columns) {\n                        this.minPointOffset = this.tickInterval;\n                    }\n                }\n            }\n        }\n        /**\n         * Creates a left and right wall on horizontal axes:\n         * - Places leftmost tick at the start of the axis, to create a left\n         *   wall\n         * - Ensures that the rightmost tick is at the end of the axis, to\n         *   create a right wall.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = this.options, userOptions = e.userOptions, gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n            var gridAxisOptions;\n            if (gridOptions.enabled === true) {\n                // Merge the user options into default grid axis options so\n                // that when a user option is set, it takes presedence.\n                gridAxisOptions = merge(true, {\n                    className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n                    dateTimeLabelFormats: {\n                        hour: {\n                            list: ['%H:%M', '%H']\n                        },\n                        day: {\n                            list: ['%A, %e. %B', '%a, %e. %b', '%E']\n                        },\n                        week: {\n                            list: ['Week %W', 'W%W']\n                        },\n                        month: {\n                            list: ['%B', '%b', '%o']\n                        }\n                    },\n                    grid: {\n                        borderWidth: 1\n                    },\n                    labels: {\n                        padding: 2,\n                        style: {\n                            fontSize: '0.9em'\n                        }\n                    },\n                    margin: 0,\n                    title: {\n                        text: null,\n                        reserveSpace: false,\n                        rotation: 0,\n                        style: {\n                            textOverflow: 'ellipsis'\n                        }\n                    },\n                    // In a grid axis, only allow one unit of certain types,\n                    // for example we shouln't have one grid cell spanning\n                    // two days.\n                    units: [[\n                            'millisecond',\n                            [1, 10, 100]\n                        ], [\n                            'second',\n                            [1, 10]\n                        ], [\n                            'minute',\n                            [1, 5, 15]\n                        ], [\n                            'hour',\n                            [1, 6]\n                        ], [\n                            'day',\n                            [1]\n                        ], [\n                            'week',\n                            [1]\n                        ], [\n                            'month',\n                            [1]\n                        ], [\n                            'year',\n                            null\n                        ]]\n                }, userOptions);\n                // X-axis specific options\n                if (this.coll === 'xAxis') {\n                    // For linked axes, tickPixelInterval is used only if\n                    // the tickPositioner below doesn't run or returns\n                    // undefined (like multiple years)\n                    if (defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPixelInterval)) {\n                        gridAxisOptions.tickPixelInterval = 350;\n                    }\n                    // For the secondary grid axis, use the primary axis'\n                    // tick intervals and return ticks one level higher.\n                    if (\n                    // Check for tick pixel interval in options\n                    !defined(userOptions.tickPixelInterval) &&\n                        // Only for linked axes\n                        defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPositioner) &&\n                        !defined(userOptions.tickInterval) &&\n                        !defined(userOptions.units)) {\n                        gridAxisOptions.tickPositioner = function (min, max) {\n                            var parentInfo = (this.linkedParent &&\n                                this.linkedParent.tickPositions &&\n                                this.linkedParent.tickPositions.info);\n                            if (parentInfo) {\n                                var units = (gridAxisOptions.units || []);\n                                var unitIdx = void 0, count = 1, unitName = 'year';\n                                for (var i = 0; i < units.length; i++) {\n                                    var unit_1 = units[i];\n                                    if (unit_1 && unit_1[0] === parentInfo.unitName) {\n                                        unitIdx = i;\n                                        break;\n                                    }\n                                }\n                                // Get the first allowed count on the next unit.\n                                var unit = (isNumber(unitIdx) && units[unitIdx + 1]);\n                                if (unit) {\n                                    unitName = unit[0] || 'year';\n                                    var counts = unit[1];\n                                    count = counts && counts[0] || 1;\n                                    // In case the base X axis shows years, make the\n                                    // secondary axis show ten times the years (#11427)\n                                }\n                                else if (parentInfo.unitName === 'year') {\n                                    // unitName is 'year'\n                                    count = parentInfo.count * 10;\n                                }\n                                var unitRange = timeUnits[unitName];\n                                this.tickInterval = unitRange * count;\n                                return this.chart.time.getTimeTicks({ unitRange: unitRange, count: count, unitName: unitName }, min, max, this.options.startOfWeek);\n                            }\n                        };\n                    }\n                }\n                // Now merge the combined options into the axis options\n                merge(true, this.options, gridAxisOptions);\n                if (this.horiz) {\n                    /*               _________________________\n                    Make this:    ___|_____|_____|_____|__|\n                                    ^                     ^\n                                    _________________________\n                    Into this:    |_____|_____|_____|_____|\n                                        ^                 ^    */\n                    options.minPadding = pick(userOptions.minPadding, 0);\n                    options.maxPadding = pick(userOptions.maxPadding, 0);\n                }\n                // If borderWidth is set, then use its value for tick and\n                // line width.\n                if (isNumber(options.grid.borderWidth)) {\n                    options.tickWidth = options.lineWidth =\n                        gridOptions.borderWidth;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetOptions2(e) {\n            var axis = this;\n            var userOptions = e.userOptions;\n            var gridOptions = userOptions && userOptions.grid || {};\n            var columns = gridOptions.columns;\n            // Add column options to the parent axis. Children has their column options\n            // set on init in onGridAxisAfterInit.\n            if (gridOptions.enabled && columns) {\n                merge(true, axis.options, columns[0]);\n            }\n        }\n        /**\n         * Handle columns and setScale.\n         * @private\n         */\n        function onAfterSetScale() {\n            var axis = this;\n            (axis.grid.columns || []).forEach(function (column) { return column.setScale(); });\n        }\n        /**\n         * Draw vertical axis ticks extra long to create cell floors and roofs.\n         * Overrides the tickLength for vertical axes.\n         * @private\n         */\n        function onAfterTickSize(e) {\n            var _a = this, horiz = _a.horiz, maxLabelDimensions = _a.maxLabelDimensions, _b = _a.options.grid, gridOptions = _b === void 0 ? {} : _b;\n            if (gridOptions.enabled && maxLabelDimensions) {\n                var labelPadding = this.options.labels.distance * 2;\n                var distance = horiz ?\n                    (gridOptions.cellHeight ||\n                        labelPadding + maxLabelDimensions.height) :\n                    labelPadding + maxLabelDimensions.width;\n                if (isArray(e.tickSize)) {\n                    e.tickSize[0] = distance;\n                }\n                else {\n                    e.tickSize = [distance, 0];\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            this.axes.forEach(function (axis) {\n                (axis.grid && axis.grid.columns || []).forEach(function (column) {\n                    column.setAxisSize();\n                    column.setAxisTranslation();\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function onDestroy(e) {\n            var grid = this.grid;\n            (grid.columns || []).forEach(function (column) { return column.destroy(e.keepEvents); });\n            grid.columns = void 0;\n        }\n        /**\n         * Wraps axis init to draw cell walls on vertical axes.\n         * @private\n         */\n        function onInit(e) {\n            var axis = this;\n            var userOptions = e.userOptions || {};\n            var gridOptions = userOptions.grid || {};\n            if (gridOptions.enabled && defined(gridOptions.borderColor)) {\n                userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n            }\n            if (!axis.grid) {\n                axis.grid = new GridAxisAdditions(axis);\n            }\n            axis.hiddenLabels = [];\n            axis.hiddenMarks = [];\n        }\n        /**\n         * Center tick labels in cells.\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var tick = this, label = tick.label, axis = tick.axis, reversed = axis.reversed, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, labelOpts = axis.options.labels, align = labelOpts.align, \n            // verticalAlign is currently not supported for axis.labels.\n            verticalAlign = 'middle', // labelOpts.verticalAlign,\n            side = GridAxisSide[axis.side], tickmarkOffset = e.tickmarkOffset, tickPositions = axis.tickPositions, tickPos = tick.pos - tickmarkOffset, nextTickPos = (isNumber(tickPositions[e.index + 1]) ?\n                tickPositions[e.index + 1] - tickmarkOffset :\n                (axis.max || 0) + tickmarkOffset), tickSize = axis.tickSize('tick'), tickWidth = tickSize ? tickSize[0] : 0, crispCorr = tickSize ? tickSize[1] / 2 : 0;\n            // Only center tick labels in grid axes\n            if (gridOptions.enabled === true) {\n                var bottom = void 0, top_1, left = void 0, right = void 0;\n                // Calculate top and bottom positions of the cell.\n                if (side === 'top') {\n                    bottom = axis.top + axis.offset;\n                    top_1 = bottom - tickWidth;\n                }\n                else if (side === 'bottom') {\n                    top_1 = chart.chartHeight - axis.bottom + axis.offset;\n                    bottom = top_1 + tickWidth;\n                }\n                else {\n                    bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n                    top_1 = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n                }\n                // Calculate left and right positions of the cell.\n                if (side === 'right') {\n                    left = chart.chartWidth - axis.right + axis.offset;\n                    right = left + tickWidth;\n                }\n                else if (side === 'left') {\n                    right = axis.left + axis.offset;\n                    left = right - tickWidth;\n                }\n                else {\n                    left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n                    right = Math.min(// #15742\n                    Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n                }\n                tick.slotWidth = right - left;\n                // Calculate the positioning of the label based on\n                // alignment.\n                e.pos.x = (align === 'left' ?\n                    left :\n                    align === 'right' ?\n                        right :\n                        left + ((right - left) / 2) // default to center\n                );\n                e.pos.y = (verticalAlign === 'top' ?\n                    top_1 :\n                    verticalAlign === 'bottom' ?\n                        bottom :\n                        top_1 + ((bottom - top_1) / 2) // default to middle\n                );\n                if (label) {\n                    var lblMetrics = chart.renderer.fontMetrics(label), labelHeight = label.getBBox().height;\n                    // Adjustment to y position to align the label correctly.\n                    // Would be better to have a setter or similar for this.\n                    if (!labelOpts.useHTML) {\n                        var lines = Math.round(labelHeight / lblMetrics.h);\n                        e.pos.y += (\n                        // Center the label\n                        // TODO: why does this actually center the label?\n                        ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                            // Adjust for height of additional lines.\n                            -(((lines - 1) * lblMetrics.h) / 2));\n                    }\n                    else {\n                        e.pos.y += (\n                        // Readjust yCorr in htmlUpdateTransform\n                        lblMetrics.b +\n                            // Adjust for height of html label\n                            -(labelHeight / 2));\n                    }\n                }\n                e.pos.x += (axis.horiz && labelOpts.x) || 0;\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickLabelFormat(ctx) {\n            var axis = ctx.axis, value = ctx.value;\n            if (axis.options.grid &&\n                axis.options.grid.enabled) {\n                var tickPos = axis.tickPositions;\n                var series = (axis.linkedParent || axis).series[0];\n                var isFirst = value === tickPos[0];\n                var isLast = value === tickPos[tickPos.length - 1];\n                var point = series && find(series.options.data, function (p) {\n                    return p[axis.isXAxis ? 'x' : 'y'] === value;\n                });\n                var pointCopy = void 0;\n                if (point && series.is('gantt')) {\n                    // For the Gantt set point aliases to the pointCopy\n                    // to do not change the original point\n                    pointCopy = merge(point);\n                    H.seriesTypes.gantt.prototype.pointClass\n                        .setGanttPointAliases(pointCopy);\n                }\n                // Make additional properties available for the\n                // formatter\n                ctx.isFirst = isFirst;\n                ctx.isLast = isLast;\n                ctx.point = pointCopy;\n            }\n        }\n        /**\n         * Makes tick labels which are usually ignored in a linked axis\n         * displayed if they are within range of linkedParent.min.\n         * ```\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Make this:             |   |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Into this:             | 1 |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         * ```\n         * @private\n         * @todo Does this function do what the drawing says? Seems to affect\n         *       ticks and not the labels directly?\n         */\n        function onTrimTicks() {\n            var axis = this, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, categoryAxis = axis.categories, tickPositions = axis.tickPositions, firstPos = tickPositions[0], secondPos = tickPositions[1], lastPos = tickPositions[tickPositions.length - 1], beforeLastPos = tickPositions[tickPositions.length - 2], linkedMin = axis.linkedParent && axis.linkedParent.min, linkedMax = axis.linkedParent && axis.linkedParent.max, min = linkedMin || axis.min, max = linkedMax || axis.max, tickInterval = axis.tickInterval, startLessThanMin = ( // #19845\n            isNumber(min) &&\n                min >= firstPos + tickInterval &&\n                min < secondPos), endMoreThanMin = (isNumber(min) &&\n                firstPos < min &&\n                firstPos + tickInterval > min), startLessThanMax = (isNumber(max) &&\n                lastPos > max &&\n                lastPos - tickInterval < max), endMoreThanMax = (isNumber(max) &&\n                max <= lastPos - tickInterval &&\n                max > beforeLastPos);\n            if (gridOptions.enabled === true &&\n                !categoryAxis &&\n                (axis.isXAxis || axis.isLinked)) {\n                if ((endMoreThanMin || startLessThanMin) && !options.startOnTick) {\n                    tickPositions[0] = min;\n                }\n                if ((startLessThanMax || endMoreThanMax) && !options.endOnTick) {\n                    tickPositions[tickPositions.length - 1] = max;\n                }\n            }\n        }\n        /**\n         * Avoid altering tickInterval when reserving space.\n         * @private\n         */\n        function wrapUnsquish(proceed) {\n            var axis = this;\n            var _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a;\n            if (gridOptions.enabled === true && axis.categories) {\n                return axis.tickInterval;\n            }\n            return proceed.apply(axis, argsToArray(arguments));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Additions for grid axes.\n         * @private\n         * @class\n         */\n        var GridAxisAdditions = /** @class */ (function () {\n            /* *\n            *\n            *  Constructors\n            *\n            * */\n            function GridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Checks if an axis is the outer axis in its dimension. Since\n             * axes are placed outwards in order, the axis with the highest\n             * index is the outermost axis.\n             *\n             * Example: If there are multiple x-axes at the top of the chart,\n             * this function returns true if the axis supplied is the last\n             * of the x-axes.\n             *\n             * @private\n             *\n             * @return {boolean}\n             * True if the axis is the outermost axis in its dimension; false if\n             * not.\n             */\n            GridAxisAdditions.prototype.isOuterAxis = function () {\n                var _a;\n                var axis = this.axis;\n                var chart = axis.chart;\n                var columnIndex = axis.grid.columnIndex;\n                var columns = (((_a = axis.linkedParent) === null || _a === void 0 ? void 0 : _a.grid.columns) ||\n                    axis.grid.columns ||\n                    []);\n                var parentAxis = columnIndex ? axis.linkedParent : axis;\n                var thisIndex = -1, lastIndex = 0;\n                // On the left side, when we have columns (not only multiple axes), the\n                // main axis is to the left\n                if (axis.side === 3 && !chart.inverted && columns.length) {\n                    return !axis.linkedParent;\n                }\n                (chart[axis.coll] || []).forEach(function (otherAxis, index) {\n                    if (otherAxis.side === axis.side &&\n                        !otherAxis.options.isInternal) {\n                        lastIndex = index;\n                        if (otherAxis === parentAxis) {\n                            // Get the index of the axis in question\n                            thisIndex = index;\n                        }\n                    }\n                });\n                return (lastIndex === thisIndex &&\n                    (isNumber(columnIndex) ?\n                        columns.length === columnIndex :\n                        true));\n            };\n            /**\n             * Add extra border based on the provided path.\n             * @private\n             * @param {SVGPath} path\n             * The path of the border.\n             * @return {Highcharts.SVGElement}\n             * Border\n             */\n            GridAxisAdditions.prototype.renderBorder = function (path) {\n                var axis = this.axis, renderer = axis.chart.renderer, options = axis.options, extraBorderLine = renderer.path(path)\n                    .addClass('highcharts-axis-line')\n                    .add(axis.axisGroup);\n                if (!renderer.styledMode) {\n                    extraBorderLine.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth,\n                        zIndex: 7\n                    });\n                }\n                return extraBorderLine;\n            };\n            return GridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // First letter of the day of the week, e.g. 'M' for 'Monday'.\n        dateFormats.E = function (timestamp) {\n            return this.dateFormat('%a', timestamp, true).charAt(0);\n        };\n        // Adds week date format\n        dateFormats.W = function (timestamp) {\n            var time = this, d = new this.Date(timestamp), unitsToOmit = ['Hours', 'Milliseconds', 'Minutes', 'Seconds'];\n            unitsToOmit.forEach(function (format) {\n                time.set(format, d, 0);\n            });\n            var firstDay = (this.get('Day', d) + 6) % 7;\n            var thursday = new this.Date(d.valueOf());\n            this.set('Date', thursday, this.get('Date', d) - firstDay + 3);\n            var firstThursday = new this.Date(this.get('FullYear', thursday), 0, 1);\n            if (this.get('Day', firstThursday) !== 4) {\n                this.set('Month', d, 0);\n                this.set('Date', d, 1 + (11 - this.get('Day', firstThursday)) % 7);\n            }\n            return (1 +\n                Math.floor((thursday.valueOf() - firstThursday.valueOf()) / 604800000)).toString();\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var GridAxis = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * @productdesc {gantt}\n         * For grid axes (like in Gantt charts),\n         * it is possible to declare as a list to provide different\n         * formats depending on available space.\n         *\n         * Defaults to:\n         * ```js\n         * {\n         *     hour: { list: ['%H:%M', '%H'] },\n         *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n         *     week: { list: ['Week %W', 'W%W'] },\n         *     month: { list: ['%B', '%b', '%o'] }\n         * }\n         * ```\n         *\n         * @sample {gantt} gantt/grid-axis/date-time-label-formats\n         *         Gantt chart with custom axis date format.\n         *\n         * @apioption xAxis.dateTimeLabelFormats\n         */\n        /**\n         * Set grid options for the axis labels. Requires Highcharts Gantt.\n         *\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid\n         */\n        /**\n         * Enable grid on the axis labels. Defaults to true for Gantt charts.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid.enabled\n         */\n        /**\n         * Set specific options for each column (or row for horizontal axes) in the\n         * grid. Each extra column/row is its own axis, and the axis options can be set\n         * here.\n         *\n         * @sample gantt/demo/left-axis-table\n         *         Left axis as a table\n         * @sample gantt/demo/treegrid-columns\n         *         Collapsible tree grid with columns\n         *\n         * @type      {Array<Highcharts.XAxisOptions>}\n         * @apioption xAxis.grid.columns\n         */\n        /**\n         * Set border color for the label grid lines.\n         *\n         * @type      {Highcharts.ColorString}\n         * @default   #e6e6e6\n         * @apioption xAxis.grid.borderColor\n         */\n        /**\n         * Set border width of the label grid lines.\n         *\n         * @type      {number}\n         * @default   1\n         * @apioption xAxis.grid.borderWidth\n         */\n        /**\n         * Set cell height for grid axis labels. By default this is calculated from font\n         * size. This option only applies to horizontal axes. For vertical axes, check\n         * the [#yAxis.staticScale](yAxis.staticScale) option.\n         *\n         * @sample gantt/grid-axis/cellheight\n         *         Gant chart with custom cell height\n         * @type      {number}\n         * @apioption xAxis.grid.cellHeight\n         */\n        ''; // keeps doclets above in JS file\n\n        return GridAxis;\n    });\n    _registerModule(_modules, 'Gantt/Tree.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __rest = (this && this.__rest) || function (s, e) {\n            var t = {};\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n            if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n                for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                        t[p[i]] = s[p[i]];\n                }\n            return t;\n        };\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var extend = U.extend, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Creates an object map from parent id to childrens index.\n         *\n         * @private\n         * @function Highcharts.Tree#getListOfParents\n         *\n         * @param {Array<*>} data\n         *        List of points set in options. `Array.parent` is parent id of point.\n         *\n         * @param {Array<string>} ids\n         *        List of all point ids.\n         *\n         * @return {Highcharts.Dictionary<Array<*>>}\n         * Map from parent id to children index in data\n         */\n        function getListOfParents(data) {\n            var root = '', ids = [], listOfParents = data.reduce(function (prev, curr) {\n                var _a = curr.parent, parent = _a === void 0 ? '' : _a, id = curr.id;\n                if (typeof prev[parent] === 'undefined') {\n                    prev[parent] = [];\n                }\n                prev[parent].push(curr);\n                if (id) {\n                    ids.push(id);\n                }\n                return prev;\n            }, {});\n            Object.keys(listOfParents).forEach(function (node) {\n                var _a;\n                if ((node !== root) && (ids.indexOf(node) === -1)) {\n                    var adoptedByRoot = listOfParents[node].map(function (orphan) {\n                        var parent = orphan.parent, parentExcluded = __rest(orphan, [\"parent\"]); // #15196\n                        return parentExcluded;\n                    });\n                    (_a = listOfParents[root]).push.apply(_a, adoptedByRoot);\n                    delete listOfParents[node];\n                }\n            });\n            return listOfParents;\n        }\n        /** @private */\n        function getNode(id, parent, level, data, mapOfIdToChildren, options) {\n            var after = options && options.after, before = options && options.before, node = {\n                data: data,\n                depth: level - 1,\n                id: id,\n                level: level,\n                parent: (parent || '')\n            };\n            var descendants = 0, height = 0, start, end;\n            // Allow custom logic before the children has been created.\n            if (typeof before === 'function') {\n                before(node, options);\n            }\n            // Call getNode recursively on the children. Calulate the height of the\n            // node, and the number of descendants.\n            var children = ((mapOfIdToChildren[id] || [])).map(function (child) {\n                var node = getNode(child.id, id, (level + 1), child, mapOfIdToChildren, options), childStart = child.start || NaN, childEnd = (child.milestone === true ?\n                    childStart :\n                    child.end ||\n                        NaN);\n                // Start should be the lowest child.start.\n                start = ((!isNumber(start) || childStart < start) ?\n                    childStart :\n                    start);\n                // End should be the largest child.end.\n                // If child is milestone, then use start as end.\n                end = ((!isNumber(end) || childEnd > end) ?\n                    childEnd :\n                    end);\n                descendants = descendants + 1 + node.descendants;\n                height = Math.max(node.height + 1, height);\n                return node;\n            });\n            // Calculate start and end for point if it is not already explicitly set.\n            if (data) {\n                data.start = pick(data.start, start);\n                data.end = pick(data.end, end);\n            }\n            extend(node, {\n                children: children,\n                descendants: descendants,\n                height: height\n            });\n            // Allow custom logic after the children has been created.\n            if (typeof after === 'function') {\n                after(node, options);\n            }\n            return node;\n        }\n        /** @private */\n        function getTree(data, options) {\n            return getNode('', null, 1, null, getListOfParents(data), options);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Tree = {\n            getNode: getNode,\n            getTree: getTree\n        };\n\n        return Tree;\n    });\n    _registerModule(_modules, 'Core/Axis/TreeGrid/TreeGridTick.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var addEvent = U.addEvent, removeEvent = U.removeEvent, isObject = U.isObject, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique, wrap = U.wrap;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onTickInit() {\n            var tick = this;\n            if (!tick.treeGrid) {\n                tick.treeGrid = new TreeGridTickAdditions(tick);\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickHover(label) {\n            label.addClass('highcharts-treegrid-node-active');\n            if (!label.renderer.styledMode) {\n                label.css({\n                    textDecoration: 'underline'\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickHoverExit(label, options) {\n            var css = isObject(options.style) ? options.style : {};\n            label.removeClass('highcharts-treegrid-node-active');\n            if (!label.renderer.styledMode) {\n                label.css({ textDecoration: (css.textDecoration || 'none') });\n            }\n        }\n        /**\n         * @private\n         */\n        function renderLabelIcon(tick, params) {\n            var _a;\n            var treeGrid = tick.treeGrid, isNew = !treeGrid.labelIcon, renderer = params.renderer, labelBox = params.xy, options = params.options, width = options.width || 0, height = options.height || 0, padding = ((_a = options.padding) !== null && _a !== void 0 ? _a : tick.axis.linkedParent) ? 0 : 5, iconCenter = {\n                x: labelBox.x - (width / 2) - padding,\n                y: labelBox.y - (height / 2)\n            }, rotation = params.collapsed ? 90 : 180, shouldRender = params.show && isNumber(iconCenter.y);\n            var icon = treeGrid.labelIcon;\n            if (!icon) {\n                treeGrid.labelIcon = icon = renderer\n                    .path(renderer.symbols[options.type](options.x || 0, options.y || 0, width, height))\n                    .addClass('highcharts-label-icon')\n                    .add(params.group);\n            }\n            // Set the new position, and show or hide\n            icon[shouldRender ? 'show' : 'hide'](); // #14904, #1338\n            // Presentational attributes\n            if (!renderer.styledMode) {\n                icon\n                    .attr({\n                    cursor: 'pointer',\n                    'fill': pick(params.color, \"#666666\" /* Palette.neutralColor60 */),\n                    'stroke-width': 1,\n                    stroke: options.lineColor,\n                    strokeWidth: options.lineWidth || 0\n                });\n            }\n            // Update the icon positions\n            icon[isNew ? 'attr' : 'animate']({\n                translateX: iconCenter.x,\n                translateY: iconCenter.y,\n                rotation: rotation\n            });\n        }\n        /**\n         * @private\n         */\n        function wrapGetLabelPosition(proceed, x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {\n            var tick = this, lbOptions = pick(tick.options && tick.options.labels, labelOptions), pos = tick.pos, axis = tick.axis, options = axis.options, isTreeGrid = options.type === 'treegrid', result = proceed.apply(tick, [x, y, label, horiz, lbOptions, tickmarkOffset, index, step]);\n            var mapOfPosToGridNode, node, level;\n            if (isTreeGrid) {\n                var _a = (lbOptions && isObject(lbOptions.symbol, true) ?\n                    lbOptions.symbol :\n                    {}), _b = _a.width, width = _b === void 0 ? 0 : _b, _c = _a.padding, padding = _c === void 0 ? axis.linkedParent ? 0 : 5 : _c, indentation = (lbOptions && isNumber(lbOptions.indentation) ?\n                    lbOptions.indentation :\n                    0);\n                mapOfPosToGridNode = axis.treeGrid.mapOfPosToGridNode;\n                node = mapOfPosToGridNode && mapOfPosToGridNode[pos];\n                level = (node && node.depth) || 1;\n                result.x += (\n                // Add space for symbols\n                (width + (padding * 2)) +\n                    // Apply indentation\n                    ((level - 1) * indentation));\n            }\n            return result;\n        }\n        /**\n         * @private\n         */\n        function wrapRenderLabel(proceed) {\n            var tick = this, pos = tick.pos, axis = tick.axis, label = tick.label, tickGrid = tick.treeGrid, tickOptions = tick.options, icon = tickGrid === null || tickGrid === void 0 ? void 0 : tickGrid.labelIcon, labelElement = label === null || label === void 0 ? void 0 : label.element, axisGrid = axis.treeGrid, axisOptions = axis.options, chart = axis.chart, tickPositions = axis.tickPositions, mapOfPosToGridNode = axisGrid.mapOfPosToGridNode, labelOptions = pick(tickOptions === null || tickOptions === void 0 ? void 0 : tickOptions.labels, axisOptions === null || axisOptions === void 0 ? void 0 : axisOptions.labels), symbolOptions = (labelOptions && isObject(labelOptions.symbol, true) ?\n                labelOptions.symbol :\n                {}), node = mapOfPosToGridNode && mapOfPosToGridNode[pos], _a = node || {}, descendants = _a.descendants, depth = _a.depth, hasDescendants = node && descendants && descendants > 0, level = depth, isTreeGridElement = (axisOptions.type === 'treegrid') && labelElement, shouldRender = tickPositions.indexOf(pos) > -1, prefixClassName = 'highcharts-treegrid-node-', prefixLevelClass = prefixClassName + 'level-', styledMode = chart.styledMode;\n            var collapsed, addClassName, removeClassName;\n            if (isTreeGridElement && node) {\n                // Add class name for hierarchical styling.\n                label\n                    .removeClass(new RegExp(prefixLevelClass + '.*'))\n                    .addClass(prefixLevelClass + level);\n            }\n            proceed.apply(tick, Array.prototype.slice.call(arguments, 1));\n            if (isTreeGridElement && hasDescendants) {\n                collapsed = axisGrid.isCollapsed(node);\n                renderLabelIcon(tick, {\n                    color: (!styledMode &&\n                        label.styles &&\n                        label.styles.color ||\n                        ''),\n                    collapsed: collapsed,\n                    group: label.parentGroup,\n                    options: symbolOptions,\n                    renderer: label.renderer,\n                    show: shouldRender,\n                    xy: label.xy\n                });\n                // Add class name for the node.\n                addClassName = prefixClassName +\n                    (collapsed ? 'collapsed' : 'expanded');\n                removeClassName = prefixClassName +\n                    (collapsed ? 'expanded' : 'collapsed');\n                label\n                    .addClass(addClassName)\n                    .removeClass(removeClassName);\n                if (!styledMode) {\n                    label.css({\n                        cursor: 'pointer'\n                    });\n                }\n                // Add events to both label text and icon\n                [label, icon].forEach(function (object) {\n                    if (object && !object.attachedTreeGridEvents) {\n                        // On hover\n                        addEvent(object.element, 'mouseover', function () {\n                            onTickHover(label);\n                        });\n                        // On hover out\n                        addEvent(object.element, 'mouseout', function () {\n                            onTickHoverExit(label, labelOptions);\n                        });\n                        addEvent(object.element, 'click', function () {\n                            tickGrid.toggleCollapse();\n                        });\n                        object.attachedTreeGridEvents = true;\n                    }\n                });\n            }\n            else if (icon) {\n                removeEvent(labelElement);\n                label === null || label === void 0 ? void 0 : label.css({ cursor: 'default' });\n                icon.destroy();\n            }\n        }\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var TreeGridTickAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function TreeGridTickAdditions(tick) {\n                this.tick = tick;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            TreeGridTickAdditions.compose = function (TickClass) {\n                if (pushUnique(composed, this.compose)) {\n                    var tickProto = TickClass.prototype;\n                    addEvent(TickClass, 'init', onTickInit);\n                    wrap(tickProto, 'getLabelPosition', wrapGetLabelPosition);\n                    wrap(tickProto, 'renderLabel', wrapRenderLabel);\n                    // backwards compatibility\n                    tickProto.collapse = function (redraw) {\n                        this.treeGrid.collapse(redraw);\n                    };\n                    tickProto.expand = function (redraw) {\n                        this.treeGrid.expand(redraw);\n                    };\n                    tickProto.toggleCollapse = function (redraw) {\n                        this.treeGrid.toggleCollapse(redraw);\n                    };\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Collapse the grid cell. Used when axis is of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#collapse\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.collapse = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.collapse(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            /**\n             * Destroy remaining labelIcon if exist.\n             *\n             * @private\n             * @function Highcharts.Tick#destroy\n             */\n            TreeGridTickAdditions.prototype.destroy = function () {\n                if (this.labelIcon) {\n                    this.labelIcon.destroy();\n                }\n            };\n            /**\n             * Expand the grid cell. Used when axis is of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#expand\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.expand = function (redraw) {\n                var _a = this.tick, pos = _a.pos, axis = _a.axis, treeGrid = axis.treeGrid, brokenAxis = axis.brokenAxis, posMappedNodes = treeGrid.mapOfPosToGridNode;\n                if (brokenAxis && posMappedNodes) {\n                    var node = posMappedNodes[pos], breaks = treeGrid.expand(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            /**\n             * Toggle the collapse/expand state of the grid cell. Used when axis is\n             * of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#toggleCollapse\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.toggleCollapse = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.toggleCollapse(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            return TreeGridTickAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TreeGridTickAdditions;\n    });\n    _registerModule(_modules, 'Series/TreeUtilities.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2014-2024 Highsoft AS\n         *\n         *  Authors: Jon Arild Nygard / Oystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var extend = U.extend, isArray = U.isArray, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function getColor(node, options) {\n            var index = options.index, mapOptionsToLevel = options.mapOptionsToLevel, parentColor = options.parentColor, parentColorIndex = options.parentColorIndex, series = options.series, colors = options.colors, siblings = options.siblings, points = series.points, chartOptionsChart = series.chart.options.chart;\n            var getColorByPoint, point, level, colorByPoint, colorIndexByPoint, color, colorIndex;\n            /**\n             * @private\n             */\n            var variateColor = function (color) {\n                var colorVariation = level && level.colorVariation;\n                if (colorVariation &&\n                    colorVariation.key === 'brightness' &&\n                    index &&\n                    siblings) {\n                    return Color.parse(color).brighten(colorVariation.to * (index / siblings)).get();\n                }\n                return color;\n            };\n            if (node) {\n                point = points[node.i];\n                level = mapOptionsToLevel[node.level] || {};\n                getColorByPoint = point && level.colorByPoint;\n                if (getColorByPoint) {\n                    colorIndexByPoint = point.index % (colors ?\n                        colors.length :\n                        chartOptionsChart.colorCount);\n                    colorByPoint = colors && colors[colorIndexByPoint];\n                }\n                // Select either point color, level color or inherited color.\n                if (!series.chart.styledMode) {\n                    color = pick(point && point.options.color, level && level.color, colorByPoint, parentColor && variateColor(parentColor), series.color);\n                }\n                colorIndex = pick(point && point.options.colorIndex, level && level.colorIndex, colorIndexByPoint, parentColorIndex, options.colorIndex);\n            }\n            return {\n                color: color,\n                colorIndex: colorIndex\n            };\n        }\n        /**\n         * Creates a map from level number to its given options.\n         *\n         * @private\n         *\n         * @param {Object} params\n         * Object containing parameters.\n         * - `defaults` Object containing default options. The default options are\n         *   merged with the userOptions to get the final options for a specific\n         *   level.\n         * - `from` The lowest level number.\n         * - `levels` User options from series.levels.\n         * - `to` The highest level number.\n         *\n         * @return {Highcharts.Dictionary<object>|null}\n         * Returns a map from level number to its given options.\n         */\n        function getLevelOptions(params) {\n            var result = {}, defaults, converted, i, from, to, levels;\n            if (isObject(params)) {\n                from = isNumber(params.from) ? params.from : 1;\n                levels = params.levels;\n                converted = {};\n                defaults = isObject(params.defaults) ? params.defaults : {};\n                if (isArray(levels)) {\n                    converted = levels.reduce(function (obj, item) {\n                        var level, levelIsConstant, options;\n                        if (isObject(item) && isNumber(item.level)) {\n                            options = merge({}, item);\n                            levelIsConstant = pick(options.levelIsConstant, defaults.levelIsConstant);\n                            // Delete redundant properties.\n                            delete options.levelIsConstant;\n                            delete options.level;\n                            // Calculate which level these options apply to.\n                            level = item.level + (levelIsConstant ? 0 : from - 1);\n                            if (isObject(obj[level])) {\n                                merge(true, obj[level], options); // #16329\n                            }\n                            else {\n                                obj[level] = options;\n                            }\n                        }\n                        return obj;\n                    }, {});\n                }\n                to = isNumber(params.to) ? params.to : 1;\n                for (i = 0; i <= to; i++) {\n                    result[i] = merge({}, defaults, isObject(converted[i]) ? converted[i] : {});\n                }\n            }\n            return result;\n        }\n        /**\n         * @private\n         * @todo Combine buildTree and buildNode with setTreeValues\n         * @todo Remove logic from Treemap and make it utilize this mixin.\n         */\n        function setTreeValues(tree, options) {\n            var before = options.before, idRoot = options.idRoot, mapIdToNode = options.mapIdToNode, nodeRoot = mapIdToNode[idRoot], levelIsConstant = (options.levelIsConstant !== false), points = options.points, point = points[tree.i], optionsPoint = point && point.options || {}, children = [];\n            var childrenTotal = 0;\n            tree.levelDynamic = tree.level - (levelIsConstant ? 0 : nodeRoot.level);\n            tree.name = pick(point && point.name, '');\n            tree.visible = (idRoot === tree.id ||\n                options.visible === true);\n            if (typeof before === 'function') {\n                tree = before(tree, options);\n            }\n            // First give the children some values\n            tree.children.forEach(function (child, i) {\n                var newOptions = extend({}, options);\n                extend(newOptions, {\n                    index: i,\n                    siblings: tree.children.length,\n                    visible: tree.visible\n                });\n                child = setTreeValues(child, newOptions);\n                children.push(child);\n                if (child.visible) {\n                    childrenTotal += child.val;\n                }\n            });\n            // Set the values\n            var value = pick(optionsPoint.value, childrenTotal);\n            tree.visible = value >= 0 && (childrenTotal > 0 || tree.visible);\n            tree.children = children;\n            tree.childrenTotal = childrenTotal;\n            tree.isLeaf = tree.visible && !childrenTotal;\n            tree.val = value;\n            return tree;\n        }\n        /**\n         * Update the rootId property on the series. Also makes sure that it is\n         * accessible to exporting.\n         *\n         * @private\n         *\n         * @param {Object} series\n         * The series to operate on.\n         *\n         * @return {string}\n         * Returns the resulting rootId after update.\n         */\n        function updateRootId(series) {\n            var rootId, options;\n            if (isObject(series)) {\n                // Get the series options.\n                options = isObject(series.options) ? series.options : {};\n                // Calculate the rootId.\n                rootId = pick(series.rootNode, options.rootId, '');\n                // Set rootId on series.userOptions to pick it up in exporting.\n                if (isObject(series.userOptions)) {\n                    series.userOptions.rootId = rootId;\n                }\n                // Set rootId on series to pick it up on next update.\n                series.rootNode = rootId;\n            }\n            return rootId;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var TreeUtilities = {\n            getColor: getColor,\n            getLevelOptions: getLevelOptions,\n            setTreeValues: setTreeValues,\n            updateRootId: updateRootId\n        };\n\n        return TreeUtilities;\n    });\n    _registerModule(_modules, 'Core/Axis/TreeGrid/TreeGridAxis.js', [_modules['Core/Axis/BrokenAxis.js'], _modules['Core/Axis/GridAxis.js'], _modules['Core/Globals.js'], _modules['Gantt/Tree.js'], _modules['Core/Axis/TreeGrid/TreeGridTick.js'], _modules['Series/TreeUtilities.js'], _modules['Core/Utilities.js']], function (BrokenAxis, GridAxis, H, Tree, TreeGridTick, TU, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var composed = H.composed;\n        var getLevelOptions = TU.getLevelOptions;\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isObject = U.isObject, isString = U.isString, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique, removeEvent = U.removeEvent, wrap = U.wrap;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var TickConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function getBreakFromNode(node, max) {\n            var to = node.collapseEnd || 0;\n            var from = node.collapseStart || 0;\n            // In broken-axis, the axis.max is minimized until it is not within a\n            // break. Therefore, if break.to is larger than axis.max, the axis.to\n            // should not add the 0.5 axis.tickMarkOffset, to avoid adding a break\n            // larger than axis.max.\n            // TODO consider simplifying broken-axis and this might solve itself\n            if (to >= max) {\n                from -= 0.5;\n            }\n            return {\n                from: from,\n                to: to,\n                showPoints: false\n            };\n        }\n        /**\n         * Creates a tree structure of the data, and the treegrid. Calculates\n         * categories, and y-values of points based on the tree.\n         *\n         * @private\n         * @function getTreeGridFromData\n         *\n         * @param {Array<Highcharts.GanttPointOptions>} data\n         * All the data points to display in the axis.\n         *\n         * @param {boolean} uniqueNames\n         * Whether or not the data node with the same name should share grid cell. If\n         * true they do share cell. False by default.\n         *\n         * @param {number} numberOfSeries\n         *\n         * @return {Object}\n         * Returns an object containing categories, mapOfIdToNode,\n         * mapOfPosToGridNode, and tree.\n         *\n         * @todo There should be only one point per line.\n         * @todo It should be optional to have one category per point, or merge\n         *       cells\n         * @todo Add unit-tests.\n         */\n        function getTreeGridFromData(data, uniqueNames, numberOfSeries) {\n            var categories = [], collapsedNodes = [], mapOfIdToNode = {}, uniqueNamesEnabled = typeof uniqueNames === 'boolean' ?\n                uniqueNames : false;\n            var mapOfPosToGridNode = {}, posIterator = -1;\n            // Build the tree from the series data.\n            var treeParams = {\n                // After the children has been created.\n                after: function (node) {\n                    var gridNode = mapOfPosToGridNode[node.pos];\n                    var height = 0, descendants = 0;\n                    gridNode.children.forEach(function (child) {\n                        descendants += (child.descendants || 0) + 1;\n                        height = Math.max((child.height || 0) + 1, height);\n                    });\n                    gridNode.descendants = descendants;\n                    gridNode.height = height;\n                    if (gridNode.collapsed) {\n                        collapsedNodes.push(gridNode);\n                    }\n                },\n                // Before the children has been created.\n                before: function (node) {\n                    var data = isObject(node.data, true) ?\n                        node.data :\n                        {}, name = isString(data.name) ? data.name : '', parentNode = mapOfIdToNode[node.parent], parentGridNode = (isObject(parentNode, true) ?\n                        mapOfPosToGridNode[parentNode.pos] :\n                        null), hasSameName = function (x) {\n                        return x.name === name;\n                    };\n                    var gridNode, pos;\n                    // If not unique names, look for sibling node with the same name\n                    if (uniqueNamesEnabled &&\n                        isObject(parentGridNode, true) &&\n                        !!(gridNode = find(parentGridNode.children, hasSameName))) {\n                        // If there is a gridNode with the same name, reuse position\n                        pos = gridNode.pos;\n                        // Add data node to list of nodes in the grid node.\n                        gridNode.nodes.push(node);\n                    }\n                    else {\n                        // If it is a new grid node, increment position.\n                        pos = posIterator++;\n                    }\n                    // Add new grid node to map.\n                    if (!mapOfPosToGridNode[pos]) {\n                        mapOfPosToGridNode[pos] = gridNode = {\n                            depth: parentGridNode ? parentGridNode.depth + 1 : 0,\n                            name: name,\n                            id: data.id,\n                            nodes: [node],\n                            children: [],\n                            pos: pos\n                        };\n                        // If not root, then add name to categories.\n                        if (pos !== -1) {\n                            categories.push(name);\n                        }\n                        // Add name to list of children.\n                        if (isObject(parentGridNode, true)) {\n                            parentGridNode.children.push(gridNode);\n                        }\n                    }\n                    // Add data node to map\n                    if (isString(node.id)) {\n                        mapOfIdToNode[node.id] = node;\n                    }\n                    // If one of the points are collapsed, then start the grid node\n                    // in collapsed state.\n                    if (gridNode &&\n                        data.collapsed === true) {\n                        gridNode.collapsed = true;\n                    }\n                    // Assign pos to data node\n                    node.pos = pos;\n                }\n            };\n            var updateYValuesAndTickPos = function (map, numberOfSeries) {\n                var setValues = function (gridNode, start, result) {\n                    var nodes = gridNode.nodes, padding = 0.5;\n                    var end = start + (start === -1 ? 0 : numberOfSeries - 1);\n                    var diff = (end - start) / 2, pos = start + diff;\n                    nodes.forEach(function (node) {\n                        var data = node.data;\n                        if (isObject(data, true)) {\n                            // Update point\n                            data.y = start + (data.seriesIndex || 0);\n                            // Remove the property once used\n                            delete data.seriesIndex;\n                        }\n                        node.pos = pos;\n                    });\n                    result[pos] = gridNode;\n                    gridNode.pos = pos;\n                    gridNode.tickmarkOffset = diff + padding;\n                    gridNode.collapseStart = end + padding;\n                    gridNode.children.forEach(function (child) {\n                        setValues(child, end + 1, result);\n                        end = (child.collapseEnd || 0) - padding;\n                    });\n                    // Set collapseEnd to the end of the last child node.\n                    gridNode.collapseEnd = end + padding;\n                    return result;\n                };\n                return setValues(map['-1'], -1, {});\n            };\n            // Create tree from data\n            var tree = Tree.getTree(data, treeParams);\n            // Update y values of data, and set calculate tick positions.\n            mapOfPosToGridNode = updateYValuesAndTickPos(mapOfPosToGridNode, numberOfSeries);\n            // Return the resulting data.\n            return {\n                categories: categories,\n                mapOfIdToNode: mapOfIdToNode,\n                mapOfPosToGridNode: mapOfPosToGridNode,\n                collapsedNodes: collapsedNodes,\n                tree: tree\n            };\n        }\n        /**\n         * Builds the tree of categories and calculates its positions.\n         * @private\n         * @param {Object} e Event object\n         * @param {Object} e.target The chart instance which the event was fired on.\n         * @param {object[]} e.target.axes The axes of the chart.\n         */\n        function onBeforeRender(e) {\n            var chart = e.target, axes = chart.axes;\n            axes.filter(function (axis) {\n                return axis.options.type === 'treegrid';\n            }).forEach(function (axis) {\n                var options = axis.options || {}, labelOptions = options.labels, uniqueNames = options.uniqueNames, max = options.max, \n                // Check whether any of series is rendering for the first\n                // time, visibility has changed, or its data is dirty, and\n                // only then update. #10570, #10580. Also check if\n                // mapOfPosToGridNode exists. #10887\n                isDirty = (!axis.treeGrid.mapOfPosToGridNode ||\n                    axis.series.some(function (series) {\n                        return !series.hasRendered ||\n                            series.isDirtyData ||\n                            series.isDirty;\n                    }));\n                var numberOfSeries = 0, data, treeGrid;\n                if (isDirty) {\n                    // Concatenate data from all series assigned to this axis.\n                    data = axis.series.reduce(function (arr, s) {\n                        if (s.visible) {\n                            // Push all data to array\n                            (s.options.data || []).forEach(function (data) {\n                                // For using keys - rebuild the data structure\n                                if (s.options.keys && s.options.keys.length) {\n                                    data = s.pointClass.prototype\n                                        .optionsToObject\n                                        .call({ series: s }, data);\n                                    s.pointClass.setGanttPointAliases(data);\n                                }\n                                if (isObject(data, true)) {\n                                    // Set series index on data. Removed again\n                                    // after use.\n                                    data.seriesIndex = (numberOfSeries);\n                                    arr.push(data);\n                                }\n                            });\n                            // Increment series index\n                            if (uniqueNames === true) {\n                                numberOfSeries++;\n                            }\n                        }\n                        return arr;\n                    }, []);\n                    // If max is higher than set data - add a\n                    // dummy data to render categories #10779\n                    if (max && data.length < max) {\n                        for (var i = data.length; i <= max; i++) {\n                            data.push({\n                                // Use the zero-width character\n                                // to avoid conflict with uniqueNames\n                                name: i + '\\u200B'\n                            });\n                        }\n                    }\n                    // setScale is fired after all the series is initialized,\n                    // which is an ideal time to update the axis.categories.\n                    treeGrid = getTreeGridFromData(data, uniqueNames || false, (uniqueNames === true) ? numberOfSeries : 1);\n                    // Assign values to the axis.\n                    axis.categories = treeGrid.categories;\n                    axis.treeGrid.mapOfPosToGridNode = (treeGrid.mapOfPosToGridNode);\n                    axis.hasNames = true;\n                    axis.treeGrid.tree = treeGrid.tree;\n                    // Update yData now that we have calculated the y values\n                    axis.series.forEach(function (series) {\n                        var axisData = (series.options.data || []).map(function (d) {\n                            if (isArray(d) &&\n                                series.options.keys &&\n                                series.options.keys.length) {\n                                // Get the axisData from the data array used to\n                                // build the treeGrid where has been modified\n                                data.forEach(function (point) {\n                                    if (d.indexOf(point.x) >= 0 &&\n                                        d.indexOf(point.x2) >= 0) {\n                                        d = point;\n                                    }\n                                });\n                            }\n                            return isObject(d, true) ? merge(d) : d;\n                        });\n                        // Avoid destroying points when series is not visible\n                        if (series.visible) {\n                            series.setData(axisData, false);\n                        }\n                    });\n                    // Calculate the label options for each level in the tree.\n                    axis.treeGrid.mapOptionsToLevel =\n                        getLevelOptions({\n                            defaults: labelOptions,\n                            from: 1,\n                            levels: labelOptions && labelOptions.levels,\n                            to: axis.treeGrid.tree && axis.treeGrid.tree.height\n                        });\n                    // Setting initial collapsed nodes\n                    if (e.type === 'beforeRender') {\n                        axis.treeGrid.collapsedNodes = treeGrid.collapsedNodes;\n                    }\n                }\n            });\n        }\n        /**\n         * Generates a tick for initial positioning.\n         *\n         * @private\n         * @function Highcharts.GridAxis#generateTick\n         *\n         * @param {Function} proceed\n         * The original generateTick function.\n         *\n         * @param {number} pos\n         * The tick position in axis values.\n         */\n        function wrapGenerateTick(proceed, pos) {\n            var axis = this, mapOptionsToLevel = axis.treeGrid.mapOptionsToLevel || {}, isTreeGrid = axis.options.type === 'treegrid', ticks = axis.ticks;\n            var tick = ticks[pos], levelOptions, options, gridNode;\n            if (isTreeGrid &&\n                axis.treeGrid.mapOfPosToGridNode) {\n                gridNode = axis.treeGrid.mapOfPosToGridNode[pos];\n                levelOptions = mapOptionsToLevel[gridNode.depth];\n                if (levelOptions) {\n                    options = {\n                        labels: levelOptions\n                    };\n                }\n                if (!tick &&\n                    TickConstructor) {\n                    ticks[pos] = tick =\n                        new TickConstructor(axis, pos, void 0, void 0, {\n                            category: gridNode.name,\n                            tickmarkOffset: gridNode.tickmarkOffset,\n                            options: options\n                        });\n                }\n                else {\n                    // update labels depending on tick interval\n                    tick.parameters.category = gridNode.name;\n                    tick.options = options;\n                    tick.addLabel();\n                }\n            }\n            else {\n                proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapInit(proceed, chart, userOptions, coll) {\n            var axis = this, isTreeGrid = userOptions.type === 'treegrid';\n            if (!axis.treeGrid) {\n                axis.treeGrid = new TreeGridAxisAdditions(axis);\n            }\n            // Set default and forced options for TreeGrid\n            if (isTreeGrid) {\n                // Add event for updating the categories of a treegrid.\n                // NOTE Preferably these events should be set on the axis.\n                addEvent(chart, 'beforeRender', onBeforeRender);\n                addEvent(chart, 'beforeRedraw', onBeforeRender);\n                // Add new collapsed nodes on addseries\n                addEvent(chart, 'addSeries', function (e) {\n                    if (e.options.data) {\n                        var treeGrid = getTreeGridFromData(e.options.data, userOptions.uniqueNames || false, 1);\n                        axis.treeGrid.collapsedNodes = (axis.treeGrid.collapsedNodes || []).concat(treeGrid.collapsedNodes);\n                    }\n                });\n                // Collapse all nodes in axis.treegrid.collapsednodes\n                // where collapsed equals true.\n                addEvent(axis, 'foundExtremes', function () {\n                    if (axis.treeGrid.collapsedNodes) {\n                        axis.treeGrid.collapsedNodes.forEach(function (node) {\n                            var breaks = axis.treeGrid.collapse(node);\n                            if (axis.brokenAxis) {\n                                axis.brokenAxis.setBreaks(breaks, false);\n                                // remove the node from the axis collapsedNodes\n                                if (axis.treeGrid.collapsedNodes) {\n                                    axis.treeGrid.collapsedNodes = axis.treeGrid\n                                        .collapsedNodes\n                                        .filter(function (n) { return ((node.collapseStart !==\n                                        n.collapseStart) ||\n                                        node.collapseEnd !== n.collapseEnd); });\n                                }\n                            }\n                        });\n                    }\n                });\n                // If staticScale is not defined on the yAxis\n                // and chart height is set, set axis.isDirty\n                // to ensure collapsing works (#12012)\n                addEvent(axis, 'afterBreaks', function () {\n                    if (axis.coll === 'yAxis' &&\n                        !axis.staticScale &&\n                        axis.chart.options.chart.height) {\n                        axis.isDirty = true;\n                    }\n                });\n                userOptions = merge({\n                    // Default options\n                    grid: {\n                        enabled: true\n                    },\n                    // TODO: add support for align in treegrid.\n                    labels: {\n                        align: 'left',\n                        /**\n                        * Set options on specific levels in a tree grid axis. Takes\n                        * precedence over labels options.\n                        *\n                        * @sample {gantt} gantt/treegrid-axis/labels-levels\n                        *         Levels on TreeGrid Labels\n                        *\n                        * @type      {Array<*>}\n                        * @product   gantt\n                        * @apioption yAxis.labels.levels\n                        *\n                        * @private\n                        */\n                        levels: [{\n                                /**\n                                * Specify the level which the options within this object\n                                * applies to.\n                                *\n                                * @type      {number}\n                                * @product   gantt\n                                * @apioption yAxis.labels.levels.level\n                                *\n                                * @private\n                                */\n                                level: void 0\n                            }, {\n                                level: 1,\n                                /**\n                                 * @type      {Highcharts.CSSObject}\n                                 * @product   gantt\n                                 * @apioption yAxis.labels.levels.style\n                                 *\n                                 * @private\n                                 */\n                                style: {\n                                    /** @ignore-option */\n                                    fontWeight: 'bold'\n                                }\n                            }],\n                        /**\n                         * The symbol for the collapse and expand icon in a\n                         * treegrid.\n                         *\n                         * @product      gantt\n                         * @optionparent yAxis.labels.symbol\n                         *\n                         * @private\n                         */\n                        symbol: {\n                            /**\n                             * The symbol type. Points to a definition function in\n                             * the `Highcharts.Renderer.symbols` collection.\n                             *\n                             * @type {Highcharts.SymbolKeyValue}\n                             *\n                             * @private\n                             */\n                            type: 'triangle',\n                            x: -5,\n                            y: -5,\n                            height: 10,\n                            width: 10\n                        }\n                    },\n                    uniqueNames: false\n                }, userOptions, {\n                    // Forced options\n                    reversed: true\n                });\n            }\n            // Now apply the original function with the original arguments, which are\n            // sliced off this function's arguments\n            proceed.apply(axis, [chart, userOptions, coll]);\n            if (isTreeGrid) {\n                axis.hasNames = true;\n                axis.options.showLastLabel = true;\n            }\n        }\n        /**\n         * Set the tick positions, tickInterval, axis min and max.\n         *\n         * @private\n         * @function Highcharts.GridAxis#setTickInterval\n         *\n         * @param {Function} proceed\n         * The original setTickInterval function.\n         */\n        function wrapSetTickInterval(proceed) {\n            var _a;\n            var axis = this, options = axis.options, linkedParent = typeof options.linkedTo === 'number' ?\n                (_a = this.chart[axis.coll]) === null || _a === void 0 ? void 0 : _a[options.linkedTo] :\n                void 0, isTreeGrid = options.type === 'treegrid';\n            if (isTreeGrid) {\n                axis.min = pick(axis.userMin, options.min, axis.dataMin);\n                axis.max = pick(axis.userMax, options.max, axis.dataMax);\n                fireEvent(axis, 'foundExtremes');\n                // `setAxisTranslation` modifies the min and max according to axis\n                // breaks.\n                axis.setAxisTranslation();\n                axis.tickInterval = 1;\n                axis.tickmarkOffset = 0.5;\n                axis.tickPositions = axis.treeGrid.mapOfPosToGridNode ?\n                    axis.treeGrid.getTickPositions() :\n                    [];\n                if (linkedParent) {\n                    var linkedParentExtremes = linkedParent.getExtremes();\n                    axis.min = pick(linkedParentExtremes.min, linkedParentExtremes.dataMin);\n                    axis.max = pick(linkedParentExtremes.max, linkedParentExtremes.dataMax);\n                    axis.tickPositions = linkedParent.tickPositions;\n                }\n                axis.linkedParent = linkedParent;\n            }\n            else {\n                proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /**\n         * Wrap axis redraw to remove TreeGrid events from ticks\n         *\n         * @private\n         * @function Highcharts.GridAxis#redraw\n         *\n         * @param {Function} proceed\n         * The original setTickInterval function.\n         */\n        function wrapRedraw(proceed) {\n            var axis = this, options = axis.options, isTreeGrid = options.type === 'treegrid';\n            if (isTreeGrid && axis.visible) {\n                axis.tickPositions.forEach(function (pos) {\n                    var tick = axis.ticks[pos];\n                    if (tick.label && tick.label.attachedTreeGridEvents) {\n                        removeEvent(tick.label.element);\n                        tick.label.attachedTreeGridEvents = false;\n                    }\n                });\n            }\n            proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n        }\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var TreeGridAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function TreeGridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            TreeGridAxisAdditions.compose = function (AxisClass, ChartClass, SeriesClass, TickClass) {\n                if (pushUnique(composed, this.compose)) {\n                    var axisProps = AxisClass.prototype;\n                    if (AxisClass.keepProps.indexOf('treeGrid') === -1) {\n                        AxisClass.keepProps.push('treeGrid');\n                    }\n                    wrap(axisProps, 'generateTick', wrapGenerateTick);\n                    wrap(axisProps, 'init', wrapInit);\n                    wrap(axisProps, 'setTickInterval', wrapSetTickInterval);\n                    wrap(axisProps, 'redraw', wrapRedraw);\n                    // Make utility functions available for testing.\n                    axisProps.utils = {\n                        getNode: Tree.getNode\n                    };\n                    if (!TickConstructor) {\n                        TickConstructor = TickClass;\n                    }\n                }\n                GridAxis.compose(AxisClass, ChartClass, TickClass);\n                BrokenAxis.compose(AxisClass, SeriesClass);\n                TreeGridTick.compose(TickClass);\n                return AxisClass;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set the collapse status.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to collapse.\n             */\n            TreeGridAxisAdditions.prototype.setCollapsedStatus = function (node) {\n                var axis = this.axis, chart = axis.chart;\n                axis.series.forEach(function (series) {\n                    var data = series.options.data;\n                    if (node.id && data) {\n                        var point = chart.get(node.id), dataPoint = data[series.data.indexOf(point)];\n                        if (point && dataPoint) {\n                            point.collapsed = node.collapsed;\n                            dataPoint.collapsed = node.collapsed;\n                        }\n                    }\n                });\n            };\n            /**\n             * Calculates the new axis breaks to collapse a node.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to collapse.\n             *\n             * @param {number} pos\n             * The tick position to collapse.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.collapse = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                breaks.push(obj);\n                // Change the collapsed flag #13838\n                node.collapsed = true;\n                axis.treeGrid.setCollapsedStatus(node);\n                return breaks;\n            };\n            /**\n             * Calculates the new axis breaks to expand a node.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to expand.\n             *\n             * @param {number} pos\n             * The tick position to expand.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.expand = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                // Change the collapsed flag #13838\n                node.collapsed = false;\n                axis.treeGrid.setCollapsedStatus(node);\n                // Remove the break from the axis breaks array.\n                return breaks.reduce(function (arr, b) {\n                    if (b.to !== obj.to || b.from !== obj.from) {\n                        arr.push(b);\n                    }\n                    return arr;\n                }, []);\n            };\n            /**\n             * Creates a list of positions for the ticks on the axis. Filters out\n             * positions that are outside min and max, or is inside an axis break.\n             *\n             * @private\n             *\n             * @return {Array<number>}\n             * List of positions.\n             */\n            TreeGridAxisAdditions.prototype.getTickPositions = function () {\n                var axis = this.axis, roundedMin = Math.floor(axis.min / axis.tickInterval) * axis.tickInterval, roundedMax = Math.ceil(axis.max / axis.tickInterval) * axis.tickInterval;\n                return Object.keys(axis.treeGrid.mapOfPosToGridNode || {}).reduce(function (arr, key) {\n                    var pos = +key;\n                    if (pos >= roundedMin &&\n                        pos <= roundedMax &&\n                        !(axis.brokenAxis && axis.brokenAxis.isInAnyBreak(pos))) {\n                        arr.push(pos);\n                    }\n                    return arr;\n                }, []);\n            };\n            /**\n             * Check if a node is collapsed.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Object} node\n             * The node to check if is collapsed.\n             *\n             * @param {number} pos\n             * The tick position to collapse.\n             *\n             * @return {boolean}\n             * Returns true if collapsed, false if expanded.\n             */\n            TreeGridAxisAdditions.prototype.isCollapsed = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                return breaks.some(function (b) {\n                    return b.from === obj.from && b.to === obj.to;\n                });\n            };\n            /**\n             * Calculates the new axis breaks after toggling the collapse/expand\n             * state of a node. If it is collapsed it will be expanded, and if it is\n             * exapended it will be collapsed.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to toggle.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.toggleCollapse = function (node) {\n                return (this.isCollapsed(node) ?\n                    this.expand(node) :\n                    this.collapse(node));\n            };\n            return TreeGridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TreeGridAxisAdditions;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttSeries.js', [_modules['Series/Gantt/GanttPoint.js'], _modules['Series/Gantt/GanttSeriesDefaults.js'], _modules['Gantt/Pathfinder.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Extensions/StaticScale.js'], _modules['Core/Axis/TreeGrid/TreeGridAxis.js'], _modules['Core/Utilities.js']], function (GanttPoint, GanttSeriesDefaults, Pathfinder, SeriesRegistry, StaticScale, TreeGridAxis, U) {\n        /* *\n         *\n         *  (c) 2016-2024 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var Series = SeriesRegistry.series, XRangeSeries = SeriesRegistry.seriesTypes.xrange;\n        var extend = U.extend, isNumber = U.isNumber, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.gantt\n         *\n         * @augments Highcharts.Series\n         */\n        var GanttSeries = /** @class */ (function (_super) {\n            __extends(GanttSeries, _super);\n            function GanttSeries() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            GanttSeries.compose = function (AxisClass, ChartClass, SeriesClass, TickClass) {\n                XRangeSeries.compose(AxisClass);\n                if (!ChartClass) {\n                    return;\n                }\n                StaticScale.compose(AxisClass, ChartClass);\n                if (!SeriesClass) {\n                    return;\n                }\n                Pathfinder.compose(ChartClass, SeriesClass.prototype.pointClass);\n                if (!TickClass) {\n                    return;\n                }\n                TreeGridAxis.compose(AxisClass, ChartClass, SeriesClass, TickClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draws a single point in the series.\n             *\n             * This override draws the point as a diamond if point.options.milestone\n             * is true, and uses the original drawPoint() if it is false or not set.\n             *\n             * @requires highcharts-gantt\n             *\n             * @private\n             * @function Highcharts.seriesTypes.gantt#drawPoint\n             *\n             * @param {Highcharts.Point} point\n             *        An instance of Point in the series\n             *\n             * @param {\"animate\"|\"attr\"} verb\n             *        'animate' (animates changes) or 'attr' (sets options)\n             */\n            GanttSeries.prototype.drawPoint = function (point, verb) {\n                var series = this, seriesOpts = series.options, renderer = series.chart.renderer, shapeArgs = point.shapeArgs, plotY = point.plotY, state = point.selected && 'select', cutOff = seriesOpts.stacking && !seriesOpts.borderRadius;\n                var graphic = point.graphic, diamondShape;\n                if (point.options.milestone) {\n                    if (isNumber(plotY) &&\n                        point.y !== null &&\n                        point.visible !== false) {\n                        diamondShape = renderer.symbols.diamond(shapeArgs.x || 0, shapeArgs.y || 0, shapeArgs.width || 0, shapeArgs.height || 0);\n                        if (graphic) {\n                            graphic[verb]({\n                                d: diamondShape\n                            });\n                        }\n                        else {\n                            point.graphic = graphic = renderer.path(diamondShape)\n                                .addClass(point.getClassName(), true)\n                                .add(point.group || series.group);\n                        }\n                        // Presentational\n                        if (!series.chart.styledMode) {\n                            point.graphic\n                                .attr(series.pointAttribs(point, state))\n                                .shadow(seriesOpts.shadow, null, cutOff);\n                        }\n                    }\n                    else if (graphic) {\n                        point.graphic = graphic.destroy(); // #1269\n                    }\n                }\n                else {\n                    _super.prototype.drawPoint.call(this, point, verb);\n                }\n            };\n            /**\n             * Handle milestones, as they have no x2.\n             * @private\n             */\n            GanttSeries.prototype.translatePoint = function (point) {\n                var series = this;\n                var shapeArgs, size;\n                _super.prototype.translatePoint.call(this, point);\n                if (point.options.milestone) {\n                    shapeArgs = point.shapeArgs;\n                    size = shapeArgs.height || 0;\n                    point.shapeArgs = {\n                        x: (shapeArgs.x || 0) - (size / 2),\n                        y: shapeArgs.y,\n                        width: size,\n                        height: size\n                    };\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            GanttSeries.defaultOptions = merge(XRangeSeries.defaultOptions, GanttSeriesDefaults);\n            return GanttSeries;\n        }(XRangeSeries));\n        extend(GanttSeries.prototype, {\n            pointArrayMap: ['start', 'end', 'y'],\n            pointClass: GanttPoint,\n            setData: Series.prototype.setData\n        });\n        SeriesRegistry.registerSeriesType('gantt', GanttSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttSeries;\n    });\n    _registerModule(_modules, 'masters/modules/gantt.src.js', [_modules['Core/Globals.js'], _modules['Extensions/ArrowSymbols.js'], _modules['Gantt/Connection.js'], _modules['Extensions/CurrentDateIndication.js'], _modules['Core/Chart/GanttChart.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Gantt/Pathfinder.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Extensions/StaticScale.js'], _modules['Series/XRange/XRangeSeries.js'], _modules['Series/Gantt/GanttSeries.js']], function (Highcharts, ArrowSymbols, Connection, CurrentDateIndication, GanttChart, Navigator, Pathfinder, RangeSelector, Scrollbar, StaticScale, XRangeSeries, GanttSeries) {\n\n        // Series\n        var G = Highcharts;\n        // Classes\n        G.Connection = Connection;\n        G.GanttChart = GanttChart;\n        G.ganttChart = GanttChart.ganttChart;\n        G.Navigator = Navigator;\n        G.Pathfinder = Pathfinder;\n        G.RangeSelector = RangeSelector;\n        G.Scrollbar = Scrollbar;\n        // Compositions\n        ArrowSymbols.compose(G.SVGRenderer);\n        CurrentDateIndication.compose(G.Axis, G.PlotLineOrBand);\n        GanttSeries.compose(G.Axis, G.Chart, G.Series, G.Tick);\n        Navigator.compose(G.Axis, G.Chart, G.Series);\n        Pathfinder.compose(G.Chart, G.Point);\n        RangeSelector.compose(G.Axis, G.Chart);\n        Scrollbar.compose(G.Axis);\n        XRangeSeries.compose(G.Axis);\n        StaticScale.compose(G.Axis, G.Chart);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","H","U","composed","pushUnique","arrow","x","y","w","h","arrowHalf","triangleLeft","triangleLeftHalf","compose","SVGRendererClass","symbols","prototype","defined","error","merge","objectEach","deg2rad","max","Math","min","Connection","from","to","options","init","fromPoint","toPoint","chart","series","pathfinder","renderPath","attribs","styledMode","anim","pathGraphic","connection","graphics","group","renderer","g","addClass","attr","zIndex","add","seriesGroup","translate","plotLeft","plotTop","opacity","d","animate","addMarker","type","markerVector","radians","rotation","box","width","height","pathVector","segment","point","anchor","getPathfinderAnchorPoint","enabled","length","getRadiansToVector","getMarkerVector","radius","rotationOriginX","rotationOriginY","symbol","colorIndex","fill","color","stroke","lineColor","lineWidth","animation","getPath","algorithm","algorithms","chartObstacles","obstacles","requiresObstacles","getChartObstacles","connectors","algorithmMargin","chartObstacleMetrics","getObstacleMetrics","startMarker","endMarker","lineObstacles","obstacleMetrics","hardBounds","xMin","xMax","plotWidth","yMin","yMax","plotHeight","obstacleOptions","margin","startDirectionX","getAlgorithmStartDirection","render","dashStyle","dashstyle","marker","ceil","pathResult","concat","destroy","val","addEvent","wrap","defaultOptions","label","format","formatter","value","axis","time","dateFormat","style","fontSize","onAxisAfterSetOptions","cdiOptions","currentDateIndicator","plotLineOptions","Date","now","className","plotLines","push","onPlotLineOrBandRender","text","getLabelText","wrapPlotLineOrBandGetLabelText","defaultMethod","defaultLabelOptions","indexOf","call","AxisClass","PlotLineOrBandClass","Chart","D","extendStatics","GanttChart","__extends","b","Object","setPrototypeOf","__proto__","Array","p","TypeError","String","__","constructor","create","isArray","splat","_super","arguments","userOptions","callback","defaultLinkedTo","xAxisOptions","xAxis","yAxisOptions","yAxis","title","legend","navigator","isGantt","map","i","_a","_b","_c","grid","borderColor","opposite","linkedTo","staticScale","reversed","categories","ganttChart","a","c","isTouchDevice","correctFloat","isNumber","pick","onAxisInit","navigatorAxis","NavigatorAxisAdditions","onAxisZoom","e","chartOptions","pinchType","zooming","rangeSelector","zoomType","isXAxis","zoomed","range","previousZoom","newMin","newMax","preventDefault","keepProps","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","horiz","fixedRange","halfPointRange","pointRange","dataMin","dataMax","Color","SeriesRegistry","parse","seriesTypes","maskInside","handles","backgroundColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","compare","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","lastAnchor","units","dataLabels","id","threshold","overscroll","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","textOutline","crosshair","startOnTick","endOnTick","minPadding","maxPadding","tickWidth","_x","_y","halfWidth","markerPosition","round","NavigatorDefaults","NavigatorSymbols","RendererRegistry","NavigatorConstructor","setOptions","getRendererType","extend","onChartAfterAddSeries","setBaseSeries","onChartAfterSetChartSize","legendOptions","scrollbarHeight","scrollButtonSize","inverted","left","chartWidth","spacing","top","navigatorOptions","chartHeight","scrollbar","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","redraw","onChartBeforeRender","onChartBeforeShowResetZoom","onChartCallback","extremes","getExtremes","onChartUpdate","scrollbarOptions","onSeriesAfterUpdate","isInternal","ChartClass","NavigatorClass","SeriesClass","chartProto","callbacks","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","index","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","unitedMin","unitedMax","shouldUpdateExtremes","DOMType","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","destroyObjectProperties","fireEvent","removeEvent","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","swapXY","forEach","seg","temp","len","addEvents","buttonsOrder","buttons","bar","scrollbarGroup","element","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","hasTouch","updatePosition","trigger","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","rect","crisp","r","strokeWidth","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","scrollbarRifles","fromPX","newSize","fullWidth","toPX","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","update","Axis","NavigatorComposition","clamp","erase","find","numExt","extreme","_i","numbers","filter","Navigator","drawHandle","verb","parseInt","drawOutline","zoomedMin","zoomedMax","verticalMin","outline","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","cursor","navigatorGroup","visibility","hasMask","css","handlesOptions_1","height_1","width_1","baseSeries","navigatorSeries","navigatorWidth","scrollbarXAxis","fake","navigatorEnabled","minRange","maxRange","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","container","eventsToUnbind","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","keys","unbind","removeBaseSeriesEvents","adaptToUpdatedData","updatedDataHandler","modifyBaseAxisExtremes","scrollbarEnabled","Boolean","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","keepOrdinalPadding","zoomEnabled","offsets","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","returnFalseOnNoBaseSeries","ret","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","baseOptions","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","padXAxis","showInLegend","stacking","states","inactive","navSeries","base","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","slice","initSeries","userSeriesOptions","colors","_this","setVisible","remove","getBaseSeriesMin","currentSeriesMin","reduce","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","hasSetExtremes","eventArgs","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","applyRadius","prevSeg","nextSeg","x1","y1","x2","y2","directionX","directionY","getLinkPath","pathParams","parentVisible","straight","curved","PathUtilities","findLastObstacleBefore","startIx","cmp","right","findObstacleFromPoint","obstacle","pathFromSegments","segments","start","end","limitObstacleToBounds","bounds","simpleConnect","endSegment","startObstacle","waypoint","useMax","endPoint","startObstacleIx","endObstacleIx","dir","copyFromPoint","fromKey","toKey","getMeOut","prevWaypoint","waypoint2","fastAvoid","dirIsX","extractedEndPoint","endSegments","metrics","softMinX","maxWidth","softMaxX","softMinY","maxHeight","softMaxY","forceObstacleBreak","pivotPoint","directionIsX","firstPoint","lastPoint","highestPoint","lowestPoint","searchDirection","getDodgeDirection","softBounds","soft","hard","toPointMax","toPointMin","maxOutOfSoftBounds","minOutOfSoftBounds","maxOutOfHardBounds","minOutOfHardBounds","minDistance","maxDistance","minPivot","maxPivot","clearPathTo","pivot","waypointUseMax","envelopingObstacle","secondEnvelopingObstacle","envelopWaypoint","obstacleMargin","inside","ConnectorsDefaults","ConnectionComposition","getPointBB","shapeArgs","bb","graphic","getBBox","plotX","plotY","pointGetPathfinderAnchorPoint","markerOptions","pointGetRadiansToVector","v1","v2","atan2","pointGetMarkerVector","markerRadius","twoPI","PI","rectWidth","rectHeight","rAtan","rectHalfWidth","rectHalfHeight","rectHorizontalCenter","rectVerticalCenter","edgePoint","theta","tanTheta","leftOrRightRegion","xFactor","yFactor","tan","cos","sin","PathfinderClass","PointClass","pointProto","acc","PathfinderAlgorithms","PathfinderComposition","Point","Pathfinder","connections","deferRender","oldConnections","points","ganttPointOptions","dependency","connect","connects","isInside","j","k","found","lenOld","lenNew","oldCon","newCon","renderConnections","conns","pathfinderRemoveRenderEvent","calculatedMargin","sLen","pLen","sort","calculateObstacleMargin","onstacleDistance","distances","calculateObstacleDistance","bbMargin","yOverlap","xOverlap","xDistance","yDistance","xCenter","yCenter","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","count","timeName","date","basePeriod","set","getTime","MIN_VALUE","_offsetMin","onChartAfterGetContainer","deferredYTDClick","clickButton","updateNames","setScale","getAxisMargins","extraTopMargin","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","splice","onChartGetMargins","rangeSelectorHeight","marginBottom","onChartRender","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","RangeSelectorComposition","SVGElement","createElement","discardElement","pad","pInt","RangeSelector","buttonOptions","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","rangeMin","minSetting","rangeSetting","ctx","ytdExtremes","_range","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","updateButtonStates","actualRange","hasNoData","hasVisibleSeries","day","ytdMin","ytdMax","selectedExists","isSelectedTooGreat","button","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","state","isYTDButNotSelected","isAllButAlreadyShowingAll","isSameRange","month","year","disable","select","setState","disabled","fixedTimes","millisecond","second","minute","hour","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","getAttribute","updatedTime","previousTime","setAttribute","inputTypeFormats","setInputExtremes","showInput","inputGroup","isTextInput","_d","_e","_f","border","offsetWidth","offsetHeight","hideInput","inputDate","str","split","join","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","on","focus","preferredInputType","some","char","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","startOfYear","ts","inputsZIndex","renderButtons","parentNode","insertBefore","minElems","minLabel","maxElems","maxLabel","x_1","alignElements","buttonGroup","isMS","currentButtonIndex","zoomText","paddingLeft","paddingRight","textContent","textStr","callDefaultEvent","buttonEvents","click","isActive","hover","navButtonOptions","exporting","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton_1","alignButtonGroup","hasLoaded","xOffsetForExportButton","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","buttonLeft","maxButtonWidth","buttonWidth","bBox","groupsOverlap","buttonGroupWidth","inputGroupX","alignOptions","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","isCollapsed","userButtonTheme","getAttribs","hasActiveButton","showDropdown","hideDropdown","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","subtitle","rSelector","key","HTMLElement","scrollablePlotArea","minHeight","chartAdjustHeight","redrawTrigger","_loop_1","chart_1","initiatedScale","brokenAxis","unitLength","tickInterval","diff","scrollablePixelsY","setSize","clipRect","sharedClipKey","sharedClips","adjustHeight","isObject","colorByPoint","amount","partialFill","whiteSpace","tooltip","headerFormat","pointFormat","borderRadius","ColumnPoint","column","pointClass","XRangePoint","getColorByCategory","colorCount","resolveColor","drawPoint","getAnimationVerb","getLabelConfig","cfg","yCats","yCategory","category","isValid","ttBelow","tooltipDateKeys","XRangeSeriesDefaults","noop","ColumnSeries","relativeLength","onAxisAfterGetSeriesExtremes","modMax","x2Data","XRangeSeries","getColumnMetrics","swapAxes","cropData","yData","crop","findPointIndex","pointIndex","cropStart","touched","cropped","alignDataLabel","oldPlotX","dlBox","centerX","dataLabel","translatePoint","widthDifference","dlLeft","dlRight","dlWidth","clipRectWidth","columnMetrics","minPointLength","oldColWidth","seriesXOffset","pointXOffset","posX","plotX2","crisper","borderWidth","pointHeight","pointWidth","pointPlacement","tooltipPos","xIndex","yIndex","tooltipYOffset","partShapeArgs","clipRectArgs","seriesOpts","shapeType","pointState","stateOpts","pointStateVerb","pointAttr","pointAttribs","pfOptions","isNull","getClassName","partRect","partialClipRect","clip","shadow","brighten","drawPoints","pointCount","animationLimit","isPointInside","pointArrayMap","getExtremesFromAll","parallelArrays","requireSorting","autoIncrement","buildKDTree","registerSeriesType","xrange","GanttPoint","setGanttPointAliases","addIfExists","completed","applyOptions","ganttPoint","milestone","grouping","pointFormatter","formats","tooltipOptions","dateTimeLabelFormats","startOfWeek","ttOptions","xDateFormat","retVal","tooltipFormatter","getDateFormat","closestPointRange","StackItem","BrokenAxis","setBreaks","hasBreaks","onAxisAfterSetTickPositions","tickPositions","info","newPositions","isInAnyBreak","Additions","onSeriesAfterGeneratePoints","isDirty","connectNulls","isPointInBreak","onSeriesAfterRender","drawBreaks","seriesDrawBreaks","brokenAxis_1","breakArray","breaksOutOfRange","brk","isOut","otherBreak","toUpperCase","seriesGappedPath","currentDataGrouping","groupingSize","gapSize","gapUnit","basePointRange","current","next","xRange","stack","stacks","stackKey","stackLabels","total","getGraphPath","seriesProto","gappedPath","isInBreak","repeat","test","inclusive","lin2Val","nval","val2Lin","findBreakAt","testKeep","inbrk","keep","showPoints","forceRedraw","val2lin","lin2val","eventArguments","breaks_1","axisBreak","setAxisTranslation","inBrk_1","repeat_1","start_1","i_1","breaks_2","breakArrayT_1","breakArray_1","pointRangePadding","length_1","min_1","max_1","move","breakSize","transA","minPixelPadding","minPointOffset","GridAxisSide","dateFormats","timeUnits","getMaxLabelDimensions","ticks","dimensions","pos","tick","labelHeight","labelWidth","textPxLength","treeGrid","mapOfPosToGridNode","treeDepth","indentation","wrapGetOffset","proceed","columnsFirst","side","isColumn","columns","getOffset","onAfterGetTitlePosition","gridOptions","axisTitle","axisHeight","axisLeft","options_1","axisTop","axisWidth","tickSize","titleWidth","xOption","yOption","titleMargin","titleFontSize","fontMetrics","f","offAxis","bottom","titlePosition","onAfterInit","showLastLabel","labelRotation","minTickInterval","columnIndex","columnOptions","onAfterRender","firstTick","slotWidth","maxLabelDimensions","rightWall","isOuterAxis","axisLine","linePath","getLinePath","startPoint","distance","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","lowerBorder","axisLineExtra","showAxis","hasRendered","linkedParent","lastTick","firstTick_1","tickMark","hiddenLabels","pop","hiddenMarks","mark","isLast","onAfterSetAxisTranslation","tickInfo","userLabels","unitName","onAfterSetOptions","gridAxisOptions","list","reserveSpace","textOverflow","tickPositioner","parentInfo","unitIdx","unit_1","unit","counts","unitRange","getTimeTicks","onAfterSetOptions2","onAfterSetScale","onAfterTickSize","labelPadding","cellHeight","onDestroy","keepEvents","onInit","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","labelOpts","tickPos","nextTickPos","crispCorr","top_1","lblMetrics","useHTML","lines","onTickLabelFormat","isFirst","pointCopy","is","gantt","onTrimTicks","categoryAxis","firstPos","secondPos","lastPos","beforeLastPos","linkedMin","linkedMax","startLessThanMin","endMoreThanMin","startLessThanMax","endMoreThanMax","isLinked","wrapUnsquish","parentAxis","thisIndex","lastIndex","otherAxis","extraBorderLine","axisGroup","E","timestamp","charAt","W","unitsToOmit","firstDay","thursday","valueOf","firstThursday","toString","TickClass","__rest","t","getOwnPropertySymbols","propertyIsEnumerable","getNode","parent","level","mapOfIdToChildren","after","before","node","depth","descendants","children","child","childStart","NaN","childEnd","getTree","ids","listOfParents","prev","curr","adoptedByRoot","orphan","onTickInit","TreeGridTickAdditions","wrapGetLabelPosition","labelOptions","lbOptions","isTreeGrid","result","wrapRenderLabel","params","isNew","labelBox","iconCenter","shouldRender","icon","collapsed","tickGrid","tickOptions","labelIcon","labelElement","axisGrid","axisOptions","symbolOptions","hasDescendants","isTreeGridElement","prefixClassName","prefixLevelClass","removeClass","RegExp","styles","parentGroup","xy","object","attachedTreeGridEvents","textDecoration","toggleCollapse","tickProto","collapse","expand","posMappedNodes","getColor","colorVariation","colorIndexByPoint","mapOptionsToLevel","parentColor","parentColorIndex","siblings","chartOptionsChart","getLevelOptions","defaults","converted","levels","item","levelIsConstant","setTreeValues","tree","idRoot","nodeRoot","mapIdToNode","optionsPoint","childrenTotal","levelDynamic","newOptions","isLeaf","updateRootId","rootId","rootNode","GridAxis","Tree","TreeGridTick","TU","TickConstructor","isString","getBreakFromNode","collapseEnd","collapseStart","getTreeGridFromData","uniqueNames","numberOfSeries","setValues","collapsedNodes","mapOfIdToNode","uniqueNamesEnabled","posIterator","gridNode","parentGridNode","nodes","seriesIndex","onBeforeRender","target","isDirtyData","arr","optionsToObject","hasNames","axisData","wrapGenerateTick","levelOptions","parameters","addLabel","wrapInit","TreeGridAxisAdditions","n","fontWeight","wrapSetTickInterval","getTickPositions","linkedParentExtremes","wrapRedraw","axisProps","utils","setCollapsedStatus","dataPoint","roundedMin","roundedMax","GanttSeriesDefaults","StaticScale","TreeGridAxis","Series","GanttSeries","diamondShape","cutOff","diamond","ArrowSymbols","CurrentDateIndication","G","SVGRenderer","PlotLineOrBand","Tick"],"mappings":"AAAA;;;;;;;;CAQC,GACA,SAAUA,CAAO,EACV,AAAkB,UAAlB,OAAOC,QAAuBA,OAAOC,OAAO,EAC5CF,EAAQ,OAAU,CAAGA,EACrBC,OAAOC,OAAO,CAAGF,GACV,AAAkB,YAAlB,OAAOG,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,2BAA4B,CAAC,aAAa,CAAE,SAAUE,CAAU,EAGnE,OAFAL,EAAQK,GACRL,EAAQK,UAAU,CAAGA,EACdL,CACX,GAEAA,EAAQ,AAAsB,aAAtB,OAAOK,WAA6BA,WAAaC,KAAAA,EAEjE,EAAE,SAAUD,CAAU,EAClB,aACA,IAAIE,EAAWF,EAAaA,EAAWE,QAAQ,CAAG,CAAC,EACnD,SAASC,EAAgBC,CAAG,CAAEC,CAAI,CAAEC,CAAI,CAAEC,CAAE,EACnCH,EAAII,cAAc,CAACH,KACpBD,CAAG,CAACC,EAAK,CAAGE,EAAGE,KAAK,CAAC,KAAMH,GAEA,YAAvB,OAAOI,aACPC,OAAOC,aAAa,CAAC,IAAIF,YACrB,yBACA,CAAEG,OAAQ,CAAER,KAAMA,EAAMT,OAAQQ,CAAG,CAACC,EAAK,AAAC,CAAE,IAI5D,CACAF,EAAgBD,EAAU,6BAA8B,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAWhI,IAAIC,EAAWF,EAAEE,QAAQ,CACrBC,EAAaF,EAAEE,UAAU,CAoC7B,SAASC,EAAMC,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,CAAC,EACrB,MAAO,CACH,CAAC,IAAKH,EAAGC,EAAIE,EAAI,EAAE,CACnB,CAAC,IAAKH,EAAIE,EAAGD,EAAE,CACf,CAAC,IAAKD,EAAGC,EAAIE,EAAI,EAAE,CACnB,CAAC,IAAKH,EAAIE,EAAGD,EAAIE,EAAE,CACtB,AACL,CA6BA,SAASC,EAAUJ,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,CAAC,EACzB,OAAOJ,EAAMC,EAAGC,EAAGC,EAAI,EAAGC,EAC9B,CA2CA,SAASE,EAAaL,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,CAAC,EAC5B,MAAO,CACH,CAAC,IAAKH,EAAIE,EAAGD,EAAE,CACf,CAAC,IAAKD,EAAGC,EAAIE,EAAI,EAAE,CACnB,CAAC,IAAKH,EAAIE,EAAGD,EAAIE,EAAE,CACnB,CAAC,IAAI,CACR,AACL,CA6BA,SAASG,EAAiBN,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAEC,CAAC,EAChC,OAAOE,EAAaL,EAAGC,EAAGC,EAAI,EAAGC,EACrC,CAUA,MAJmB,CACfI,QApFJ,SAASA,EAAQC,CAAgB,EAC7B,GAAIV,EAAWD,EAAUU,GAAU,CAC/B,IAAIE,EAAUD,EAAiBE,SAAS,CAACD,OAAO,AAChDA,CAAAA,EAAQV,KAAK,CAAGA,EAChBU,CAAO,CAAC,eAAe,CAAGJ,EAC1BI,CAAO,CAAC,oBAAoB,CAAGH,EAC/BG,CAAO,CAAC,aAAa,CAAGL,EACxBK,CAAO,CAAC,gBAAgB,CAAGJ,EAC3BI,CAAO,CAAC,qBAAqB,CAAGH,CACpC,CACJ,CA2EA,CAGJ,GACAtB,EAAgBD,EAAU,sBAAuB,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAWzH,IAAIe,EAAUf,EAAEe,OAAO,CAAEC,EAAQhB,EAAEgB,KAAK,CAAEC,EAAQjB,EAAEiB,KAAK,CAAEC,EAAalB,EAAEkB,UAAU,CAMhFC,EAAUpB,EAAEoB,OAAO,CAAEC,EAAMC,KAAKD,GAAG,CAAEE,EAAMD,KAAKC,GAAG,CA8UvD,OAvTgC,WAC5B,SAASC,EAAWC,CAAI,CAAEC,CAAE,CAAEC,CAAO,EACjC,IAAI,CAACC,IAAI,CAACH,EAAMC,EAAIC,EACxB,CAgRA,OAjQAH,EAAWT,SAAS,CAACa,IAAI,CAAG,SAAUH,CAAI,CAAEC,CAAE,CAAEC,CAAO,EACnD,IAAI,CAACE,SAAS,CAAGJ,EACjB,IAAI,CAACK,OAAO,CAAGJ,EACf,IAAI,CAACC,OAAO,CAAGA,EACf,IAAI,CAACI,KAAK,CAAGN,EAAKO,MAAM,CAACD,KAAK,CAC9B,IAAI,CAACE,UAAU,CAAG,IAAI,CAACF,KAAK,CAACE,UAAU,AAC3C,EAgBAT,EAAWT,SAAS,CAACmB,UAAU,CAAG,SAAU3C,CAAI,CAAE4C,CAAO,EACrD,IAAuBJ,EAAQ,IAAI,CAACA,KAAK,CAAEK,EAAaL,EAAMK,UAAU,CAAEH,EAAa,IAAI,CAACA,UAAU,CAAEI,EAAO,CAAC,EAC5GC,EAAcC,AADD,IAAI,CACQC,QAAQ,EAAID,AADxB,IAAI,CAC+BC,QAAQ,CAACjD,IAAI,AAE5D0C,CAAAA,EAAWQ,KAAK,EACjBR,CAAAA,EAAWQ,KAAK,CAAGV,EAAMW,QAAQ,CAACC,CAAC,GAC9BC,QAAQ,CAAC,+BACTC,IAAI,CAAC,CAAEC,OAAQ,EAAG,GAClBC,GAAG,CAAChB,EAAMiB,WAAW,CAAA,EAK9Bf,EAAWQ,KAAK,CAACQ,SAAS,CAAClB,EAAMmB,QAAQ,CAAEnB,EAAMoB,OAAO,EAElDb,GAAeA,EAAYI,QAAQ,GACrCJ,EAAcP,EAAMW,QAAQ,CAACnD,IAAI,GAC5BwD,GAAG,CAACd,EAAWQ,KAAK,EACpBL,GACDE,EAAYO,IAAI,CAAC,CACbO,QAAS,CACb,IAIRd,EAAYO,IAAI,CAACV,GACjBE,EAAKgB,CAAC,CAAG9D,EACJ6C,GACDC,CAAAA,EAAKe,OAAO,CAAG,CAAA,EAEnBd,EAAYgB,OAAO,CAACjB,GAEpB,IAAI,CAACG,QAAQ,CAAG,IAAI,CAACA,QAAQ,EAAI,CAAC,EAClC,IAAI,CAACA,QAAQ,CAACjD,IAAI,CAAG+C,CACzB,EAmBAd,EAAWT,SAAS,CAACwC,SAAS,CAAG,SAAUC,CAAI,CAAE7B,CAAO,CAAEpC,CAAI,EAC1D,IAGIkE,EAAcC,EAASC,EAAUC,EAAKC,EAAOC,EAAQC,EAAYC,EAH9CjC,EAAQQ,AAAd,IAAI,CAAqBV,SAAS,CAACG,MAAM,CAACD,KAAK,CAAEE,EAAaF,EAAME,UAAU,CAAES,EAAWX,EAAMW,QAAQ,CAAEuB,EAAST,AAAS,UAATA,EACjIjB,AADa,IAAI,CACNV,SAAS,CACpBU,AAFa,IAAI,CAENT,OAAO,CAAGoC,EAASD,EAAME,wBAAwB,CAACxC,EAE5DA,CAAAA,EAAQyC,OAAO,EAUhBJ,CAAAA,CALAA,EADAR,AAAS,UAATA,EACUjE,CAAI,CAAC,EAAE,CAGPA,CAAI,CAACA,EAAK8E,MAAM,CAAG,EAAE,GAEpBL,AAAe,MAAfA,CAAO,CAAC,EAAE,EAAYA,AAAe,MAAfA,CAAO,CAAC,EAAE,AAAO,IAClDD,EAAa,CACT1D,EAAG2D,CAAO,CAAC,EAAE,CACb1D,EAAG0D,CAAO,CAAC,EAAE,AACjB,EAGAN,EAAUO,EAAMK,kBAAkB,CAACP,EAAYG,GAC/CT,EAAeQ,EAAMM,eAAe,CAACb,EAAS/B,EAAQ6C,MAAM,CAAEN,GAM9DP,EAAW,CAACD,EAAUtC,EAClBO,EAAQkC,KAAK,EAAIlC,EAAQmC,MAAM,EAC/BD,EAAQlC,EAAQkC,KAAK,CACrBC,EAASnC,EAAQmC,MAAM,EAGvBD,EAAQC,EAASnC,AAAiB,EAAjBA,EAAQ6C,MAAM,CAGnCjC,AArCa,IAAI,CAqCNC,QAAQ,CAAGD,AArCT,IAAI,CAqCgBC,QAAQ,EAAI,CAAC,EAC9CoB,EAAM,CACFvD,EAAGoD,EAAapD,CAAC,CAAIwD,EAAQ,EAC7BvD,EAAGmD,EAAanD,CAAC,CAAIwD,EAAS,EAC9BD,MAAOA,EACPC,OAAQA,EACRH,SAAUA,EACVc,gBAAiBhB,EAAapD,CAAC,CAC/BqE,gBAAiBjB,EAAanD,CAAC,AACnC,EACKiC,AA/CQ,IAAI,CA+CDC,QAAQ,CAACgB,EAAK,CAqB1BjB,AApES,IAAI,CAoEFC,QAAQ,CAACgB,EAAK,CAACF,OAAO,CAACM,IAnBlCrB,AAjDS,IAAI,CAiDFC,QAAQ,CAACgB,EAAK,CAAGd,EACvBiC,MAAM,CAAChD,EAAQgD,MAAM,EACrB/B,QAAQ,CAAC,oCAAsCY,EAAtC,4BACa,IAAI,CAAC3B,SAAS,CAAC+C,UAAU,EAC/C/B,IAAI,CAACe,GACLb,GAAG,CAACd,EAAWQ,KAAK,EACpBC,EAASN,UAAU,EACpBG,AAxDK,IAAI,CAwDEC,QAAQ,CAACgB,EAAK,CAACX,IAAI,CAAC,CAC3BgC,KAAMlD,EAAQmD,KAAK,EAAIvC,AAzDtB,IAAI,CAyD6BV,SAAS,CAACiD,KAAK,CACjDC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,CACjC7B,QAAS,CACb,GACKE,OAAO,CAAC,CACTF,QAAS,CACb,EAAGa,EAAMjC,MAAM,CAACL,OAAO,CAACuD,SAAS,GAOjD,EAaA1D,EAAWT,SAAS,CAACoE,OAAO,CAAG,SAAUxD,CAAO,EAC5C,IAAIM,EAAa,IAAI,CAACA,UAAU,CAAEF,EAAQ,IAAI,CAACA,KAAK,CAAEqD,EAAYnD,EAAWoD,UAAU,CAAC1D,EAAQ6B,IAAI,CAAC,CACjG8B,EAAiBrD,EAAWqD,cAAc,OAC9C,AAAI,AAAqB,YAArB,OAAOF,GACPnE,EAAM,IAAMU,EAAQ6B,IAAI,CAAG,oCACpB,CACHjE,KAAM,EAAE,CACRgG,UAAW,EAAE,AACjB,IAGAH,EAAUI,iBAAiB,EAAI,CAACF,IAChCA,EACIrD,EAAWqD,cAAc,CACrBrD,EAAWwD,iBAAiB,CAAC9D,GAGrCI,EAAMJ,OAAO,CAAC+D,UAAU,CAACC,eAAe,CACpChE,EAAQgE,eAAe,CAE3B1D,EAAW2D,oBAAoB,CAC3B3D,EAAW4D,kBAAkB,CAACP,IAG/BF,EAEP,IAAI,CAACvD,SAAS,CAACsC,wBAAwB,CAACxC,EAAQmE,WAAW,EAE3D,IAAI,CAAChE,OAAO,CAACqC,wBAAwB,CAACxC,EAAQoE,SAAS,EAAG7E,EAAM,CAC5DoE,eAAgBA,EAChBU,cAAe/D,EAAW+D,aAAa,EAAI,EAAE,CAC7CC,gBAAiBhE,EAAW2D,oBAAoB,CAChDM,WAAY,CACRC,KAAM,EACNC,KAAMrE,EAAMsE,SAAS,CACrBC,KAAM,EACNC,KAAMxE,EAAMyE,UAAU,AAC1B,EACAC,gBAAiB,CACbC,OAAQ/E,EAAQgE,eAAe,AACnC,EACAgB,gBAAiB1E,EAAW2E,0BAA0B,CAACjF,EAAQmE,WAAW,CAC9E,EAAGnE,IACP,EAMAH,EAAWT,SAAS,CAAC8F,MAAM,CAAG,WAC1B,IAAuBhF,EAAYU,AAAlB,IAAI,CAAyBV,SAAS,CAAEG,EAASH,EAAUG,MAAM,CAAED,EAAQC,EAAOD,KAAK,CAAEE,EAAaF,EAAME,UAAU,CAAEE,EAAU,CAAC,EAChJR,EAAUT,EAAMa,EAAMJ,OAAO,CAAC+D,UAAU,CAAE1D,EAAOL,OAAO,CAAC+D,UAAU,CAAE7D,EAAUF,OAAO,CAAC+D,UAAU,CAAEnD,AADtF,IAAI,CAC6FZ,OAAO,CAErH,EAACI,EAAMK,UAAU,GACjBD,EAAQ4C,MAAM,CAAGpD,EAAQqD,SAAS,EAAInD,EAAUiD,KAAK,CACrD3C,CAAO,CAAC,eAAe,CAAGR,EAAQsD,SAAS,CACvCtD,EAAQmF,SAAS,EACjB3E,CAAAA,EAAQ4E,SAAS,CAAGpF,EAAQmF,SAAS,AAAD,GAG5C3E,EAAQ,KAAQ,CACZ,qDAC0BN,EAAU+C,UAAU,CAG7C5D,EAAQW,AAFbA,CAAAA,EAAUT,EAAMiB,EAASR,EAAO,EAEXqF,MAAM,CAACxC,MAAM,GAC9B7C,CAAAA,EAAQqF,MAAM,CAACxC,MAAM,CAAGjD,EAAIF,EAAIC,KAAK2F,IAAI,CAAC,AAACtF,CAAAA,EAAQgE,eAAe,EAAI,CAAA,EAAK,GAAK,EAAG,GAAI,EAAC,EAG5F,IAAIuB,EAAa3E,AAnBA,IAAI,CAmBO4C,OAAO,CAACxD,GAAUpC,EAAO2H,EAAW3H,IAAI,AAGhE2H,CAAAA,EAAW3B,SAAS,GACpBtD,EAAW+D,aAAa,CACpB/D,EAAW+D,aAAa,EAAI,EAAE,CAClC/D,EAAW+D,aAAa,CACpB/D,EAAW+D,aAAa,CAACmB,MAAM,CAACD,EAAW3B,SAAS,GAG5DhD,AA7BiB,IAAI,CA6BVL,UAAU,CAAC3C,EAAM4C,GAE5BI,AA/BiB,IAAI,CA+BVgB,SAAS,CAAC,QAASrC,EAAMS,EAAQqF,MAAM,CAAErF,EAAQmE,WAAW,EAAGvG,GAC1EgD,AAhCiB,IAAI,CAgCVgB,SAAS,CAAC,MAAOrC,EAAMS,EAAQqF,MAAM,CAAErF,EAAQoE,SAAS,EAAGxG,EAC1E,EAMAiC,EAAWT,SAAS,CAACqG,OAAO,CAAG,WACvB,IAAI,CAAC5E,QAAQ,GACbrB,EAAW,IAAI,CAACqB,QAAQ,CAAE,SAAU6E,CAAG,EACnCA,EAAID,OAAO,EACf,GACA,OAAO,IAAI,CAAC5E,QAAQ,CAE5B,EACOhB,CACX,GAoCJ,GACAnC,EAAgBD,EAAU,sCAAuC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAYzI,IAAIC,EAAWF,EAAEE,QAAQ,CACrBoH,EAAWrH,EAAEqH,QAAQ,CAAEpG,EAAQjB,EAAEiB,KAAK,CAAEf,EAAaF,EAAEE,UAAU,CAAEoH,EAAOtH,EAAEsH,IAAI,CAwBhFC,EAAiB,CACjB1C,MAAO,UACPjB,MAAO,EAIP4D,MAAO,CAUHC,OAAQ,sBACRC,UAAW,SAAUC,CAAK,CAAEF,CAAM,EAC9B,OAAO,IAAI,CAACG,IAAI,CAAC9F,KAAK,CAAC+F,IAAI,CAACC,UAAU,CAACL,GAAU,GAAIE,EACzD,EACAjE,SAAU,EAIVqE,MAAO,CAEHC,SAAU,OACd,CACJ,CACJ,EAmBA,SAASC,IACL,IAAIvG,EAAU,IAAI,CAACA,OAAO,CAAEwG,EAAaxG,EAAQyG,oBAAoB,CACrE,GAAID,EAAY,CACZ,IAAIE,EAAkB,AAAsB,UAAtB,OAAOF,EACzBjH,EAAMsG,EAAgBW,GACtBjH,EAAMsG,EACVa,CAAAA,EAAgBT,KAAK,CAAGU,KAAKC,GAAG,GAChCF,EAAgBG,SAAS,CAAG,oCACvB7G,EAAQ8G,SAAS,EAClB9G,CAAAA,EAAQ8G,SAAS,CAAG,EAAE,AAAD,EAEzB9G,EAAQ8G,SAAS,CAACC,IAAI,CAACL,EAC3B,CACJ,CAIA,SAASM,IAED,IAAI,CAAClB,KAAK,EACV,IAAI,CAACA,KAAK,CAAC5E,IAAI,CAAC,CACZ+F,KAAM,IAAI,CAACC,YAAY,CAAC,IAAI,CAAClH,OAAO,CAAC8F,KAAK,CAC9C,EAER,CAIA,SAASqB,EAA+BC,CAAa,CAAEC,CAAmB,EACtE,IAAIrH,EAAU,IAAI,CAACA,OAAO,QAC1B,AAAIA,GACAA,EAAQ6G,SAAS,EACjB7G,AAAmE,KAAnEA,EAAQ6G,SAAS,CAACS,OAAO,CAAC,sCAC1BtH,EAAQ8F,KAAK,EACb,AAAmC,YAAnC,OAAO9F,EAAQ8F,KAAK,CAACE,SAAS,EAC9BhG,EAAQiG,KAAK,CAAGU,KAAKC,GAAG,GACjB5G,EAAQ8F,KAAK,CAACE,SAAS,CACzBuB,IAAI,CAAC,IAAI,CAAEvH,EAAQiG,KAAK,CAAEjG,EAAQ8F,KAAK,CAACC,MAAM,GAEhDqB,EAAcG,IAAI,CAAC,IAAI,CAAEF,EACpC,CAUA,MAJ4B,CACxBpI,QAzDJ,SAASA,EAAQuI,CAAS,CAAEC,CAAmB,EACvCjJ,EAAWD,EAAUU,KACrB0G,EAAS6B,EAAW,kBAAmBjB,GACvCZ,EAAS8B,EAAqB,SAAUT,GACxCpB,EAAK6B,EAAoBrI,SAAS,CAAE,eAAgB+H,GAE5D,CAoDA,CAGJ,GACAzJ,EAAgBD,EAAU,2BAA4B,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUiK,CAAK,CAAEC,CAAC,CAAErJ,CAAC,EAYvK,IACQsJ,EA0IGC,EA3IPC,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUlG,CAAC,CAAEqG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAUzG,CAAC,CAAEqG,CAAC,EAAIrG,EAAEwG,SAAS,CAAGH,CAAG,GAC1E,SAAUrG,CAAC,CAAEqG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAO5I,SAAS,CAACrB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI1G,CAAAA,CAAC,CAAC0G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E1G,EAAGqG,EAC5B,EACO,SAAUrG,CAAC,CAAEqG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAG9G,CAAG,CADtCkG,EAAclG,EAAGqG,GAEjBrG,EAAEtC,SAAS,CAAG2I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGnJ,SAAS,CAAG2I,EAAE3I,SAAS,CAAE,IAAImJ,CAAG,CACtF,GAEA1C,EAAiB8B,EAAE9B,cAAc,CACjC6C,EAAUpK,EAAEoK,OAAO,CAAEnJ,EAAQjB,EAAEiB,KAAK,CAAEoJ,EAAQrK,EAAEqK,KAAK,CAerDd,EAA4B,SAAUe,CAAM,EAE5C,SAASf,IACL,OAAOe,AAAW,OAAXA,GAAmBA,EAAO5K,KAAK,CAAC,IAAI,CAAE6K,YAAc,IAAI,AACnE,CAiGA,OApGAf,EAAUD,EAAYe,GA0BtBf,EAAWzI,SAAS,CAACa,IAAI,CAAG,SAAU6I,CAAW,CAAEC,CAAQ,EACvD,IACIC,EADAC,EAAeH,EAAYI,KAAK,CAAEC,EAAeL,EAAYM,KAAK,AAGtEN,CAAAA,EAAYI,KAAK,CAAGJ,EAAYM,KAAK,CAAG,KAAK,EAC7C,IAAIpJ,EAAUT,EAAM,CAAA,EAAM,CACtBa,MAAO,CACHyB,KAAM,OACV,EACAwH,MAAO,CACHpC,KAAM,EACV,EACAqC,OAAQ,CACJ7G,QAAS,CAAA,CACb,EACA8G,UAAW,CACPlJ,OAAQ,CAAEwB,KAAM,OAAQ,EAExBuH,MAAO,CACHvH,KAAM,UACV,CACJ,CACJ,EAAGiH,EAEH,CACIU,QAAS,CAAA,CACb,EACAV,CAAAA,EAAYI,KAAK,CAAGD,EACpBH,EAAYM,KAAK,CAAGD,EAIpBnJ,EAAQkJ,KAAK,CAAG,AAAC,CAAA,AAACR,EAAQI,EAAYI,KAAK,EAEvCJ,EAAYI,KAAK,CADjB,CAACJ,EAAYI,KAAK,EAAI,CAAC,EAAG,CAAC,EAAE,AACb,EAAGO,GAAG,CAAC,SAAUR,CAAY,CAAES,CAAC,EAChD,IAAIC,EAAIC,EAAIC,EAIZ,OAHU,IAANH,GACAV,CAAAA,EAAkB,CAAA,EAEfzJ,EAEP,CACIuK,KAAM,CACFC,YAAa,UACbtH,QAAS,CAAA,CACb,EACAuH,SAAU,AAAsJ,OAArJH,CAAAA,EAAK,AAAwF,OAAvFD,CAAAA,EAAK,AAAgC,OAA/BD,CAAAA,EAAK9D,EAAeqD,KAAK,AAAD,GAAeS,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGK,QAAQ,AAAD,GAAeJ,AAAO,KAAK,IAAZA,EAAgBA,EAAKX,EAAae,QAAQ,AAAD,GAAeH,AAAO,KAAK,IAAZA,GAAgBA,EACxLI,SAAUjB,CACd,EAEAC,EAEA,CACIpH,KAAM,UACV,EACJ,GAEA7B,EAAQoJ,KAAK,CAAG,AAACT,EAAMG,EAAYM,KAAK,EAAI,CAAC,GAAIK,GAAG,CAAC,SAAUN,CAAY,EAAI,OAAO5J,EAEtF,CACIuK,KAAM,CACFC,YAAa,UACbtH,QAAS,CAAA,CACb,EACAyH,YAAa,GACbC,SAAU,CAAA,EAGVtI,KAAMsH,EAAaiB,UAAU,CAAGjB,EAAatH,IAAI,CAAG,UACxD,EAEAsH,EAAe,GACfP,EAAOxJ,SAAS,CAACa,IAAI,CAACsH,IAAI,CAAC,IAAI,CAAEvH,EAAS+I,EAC9C,EACOlB,CACX,EAAEH,GA0DF,MATIG,CA3COA,EA6CRA,GAAeA,CAAAA,EAAa,CAAC,CAAA,GAFjBwC,UAAU,CAHrB,SAAoBC,CAAC,CAAEvC,CAAC,CAAEwC,CAAC,EACvB,OAAO,IAAI1C,EAAWyC,EAAGvC,EAAGwC,EAChC,EAUG1C,CACX,GACAnK,EAAgBD,EAAU,wCAAyC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAU3I,IAAIC,EAAWF,EAAEE,QAAQ,CAAEiM,EAAgBnM,EAAEmM,aAAa,CACtD7E,EAAWrH,EAAEqH,QAAQ,CAAE8E,EAAenM,EAAEmM,YAAY,CAAEpL,EAAUf,EAAEe,OAAO,CAAEqL,EAAWpM,EAAEoM,QAAQ,CAAEC,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAS9I,SAASoM,IAEA1E,AADM,IAAI,CACL2E,aAAa,EACnB3E,CAAAA,AAFO,IAAI,CAEN2E,aAAa,CAAG,IAAIC,EAFlB,IAAI,CAEyC,CAE5D,CAOA,SAASC,EAAWC,CAAC,EACjB,IAAiB5K,EAAQ8F,AAAd,IAAI,CAAe9F,KAAK,CAAE6K,EAAe7K,EAAMJ,OAAO,CAAEuJ,EAAY0B,EAAa1B,SAAS,CAAEsB,EAAgB3E,AAA5G,IAAI,CAA6G2E,aAAa,CAAEK,EAAY9K,EAAM+K,OAAO,CAACD,SAAS,CAAEE,EAAgBH,EAAaG,aAAa,CAAEC,EAAWjL,EAAM+K,OAAO,CAACtJ,IAAI,CACzP,GAAIqE,AADO,IAAI,CACNoF,OAAO,EAAK,CAAA,AAAC/B,GAAaA,EAAU9G,OAAO,EAC/C2I,GAAiBA,EAAc3I,OAAO,GAEvC,GAAI4I,AAAa,MAAbA,EACAL,EAAEO,MAAM,CAAG,CAAA,OAOV,GAAI,AAAC,CAAA,AAAC,CAACf,GAAiBa,AAAa,OAAbA,GACxBb,GAAiBU,AAAc,OAAdA,CAAkB,GACpChF,AAdG,IAAI,CAcFlG,OAAO,CAACwL,KAAK,CAAE,CACpB,IAAIC,EAAeZ,EAAcY,YAAY,CACzCpM,EAAQ2L,EAAEU,MAAM,EAChBb,EAAcY,YAAY,CAAG,CAACvF,AAjB/B,IAAI,CAiBgCtG,GAAG,CAAEsG,AAjBzC,IAAI,CAiB0CxG,GAAG,CAAC,CAE5C+L,IACLT,EAAEU,MAAM,CAAGD,CAAY,CAAC,EAAE,CAC1BT,EAAEW,MAAM,CAAGF,CAAY,CAAC,EAAE,CAC1BZ,EAAcY,YAAY,CAAG,KAAK,EAE1C,EAEoB,KAAA,IAAbT,EAAEO,MAAM,EACfP,EAAEY,cAAc,EAExB,CAUA,IAAId,EAAwC,WAMxC,SAASA,EAAuB5E,CAAI,EAChC,IAAI,CAACA,IAAI,CAAGA,CAChB,CA8DA,OArDA4E,EAAuB7L,OAAO,CAAG,SAAUuI,CAAS,EAC5ChJ,EAAWD,EAAU,IAAI,CAACU,OAAO,IACjCuI,EAAUqE,SAAS,CAAC9E,IAAI,CAAC,iBACzBpB,EAAS6B,EAAW,OAAQoD,GAC5BjF,EAAS6B,EAAW,OAAQuD,GAEpC,EASAD,EAAuB1L,SAAS,CAACqG,OAAO,CAAG,WACvC,IAAI,CAACS,IAAI,CAAG,KAAK,CACrB,EAQA4E,EAAuB1L,SAAS,CAAC0M,YAAY,CAAG,SAAUC,CAAK,CAAEC,CAAK,CAAEC,CAAQ,CAAEC,CAAQ,EACtF,IAAIhG,EAAO,IAAI,CAACA,IAAI,CAAE9F,EAAQ8F,EAAK9F,KAAK,CACpCsL,EAASf,EAAKsB,EAAU/F,EAAK5E,SAAS,CAACyK,EAAO,CAAA,EAAM,CAAC7F,EAAKiG,KAAK,GAAIR,EAAShB,EAAKuB,EAAUhG,EAAK5E,SAAS,CAAC0K,EAAO,CAAA,EAAM,CAAC9F,EAAKiG,KAAK,GAClIC,EAAahM,GAASA,EAAMgM,UAAU,CAAEC,EAAiB,AAACnG,CAAAA,EAAKoG,UAAU,EAAI,CAAA,EAAK,EAoBtF,OAlBKjN,EAAQ4M,IACTP,CAAAA,EAASjB,EAAaiB,EAASW,EAAc,EAE5ChN,EAAQ6M,IACTP,CAAAA,EAASlB,EAAakB,EAASU,EAAc,EAG7CD,GAAclG,EAAKqG,OAAO,EAAIrG,EAAKsG,OAAO,GACtCb,GAAUzF,EAAKsG,OAAO,EACtBd,CAAAA,EAASjB,EAAavE,EAAKsG,OAAO,CAAGJ,EAAU,EAE/CV,GAAUxF,EAAKqG,OAAO,EACtBZ,CAAAA,EAASlB,EAAavE,EAAKqG,OAAO,CAAGH,EAAU,GAGlD1B,EAASgB,IAAYhB,EAASiB,IAC/BD,CAAAA,EAASC,EAAS,KAAK,CAAA,EAEpB,CACH/L,IAAK8L,EACLhM,IAAKiM,CACT,CACJ,EACOb,CACX,IAOA,OAAOA,CACX,GACApN,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAC,CAAE,SAAUgP,CAAK,CAAEC,CAAc,EAU3K,IAAIvJ,EAAQsJ,EAAME,KAAK,CACnBC,EAAcF,EAAeE,WAAW,CAye5C,MA3dwB,CAuDpBzK,OAAQ,GAOR4C,OAAQ,GAUR8H,WAAY,CAAA,EAOZC,QAAS,CASL5K,MAAO,EASPC,OAAQ,GAqBRhD,QAAS,CAAC,mBAAoB,mBAAmB,CAMjDsD,QAAS,CAAA,EAUTa,UAAW,EAMXyJ,gBAAiB,UAMjBhD,YAAa,SACjB,EAgBAiD,SAAU7J,EAAM,WAA0C8J,UAAU,CAAC,IAAKC,GAAG,GAW7EC,aAAc,UAadC,aAAc,EAkCd/M,OAAQ,CAeJwB,KAAO,AAAkC,KAAA,IAA3B+K,EAAYS,UAAU,CAChC,OACA,aAIJC,YAAa,IAIbhK,UAAW,EAIXiK,QAAS,KAITC,aAAc,CACV/K,QAAS,CAAA,CACb,EAcAgL,aAAc,CACVC,cAAe,UACfjL,QAAS,CAAA,EACTkL,gBAAiB,EAEjBC,YAAa,aACbrL,OAAQ,SACRsL,WAAY,YAEZC,MAAO,CACH,CAAC,cAAe,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAI,CAAC,CACzD,CAAC,SAAU,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAG,CAAC,CACjC,CAAC,SAAU,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAG,CAAC,CACjC,CAAC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,CAAC,CAChC,CAAC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAE,CAAC,CACrB,CAAC,OAAQ,CAAC,EAAG,EAAG,EAAE,CAAC,CACnB,CAAC,QAAS,CAAC,EAAG,EAAG,EAAE,CAAC,CACpB,CAAC,OAAQ,KAAK,CACjB,AACL,EAOAC,WAAY,CACRtL,QAAS,CAAA,EACTtB,OAAQ,CACZ,EACA6M,GAAI,8BACJnH,UAAW,8BAaXxD,UAAW,KACXgC,OAAQ,CACJ5C,QAAS,CAAA,CACb,EAkBAwL,UAAW,IACf,EAqCA/E,MAAO,CAQHgF,WAAY,EACZrH,UAAW,6BACXsH,WAAY,EACZ7K,UAAW,EACX8K,cAAe,UACfC,cAAe,EACfC,kBAAmB,IACnBC,OAAQ,CACJC,MAAO,OAIPnI,MAAO,CAEHlD,MAAO,UAEPmD,SAAU,QAEV7E,QAAS,GAETgN,YAAa,cACjB,EACA/P,EAAG,EACHC,EAAG,EACP,EACA+P,UAAW,CAAA,CACf,EA0BAtF,MAAO,CACHvC,UAAW,6BACXwH,cAAe,EACfM,YAAa,CAAA,EACbC,UAAW,CAAA,EACXC,WAAY,GACZC,WAAY,GACZP,OAAQ,CACJ9L,QAAS,CAAA,CACb,EACAiM,UAAW,CAAA,EACXrF,MAAO,CACHpC,KAAM,IACV,EACAkH,WAAY,EACZY,UAAW,CACf,CACJ,CA0BJ,GACArR,EAAgBD,EAAU,sCAAuC,EAAE,CAAE,WA4CjE,MAJuB,CACnB,mBAtBJ,SAAyBuR,CAAE,CAAEC,CAAE,CAAE/M,CAAK,CAAEC,CAAM,CAAEnC,CAAO,EACnC,KAAK,IAAjBA,GAAsBA,CAAAA,EAAU,CAAC,CAAA,EACrC,IAAIkP,EAAYlP,EAAQkC,KAAK,CAAGlC,EAAQkC,KAAK,CAAG,EAAIA,EAAOiN,EAAiBxP,KAAKyP,KAAK,CAACF,EAAY,GAAK,GAExG,MAAO,CACH,CAAC,IAAK,CAACA,EAAY,EAAG,GAAI,CAC1B,CAAC,IAAKA,EAAW,GAAI,CACrB,CAAC,IAAKA,EAAW/M,AAJrBA,CAAAA,EAASnC,EAAQmC,MAAM,EAAIA,CAAK,EAIF,GAAI,CAC9B,CAAC,IAAK,CAAC+M,EAAY,EAAG/M,EAAS,GAAI,CACnC,CAAC,IAAK,CAAC+M,EAAY,EAAG,GAAI,CAC1B,CAAC,IAAK,CAACC,EAAgB,EAAE,CACzB,CAAC,IAAK,CAACA,EAAgBhN,EAAS,EAAE,CAClC,CAAC,IAAKgN,EAAiB,EAAG,EAAE,CAC5B,CAAC,IAAKA,EAAiB,EAAGhN,EAAS,EAAE,CACxC,AACL,CAQA,CAGJ,GACAzE,EAAgBD,EAAU,0CAA2C,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,sCAAsC,CAAEA,CAAQ,CAAC,oCAAoC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUkK,CAAC,CAAEtJ,CAAC,CAAEyM,CAAsB,CAAEuE,CAAiB,CAAEC,CAAgB,CAAEC,CAAgB,CAAEjR,CAAC,EAUlc,IASIkR,EATA3J,EAAiB8B,EAAE9B,cAAc,AAAe8B,CAAAA,EAAE8H,UAAU,CAChE,IAAIlR,EAAWF,EAAEE,QAAQ,CAAEiM,EAAgBnM,EAAEmM,aAAa,CACtDkF,EAAkBH,EAAiBG,eAAe,CAClD/J,EAAWrH,EAAEqH,QAAQ,CAAEgK,EAASrR,EAAEqR,MAAM,CAAEpQ,EAAQjB,EAAEiB,KAAK,CAAEoL,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAoCvG,SAASoR,IACD,IAAI,CAACrG,SAAS,EAEd,IAAI,CAACA,SAAS,CAACsG,aAAa,CAAC,KAAM,CAAA,EAE3C,CAQA,SAASC,IAEL,IADInG,EAEAoG,EAAe7G,EAAOE,EADtBE,EAAS,IAAI,CAACA,MAAM,CAAEC,EAAY,IAAI,CAACA,SAAS,CAEpD,GAAIA,EAAW,CACXwG,EAAgBzG,GAAUA,EAAOtJ,OAAO,CACxCkJ,EAAQK,EAAUL,KAAK,CACvBE,EAAQG,EAAUH,KAAK,CACvB,IAAI4G,EAAkBzG,EAAUyG,eAAe,CAAEC,EAAmB1G,EAAU0G,gBAAgB,AAE1F,CAAA,IAAI,CAACC,QAAQ,EACb3G,EAAU4G,IAAI,CAAG5G,EAAUS,QAAQ,CAC/B,IAAI,CAACoG,UAAU,CAAGJ,EACdzG,EAAUpH,MAAM,CACpB,IAAI,CAACkO,OAAO,CAAC,EAAE,CAAGL,EACtBzG,EAAU+G,GAAG,CAAG,IAAI,CAAC9O,OAAO,CAAGyO,IAG/B1G,EAAU4G,IAAI,CAAGxF,EAAKzB,EAAMiH,IAAI,CAAE,IAAI,CAAC5O,QAAQ,CAAG0O,GAClD1G,EAAU+G,GAAG,CAAG/G,EAAUgH,gBAAgB,CAACD,GAAG,EAC1C,IAAI,CAACE,WAAW,CACZjH,EAAUpH,MAAM,CAChB6N,EACC,CAAA,AAAC,CAAA,AAA0B,OAAzBrG,CAAAA,EAAK,IAAI,CAAC8G,SAAS,AAAD,GAAe9G,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG3J,OAAO,CAAC+E,MAAM,AAAD,GAAM,CAAA,EACnF,IAAI,CAACsL,OAAO,CAAC,EAAE,CACd,CAAA,IAAI,CAACjF,aAAa,EAAI,IAAI,CAACsF,iBAAiB,CACzC,IAAI,CAACtF,aAAa,CAACuF,SAAS,GAC5B,CAAA,EACH,CAAA,AAACZ,GACEA,AAAgC,WAAhCA,EAAca,aAAa,EAC3Bb,AAAyB,cAAzBA,EAAcc,MAAM,EACpBd,EAActN,OAAO,EACrB,CAACsN,EAAce,QAAQ,CACvBxH,EAAOyH,YAAY,CACfpG,EAAKoF,EAAchL,MAAM,CAAE,IAC/B,CAAA,EACH,CAAA,IAAI,CAACiM,WAAW,CAAG,IAAI,CAACA,WAAW,CAAC,EAAE,CAAG,CAAA,GAElD9H,GAASE,IACL,IAAI,CAAC8G,QAAQ,CACbhH,EAAMlJ,OAAO,CAACmQ,IAAI,CAAG/G,EAAMpJ,OAAO,CAACmQ,IAAI,CAAG5G,EAAU4G,IAAI,CAGxDjH,EAAMlJ,OAAO,CAACsQ,GAAG,CAAGlH,EAAMpJ,OAAO,CAACsQ,GAAG,CAAG/G,EAAU+G,GAAG,CAEzDpH,EAAM+H,WAAW,GACjB7H,EAAM6H,WAAW,GAEzB,CACJ,CAKA,SAASC,EAAmBC,CAAK,EACzB,CAAC,IAAI,CAAC5H,SAAS,EAAI,CAAC,IAAI,CAAC6H,QAAQ,EAChC,CAAA,IAAI,CAACpR,OAAO,CAACuJ,SAAS,CAAC9G,OAAO,EAC3B,IAAI,CAACzC,OAAO,CAACyQ,SAAS,CAAChO,OAAO,AAAD,IACjC,IAAI,CAAC2O,QAAQ,CAAG,IAAI,CAAC7H,SAAS,CAAG,IAAIiG,EAAqB,IAAI,EAC1D7E,EAAKwG,EAAME,MAAM,CAAE,CAAA,IACnB,IAAI,CAACA,MAAM,CAACF,EAAM5N,SAAS,EAGvC,CAKA,SAAS+N,IACL,IAAItR,EAAU,IAAI,CAACA,OAAO,CACtBA,CAAAA,EAAQuJ,SAAS,CAAC9G,OAAO,EACzBzC,EAAQyQ,SAAS,CAAChO,OAAO,AAAD,GACxB,CAAA,IAAI,CAAC2O,QAAQ,CAAG,IAAI,CAAC7H,SAAS,CAAG,IAAIiG,EAAqB,IAAI,CAAA,CAEtE,CAOA,SAAS+B,IACL,IAAItG,EAAe,IAAI,CAACjL,OAAO,CAAEuJ,EAAY0B,EAAa1B,SAAS,CAAE6B,EAAgBH,EAAaG,aAAa,CAC/G,GAAI,AAAC,CAAA,AAAC7B,GAAaA,EAAU9G,OAAO,EAC/B2I,GAAiBA,EAAc3I,OAAO,GACtC,CAAA,AAAC,CAAC+H,GACC,AAAsB,MAAtB,IAAI,CAACW,OAAO,CAACtJ,IAAI,EAChB2I,GAAiB,AAA2B,MAA3B,IAAI,CAACW,OAAO,CAACD,SAAS,AAAQ,EACpD,MAAO,CAAA,CAEf,CAIA,SAASsG,EAAgBpR,CAAK,EAC1B,IAAImJ,EAAYnJ,EAAMmJ,SAAS,CAE/B,GAAIA,GAAanJ,EAAM8I,KAAK,CAAC,EAAE,CAAE,CAC7B,IAAIuI,EAAWrR,EAAM8I,KAAK,CAAC,EAAE,CAACwI,WAAW,GACzCnI,EAAUrE,MAAM,CAACuM,EAAS7R,GAAG,CAAE6R,EAAS/R,GAAG,CAC/C,CACJ,CAKA,SAASiS,EAAc3G,CAAC,EACpB,IAAIuF,EAAoBvF,EAAEhL,OAAO,CAACuJ,SAAS,EAAI,CAAC,EAAIqI,EAAoB5G,EAAEhL,OAAO,CAACyQ,SAAS,EAAI,CAAC,CAC5F,EAAC,IAAI,CAAClH,SAAS,EAAI,CAAC,IAAI,CAAC6H,QAAQ,EAChCb,CAAAA,EAAiB9N,OAAO,EAAImP,EAAiBnP,OAAO,AAAD,IACpDlD,EAAM,CAAA,EAAM,IAAI,CAACS,OAAO,CAACuJ,SAAS,CAAEgH,GACpChR,EAAM,CAAA,EAAM,IAAI,CAACS,OAAO,CAACyQ,SAAS,CAAEmB,GACpC,OAAO5G,EAAEhL,OAAO,CAACuJ,SAAS,CAC1B,OAAOyB,EAAEhL,OAAO,CAACyQ,SAAS,CAElC,CAKA,SAASoB,IACD,IAAI,CAACzR,KAAK,CAACmJ,SAAS,EAAI,CAAC,IAAI,CAACvJ,OAAO,CAAC8R,UAAU,EAChD,IAAI,CAAC1R,KAAK,CAACmJ,SAAS,CAACsG,aAAa,CAAC,KAAM,CAAA,EAEjD,CAUA,MAJ2B,CACvB5Q,QArKJ,SAASA,EAAQuI,CAAS,CAAEuK,CAAU,CAAEC,CAAc,CAAEC,CAAW,EAC/DnH,EAAuB7L,OAAO,CAACuI,GAC/BgI,EAAuBwC,EACnBxT,EAAWD,EAAUU,KAErBiT,AADiBH,EAAW3S,SAAS,CAC1B+S,SAAS,CAACpL,IAAI,CAACyK,GAC1B7L,EAASoM,EAAY,iBAAkBnC,GACvCjK,EAASoM,EAAY,oBAAqBjC,GAC1CnK,EAASoM,EAAY,cAAeb,GACpCvL,EAASoM,EAAY,eAAgBT,GACrC3L,EAASoM,EAAY,sBAAuBR,GAC5C5L,EAASoM,EAAY,SAAUJ,GAC/BhM,EAASsM,EAAa,cAAeJ,GACrClC,EAAOD,IAAkBtQ,SAAS,CAACD,OAAO,CAAEmQ,GAC5CK,EAAO9J,EAAgB,CAAE0D,UAAW8F,CAAkB,GAE9D,CAsJA,CAGJ,GACA3R,EAAgBD,EAAU,6BAA8B,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAUhI,IAOI8T,EAPA7T,EAAWF,EAAEE,QAAQ,CACrBoH,EAAWrH,EAAEqH,QAAQ,CAAEtG,EAAUf,EAAEe,OAAO,CAAEsL,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAiMxF,OA1LA,AAAC,SAAU4T,CAAa,EAMpB,IAAIC,EA2BJ,SAASX,EAAYxL,CAAI,EACrB,IAAIoM,EAAU3H,EAAKzE,EAAKlG,OAAO,EAAIkG,EAAKlG,OAAO,CAACJ,GAAG,CAAEsG,EAAKtG,GAAG,EACzD2S,EAAU5H,EAAKzE,EAAKlG,OAAO,EAAIkG,EAAKlG,OAAO,CAACN,GAAG,CAAEwG,EAAKxG,GAAG,EAC7D,MAAO,CACH4S,QAASA,EACTC,QAASA,EACTC,UAAWnT,EAAQ6G,EAAKqG,OAAO,EAC3B5M,KAAKC,GAAG,CAAC0S,EAASpM,EAAKtG,GAAG,CAAEsG,EAAKqG,OAAO,CAAE5B,EAAKzE,EAAK+H,SAAS,CAAEwE,MAAaH,EAChFI,UAAWrT,EAAQ6G,EAAKsG,OAAO,EAC3B7M,KAAKD,GAAG,CAAC6S,EAASrM,EAAKxG,GAAG,CAAEwG,EAAKsG,OAAO,CAAE7B,EAAKzE,EAAK+H,SAAS,CAAE,CAACwE,MAAaF,CACrF,CACJ,CAKA,SAASI,IACL,IAAiBlC,EAAYvK,AAAlB,IAAI,CAAmBuK,SAAS,CAAEzG,EAAWyG,GAAa,CAACA,EAAUzQ,OAAO,CAACgK,QAAQ,CAAE4I,EAAQ1M,AAA/F,IAAI,CAAgGiG,KAAK,CAAG,EAAInC,EAAW,EAAI,EACtIyG,IAEAvK,AAHO,IAAI,CAGN9F,KAAK,CAACyS,iBAAiB,CAAG,CAAC,EAAG,EAAE,CACrC3M,AAJO,IAAI,CAIN9F,KAAK,CAAC0S,UAAU,CAACF,EAAM,EACxBnC,EAAUsC,IAAI,CAAItC,CAAAA,EAAUzQ,OAAO,CAAC+E,MAAM,EAAI,CAAA,EAE1D,CAKA,SAASiO,IACL,IAAI9M,EAAO,IAAI,AACXA,CAAAA,EAAKlG,OAAO,EACZkG,EAAKlG,OAAO,CAACyQ,SAAS,EACtBvK,EAAKlG,OAAO,CAACyQ,SAAS,CAAChO,OAAO,GAE9ByD,EAAKlG,OAAO,CAACyQ,SAAS,CAACwC,QAAQ,CAAG,CAAC/M,EAAKiG,KAAK,CAC7CjG,EAAKlG,OAAO,CAAC2O,WAAW,CAAGzI,EAAKlG,OAAO,CAAC4O,SAAS,CAAG,CAAA,EACpD1I,EAAKuK,SAAS,CAAG,IAAI4B,EAAUnM,EAAK9F,KAAK,CAACW,QAAQ,CAAEmF,EAAKlG,OAAO,CAACyQ,SAAS,CAAEvK,EAAK9F,KAAK,EACtFuF,EAASO,EAAKuK,SAAS,CAAE,UAAW,SAAUzF,CAAC,EAC3C,IACIjL,EAAID,EADJ6J,EAAK+H,EAAYxL,GAAOoM,EAAU3I,EAAG2I,OAAO,CAAEC,EAAU5I,EAAG4I,OAAO,CAAEW,EAAYvJ,EAAG6I,SAAS,CAA4BhH,EAAQ2H,AAAtBxJ,EAAG+I,SAAS,CAAsBQ,EAGhJ,GAAI,AAAC7T,EAAQiT,IAAajT,EAAQkT,IAclC,GAXI,AAACrM,EAAKiG,KAAK,EAAI,CAACjG,EAAKiE,QAAQ,EAC5B,CAACjE,EAAKiG,KAAK,EAAIjG,EAAKiE,QAAQ,EAC7BpK,EAAKmT,EAAY1H,EAAQ,IAAI,CAACzL,EAAE,CAChCD,EAAOoT,EAAY1H,EAAQ,IAAI,CAAC1L,IAAI,GAKpCC,EAAKmT,EAAY1H,EAAS,CAAA,EAAI,IAAI,CAAC1L,IAAI,AAAD,EACtCA,EAAOoT,EAAY1H,EAAS,CAAA,EAAI,IAAI,CAACzL,EAAE,AAAD,GAEtC,IAAI,CAACqT,oBAAoB,CAACpI,EAAEqI,OAAO,EAAG,CAEtC,IAAI1R,EAAUqJ,AAAc,cAAdA,EAAEqI,OAAO,EACnBrI,AAAc,cAAdA,EAAEqI,OAAO,EAA2B,KAAK,EAC7CnN,EAAKoN,WAAW,CAACxT,EAAMC,EAAI,CAAA,EAAM4B,EAASqJ,EAC9C,MAII,IAAI,CAACuI,QAAQ,CAAC,IAAI,CAACzT,IAAI,CAAE,IAAI,CAACC,EAAE,EAExC,GAER,CAKA,SAASyT,IACL,IACIC,EAAc3T,EAAMC,EADP4J,EAAK+H,EAAX,IAAI,EAA0Bc,EAAY7I,EAAG6I,SAAS,CAAEE,EAAY/I,EAAG+I,SAAS,CAAEjC,EAAYvK,AAA9F,IAAI,CAA+FuK,SAAS,CAAEiD,EAAUxN,AAAxH,IAAI,CAAyHyN,eAAe,CAAIzN,CAAAA,AAAhJ,IAAI,CAAiJ8K,WAAW,EAAI,CAAA,EAAK6B,EAAoB3M,AAA7L,IAAI,CAA8L9F,KAAK,CAACyS,iBAAiB,CAAEe,EAAa1N,AAAxO,IAAI,CAAyOlG,OAAO,CAAC+E,MAAM,EAAI,EAE1Q,GAAI0L,GAAaoC,EAAmB,CAChC,GAAI3M,AAHG,IAAI,CAGFiG,KAAK,CAELjG,AALF,IAAI,CAKG8D,QAAQ,EACd6I,CAAAA,CAAiB,CAAC,EAAE,EAAIa,CAAK,EAEjCjD,EAAUoD,QAAQ,CAAC3N,AARhB,IAAI,CAQiBiK,IAAI,CAAGjK,AAR5B,IAAI,CAQ6BoK,GAAG,CACnCpK,AATD,IAAI,CASE/D,MAAM,CACX,EACA0Q,CAAiB,CAAC,EAAE,CACnB3M,CAAAA,AAZF,IAAI,CAYG8D,QAAQ,CAAG4J,EAAa,CAAA,EAAK1N,AAZpC,IAAI,CAYqChE,KAAK,CAAEgE,AAZhD,IAAI,CAYiD/D,MAAM,EAEzD+D,AAdF,IAAI,CAcG8D,QAAQ,EACd6I,CAAAA,CAAiB,CAAC,EAAE,EAAIe,CAAS,EAErCH,EAAe,MAEd,CAEGvN,AArBD,IAAI,CAqBE8D,QAAQ,EACb6I,CAAAA,CAAiB,CAAC,EAAE,EAAIa,CAAK,EAEjC,IAAII,EAAY,KAAK,EAKjBA,EAJCrD,EAAUzQ,OAAO,CAACgK,QAAQ,CAIf9D,AA7Bb,IAAI,CA6BciK,IAAI,CACjBjK,AA9BL,IAAI,CA8BMhE,KAAK,CACV,EACA2Q,CAAiB,CAAC,EAAE,CACnB3M,CAAAA,AAjCN,IAAI,CAiCO8D,QAAQ,CAAG,EAAI4J,CAAS,EAPtB1N,AA1Bb,IAAI,CA0Bc8D,QAAQ,CAAG,EAAI4J,EASpCnD,EAAUoD,QAAQ,CAACC,EAAW5N,AAnC3B,IAAI,CAmC4BoK,GAAG,CAAEpK,AAnCrC,IAAI,CAmCsChE,KAAK,CAAEgE,AAnCjD,IAAI,CAmCkD/D,MAAM,EAE3D+D,AArCD,IAAI,CAqCE8D,QAAQ,EACb6I,CAAAA,CAAiB,CAAC,EAAE,EAAIe,CAAS,EAErCH,EAAe,CACnB,CACAZ,CAAiB,CAACY,EAAa,EAAIhD,EAAUsC,IAAI,CAC5CtC,CAAAA,EAAUzQ,OAAO,CAAC+E,MAAM,EAAI,CAAA,EAC7BgP,MAAMvB,IACNuB,MAAMrB,IACN,CAACrT,EAAQ6G,AA9CN,IAAI,CA8COtG,GAAG,GACjB,CAACP,EAAQ6G,AA/CN,IAAI,CA+COxG,GAAG,GACjBwG,AAhDG,IAAI,CAgDFtG,GAAG,GAAKsG,AAhDV,IAAI,CAgDWxG,GAAG,CAKrB+Q,EAAU8C,QAAQ,CAAC,EAAG,IAGtBzT,EAAQ,AAACoG,CAAAA,AAxDN,IAAI,CAwDOtG,GAAG,CAAG4S,CAAQ,EACvBE,CAAAA,EAAYF,CAAQ,EACzBzS,EAAM,AAACmG,CAAAA,AA1DJ,IAAI,CA0DKxG,GAAG,CAAG8S,CAAQ,EACrBE,CAAAA,EAAYF,CAAQ,EACrB,AAACtM,AA5DF,IAAI,CA4DGiG,KAAK,EAAI,CAACjG,AA5DjB,IAAI,CA4DkBiE,QAAQ,EAC5B,CAACjE,AA7DH,IAAI,CA6DIiG,KAAK,EAAIjG,AA7DjB,IAAI,CA6DkBiE,QAAQ,CAC7BsG,EAAU8C,QAAQ,CAACzT,EAAMC,GAIzB0Q,EAAU8C,QAAQ,CAAC,EAAIxT,EAAI,EAAID,GAG3C,CACJ,CAnJAsS,EAAcnT,OAAO,CARrB,SAASA,EAAQuI,CAAS,CAAEwM,CAAc,EAClCxV,EAAWD,EAAUU,KACrBoT,EAAY2B,EACZrO,EAAS6B,EAAW,iBAAkBmL,GACtChN,EAAS6B,EAAW,YAAawL,GACjCrN,EAAS6B,EAAW,cAAegM,GAE3C,CAqJJ,EAAGpB,GAAkBA,CAAAA,EAAgB,CAAC,CAAA,GAO/BA,CACX,GACA1U,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,kBAAkB,CAAC,CAAE,SAAUY,CAAC,SAUpFA,EAAEmM,aAAa,CA4BX,CAWpBrI,OAAQ,GAOR8R,gBAAiB,EAOjBC,mBAAoB,EAMpBC,eAAgB,CAAA,EAsBhBC,WAAY,KAAK,EAQjBrP,OAAQ,KAAK,EAMbsP,SAAU,EAEVrK,SAAU,CAAA,EASVsK,KAAM,GAINnT,OAAQ,EASRoT,mBAAoB,UAOpBC,eAAgB,EAMhBC,eAAgB,UAShBC,iBAAkB,UASlBC,sBAAuB,UASvBC,kBAAmB,UAOnBC,kBAAmB,EAMnBC,WAAY,OASZC,qBAAsB,6BAStBC,iBAAkB,UAOlBC,kBAAmB,EAOnBC,iBAAkB,CACtB,CAQJ,GACAxX,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,6BAA6B,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUkK,CAAC,CAAEtJ,CAAC,CAAE+T,CAAa,CAAE+C,CAAiB,CAAE7W,CAAC,EAU/R,IAAIuH,EAAiB8B,EAAE9B,cAAc,CACjCF,EAAWrH,EAAEqH,QAAQ,CAAE8E,EAAenM,EAAEmM,YAAY,CAAEpL,EAAUf,EAAEe,OAAO,CAAE+V,EAA0B9W,EAAE8W,uBAAuB,CAAEC,EAAY/W,EAAE+W,SAAS,CAAE9V,EAAQjB,EAAEiB,KAAK,CAAEoL,EAAOrM,EAAEqM,IAAI,CAAE2K,EAAchX,EAAEgX,WAAW,CAkBpNjD,EAA2B,WAM3B,SAASA,EAAUtR,CAAQ,CAAEf,CAAO,CAAEI,CAAK,EAMvC,IAAI,CAACmV,OAAO,CAAG,EAAE,CACjB,IAAI,CAACC,MAAM,CAAG,EACd,IAAI,CAACC,MAAM,CAAG,EACd,IAAI,CAAC3V,IAAI,CAAG,EACZ,IAAI,CAAC4V,gBAAgB,CAAG,EAAE,CAC1B,IAAI,CAACC,aAAa,CAAG,EACrB,IAAI,CAACC,oBAAoB,CAAG,EAC5B,IAAI,CAACC,YAAY,CAAG,EACpB,IAAI,CAAC9C,IAAI,CAAG,EACZ,IAAI,CAAChT,EAAE,CAAG,EACV,IAAI,CAACmV,gBAAgB,CAAG,EACxB,IAAI,CAACxW,CAAC,CAAG,EACT,IAAI,CAACC,CAAC,CAAG,EACT,IAAI,CAACsB,IAAI,CAACc,EAAUf,EAASI,EACjC,CA4kBA,OAtkBAiS,EAAUpT,OAAO,CAAG,SAAUuI,CAAS,EACnC4K,EAAcnT,OAAO,CAACuI,EAAW6K,EACrC,EAkBAA,EAAUyD,MAAM,CAAG,SAAUlY,CAAI,CAAEqV,CAAQ,EAcvC,OAbIA,GACArV,EAAKmY,OAAO,CAAC,SAAUC,CAAG,EAGtB,IAAK,IADDC,EADAC,EAAMF,EAAItT,MAAM,CAEXgH,EAAI,EAAGA,EAAIwM,EAAKxM,GAAK,EAEN,UAAhB,MADJuM,CAAAA,EAAOD,CAAG,CAACtM,EAAI,EAAE,AAAD,IAEZsM,CAAG,CAACtM,EAAI,EAAE,CAAGsM,CAAG,CAACtM,EAAI,EAAE,CACvBsM,CAAG,CAACtM,EAAI,EAAE,CAAGuM,EAGzB,GAEGrY,CACX,EAYAyU,EAAUjT,SAAS,CAAC+W,SAAS,CAAG,WAC5B,IAAIC,EAAe,IAAI,CAACpW,OAAO,CAACkQ,QAAQ,CAAG,CAAC,EAAG,EAAE,CAAG,CAAC,EAAG,EAAE,CAAEmG,EAAU,IAAI,CAACX,gBAAgB,CAAEY,EAAM,IAAI,CAACC,cAAc,CAACC,OAAO,CAAEC,EAAQ,IAAI,CAACA,KAAK,CAACD,OAAO,CAAEE,EAAmB,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,EAAGC,EAAmB,IAAI,CAACA,gBAAgB,CAACD,IAAI,CAAC,IAAI,EAAGE,EAAiB,IAAI,CAACA,cAAc,CAACF,IAAI,CAAC,IAAI,EAEhTpB,EAAU,CACV,CACIc,CAAO,CAACD,CAAY,CAAC,EAAE,CAAC,CAACI,OAAO,CAChC,QACA,IAAI,CAACM,gBAAgB,CAACH,IAAI,CAAC,IAAI,EAClC,CACD,CACIN,CAAO,CAACD,CAAY,CAAC,EAAE,CAAC,CAACI,OAAO,CAChC,QACA,IAAI,CAACO,gBAAgB,CAACJ,IAAI,CAAC,IAAI,EAClC,CACD,CAACF,EAAO,QAAS,IAAI,CAACO,UAAU,CAACL,IAAI,CAAC,IAAI,EAAE,CAC5C,CAACL,EAAK,YAAaI,EAAiB,CACpC,CAACJ,EAAIW,aAAa,CAAE,YAAaL,EAAiB,CAClD,CAACN,EAAIW,aAAa,CAAE,UAAWJ,EAAe,CACjD,AAEGxY,CAAAA,EAAE6Y,QAAQ,EACV3B,EAAQxO,IAAI,CAAC,CAACuP,EAAK,aAAcI,EAAiB,CAAE,CAACJ,EAAIW,aAAa,CAAE,YAAaL,EAAiB,CAAE,CAACN,EAAIW,aAAa,CAAE,WAAYJ,EAAe,EAG3JtB,EAAQQ,OAAO,CAAC,SAAUlY,CAAI,EAC1B8H,EAAS3H,KAAK,CAAC,KAAMH,EACzB,GACA,IAAI,CAAC0X,OAAO,CAAGA,CACnB,EACAlD,EAAUjT,SAAS,CAAC2X,gBAAgB,CAAG,SAAU/L,CAAC,EAE9C,IAAIQ,EAAS,AAAC4F,CAAAA,AADC,IAAI,CACIrR,EAAE,CAAGqR,AADb,IAAI,CACkBtR,IAAI,AAAD,EACpC6K,EAAKyG,AAFM,IAAI,CAEDpR,OAAO,CAACsU,IAAI,CAAE,IAChClD,AAHe,IAAI,CAGV+F,cAAc,CAAC/F,AAHT,IAAI,CAGctR,IAAI,CAAG0L,EAAO4F,AAHhC,IAAI,CAGqCrR,EAAE,CAAGyL,GAC7D6J,EAJe,IAAI,CAIC,UAAW,CAC3BvV,KAAMsR,AALK,IAAI,CAKAtR,IAAI,CACnBC,GAAIqR,AANO,IAAI,CAMFrR,EAAE,CACfqX,QAAS,YACTC,SAAUrM,CACd,EACJ,EACAqH,EAAUjT,SAAS,CAAC0X,gBAAgB,CAAG,SAAU9L,CAAC,EAE9C,IAAIQ,EAAQf,EAAa2G,AADV,IAAI,CACerR,EAAE,CAAGqR,AADxB,IAAI,CAC6BtR,IAAI,EAChD6K,EAAKyG,AAFM,IAAI,CAEDpR,OAAO,CAACsU,IAAI,CAAE,IAChClD,AAHe,IAAI,CAGV+F,cAAc,CAAC1M,EAAa2G,AAHtB,IAAI,CAG2BtR,IAAI,CAAG0L,GAAQf,EAAa2G,AAH3D,IAAI,CAGgErR,EAAE,CAAGyL,IACxF6J,EAJe,IAAI,CAIC,UAAW,CAC3BvV,KAAMsR,AALK,IAAI,CAKAtR,IAAI,CACnBC,GAAIqR,AANO,IAAI,CAMFrR,EAAE,CACfqX,QAAS,YACTC,SAAUrM,CACd,EACJ,EAaAqH,EAAUjT,SAAS,CAACkY,yBAAyB,CAAG,SAAUC,CAAe,EACrE,IAAqBvX,EAAUoR,AAAhB,IAAI,CAAqBpR,OAAO,CAAEwX,EAAqBxX,EAAQqU,QAAQ,CAAGjD,AAA1E,IAAI,CAA+EqG,eAAe,CAC7GzX,EAAQqU,QAAQ,CAChB,EACJ,MAAO,CACHmB,OAAQ,AAAC+B,CAAAA,EAAgB/B,MAAM,CAAGpE,AAJvB,IAAI,CAI4B1S,CAAC,CACxC0S,AALO,IAAI,CAKFsG,OAAO,AAAD,EACdtG,CAAAA,AANM,IAAI,CAMDuG,QAAQ,CAAGH,CAAiB,EAC1C/B,OAAQ,AAAC8B,CAAAA,EAAgB9B,MAAM,CAAGrE,AAPvB,IAAI,CAO4BzS,CAAC,CACxCyS,AARO,IAAI,CAQFwG,OAAO,AAAD,EACdxG,CAAAA,AATM,IAAI,CASDuG,QAAQ,CAAGH,CAAiB,CAC9C,CACJ,EAOAnF,EAAUjT,SAAS,CAACqG,OAAO,CAAG,WAC1B,IAAI2L,EAAW,IAAI,CAAE7H,EAAY6H,EAAShR,KAAK,CAACgR,QAAQ,CAExDA,EAASyG,YAAY,GAErB,CACI,QACA,kBACA,YACA,iBACA,QACH,CAAC9B,OAAO,CAAC,SAAU+B,CAAI,EAChB1G,CAAQ,CAAC0G,EAAK,EAAI1G,CAAQ,CAAC0G,EAAK,CAACrS,OAAO,EACxC2L,CAAAA,CAAQ,CAAC0G,EAAK,CAAG1G,CAAQ,CAAC0G,EAAK,CAACrS,OAAO,EAAC,CAEhD,GAEI8D,GAAa6H,IAAa7H,EAAUkH,SAAS,GAC7ClH,EAAUkH,SAAS,CAAG,KAEtB2E,EAAwB7L,EAAUmM,gBAAgB,EAE1D,EASArD,EAAUjT,SAAS,CAAC2Y,mBAAmB,CAAG,SAAUnF,CAAK,EACrD,IAAqB7R,EAAWqQ,AAAjB,IAAI,CAAsBrQ,QAAQ,CAAE2U,EAAmBtE,AAAvD,IAAI,CAA4DsE,gBAAgB,CAAE1V,EAAUoR,AAA5F,IAAI,CAAiGpR,OAAO,CAAE+S,EAAO3B,AAArH,IAAI,CAA0H2B,IAAI,CAAEjS,EAAQC,EAASC,CAAC,GAAGI,GAAG,CAACgQ,AAA7J,IAAI,CAAkKtQ,KAAK,EAE1L,GADA4U,EAAiB3O,IAAI,CAACjG,GAClBd,EAAQmU,cAAc,CAAE,CAExB,IAAI6D,EAAOjX,EAASiX,IAAI,GACnB/W,QAAQ,CAAC,+BACTG,GAAG,CAACN,EAEJsQ,CARM,IAAI,CAQDhR,KAAK,CAACK,UAAU,EAC1BuX,EAAK9W,IAAI,CAAC,CACNkC,OAAQpD,EAAQ4U,iBAAiB,CACjC,eAAgB5U,EAAQ6U,iBAAiB,CACzC3R,KAAMlD,EAAQ2U,qBAAqB,AACvC,GAGJqD,EAAK9W,IAAI,CAAC8W,EAAKC,KAAK,CAAC,CACjBvZ,EAAG,IACHC,EAAG,IAEHuD,MAAO6Q,EAAO,EACd5Q,OAAQ4Q,EAAO,EACfmF,EAAGlY,EAAQkU,kBAAkB,AACjC,EAAG8D,EAAKG,WAAW,KAEnB,IAAI1Z,EAAQsC,EACPnD,IAAI,CAACyU,EAAUyD,MAAM,CAAC,CAAC,CACpB,IACA/C,EAAO,EAAKH,CAAAA,EAAQ,GAAK,CAAA,EACzBG,EAAO,EAAI,EACd,CAAE,CACC,IACAA,EAAO,EAAKH,CAAAA,EAAQ,GAAK,CAAA,EACzBG,EAAO,EAAI,EACd,CAAE,CACC,IACAA,EAAO,EAAKH,CAAAA,EAAQ,EAAI,EAAC,EACzBG,EAAO,EACV,CAAC,CAAE/S,EAAQiT,QAAQ,GACnBhS,QAAQ,CAAC,8BACTG,GAAG,CAACsU,CAAgB,CAAC9C,EAAM,CAC3BxB,CAzCM,IAAI,CAyCDhR,KAAK,CAACK,UAAU,EAC1BhC,EAAMyC,IAAI,CAAC,CACPgC,KAAMlD,EAAQ0U,gBAAgB,AAClC,EAER,CACJ,EAQArC,EAAUjT,SAAS,CAACa,IAAI,CAAG,SAAUc,CAAQ,CAAEf,CAAO,CAAEI,CAAK,EAEzDgR,AADe,IAAI,CACVsE,gBAAgB,CAAG,EAAE,CAC9BtE,AAFe,IAAI,CAEVrQ,QAAQ,CAAGA,EACpBqQ,AAHe,IAAI,CAGVtI,WAAW,CAAG9I,EACvBoR,AAJe,IAAI,CAIVpR,OAAO,CAAGT,EAAM4V,EAAmBtP,EAAe4K,SAAS,CAAEzQ,GACtEoR,AALe,IAAI,CAKVpR,OAAO,CAAC+E,MAAM,CAAG4F,EAAKyG,AALhB,IAAI,CAKqBpR,OAAO,CAAC+E,MAAM,CAAE,IACxDqM,AANe,IAAI,CAMVhR,KAAK,CAAGA,EAEjBgR,AARe,IAAI,CAQV2B,IAAI,CAAGpI,EAAKyG,AARN,IAAI,CAQWpR,OAAO,CAAC+S,IAAI,CAAE3B,AAR7B,IAAI,CAQkCpR,OAAO,CAACmC,MAAM,EAE/DnC,EAAQyC,OAAO,GACf2O,AAXW,IAAI,CAWNlM,MAAM,GACfkM,AAZW,IAAI,CAYN+E,SAAS,GAE1B,EACA9D,EAAUjT,SAAS,CAACsX,gBAAgB,CAAG,SAAU1L,CAAC,EAC9C,IAAqBuM,EAAkBnG,AAAxB,IAAI,CAA6BhR,KAAK,CAACgY,OAAO,CAACC,SAAS,CAACrN,GAAIsN,EAAgBlH,AAA7E,IAAI,CAAkFkG,yBAAyB,CAACC,EAC/HnG,CADe,IAAI,CACVoE,MAAM,CAAG8C,EAAc9C,MAAM,CACtCpE,AAFe,IAAI,CAEVqE,MAAM,CAAG6C,EAAc7C,MAAM,CACtCrE,AAHe,IAAI,CAGVmH,aAAa,CAAG,CAACnH,AAHX,IAAI,CAGgBtR,IAAI,CAAEsR,AAH1B,IAAI,CAG+BrR,EAAE,CAAC,CACrDqR,AAJe,IAAI,CAIVoH,aAAa,CAAG,CAAA,CAC7B,EAKAnG,EAAUjT,SAAS,CAACwX,gBAAgB,CAAG,SAAU5L,CAAC,EAC9C,IAEmCyN,EAFdlB,EAAkBnG,AAAxB,IAAI,CAA6BhR,KAAK,CAACgY,OAAO,CAACC,SAAS,CAACrN,GAAgC0N,EAAY1Y,AAA9BoR,AAAvE,IAAI,CAA4EpR,OAAO,CAAsBiT,QAAQ,CAChI,SAAW,SAAUsF,EAAgBnH,AAD1B,IAAI,CAC+BmH,aAAa,EAAI,EAAE,AAKjEnH,CANW,IAAI,CAMNoH,aAAa,EAErB,CAAA,CAACxN,EAAE2N,OAAO,EAAI3N,AAA4B,IAA5BA,EAAE2N,OAAO,CAAC,EAAE,CAACD,EAAU,AAAK,IAG3CD,EAASG,AAFOxH,AATL,IAAI,CASUkG,yBAAyB,CAACC,EAAgB,CAACmB,EAAU,CAC7DtH,AAVN,IAAI,AAUU,CAACsH,EAAU,CAEpCtH,AAZW,IAAI,CAYNyH,UAAU,CAAG,CAAA,EACtBzH,AAbW,IAAI,CAaN+F,cAAc,CAACoB,CAAa,CAAC,EAAE,CAAGE,EAAQF,CAAa,CAAC,EAAE,CAAGE,GAClErH,AAdO,IAAI,CAcFyH,UAAU,EACnBxD,EAfO,IAAI,CAeS,UAAW,CAC3BvV,KAAMsR,AAhBH,IAAI,CAgBQtR,IAAI,CACnBC,GAAIqR,AAjBD,IAAI,CAiBMrR,EAAE,CACfqX,QAAS,YACT/D,QAASrI,EAAEnJ,IAAI,CACfwV,SAAUrM,CACd,GAGZ,EAKAqH,EAAUjT,SAAS,CAACyX,cAAc,CAAG,SAAU7L,CAAC,EAExCoG,AADW,IAAI,CACNyH,UAAU,EACnBxD,EAFW,IAAI,CAEK,UAAW,CAC3BvV,KAAMsR,AAHC,IAAI,CAGItR,IAAI,CACnBC,GAAIqR,AAJG,IAAI,CAIErR,EAAE,CACfqX,QAAS,YACT/D,QAASrI,EAAEnJ,IAAI,CACfwV,SAAUrM,CACd,GAEJoG,AAVe,IAAI,CAUVoH,aAAa,CAClBpH,AAXW,IAAI,CAWNyH,UAAU,CACfzH,AAZO,IAAI,CAYFoE,MAAM,CACXpE,AAbG,IAAI,CAaEqE,MAAM,CAAG,IAClC,EAgBApD,EAAUjT,SAAS,CAACyU,QAAQ,CAAG,SAAUnV,CAAC,CAAEC,CAAC,CAAEuD,CAAK,CAAEC,CAAM,EACxD,IAAqBnC,EAAUoR,AAAhB,IAAI,CAAqBpR,OAAO,CAAEmU,EAAiBnU,EAAQmU,cAAc,CAAExK,EAAK3J,EAAQ+E,MAAM,CAAEA,EAAS4E,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIsJ,EAAWjT,EAAQiT,QAAQ,CAAE6F,EAAS1H,AAAvK,IAAI,CAA4K2H,QAAQ,CAAG,UAAY,OAClNrB,EAAUvV,EAAQyV,EAAU,EAEhCxG,AAHe,IAAI,CAGVtQ,KAAK,CAACkY,IAAI,GACnB5H,AAJe,IAAI,CAIV1S,CAAC,CAAGA,EACb0S,AALe,IAAI,CAKVzS,CAAC,CAAGA,EAAI,IAAI,CAACuW,gBAAgB,CACtC9D,AANe,IAAI,CAMVlP,KAAK,CAAGA,EACjBkP,AAPe,IAAI,CAOVjP,MAAM,CAAGA,EAClBiP,AARe,IAAI,CAQVsG,OAAO,CAAGA,EACnBtG,AATe,IAAI,CASVwG,OAAO,CAAGA,EAEf3E,GACA7B,AAZW,IAAI,CAYNlP,KAAK,CAAGkP,AAZN,IAAI,CAYWwG,OAAO,CAAG1V,EAAQ0V,EAAUxG,AAZ3C,IAAI,CAYgD2B,IAAI,CACnE3B,AAbW,IAAI,CAaNsG,OAAO,CAAGA,EAAU,EAC7BtG,AAdW,IAAI,CAcNwG,OAAO,CAAGA,EAAUzD,EAAiB/C,AAdnC,IAAI,CAcwC2B,IAAI,CAAG,EAE9D3B,AAhBW,IAAI,CAgBNuG,QAAQ,CAAGxV,EAAUgS,CAAAA,EAAiBjS,AAAQ,EAARA,EAAY,CAAA,EAC3DkP,AAjBW,IAAI,CAiBN1S,CAAC,CAAGA,GAAQqG,IAGrBqM,AApBW,IAAI,CAoBNjP,MAAM,CAAGA,EAASiP,AApBhB,IAAI,CAoBqB2B,IAAI,CACxC3B,AArBW,IAAI,CAqBNsG,OAAO,CAAGA,EAAUvD,EAAiB/C,AArBnC,IAAI,CAqBwC2B,IAAI,CAAG,EAE9D3B,AAvBW,IAAI,CAuBNuG,QAAQ,CAAGzV,EAASiS,CAAAA,EAAiBhS,AAAS,EAATA,EAAa,CAAA,EAC3DiP,AAxBW,IAAI,CAwBNzS,CAAC,CAAGyS,AAxBF,IAAI,CAwBOzS,CAAC,CAAGoG,GAG9BqM,AA3Be,IAAI,CA2BVtQ,KAAK,CAACgY,EAAO,CAAC,CACnBG,WAAYva,EACZwa,WAAY9H,AA7BD,IAAI,CA6BMzS,CAAC,AAC1B,GAEAyS,AAhCe,IAAI,CAgCVqF,KAAK,CAACqC,EAAO,CAAC,CACnB5W,MAAOA,EACPC,OAAQA,CACZ,GAEAiP,AArCe,IAAI,CAqCVsE,gBAAgB,CAAC,EAAE,CAACoD,EAAO,CAAC,CACjCG,WAAYhG,EAAW,EAAI/Q,EAAQwV,EACnCwB,WAAYjG,EAAW9Q,EAASyV,EAAU,CAC9C,EACJ,EAOAvF,EAAUjT,SAAS,CAACyY,YAAY,CAAG,WAC/B,IAAI,CAACtC,OAAO,CAACQ,OAAO,CAAC,SAAUlY,CAAI,EAC/ByX,EAAYtX,KAAK,CAAC,KAAMH,EAC5B,GACA,IAAI,CAAC0X,OAAO,CAAC7S,MAAM,CAAG,CAC1B,EAOA2P,EAAUjT,SAAS,CAAC8F,MAAM,CAAG,WACzB,IAAqBnE,EAAWqQ,AAAjB,IAAI,CAAsBrQ,QAAQ,CAAEf,EAAUoR,AAA9C,IAAI,CAAmDpR,OAAO,CAAE+S,EAAO3B,AAAvE,IAAI,CAA4E2B,IAAI,CAAEtS,EAAa2Q,AAAnG,IAAI,CAAwGhR,KAAK,CAACK,UAAU,CAAEK,EAAQC,EAASC,CAAC,CAAC,aAC3JE,IAAI,CAAC,CACNC,OAAQnB,EAAQmB,MAAM,AAC1B,GACKgY,IAAI,GACJ/X,GAAG,EAERgQ,CAPe,IAAI,CAOVtQ,KAAK,CAAGA,EAEjBsQ,AATe,IAAI,CASVqF,KAAK,CAAG1V,EAASiX,IAAI,GACzB/W,QAAQ,CAAC,8BACTC,IAAI,CAAC,CACNgX,EAAGlY,EAAQiV,iBAAiB,EAAI,EAChC9S,OAAQ4Q,EACR7Q,MAAO6Q,CACX,GAAG3R,GAAG,CAACN,GACFL,GACD2Q,AAjBW,IAAI,CAiBNqF,KAAK,CAACvV,IAAI,CAAC,CAChBgC,KAAMlD,EAAQ+U,oBAAoB,CAClC3R,OAAQpD,EAAQgV,gBAAgB,CAChC,eAAgBhV,EAAQkV,gBAAgB,AAC5C,GAEJ,IAAIA,EAAmB9D,AAvBR,IAAI,CAuBa8D,gBAAgB,CAC5C9D,AAxBW,IAAI,CAwBNqF,KAAK,CAAC0B,WAAW,GAC9B/G,AAzBe,IAAI,CAyBVqF,KAAK,CAACvV,IAAI,CAAC,CAChBxC,EAAG,CAACwW,EAAmB,EAAI,EAC3BvW,EAAG,CAACuW,EAAmB,EAAI,CAC/B,GAEA9D,AA9Be,IAAI,CA8BVmF,cAAc,CAAGxV,EAASC,CAAC,GAAGI,GAAG,CAACN,GAC3CsQ,AA/Be,IAAI,CA+BVX,SAAS,CAAG1P,EAASiX,IAAI,GAC7B/W,QAAQ,CAAC,8BACTC,IAAI,CAAC,CACNiB,OAAQ4Q,EAAOmC,EACfhT,MAAO6Q,EAAOmC,EACdgD,EAAGlY,EAAQiU,eAAe,EAAI,CAClC,GAAG7S,GAAG,CAACgQ,AArCQ,IAAI,CAqCHmF,cAAc,EAC9BnF,AAtCe,IAAI,CAsCVgI,eAAe,CAAGrY,EACtBnD,IAAI,CAACyU,EAAUyD,MAAM,CAAC,CACvB,CAAC,IAAK,GAAI/C,EAAO,EAAE,CACnB,CAAC,IAAK,GAAI,EAAIA,EAAO,EAAE,CACvB,CAAC,IAAK,EAAGA,EAAO,EAAE,CAClB,CAAC,IAAK,EAAG,EAAIA,EAAO,EAAE,CACtB,CAAC,IAAK,EAAGA,EAAO,EAAE,CAClB,CAAC,IAAK,EAAG,EAAIA,EAAO,EAAE,CACzB,CAAE/S,EAAQiT,QAAQ,GACdhS,QAAQ,CAAC,+BACTG,GAAG,CAACgQ,AAhDM,IAAI,CAgDDmF,cAAc,EAC3B9V,IACD2Q,AAlDW,IAAI,CAkDNX,SAAS,CAACvP,IAAI,CAAC,CACpBgC,KAAMlD,EAAQuU,kBAAkB,CAChCnR,OAAQpD,EAAQyU,cAAc,CAC9B,eAAgBzU,EAAQwU,cAAc,AAC1C,GACApD,AAvDW,IAAI,CAuDNgI,eAAe,CAAClY,IAAI,CAAC,CAC1BkC,OAAQpD,EAAQ8U,UAAU,CAC1B,eAAgB,CACpB,IAEJ1D,AA5De,IAAI,CA4DVwE,oBAAoB,CAAGxE,AA5DjB,IAAI,CA4DsBX,SAAS,CAAC0H,WAAW,GAC9D/G,AA7De,IAAI,CA6DVmF,cAAc,CAACjV,SAAS,CAAC,CAAC8P,AA7DpB,IAAI,CA6DyBwE,oBAAoB,CAAG,EAAI,EAAG,CAACxE,AA7D5D,IAAI,CA6DiEwE,oBAAoB,CAAG,EAAI,GAE/GxE,AA/De,IAAI,CA+DV2G,mBAAmB,CAAC,GAC7B3G,AAhEe,IAAI,CAgEV2G,mBAAmB,CAAC,EACjC,EAWA1F,EAAUjT,SAAS,CAACmU,QAAQ,CAAG,SAAUzT,CAAI,CAAEC,CAAE,EAC7C,IAOIsZ,EAAQC,EAPStZ,EAAUoR,AAAhB,IAAI,CAAqBpR,OAAO,CAAEiT,EAAWjT,EAAQiT,QAAQ,CAAEoB,EAAWrU,EAAQqU,QAAQ,CAAEkF,EAAYnI,AAAxG,IAAI,CAA6GuG,QAAQ,CAAEmB,EAAS,AAAC,CAAA,IAAI,CAACC,QAAQ,EAC5J,IAAI,CAACF,UAAU,EACd,IAAI,CAACzY,KAAK,CAACmJ,SAAS,EAAI,IAAI,CAACnJ,KAAK,CAACmJ,SAAS,CAACsP,UAAU,CAAiB,OAAZ,UAClE,GAAKxZ,EAAQka,IAGb,IAAIC,EAAOD,EAAY5Z,KAAKC,GAAG,CAACG,EAAI,GAGpCsZ,EAAS1Z,KAAK2F,IAAI,CAACiU,EADnBzZ,CAAAA,EAAOH,KAAKD,GAAG,CAACI,EAAM,EAAC,GAEvBsR,AAVe,IAAI,CAUVqG,eAAe,CAAG6B,EAAU7O,EAAa+O,EAAOH,GAErDC,EAAUjF,IACVgF,EAAS,AAACE,CAAAA,EAAYlF,EAAWiF,CAAM,EAAKxZ,EAC5CwZ,EAAUjF,GAEd,IAAIoF,EAAS9Z,KAAK+Z,KAAK,CAACL,EAASjI,AAhBlB,IAAI,CAgBuBsG,OAAO,CAAGtG,AAhBrC,IAAI,CAgB0CwG,OAAO,EAChE+B,EAAeL,EAAU,EAAI,EAEjClI,CAnBe,IAAI,CAmBVtR,IAAI,CAAGA,EAChBsR,AApBe,IAAI,CAoBVrR,EAAE,CAAGA,EACTkT,GAcD7B,AAnCW,IAAI,CAmCNmF,cAAc,CAACuC,EAAO,CAAC,CAC5BI,WAAYO,CAChB,GACArI,AAtCW,IAAI,CAsCNX,SAAS,CAACqI,EAAO,CAAC,CACvB3W,OAAQmX,CACZ,GACAlI,AAzCW,IAAI,CAyCNgI,eAAe,CAACN,EAAO,CAAC,CAC7BI,WAAYS,CAChB,GACAvI,AA5CW,IAAI,CA4CNyE,YAAY,CAAG4D,EACxBrI,AA7CW,IAAI,CA6CNuE,aAAa,CAAG,IAvBzBvE,AAtBW,IAAI,CAsBNmF,cAAc,CAACuC,EAAO,CAAC,CAC5BG,WAAYQ,CAChB,GACArI,AAzBW,IAAI,CAyBNX,SAAS,CAACqI,EAAO,CAAC,CACvB5W,MAAOoX,CACX,GACAlI,AA5BW,IAAI,CA4BNgI,eAAe,CAACN,EAAO,CAAC,CAC7BG,WAAYU,CAChB,GACAvI,AA/BW,IAAI,CA+BNuE,aAAa,CAAG8D,EACzBrI,AAhCW,IAAI,CAgCNyE,YAAY,CAAG,GAexByD,GAAW,GACXlI,AAhDW,IAAI,CAgDNgI,eAAe,CAACD,IAAI,GAG7B/H,AAnDW,IAAI,CAmDNgI,eAAe,CAACJ,IAAI,GAGR,CAAA,IAArBhZ,EAAQ4Z,QAAQ,GACZ9Z,GAAQ,GAAKC,GAAM,EACnBqR,AAxDO,IAAI,CAwDFtQ,KAAK,CAACqY,IAAI,GAGnB/H,AA3DO,IAAI,CA2DFtQ,KAAK,CAACkY,IAAI,IAG3B5H,AA9De,IAAI,CA8DV2H,QAAQ,CAAG,CAAA,EACxB,EAQA1G,EAAUjT,SAAS,CAACgU,oBAAoB,CAAG,SAAUyG,CAAS,EAC1D,OAAQlP,EAAK,IAAI,CAAC3K,OAAO,CAACoU,UAAU,CAAE/V,EAAEyb,GAAG,EACvC,CAACzb,EAAEmM,aAAa,EAChB,CAAC,IAAI,CAACpK,KAAK,CAAC2Z,OAAO,GAEnBF,AAAc,YAAdA,GACAA,AAAc,aAAdA,GAEA,CAACxa,EAAQwa,EACjB,EACAxH,EAAUjT,SAAS,CAAC4X,UAAU,CAAG,SAAUhM,CAAC,EAExC,IAAIuM,EAAkBnG,AADP,IAAI,CACYhR,KAAK,CAACgY,OAAO,CAACC,SAAS,CAACrN,GAAIQ,EAAQ4F,AADpD,IAAI,CACyDrR,EAAE,CAAGqR,AADlE,IAAI,CACuEtR,IAAI,CAAEwQ,EAAMc,AADvF,IAAI,CAC4FzS,CAAC,CAAGyS,AADpG,IAAI,CACyGyE,YAAY,CAAE1F,EAAOiB,AADlI,IAAI,CACuI1S,CAAC,CAAG0S,AAD/I,IAAI,CACoJuE,aAAa,AAChL,AAACvE,CAFU,IAAI,CAELpR,OAAO,CAACiT,QAAQ,EAAIsE,EAAgB9B,MAAM,CAAGnF,GACtD,CAACc,AAHS,IAAI,CAGJpR,OAAO,CAACiT,QAAQ,EAAIsE,EAAgB/B,MAAM,CAAGrF,EAExDiB,AALW,IAAI,CAKN+F,cAAc,CAAC/F,AALb,IAAI,CAKkBtR,IAAI,CAAG0L,EAAO4F,AALpC,IAAI,CAKyCrR,EAAE,CAAGyL,GAI7D4F,AATW,IAAI,CASN+F,cAAc,CAAC/F,AATb,IAAI,CASkBtR,IAAI,CAAG0L,EAAO4F,AATpC,IAAI,CASyCrR,EAAE,CAAGyL,GAEjE6J,EAXe,IAAI,CAWC,UAAW,CAC3BvV,KAAMsR,AAZK,IAAI,CAYAtR,IAAI,CACnBC,GAAIqR,AAbO,IAAI,CAaFrR,EAAE,CACfqX,QAAS,YACTC,SAAUrM,CACd,EACJ,EAQAqH,EAAUjT,SAAS,CAAC4a,MAAM,CAAG,SAAUha,CAAO,EAC1C,IAAI,CAACyF,OAAO,GACZ,IAAI,CAACxF,IAAI,CAAC,IAAI,CAACG,KAAK,CAACW,QAAQ,CAAExB,EAAM,CAAA,EAAM,IAAI,CAACS,OAAO,CAAEA,GAAU,IAAI,CAACI,KAAK,CACjF,EASAiS,EAAUjT,SAAS,CAAC+X,cAAc,CAAG,SAAUrX,CAAI,CAAEC,CAAE,EAC/CA,EAAK,IACLD,EAAO2K,EAAa,EAAIA,EAAa1K,EAAKD,IAC1CC,EAAK,GAELD,EAAO,IACPC,EAAK0K,EAAa1K,EAAKD,GACvBA,EAAO,GAEX,IAAI,CAACA,IAAI,CAAGA,EACZ,IAAI,CAACC,EAAE,CAAGA,CACd,EAMAsS,EAAUxM,cAAc,CAAGsP,EACpB9C,CACX,IAaA,OAPAxM,EAAe4K,SAAS,CAAGlR,EAAM,CAAA,EAAM8S,EAAUxM,cAAc,CAAEA,EAAe4K,SAAS,EAOlF4B,CACX,GACA3U,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwc,CAAI,CAAEtS,CAAC,CAAEtJ,CAAC,CAAEyM,CAAsB,CAAEoP,CAAoB,CAAE7H,CAAS,CAAE/T,CAAC,EAUnZ,IAAIuH,EAAiB8B,EAAE9B,cAAc,CACjCqR,EAAW7Y,EAAE6Y,QAAQ,CAAE1M,EAAgBnM,EAAEmM,aAAa,CACtD7E,EAAWrH,EAAEqH,QAAQ,CAAEwU,EAAQ7b,EAAE6b,KAAK,CAAE1P,EAAenM,EAAEmM,YAAY,CAAEpL,EAAUf,EAAEe,OAAO,CAAE+V,EAA0B9W,EAAE8W,uBAAuB,CAAEgF,EAAQ9b,EAAE8b,KAAK,CAAEzK,EAASrR,EAAEqR,MAAM,CAAE0K,EAAO/b,EAAE+b,IAAI,CAAEhF,EAAY/W,EAAE+W,SAAS,CAAE3M,EAAUpK,EAAEoK,OAAO,CAAEgC,EAAWpM,EAAEoM,QAAQ,CAAEnL,EAAQjB,EAAEiB,KAAK,CAAEoL,EAAOrM,EAAEqM,IAAI,CAAE2K,EAAchX,EAAEgX,WAAW,CAAE3M,EAAQrK,EAAEqK,KAAK,CAYzV,SAAS2R,EAAOC,CAAO,EAEnB,IAAK,IADD1c,EAAO,EAAE,CACJ2c,EAAK,EAAGA,EAAK3R,UAAUnG,MAAM,CAAE8X,IACpC3c,CAAI,CAAC2c,EAAK,EAAE,CAAG3R,SAAS,CAAC2R,EAAG,CAFhC,IAIIC,EAAU,EAAE,CAACC,MAAM,CAACnT,IAAI,CAAC1J,EAAM6M,GACnC,GAAI+P,EAAQ/X,MAAM,CACd,OAAO/C,IAAI,CAAC4a,EAAQ,CAACvc,KAAK,CAAC,EAAGyc,EAEtC,CAm0CA,OAnzC+B,WAM3B,SAASE,EAAUva,CAAK,EACpB,IAAI,CAAC4P,eAAe,CAAG,EACvB,IAAI,CAAC/P,IAAI,CAACG,EACd,CAkyCA,OA5xCAua,EAAU1b,OAAO,CAAG,SAAUuI,CAAS,CAAEuK,CAAU,CAAEE,CAAW,EAC5DiI,EAAqBjb,OAAO,CAACuI,EAAWuK,EAAY4I,EAAW1I,EACnE,EAwBA0I,EAAUvb,SAAS,CAACwb,UAAU,CAAG,SAAUlc,CAAC,CAAEkU,CAAK,CAAE1C,CAAQ,CAAE2K,CAAI,EAC/D,IAAsB1Y,EAASoH,AAAf,IAAI,CAAqBgH,gBAAgB,CAACzD,OAAO,CAAC3K,MAAM,CAExEoH,AAFgB,IAAI,CAEVuD,OAAO,CAAC8F,EAAM,CAACiI,EAAK,CAAC3K,EAAW,CACtC+I,WAAYtZ,KAAKyP,KAAK,CAAC7F,AAHX,IAAI,CAGiB4G,IAAI,CAAG5G,AAH5B,IAAI,CAGkCpH,MAAM,CAAG,GAC3D+W,WAAYvZ,KAAKyP,KAAK,CAAC7F,AAJX,IAAI,CAIiB+G,GAAG,CAAGwK,SAASpc,EAAG,IAAM,GAAMyD,EACnE,EAAI,CACA8W,WAAYtZ,KAAKyP,KAAK,CAAC7F,AANX,IAAI,CAMiB4G,IAAI,CAAG2K,SAASpc,EAAG,KACpDwa,WAAYvZ,KAAKyP,KAAK,CAAC7F,AAPX,IAAI,CAOiB+G,GAAG,CAAG/G,AAP3B,IAAI,CAOiCpH,MAAM,CAAG,EAAIA,EAAS,EAAI,EAC/E,EACJ,EAmBAwY,EAAUvb,SAAS,CAAC2b,WAAW,CAAG,SAAUC,CAAS,CAAEC,CAAS,CAAE/K,CAAQ,CAAE2K,CAAI,EAC5E,IAE2BK,EAAatd,EAFlBiP,EAAatD,AAAnB,IAAI,CAAyBgH,gBAAgB,CAAC1D,UAAU,CAAEO,EAAe7D,AAAzE,IAAI,CAA+E4R,OAAO,CAAChD,WAAW,GAAIiD,EAAchO,EAAe,EAAGiO,EAAoB,AAACjO,EAAe,EAAK,EACnM6C,EAAmB1G,AADH,IAAI,CACS0G,gBAAgB,CAAEqL,EAAgB/R,AAD/C,IAAI,CACqDwJ,IAAI,CAAEwI,EAAehS,AAD9E,IAAI,CACoF+G,GAAG,CAAEnO,EAASoH,AADtG,IAAI,CAC4GpH,MAAM,CAAEqZ,EAAUD,EAAeH,EAAaK,EAAUF,EAAepZ,EACnMgO,EAAO5G,AAFK,IAAI,CAEC4G,IAAI,CACrBD,GACAgL,EAAcK,EAAeN,EAAYI,EACzCJ,EAAYM,EAAeP,EAAYK,EACvCzd,EAAO,CACH,CACI,IACAuS,EAAOhO,EACPoZ,EAAetL,EAAmBoL,EACrC,CAED,CAAC,IAAKlL,EAAOhO,EAAQ+Y,EAAY,CACjC,CAAC,IAAK/K,EAAM+K,EAAY,CACxB,CAAC,IAAK/K,EAAM8K,EAAU,CACtB,CAAC,IAAK9K,EAAOhO,EAAQ8Y,EAAU,CAC/B,CACI,IACA9K,EAAOhO,EACPoZ,EAAeD,EAAgBrL,EAClC,CACJ,CACGpD,GACAjP,EAAKmJ,IAAI,CAET,CAAC,IAAKoJ,EAAOhO,EAAQ+Y,EAAcE,EAAY,CAE/C,CACI,IACAjL,EAAOhO,EACP8Y,EAAYG,EACf,IAILjL,GAAQF,EACR+K,GAAa7K,EAAOF,EAAmBoL,EACvCJ,GAAa9K,EAAOF,EAAmBoL,EACvCzd,EAAO,CAEH,CAAC,IAAKuS,EAAMqL,EAAQ,CAEpB,CAAC,IAAKR,EAAWQ,EAAQ,CAEzB,CAAC,IAAKR,EAAWS,EAAQ,CAEzB,CAAC,IAAKR,EAAWQ,EAAQ,CAEzB,CAAC,IAAKR,EAAWO,EAAQ,CAEzB,CACI,IACArL,EAAOmL,EAAgBrL,AAAmB,EAAnBA,EACvBsL,EAAeH,EAClB,CACJ,CACGvO,GACAjP,EAAKmJ,IAAI,CAET,CAAC,IAAKiU,EAAYI,EAAaI,EAAQ,CAEvC,CAAC,IAAKP,EAAYG,EAAaI,EAAQ,GAG/CjS,AAjEgB,IAAI,CAiEV4R,OAAO,CAACN,EAAK,CAAC,CACpBnZ,EAAG9D,CACP,EACJ,EAmBA+c,EAAUvb,SAAS,CAACsc,SAAS,CAAG,SAAUV,CAAS,CAAEC,CAAS,CAAE/K,CAAQ,CAAE2K,CAAI,EAC1E,IACI1Y,EAAQD,EAAOxD,EAAGC,EADAwR,EAAO5G,AAAb,IAAI,CAAmB4G,IAAI,CAAEG,EAAM/G,AAAnC,IAAI,CAAyC+G,GAAG,CAAEqL,EAAkBpS,AAApE,IAAI,CAA0EpH,MAAM,CAIhG+N,GACAxR,EAAI,CAACyR,EAAMA,EAAMA,EAAK,CACtBxR,EAAI,CAAC2R,EAAKA,EAAM0K,EAAW1K,EAAM2K,EAAU,CAC3C/Y,EAAQ,CAACyZ,EAAiBA,EAAiBA,EAAgB,CAC3DxZ,EAAS,CACL6Y,EACAC,EAAYD,EACZzR,AAXQ,IAAI,CAWFwJ,IAAI,CAAGkI,EACpB,GAGDvc,EAAI,CAACyR,EAAMA,EAAO6K,EAAW7K,EAAO8K,EAAU,CAC9Ctc,EAAI,CAAC2R,EAAKA,EAAKA,EAAI,CACnBpO,EAAQ,CACJ8Y,EACAC,EAAYD,EACZzR,AApBQ,IAAI,CAoBFwJ,IAAI,CAAGkI,EACpB,CACD9Y,EAAS,CAACwZ,EAAiBA,EAAiBA,EAAgB,EAEhEpS,AAxBgB,IAAI,CAwBVqS,MAAM,CAAC7F,OAAO,CAAC,SAAU8F,CAAK,CAAEnS,CAAC,EACvCmS,CAAK,CAAChB,EAAK,CAAC,CACRnc,EAAGA,CAAC,CAACgL,EAAE,CACP/K,EAAGA,CAAC,CAAC+K,EAAE,CACPxH,MAAOA,CAAK,CAACwH,EAAE,CACfvH,OAAQA,CAAM,CAACuH,EAAE,AACrB,EACJ,EACJ,EAeAiR,EAAUvb,SAAS,CAAC0c,cAAc,CAAG,WACjC,IAAIvS,EAAY,IAAI,CAAEgH,EAAmBhH,EAAUgH,gBAAgB,CAAE1D,EAAa0D,EAAiB1D,UAAU,CAAEzM,EAAQmJ,EAAUnJ,KAAK,CAAE8P,EAAW9P,EAAM8P,QAAQ,CAAEnP,EAAWX,EAAMW,QAAQ,CAAEgb,EAAc,CACxMC,OAAQ9L,EAAW,YAAc,WACrC,EAEA+L,EAAiB1S,EAAU0S,cAAc,CAAGlb,EACvCC,CAAC,CAAC,aACFE,IAAI,CAAC,CACNC,OAAQ,EACR+a,WAAY,QAChB,GACK9a,GAAG,GAkCR,GAhCA,CACI,CAACyL,EACDA,EACA,CAACA,EACJ,CAACkJ,OAAO,CAAC,SAAUoG,CAAO,CAAEvJ,CAAK,EAC9B,IAAIiJ,EAAQ9a,EAASiX,IAAI,GACpB/W,QAAQ,CAAC,4BACT2R,CAAAA,AAAU,IAAVA,EAAc,UAAY,UAAS,GACnCxR,GAAG,CAAC6a,EACJ7b,CAAAA,EAAMK,UAAU,GACjBob,EAAM3a,IAAI,CAAC,CACPgC,KAAMiZ,EACF5L,EAAiBvD,QAAQ,CACzB,eACR,GACc,IAAV4F,GACAiJ,EAAMO,GAAG,CAACL,IAGlBxS,EAAUqS,MAAM,CAAChJ,EAAM,CAAGiJ,CAC9B,GAEAtS,EAAU4R,OAAO,CAAGpa,EAASnD,IAAI,GAC5BqD,QAAQ,CAAC,gCACTG,GAAG,CAAC6a,GACJ7b,EAAMK,UAAU,EACjB8I,EAAU4R,OAAO,CAACja,IAAI,CAAC,CACnB,eAAgBqP,EAAiBnD,YAAY,CAC7ChK,OAAQmN,EAAiBpD,YAAY,AACzC,GAGAoD,EAAiBzD,OAAO,EAAIyD,EAAiBzD,OAAO,CAACrK,OAAO,CAAE,CAC9D,IAAI4Z,EAAmB9L,EAAiBzD,OAAO,CAAEwP,EAAWD,EAAiBla,MAAM,CAAEoa,EAAUF,EAAiBna,KAAK,CACrH,CAAC,EAAG,EAAE,CAAC6T,OAAO,CAAC,SAAUnD,CAAK,EAC1BrJ,EAAUuD,OAAO,CAAC8F,EAAM,CAAG7R,EAASiC,MAAM,CAACqZ,EAAiBld,OAAO,CAACyT,EAAM,CAAE,CAAC2J,EAAU,EAAI,EAAG,EAAGA,EAASD,EAAUD,GAChHjc,EAAM8P,QAAQ,EACd3G,EAAUuD,OAAO,CAAC8F,EAAM,CAAC1R,IAAI,CAAC,CAC1Bc,SAAU,GACVc,gBAAiBnD,KAAK+Z,KAAK,CAAC,CAAC6C,EAAU,GACvCxZ,gBAAiB,AAACuZ,CAAAA,EAAWC,CAAM,EAAK,CAC5C,GAIJhT,EAAUuD,OAAO,CAAC8F,EAAM,CAAC1R,IAAI,CAAC,CAAEC,OAAQ,EAAIyR,CAAM,GAC7C3R,QAAQ,CAAC,2DAEV,CAAC,OAAQ,QAAQ,CAAC2R,EAAM,EAAExR,GAAG,CAAC6a,GAC7B7b,EAAMK,UAAU,EACjB8I,EAAUuD,OAAO,CAAC8F,EAAM,CACnB1R,IAAI,CAAC,CACNgC,KAAMmZ,EAAiBtP,eAAe,CACtC3J,OAAQiZ,EAAiBtS,WAAW,CACpC,eAAgBsS,EAAiB/Y,SAAS,AAC9C,GACK8Y,GAAG,CAACL,EAEjB,EACJ,CACJ,EAUApB,EAAUvb,SAAS,CAAC4a,MAAM,CAAG,SAAUha,CAAO,EAE1C,AAAC,CAAA,IAAI,CAACK,MAAM,EAAI,EAAE,AAAD,EAAG0V,OAAO,CAAC,SAAU1V,CAAM,EACpCA,EAAOmc,UAAU,EACjB,OAAOnc,EAAOmc,UAAU,CAACC,eAAe,AAEhD,GAEA,IAAI,CAAChX,OAAO,GAEZlG,EAAM,CAAA,EAAM0L,AADO,IAAI,CAAC7K,KAAK,CAACJ,OAAO,CACZuJ,SAAS,CAAEvJ,GACpC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACG,KAAK,CACxB,EAeAua,EAAUvb,SAAS,CAAC8F,MAAM,CAAG,SAAUtF,CAAG,CAAEF,CAAG,CAAEqM,CAAK,CAAEC,CAAK,EACzD,IACI0Q,EAAgB/G,EAAeE,EAA2DyF,EAAeT,EADvFza,EAAQmJ,AAAd,IAAI,CAAoBnJ,KAAK,CAAE8I,EAAQK,AAAvC,IAAI,CAA6CL,KAAK,CAAEoD,EAAapD,EAAMoD,UAAU,EAAI,EAAGqQ,EAAiBzT,EAAM2B,aAAa,CAAC+R,IAAI,CAAGxc,EAAM8I,KAAK,CAAC,EAAE,CAAGA,EAAO2T,EAAmBtT,AAAnL,IAAI,CAAyLsT,gBAAgB,CAAE9D,EAAWxP,AAA1N,IAAI,CAAgOwP,QAAQ,CAAE7I,EAAW9P,EAAM8P,QAAQ,CAAE4M,EAAW1c,EAAM8I,KAAK,CAAC,EAAE,CAAC4T,QAAQ,CAAEC,EAAW3c,EAAM8I,KAAK,CAAC,EAAE,CAAClJ,OAAO,CAAC+c,QAAQ,CAAE9M,EAAmB1G,AAA5W,IAAI,CAAkX0G,gBAAgB,CACrWD,EAAkBzG,AADnD,IAAI,CACyDyG,eAAe,CAE5F,GAAI,CAAA,IAAI,CAAC6I,UAAU,EAAKxZ,EAAQ0M,IAMhC,GAHAnM,EAAM6K,EAAa7K,EAAM0M,EAAa,GACtC5M,EAAM+K,EAAa/K,EAAM4M,EAAa,GAElC,CAAC5B,EAAS9K,IAAQ,CAAC8K,EAAShL,GAAM,CAGlC,IAAIqZ,EAKA,OAJAhN,EAAQ,EACRC,EAAQrB,EAAKzB,EAAMhH,KAAK,CAAEya,EAAeza,KAAK,CAKtD,CACAqH,AApBgB,IAAI,CAoBV4G,IAAI,CAAGxF,EAAKzB,EAAMiH,IAAI,CAEhC/P,EAAMmB,QAAQ,CAAG0O,EACZC,CAAAA,EAAW9P,EAAMsE,SAAS,CAAG,CAAA,GAClC,IAAIuW,EAAY1R,AAxBA,IAAI,CAwBMwJ,IAAI,CAAGuI,EAAgB3Q,EAAKzB,EAAMgN,GAAG,CAAE,AAAChG,CAAAA,EAAW9P,EAAMyE,UAAU,CAAGzE,EAAMsE,SAAS,AAAD,EAC1G,EAAIuL,GAEJyM,EADAxM,EACiBF,EAGAsL,EAAgB,EAAIrL,EAGzClE,EAAQpB,EAAKoB,EAAO7C,EAAM8T,QAAQ,CAACpd,EAAK,CAAA,IACxCoM,EAAQrB,EAAKqB,EAAO9C,EAAM8T,QAAQ,CAACtd,EAAK,CAAA,IAEnCgL,EAASqB,IAAUpM,KAAKsd,GAAG,CAAClR,KAAW0G,MACxC1G,EAAQ,EACRC,EAAQ0Q,GAGZ,IAAIhR,EAASxC,EAAMgU,OAAO,CAACnR,EAAO,CAAA,GAAOJ,EAASzC,EAAMgU,OAAO,CAAClR,EAAO,CAAA,GAAOmR,EAAexd,KAAKsd,GAAG,CAACxS,EAAakB,EAASD,GACxHyR,CAAAA,EAAeL,EACX,IAAI,CAACM,WAAW,CAChBrR,EAAQ7C,EAAM8T,QAAQ,CAACrR,EAASmR,EAAWxQ,EAAY,CAAA,GAElD,IAAI,CAAC+Q,YAAY,EACtBrR,CAAAA,EAAQ9C,EAAM8T,QAAQ,CAACtR,EAASoR,EAAWxQ,EAAY,CAAA,EAAI,EAG1DjN,EAAQ0d,IACbtS,EAAa0S,EAAe7Q,GAAcyQ,IACtC,IAAI,CAACK,WAAW,CAChBrR,EAAQ7C,EAAM8T,QAAQ,CAACrR,EAASoR,EAAWzQ,EAAY,CAAA,GAElD,IAAI,CAAC+Q,YAAY,EACtBrR,CAAAA,EAAQ9C,EAAM8T,QAAQ,CAACtR,EAASqR,EAAWzQ,EAAY,CAAA,EAAI,GAInE/C,AA5DgB,IAAI,CA4DV0R,SAAS,CAAGd,EAAMxa,KAAKD,GAAG,CAACqM,EAAOC,GAAQ,EAAGiP,GACvD1R,AA7DgB,IAAI,CA6DVyR,SAAS,CAAGb,EAAM5Q,AA7DZ,IAAI,CA6DkB+T,UAAU,CAC5C/T,AA9DY,IAAI,CA8DN0R,SAAS,CAAG1R,AA9DV,IAAI,CA8DgB+T,UAAU,CAC1C3d,KAAKC,GAAG,CAACmM,EAAOC,GAAQ,EAAGiP,GAC/B1R,AAhEgB,IAAI,CAgEViC,KAAK,CAAGjC,AAhEF,IAAI,CAgEQ0R,SAAS,CAAG1R,AAhExB,IAAI,CAgE8ByR,SAAS,CAC3DC,EAAYtb,KAAKyP,KAAK,CAAC7F,AAjEP,IAAI,CAiEa0R,SAAS,EAC1C,IAAID,EAAYrb,KAAKyP,KAAK,CAAC7F,AAlEX,IAAI,CAkEiByR,SAAS,EAC1C6B,IACAtT,AApEY,IAAI,CAoEN0S,cAAc,CAAC/a,IAAI,CAAC,CAC1Bgb,WAAY,SAChB,GAEArB,EAAO9B,GAAY,CAACxP,AAxER,IAAI,CAwEcsP,UAAU,CAAG,UAAY,OACvDtP,AAzEY,IAAI,CAyENmS,SAAS,CAACV,EAAWC,EAAW/K,EAAU2K,GACpDtR,AA1EY,IAAI,CA0ENwR,WAAW,CAACC,EAAWC,EAAW/K,EAAU2K,GAClDtR,AA3EQ,IAAI,CA2EFgH,gBAAgB,CAACzD,OAAO,CAACrK,OAAO,GAC1C8G,AA5EQ,IAAI,CA4EFqR,UAAU,CAACI,EAAW,EAAG9K,EAAU2K,GAC7CtR,AA7EQ,IAAI,CA6EFqR,UAAU,CAACK,EAAW,EAAG/K,EAAU2K,KAGjDtR,AAhFY,IAAI,CAgFNkH,SAAS,GACfP,GACA2F,EAAetM,AAlFP,IAAI,CAkFa+G,GAAG,CAAGL,EAC/B0F,EAAgBpM,AAnFR,IAAI,CAmFc4G,IAAI,CAAGH,EAC5B6M,CAAAA,GAAoB,CAACF,EAAe3S,QAAQ,CAAG,EAE5C,AAAC2S,CAAAA,EAAe3L,WAAW,EAAI,CAAA,EAE3B2L,EAAehJ,eAAe,AAAD,EACzC3D,EAAkBsL,EAAgB,EAAIrL,IAGtC4F,EAAetM,AA5FP,IAAI,CA4Fa+G,GAAG,CAAIuM,CAAAA,EAC5BtT,AA7FI,IAAI,CA6FEpH,MAAM,CAChB,CAAC6N,CAAc,EACnB2F,EAAgBpM,AA/FR,IAAI,CA+Fc4G,IAAI,CAAGF,GAGrC1G,AAlGY,IAAI,CAkGNkH,SAAS,CAACoD,QAAQ,CAAC8B,EAAeE,EAAc6G,EAAgB1M,GAE1EzG,AApGY,IAAI,CAoGNkH,SAAS,CAAC8C,QAAQ,CAG5BhK,AAvGY,IAAI,CAuGNyR,SAAS,CAAIM,CAAAA,GAAiB,CAAA,EAAI/R,AAvGhC,IAAI,CAuGsC0R,SAAS,CAAIK,CAAAA,GAAiB,CAAA,IAExF/R,AAzGgB,IAAI,CAyGVwP,QAAQ,CAAG,CAAA,EACrB1D,EAAU,IAAI,CAAE,eACpB,EAOAsF,EAAUvb,SAAS,CAACme,cAAc,CAAG,WACjC,IACyB3G,EAAkBC,EADvCtN,EAAY,IAAI,CAAEnJ,EAAQmJ,EAAUnJ,KAAK,CAAEod,EAAYpd,EAAMod,SAAS,CACtEC,EAAiB,EAAE,AAKvBlU,CAAAA,EAAUqN,gBAAgB,CAAGA,EAAmB,SAAU5L,CAAC,EACvDzB,EAAUmU,WAAW,CAAC1S,EAC1B,EACAzB,EAAUsN,cAAc,CAAGA,EAAiB,SAAU7L,CAAC,EACnDzB,EAAUoU,SAAS,CAAC3S,EACxB,EAMAyS,AAJAA,CAAAA,EAAiBlU,EAAUqU,cAAc,CAAC,YAAW,EAItC7W,IAAI,CAACpB,EAASvF,EAAMyd,QAAQ,CAAE,YAAajH,GAAmBjR,EAAS6X,EAAUvG,aAAa,CAAE,UAAWJ,IAEtHK,IACAuG,EAAe1W,IAAI,CAACpB,EAASvF,EAAMyd,QAAQ,CAAE,YAAajH,GAAmBjR,EAAS6X,EAAUvG,aAAa,CAAE,WAAYJ,IAC3H4G,EAAejY,MAAM,CAAC+D,EAAUqU,cAAc,CAAC,gBAEnDrU,EAAUkU,cAAc,CAAGA,EAEvBlU,EAAUlJ,MAAM,EAAIkJ,EAAUlJ,MAAM,CAAC,EAAE,EACvCod,EAAe1W,IAAI,CAACpB,EAAS4D,EAAUlJ,MAAM,CAAC,EAAE,CAAC6I,KAAK,CAAE,gBAAiB,WACrE9I,EAAMmJ,SAAS,CAACuU,2BAA2B,EAC/C,GAER,EAcAnD,EAAUvb,SAAS,CAACwe,cAAc,CAAG,SAAUG,CAAS,EACpD,IAAIxU,EAAY,IAAI,CAAEyU,EAAS,EAAE,CAQjC,MAPA,CAAC,SAAU,UAAU,CAACjI,OAAO,CAAC,SAAUkI,CAAI,EACxC1U,CAAS,CAAC0U,EAAK,CAAClI,OAAO,CAAC,SAAUmI,CAAa,CAAEtL,CAAK,EAClDoL,EAAOjX,IAAI,CAACpB,EAASuY,EAAc1H,OAAO,CAAEuH,EAAW,SAAU/S,CAAC,EAC9DzB,CAAS,CAAC0U,EAAO,YAAY,CAACjT,EAAG4H,EACrC,GACJ,EACJ,GACOoL,CACX,EAiBArD,EAAUvb,SAAS,CAAC+e,eAAe,CAAG,SAAUnT,CAAC,CAAE4H,CAAK,EACpD5H,EAAI,IAAI,CAAC5K,KAAK,CAACgY,OAAO,CAACC,SAAS,CAACrN,GACjC,IAC2DkB,EAAUD,EAAUmS,EAAKjO,EAD9D/P,EAAQmJ,AAAd,IAAI,CAAoBnJ,KAAK,CAAE8I,EAAQK,AAAvC,IAAI,CAA6CL,KAAK,CAAE8R,EAAYzR,AAApE,IAAI,CAA0EyR,SAAS,CAAEM,EAAgB/R,AAAzG,IAAI,CAA+GwJ,IAAI,CAAEvH,EAAQjC,AAAjI,IAAI,CAAuIiC,KAAK,CAC5J6S,EAAoB9U,AADR,IAAI,CACc4G,IAAI,CAAEqF,EAASxK,EAAEwK,MAAM,AAErDpV,CAAAA,EAAM8P,QAAQ,GACdsF,EAASxK,EAAEyK,MAAM,CACjB4I,EAAoB9U,AALR,IAAI,CAKc+G,GAAG,EAEjCsC,AAAU,IAAVA,GAEArJ,AATY,IAAI,CASNiP,aAAa,CAAGhD,EAC1BjM,AAVY,IAAI,CAUN+T,UAAU,CAAG9R,EACvBjC,AAXY,IAAI,CAWN+U,UAAU,CAAG9I,EAASwF,IAIhC7K,EAAOqF,EAAS6I,EAAoB7S,EAAQ,EACxCoH,AAAU,IAAVA,EACAzC,EAAOxQ,KAAKD,GAAG,CAAC,EAAGyQ,GAEJ,IAAVyC,GAAezC,EAAO3E,GAAS8P,IACpCnL,EAAOmL,EAAgB9P,EACnBjC,AArBI,IAAI,CAqBEgV,gBAAgB,EAE1BpO,GAAQ3E,EACRS,EAAW1C,AAxBP,IAAI,CAwBaiV,gBAAgB,GAAGjS,OAAO,EAI/CL,EAAW3C,AA5BP,IAAI,CA4BaiV,gBAAgB,GAAGhS,OAAO,EAGnD2D,IAAS6K,IACTzR,AAhCQ,IAAI,CAgCF+T,UAAU,CAAG9R,EAEnBnM,EAAQ+e,AADZA,CAAAA,EAAMlV,EAAM2B,aAAa,CAACiB,YAAY,CAACqE,EAAMA,EAAO3E,EAAOS,EAAUC,EAAQ,EAC7DtM,GAAG,GACfQ,EAAM8I,KAAK,CAAC,EAAE,CAACoK,WAAW,CAAC3T,KAAKC,GAAG,CAACwe,EAAIxe,GAAG,CAAEwe,EAAI1e,GAAG,EAAGC,KAAKD,GAAG,CAAC0e,EAAIxe,GAAG,CAAEwe,EAAI1e,GAAG,EAAG,CAAA,EAAM,KACzF,CAAE0X,QAAS,WAAY,IAIvC,EAYAuD,EAAUvb,SAAS,CAACqf,gBAAgB,CAAG,SAAUzT,CAAC,CAAE4H,CAAK,EACrD5H,EAAI,IAAI,CAAC5K,KAAK,CAACgY,OAAO,CAACC,SAAS,CAACrN,GACjC,IAAsB5K,EAAQmJ,AAAd,IAAI,CAAoBnJ,KAAK,CAAEse,EAAYte,EAAM8I,KAAK,CAAC,EAAE,CAGzEyV,EAAUpV,AAHM,IAAI,CAGAgV,gBAAgB,AAChC3L,AAAU,CAAA,IAAVA,GAEArJ,AANY,IAAI,CAMN6T,WAAW,CAAG,CAAA,EACxB7T,AAPY,IAAI,CAONqV,cAAc,CAAGrV,AAPf,IAAI,CAOqB0R,SAAS,CAC9C1R,AARY,IAAI,CAQNsV,YAAY,CAAGF,EAAUD,EAAU9e,GAAG,CAAG8e,EAAUhf,GAAG,GAIhE6J,AAZY,IAAI,CAYN8T,YAAY,CAAG,CAAA,EACzB9T,AAbY,IAAI,CAaNqV,cAAc,CAAGrV,AAbf,IAAI,CAaqByR,SAAS,CAC9CzR,AAdY,IAAI,CAcNsV,YAAY,CAAGF,EAAUD,EAAUhf,GAAG,CAAGgf,EAAU9e,GAAG,EAEpEQ,EAAMgM,UAAU,CAAG,IACvB,EAUAuO,EAAUvb,SAAS,CAACse,WAAW,CAAG,SAAU1S,CAAC,EACzC,IAC2BwK,EADvBjM,EAAY,IAAI,CAAEnJ,EAAQmJ,EAAUnJ,KAAK,CAAEkb,EAAgB/R,EAAU+R,aAAa,CAAE9P,EAAQjC,EAAUiC,KAAK,CAAE8S,EAAa/U,EAAU+U,UAAU,CAAEpO,EAAW9P,EAAM8P,QAAQ,CACzKC,EAAO5G,EAAU4G,IAAI,CAIrB,CAAA,CAACnF,EAAE2N,OAAO,EAAI3N,AAAuB,IAAvBA,EAAE2N,OAAO,CAAC,EAAE,CAACmG,KAAK,AAAK,IAErCtJ,EAASxK,AADTA,CAAAA,EAAI5K,EAAMgY,OAAO,CAACC,SAAS,CAACrN,EAAC,EAClBwK,MAAM,CAEbtF,IACAC,EAAO5G,EAAU+G,GAAG,CACpBkF,EAASxK,EAAEyK,MAAM,EAGjBlM,EAAU6T,WAAW,EACrB7T,EAAUsP,UAAU,CAAG,CAAA,EACvBtP,EAAUrE,MAAM,CAAC,EAAG,EAAGsQ,EAASrF,EAAM5G,EAAUqV,cAAc,GAGzDrV,EAAU8T,YAAY,EAC3B9T,EAAUsP,UAAU,CAAG,CAAA,EACvBtP,EAAUrE,MAAM,CAAC,EAAG,EAAGqE,EAAUqV,cAAc,CAAEpJ,EAASrF,IAGrD5G,EAAUiP,aAAa,GAC5BjP,EAAUsP,UAAU,CAAG,CAAA,EACnBrD,EAAS8I,EACT9I,EAAS8I,EAGJ9I,EACL8F,EAAgBgD,EAAa9S,GAC7BgK,CAAAA,EAAS8F,EAAgBgD,EAAa9S,CAAI,EAE9CjC,EAAUrE,MAAM,CAAC,EAAG,EAAGsQ,EAAS8I,EAAY9I,EAAS8I,EAAa9S,IAElEjC,EAAUsP,UAAU,EACpBtP,EAAUkH,SAAS,EACnB9F,EAAKpB,EAAUkH,SAAS,CAACzQ,OAAO,CAACoU,UAAU,CAG3C,CAAC5J,GACG,CAAC,IAAI,CAACpK,KAAK,CAAC2Z,OAAO,IACvB/O,EAAEqI,OAAO,CAAGrI,EAAEnJ,IAAI,CAClBkd,WAAW,WACPxV,EAAUoU,SAAS,CAAC3S,EACxB,EAAG,IAGf,EASA2P,EAAUvb,SAAS,CAACue,SAAS,CAAG,SAAU3S,CAAC,EACvC,IAEIiQ,EAAWD,EAAWgE,EAAe/S,EAAUC,EAAUkS,EAFvChe,EAAQmJ,AAAd,IAAI,CAAoBnJ,KAAK,CAAE8I,EAAQK,AAAvC,IAAI,CAA6CL,KAAK,CAAEuH,EAAYlH,AAApE,IAAI,CAA0EkH,SAAS,CAAE4G,EAAWrM,EAAEqM,QAAQ,EAAIrM,EAAGkF,EAAW9P,EAAM8P,QAAQ,CAAE2K,EAAOtR,AAAvJ,IAAI,CAA6JwP,QAAQ,EAAI,CAACxP,AAA9K,IAAI,CAAoLsP,UAAU,CAC9M,UAAY,OAMhB,CAAA,AAACtP,AAPe,IAAI,CAOTsP,UAAU,EAAK,CAAA,CAACpI,GAAa,CAACA,EAAUoI,UAAU,AAAD,GACxD7N,AAAc,cAAdA,EAAEoM,OAAO,AAAe,IACxB4H,EAAgBzV,AATJ,IAAI,CASUiV,gBAAgB,GAEtCjV,AAXQ,IAAI,CAWFyR,SAAS,GAAKzR,AAXhB,IAAI,CAWsBqV,cAAc,CAChD3S,EAAW1C,AAZH,IAAI,CAYSsV,YAAY,CAE5BtV,AAdG,IAAI,CAcG0R,SAAS,GAAK1R,AAdrB,IAAI,CAc2BqV,cAAc,EACrD1S,CAAAA,EAAW3C,AAfH,IAAI,CAeSsV,YAAY,AAAD,EAGhCtV,AAlBQ,IAAI,CAkBF0R,SAAS,GAAK1R,AAlBhB,IAAI,CAkBsBwJ,IAAI,EACtC7G,CAAAA,EAAW3C,AAnBH,IAAI,CAmBSgV,gBAAgB,CACjCS,EAAczS,OAAO,CACrByS,EAAcxS,OAAO,AAAD,EAGA,IAAxBjD,AAxBQ,IAAI,CAwBFyR,SAAS,EACnB/O,CAAAA,EAAW1C,AAzBH,IAAI,CAyBSgV,gBAAgB,CACjCS,EAAcxS,OAAO,CACrBwS,EAAczS,OAAO,AAAD,EAGxBlN,EAAQ+e,AADZA,CAAAA,EAAMlV,EAAM2B,aAAa,CAACiB,YAAY,CAACvC,AA7B3B,IAAI,CA6BiCyR,SAAS,CAAEzR,AA7BhD,IAAI,CA6BsD0R,SAAS,CAAEhP,EAAUC,EAAQ,EACnFtM,GAAG,GACfQ,EAAM8I,KAAK,CAAC,EAAE,CAACoK,WAAW,CAAC3T,KAAKC,GAAG,CAACwe,EAAIxe,GAAG,CAAEwe,EAAI1e,GAAG,EAAGC,KAAKD,GAAG,CAAC0e,EAAIxe,GAAG,CAAEwe,EAAI1e,GAAG,EAAG,CAAA,EAGnF6J,CAAAA,AAlCQ,IAAI,CAkCFsP,UAAU,EAAW,KAAM,CACjCzB,QAAS,YACT6H,UAAW,iBACX5H,SAAUA,CACd,IAGU,cAAdrM,EAAEqI,OAAO,EACTrI,AAAc,cAAdA,EAAEqI,OAAO,EACT9J,CAAAA,AA3CY,IAAI,CA2CN6T,WAAW,CAAG7T,AA3CZ,IAAI,CA2CkB8T,YAAY,CAC1C9T,AA5CQ,IAAI,CA4CFiP,aAAa,CAAGjP,AA5ClB,IAAI,CA4CwB+T,UAAU,CAC1C/T,AA7CI,IAAI,CA6CEsV,YAAY,CAAGtV,AA7CrB,IAAI,CA6C2BqV,cAAc,CAC7CrV,AA9CA,IAAI,CA8CMsP,UAAU,CAAGtP,AA9CvB,IAAI,CA8C6B+U,UAAU,CAAG,IAAG,EAG7D/U,AAjDY,IAAI,CAiDNsT,gBAAgB,EAC1BnS,EAASnB,AAlDG,IAAI,CAkDGyR,SAAS,GAC5BtQ,EAASnB,AAnDG,IAAI,CAmDG0R,SAAS,IAC5BD,EAAYrb,KAAKyP,KAAK,CAAC7F,AApDX,IAAI,CAoDiByR,SAAS,EAC1CC,EAAYtb,KAAKyP,KAAK,CAAC7F,AArDX,IAAI,CAqDiB0R,SAAS,EACtC1R,AAtDQ,IAAI,CAsDFqS,MAAM,EAChBrS,AAvDQ,IAAI,CAuDFmS,SAAS,CAACV,EAAWC,EAAW/K,EAAU2K,GAEpDtR,AAzDQ,IAAI,CAyDF4R,OAAO,EACjB5R,AA1DQ,IAAI,CA0DFwR,WAAW,CAACC,EAAWC,EAAW/K,EAAU2K,GAEtDtR,AA5DQ,IAAI,CA4DFgH,gBAAgB,CAACzD,OAAO,CAACrK,OAAO,EAC1CuF,OAAOkX,IAAI,CAAC3V,AA7DJ,IAAI,CA6DUuD,OAAO,EAAEpK,MAAM,GACjC6G,AA9DI,IAAI,CA8DEuD,OAAO,CAACpK,MAAM,GAC5B6G,AA/DQ,IAAI,CA+DFqR,UAAU,CAACI,EAAW,EAAG9K,EAAU2K,GAC7CtR,AAhEQ,IAAI,CAgEFqR,UAAU,CAACK,EAAW,EAAG/K,EAAU2K,IAGzD,EAOAF,EAAUvb,SAAS,CAACyY,YAAY,CAAG,WAC3B,IAAI,CAAC4F,cAAc,GACnB,IAAI,CAACA,cAAc,CAAC1H,OAAO,CAAC,SAAUoJ,CAAM,EACxCA,GACJ,GACA,IAAI,CAAC1B,cAAc,CAAG,KAAK,GAE/B,IAAI,CAAC2B,sBAAsB,EAC/B,EAOAzE,EAAUvb,SAAS,CAACggB,sBAAsB,CAAG,WACzC,IAAI5C,EAAa,IAAI,CAACA,UAAU,EAAI,EAAE,AAClC,CAAA,IAAI,CAACK,gBAAgB,EAAIL,CAAU,CAAC,EAAE,GACW,CAAA,IAA7C,IAAI,CAACjM,gBAAgB,CAAC8O,kBAAkB,EACxC7C,EAAWzG,OAAO,CAAC,SAAU1V,CAAM,EAC/BiV,EAAYjV,EAAQ,cAAe,IAAI,CAACif,kBAAkB,CAC9D,EAAG,IAAI,EAGP9C,CAAU,CAAC,EAAE,CAACtT,KAAK,EACnBoM,EAAYkH,CAAU,CAAC,EAAE,CAACtT,KAAK,CAAE,gBAAiB,IAAI,CAACqW,sBAAsB,EAGzF,EAOA5E,EAAUvb,SAAS,CAACa,IAAI,CAAG,SAAUG,CAAK,EACtC,IAAI6K,EAAe7K,EAAMJ,OAAO,CAAEuQ,EAAmBtF,EAAa1B,SAAS,EAAI,CAAC,EAAGsT,EAAmBtM,EAAiB9N,OAAO,CAAEmP,EAAmB3G,EAAawF,SAAS,EAAI,CAAC,EAAG+O,EAAmB5N,EAAiBnP,OAAO,CAAEN,EAAS0a,GAAoBtM,EAAiBpO,MAAM,EAAI,EAAG6N,EAAkBwP,GAAoB5N,EAAiBzP,MAAM,EAAI,EAAG8N,EAAmB2B,EAAiBuC,cAAc,EAAInE,GAAmB,CACta,CAAA,IAAI,CAAClD,OAAO,CAAG,EAAE,CACjB,IAAI,CAAC8O,MAAM,CAAG,EAAE,CAChB,IAAI,CAACxb,KAAK,CAAGA,EACb,IAAI,CAACyP,aAAa,GAClB,IAAI,CAAC1N,MAAM,CAAGA,EACd,IAAI,CAAC6N,eAAe,CAAGA,EACvB,IAAI,CAACC,gBAAgB,CAAGA,EACxB,IAAI,CAACuP,gBAAgB,CAAGA,EACxB,IAAI,CAAC3C,gBAAgB,CAAGA,EACxB,IAAI,CAACtM,gBAAgB,CAAGA,EACxB,IAAI,CAACqB,gBAAgB,CAAGA,EACxB,IAAI,CAAC5H,QAAQ,CAAGW,EAAK4F,EAAiBvG,QAAQ,CAAEyV,CAAAA,CAAQ,CAAA,CAAC5C,GAAoBzc,EAAM8P,QAAQ,AAAD,GAC1F,IAAI3G,EAAY,IAAI,CAAEiT,EAAajT,EAAUiT,UAAU,CAAEkD,EAAatf,EAAM8I,KAAK,CAACxG,MAAM,CAAEid,EAAavf,EAAMgJ,KAAK,CAAC1G,MAAM,CAAEkd,EAAYpD,GAAcA,CAAU,CAAC,EAAE,EAAIA,CAAU,CAAC,EAAE,CAACtT,KAAK,EACrL9I,EAAM8I,KAAK,CAAC,EAAE,EAAI,CAAElJ,QAAS,CAAC,CAAE,EAwFpC,GAvFAI,EAAMyf,UAAU,CAAG,CAAA,EACftW,EAAUsT,gBAAgB,EAE1BtT,EAAUL,KAAK,CAAG,IAAI+Q,EAAK7Z,EAAOb,EAAM,CAEpCugB,OAAQF,EAAU5f,OAAO,CAAC8f,MAAM,CAChCC,QAASH,EAAU5f,OAAO,CAAC+f,OAAO,AACtC,EAAGxP,EAAiBrH,KAAK,CAAE,CACvB8E,GAAI,mBACJ5E,MAAO,mBACPvH,KAAM,WACN+Q,MAAO8M,EACP5N,WAAY,CAAA,EACZ4B,OAAQ,EACRsM,mBAAoB,CAAA,EACpBrR,YAAa,CAAA,EACbC,UAAW,CAAA,EACXC,WAAY,EACZC,WAAY,EACZmR,YAAa,CAAA,CACjB,EAAG7f,EAAM8P,QAAQ,CAAG,CAChBgQ,QAAS,CAACjQ,EAAkB,EAAG,CAACA,EAAkB,EAAE,CACpD/N,MAAOC,CACX,EAAI,CACA+d,QAAS,CAAC,EAAG,CAACjQ,EAAkB,EAAGA,EAAiB,CACpD9N,OAAQA,CACZ,GAAI,SACJoH,EAAUH,KAAK,CAAG,IAAI6Q,EAAK7Z,EAAOb,EAAMgR,EAAiBnH,KAAK,CAAE,CAC5D4E,GAAI,mBACJmS,WAAY,CAAA,EACZzM,OAAQ,EACRd,MAAO+M,EACP7N,WAAY,CAAA,EACZ3H,SAAUQ,EAAM4F,EAAiBnH,KAAK,EAClCmH,EAAiBnH,KAAK,CAACe,QAAQ,CAAI/J,EAAMgJ,KAAK,CAAC,EAAE,EAAIhJ,EAAMgJ,KAAK,CAAC,EAAE,CAACe,QAAQ,CAAG,CAAA,GACnF8V,YAAa,CAAA,CACjB,EAAG7f,EAAM8P,QAAQ,CAAG,CAChBhO,MAAOC,CACX,EAAI,CACAA,OAAQA,CACZ,GAAI,SAEAqa,GAAcjM,EAAiBlQ,MAAM,CAAC+f,IAAI,CAC1C7W,EAAU8W,qBAAqB,CAAC,CAAA,GAGH,IAAxBjgB,EAAMC,MAAM,CAACqC,MAAM,EACxB6G,CAAAA,EAAU+W,YAAY,CAAG3a,EAASvF,EAAO,eAAgB,WAEjDA,EAAMC,MAAM,CAACqC,MAAM,CAAG,GAAK,CAAC6G,EAAUlJ,MAAM,GAC5CkJ,EAAUsG,aAAa,GACvBtG,EAAU+W,YAAY,GAE9B,EAAC,EAEL/W,EAAUgV,gBAAgB,CAAG,AAACne,EAAM8P,QAAQ,EAAI,CAAC3G,EAAUL,KAAK,CAACiB,QAAQ,EAAM,CAAC/J,EAAM8P,QAAQ,EAAI3G,EAAUL,KAAK,CAACiB,QAAQ,CAE1HZ,EAAUuS,cAAc,GAExBvS,EAAUgU,cAAc,KAIxBhU,EAAUL,KAAK,CAAG,CACd9I,MAAOA,EACPyK,cAAe,CACX+R,KAAM,CAAA,CACV,EACAtb,UAAW,SAAU2E,CAAK,CAAE0Y,CAAO,EAC/B,IAAIzY,EAAO9F,EAAM8I,KAAK,CAAC,EAAE,CAAEkV,EAAMlY,EAAKwL,WAAW,GAAI6O,EAAmBra,EAAKgQ,GAAG,CAAG,EAAIjG,EAAkBrQ,EAAM0a,EAAO,MAAOpU,EAAKlG,OAAO,CAACJ,GAAG,CAAEwe,EAAI7R,OAAO,EAAGiU,EAAalG,EAAO,MAAOpU,EAAKlG,OAAO,CAACN,GAAG,CAAE0e,EAAI5R,OAAO,EAAI5M,EACzN,OAAO+e,EAEH,AAAC1Y,EAAQua,EAAaD,EAAoB3gB,EAE1C2gB,EAAoBta,CAAAA,EAAQrG,CAAE,EAAK4gB,CAC3C,EACAxD,SAAU,SAAU/W,CAAK,EACrB,OAAO,IAAI,CAAC3E,SAAS,CAAC2E,EAC1B,EACAiX,QAAS,SAAUjX,CAAK,EACpB,OAAO,IAAI,CAAC3E,SAAS,CAAC2E,EAAO,CAAA,EACjC,CACJ,EACAsD,EAAUL,KAAK,CAAC2B,aAAa,CAAC3E,IAAI,CAAGqD,EAAUL,KAAK,CACpDK,EAAUL,KAAK,CAAC2B,aAAa,CAACiB,YAAY,CAAIhB,EAAuB1L,SAAS,CAAC0M,YAAY,CAAC6K,IAAI,CAACpN,EAAUL,KAAK,CAAC2B,aAAa,GAG9HzK,EAAMJ,OAAO,CAACyQ,SAAS,CAAChO,OAAO,CAAE,CACjC,IAAIzC,EAAUT,EAAMa,EAAMJ,OAAO,CAACyQ,SAAS,CAAE,CAAEwC,SAAU7S,EAAM8P,QAAQ,AAAC,EACpE,EAACxF,EAAS1K,EAAQ+E,MAAM,GAAKwE,EAAUsT,gBAAgB,EACvD7c,CAAAA,EAAQ+E,MAAM,CAAG3E,EAAM8P,QAAQ,CAAG,GAAK,CAAA,EAE3C9P,EAAMqQ,SAAS,CAAGlH,EAAUkH,SAAS,CAAG,IAAI4B,EAAUjS,EAAMW,QAAQ,CAAEf,EAASI,GAC/EuF,EAAS4D,EAAUkH,SAAS,CAAE,UAAW,SAAUzF,CAAC,EAChD,IAAIQ,EAAQjC,EAAUwJ,IAAI,CAAEhT,EAAKyL,EAAQ,IAAI,CAACzL,EAAE,CAAED,EAAO0L,EAAQ,IAAI,CAAC1L,IAAI,AAC1EyJ,CAAAA,EAAUsP,UAAU,CAAGtP,EAAUkH,SAAS,CAACoI,UAAU,CACrDtP,EAAUrE,MAAM,CAAC,EAAG,EAAGpF,EAAMC,GACzB,IAAI,CAACqT,oBAAoB,CAACpI,EAAEqI,OAAO,GACnC0L,WAAW,WACPxV,EAAUoU,SAAS,CAAC3S,EACxB,EAER,EACJ,CAEAzB,EAAUkX,mBAAmB,GAE7BlX,EAAUmX,cAAc,EAC5B,EAQA/F,EAAUvb,SAAS,CAACof,gBAAgB,CAAG,SAAUmC,CAAyB,EACtE,IACIC,EADAC,EAAW,IAAI,CAACzgB,KAAK,CAAC8I,KAAK,CAAC,EAAE,CAAE4X,EAAU,IAAI,CAAC5X,KAAK,CAAE6X,EAAiBD,EAAQ9gB,OAAO,CAAEghB,EAAkBH,EAAS7gB,OAAO,CAS9H,OAPK2gB,GAA6BE,AAAqB,OAArBA,EAAStU,OAAO,EAC9CqU,CAAAA,EAAM,CACFrU,QAAS5B,EACToW,GAAkBA,EAAenhB,GAAG,CAAE0a,EAAO,MAAO0G,EAAgBphB,GAAG,CAAEihB,EAAStU,OAAO,CAAEuU,EAAQvU,OAAO,CAAEuU,EAAQlhB,GAAG,GACvH4M,QAAS7B,EAAKoW,GAAkBA,EAAerhB,GAAG,CAAE4a,EAAO,MAAO0G,EAAgBthB,GAAG,CAAEmhB,EAASrU,OAAO,CAAEsU,EAAQtU,OAAO,CAAEsU,EAAQphB,GAAG,EACzI,CAAA,EAEGkhB,CACX,EAaAjG,EAAUvb,SAAS,CAACyQ,aAAa,CAAG,SAAUoR,CAAiB,CAAE5P,CAAM,EACnE,IAAIjR,EAAQ,IAAI,CAACA,KAAK,CAAEoc,EAAa,IAAI,CAACA,UAAU,CAAG,EAAE,CACzDyE,EAAqBA,GACjB7gB,EAAMJ,OAAO,EAAII,EAAMJ,OAAO,CAACuJ,SAAS,CAACiT,UAAU,EAClDpc,CAAAA,EAAMC,MAAM,CAACqC,MAAM,CAEhB2X,EAAKja,EAAMC,MAAM,CAAE,SAAU6gB,CAAC,EAAI,MAAQ,CAACA,EAAElhB,OAAO,CAAC8R,UAAU,AAAG,GAAGc,KAAK,CAC1E,CAAA,EAGR,AAACxS,CAAAA,EAAMC,MAAM,EAAI,EAAE,AAAD,EAAG0V,OAAO,CAAC,SAAU1V,CAAM,CAAEqJ,CAAC,EAG5C,CAACrJ,EAAOL,OAAO,CAAC8R,UAAU,EACrBzR,CAAAA,EAAOL,OAAO,CAACmhB,eAAe,EAC3B,AAACzX,CAAAA,IAAMuX,GACH5gB,EAAOL,OAAO,CAACgO,EAAE,GAAKiT,CAAgB,GACtC5gB,AAAmC,CAAA,IAAnCA,EAAOL,OAAO,CAACmhB,eAAe,AAAS,GAC/C3E,EAAWzV,IAAI,CAAC1G,EAExB,GAEI,IAAI,CAAC6I,KAAK,EAAI,CAAC,IAAI,CAACA,KAAK,CAAC2B,aAAa,CAAC+R,IAAI,EAC5C,IAAI,CAACyD,qBAAqB,CAAC,CAAA,EAAMhP,EAEzC,EAQAsJ,EAAUvb,SAAS,CAACihB,qBAAqB,CAAG,SAAUlK,CAAS,CAAE9E,CAAM,EACnE,IAqCI+P,EAAaC,EAAyFC,EArCtG/X,EAAY,IAAI,CAAEnJ,EAAQmJ,EAAUnJ,KAAK,CAAEoc,EAAajT,EAAUiT,UAAU,CAAE+E,EAAiB,CAC/FC,oBAAqB,CAAA,EACrB5O,MAAO,KACP3I,SAAU,KACVnJ,MAAO,MACP2gB,SAAU,CAAA,EACVvY,MAAO,mBACPE,MAAO,mBACPsY,aAAc,CAAA,EACdC,SAAU,KAAK,EACf7P,WAAY,CAAA,EACZ8P,OAAQ,CACJC,SAAU,CACNpgB,QAAS,CACb,CACJ,CACJ,EAEAgb,EAAkBlT,EAAUlJ,MAAM,CAC9B,AAACkJ,CAAAA,EAAUlJ,MAAM,EAAI,EAAE,AAAD,EAAGqa,MAAM,CAAC,SAAUoH,CAAS,EAC/C,IAAIC,EAAOD,EAAUtF,UAAU,OAC/B,CAAIA,CAAAA,AAA2B,EAA3BA,EAAWlV,OAAO,CAACya,EAAQ,IAGvBA,IACAzM,EAAYyM,EAAM,cAAexY,EAAU+V,kBAAkB,EAC7D,OAAOyC,EAAKtF,eAAe,EAI3BqF,EAAU1hB,KAAK,EACf0hB,EAAUrc,OAAO,GAEd,CAAA,EAGf,GACqCuc,EAA8BzY,EAAUgH,gBAAgB,CAAClQ,MAAM,CAGpGmc,GAAcA,EAAW9Z,MAAM,EAC/B8Z,EAAWzG,OAAO,CAAC,SAAUgM,CAAI,EAC7B,IAAIE,EAAkBF,EAAKtF,eAAe,CAAEyF,EAAiBvS,EAE7D,CACIxM,MAAO4e,EAAK5e,KAAK,CACjBgf,QAASJ,EAAKI,OAAO,AACzB,EAAG,AAACzZ,EAAQsZ,GAERnc,EAAe0D,SAAS,CAAClJ,MAAM,CAD/B2hB,GAIJ,GAAIC,CAAAA,GACA1Y,AAAkD,CAAA,IAAlDA,EAAUgH,gBAAgB,CAAC8O,kBAAkB,EAGjDkC,EAAetD,IAAI,CAAG,aAAezB,EAAW9Z,MAAM,CAEtD4e,EAAuBF,AADvBA,CAAAA,EAAcW,EAAK/hB,OAAO,EAAI,CAAC,CAAA,EACIuQ,gBAAgB,EAAI,CAAC,EAGxD2R,EAAenU,UAAU,CAAGpF,EAAMuZ,EAAenU,UAAU,EAG3DsT,AAFAA,CAAAA,EAAyB9hB,EAAM6hB,EAAaG,EAAgBW,EAAgBZ,EAAoB,EAEzEhV,UAAU,CAAG3B,EAEpCuX,EAAe5V,UAAU,CAAEgV,EAAqBhV,UAAU,CAE1DzG,EAAeuc,WAAW,CAACf,EAAuBxf,IAAI,EAAI,OAAO,CAACyK,UAAU,EAG5E,IAAI+V,EAAsBf,EAAqBlB,IAAI,EAAI8B,EAAe9B,IAAI,AAC1E7W,CAAAA,EAAU+Y,gBAAgB,CACtB/Y,EAAU+Y,gBAAgB,EAAI,CAAC,CAACD,EACpChB,EAAuBjB,IAAI,CACvBiC,GACIjB,EAAYhB,IAAI,EAAIgB,EAAYhB,IAAI,CAACmC,KAAK,CAAC,GAE/CN,GAAmBA,EAAgBjiB,OAAO,CAC1CiiB,EAAgBjI,MAAM,CAACqH,EAAwBhQ,IAG/C0Q,EAAKtF,eAAe,CAAGrc,EAAMoiB,UAAU,CAACnB,GACxCU,EAAKtF,eAAe,CAACD,UAAU,CAAGuF,EAClCtF,EAAgB1V,IAAI,CAACgb,EAAKtF,eAAe,GAEjD,GAKAuF,CAAAA,EAA4B5B,IAAI,EAChC,CAAE5D,CAAAA,GAAcA,EAAW9Z,MAAM,AAAD,GAChCgG,EAAQsZ,EAA2B,IACnCzY,EAAU+Y,gBAAgB,CAAG,CAAA,EAI7BN,AAFAA,CAAAA,EACIrZ,EAAMqZ,EAA2B,EACTjM,OAAO,CAAC,SAAU0M,CAAiB,CAAE/Y,CAAC,EAC9D6X,EAAetD,IAAI,CACf,aAAgBxB,CAAAA,EAAgB/Z,MAAM,CAAG,CAAA,EAc7C2e,AAbAA,CAAAA,EAAyB9hB,EAAMsG,EAAe0D,SAAS,CAAClJ,MAAM,CAAE,CAO5D8C,MAAO/C,EAAMC,MAAM,CAACqJ,EAAE,EAClB,CAACtJ,EAAMC,MAAM,CAACqJ,EAAE,CAAC1J,OAAO,CAAC8R,UAAU,EACnC1R,EAAMC,MAAM,CAACqJ,EAAE,CAACvG,KAAK,EACrB/C,EAAMJ,OAAO,CAAC0iB,MAAM,CAAChZ,EAAE,EACvBtJ,EAAMJ,OAAO,CAAC0iB,MAAM,CAAC,EAAE,AAC/B,EAAGnB,EAAgBkB,EAAiB,EACbrC,IAAI,CAAGqC,EAAkBrC,IAAI,CAChDiB,EAAuBjB,IAAI,GAC3B7W,EAAU+Y,gBAAgB,CAAG,CAAA,EAC7B7F,EAAgB1V,IAAI,CAAC3G,EAAMoiB,UAAU,CAACnB,IAE9C,IAEAlL,GACA,IAAI,CAACsK,mBAAmB,EAEhC,EAQA9F,EAAUvb,SAAS,CAACqhB,mBAAmB,CAAG,WACtC,IAAIkC,EAAQ,IAAI,CACZpZ,EAAY,IAAI,CAAEiT,EAAajT,EAAUiT,UAAU,EAAI,EAAE,AAKzDA,CAAAA,CAAU,CAAC,EAAE,EAAIA,CAAU,CAAC,EAAE,CAACtT,KAAK,EACpCsT,CAAU,CAAC,EAAE,CAACiB,cAAc,CAAC1W,IAAI,CAACpB,EAAS6W,CAAU,CAAC,EAAE,CAACtT,KAAK,CAAE,gBAAiB,IAAI,CAACqW,sBAAsB,GAEhH/C,EAAWzG,OAAO,CAAC,SAAUgM,CAAI,EAE7BA,EAAKtE,cAAc,CAAC1W,IAAI,CAACpB,EAASoc,EAAM,OAAQ,WACxC,IAAI,CAACtF,eAAe,EACpB,IAAI,CAACA,eAAe,CAACmG,UAAU,CAAC,CAAA,EAAM,CAAA,EAE9C,IACAb,EAAKtE,cAAc,CAAC1W,IAAI,CAACpB,EAASoc,EAAM,OAAQ,WACxC,IAAI,CAACtF,eAAe,EACpB,IAAI,CAACA,eAAe,CAACmG,UAAU,CAAC,CAAA,EAAO,CAAA,EAE/C,IAGkD,CAAA,IAA9CD,EAAMpS,gBAAgB,CAAC8O,kBAAkB,EACrC0C,EAAK7Y,KAAK,EACV6Y,EAAKtE,cAAc,CAAC1W,IAAI,CAACpB,EAASoc,EAAM,cAAeY,EAAMrD,kBAAkB,GAIvFyC,EAAKtE,cAAc,CAAC1W,IAAI,CAACpB,EAASoc,EAAM,SAAU,WAC1C,IAAI,CAACtF,eAAe,GACpBrC,EAAM7Q,EAAUlJ,MAAM,CAAE,IAAI,CAACoc,eAAe,EACxCpd,EAAQ,IAAI,CAACod,eAAe,CAACzc,OAAO,GACpC,IAAI,CAACyc,eAAe,CAACoG,MAAM,CAAC,CAAA,GAEhC,OAAO,IAAI,CAACpG,eAAe,CAEnC,GACJ,EACJ,EASA9B,EAAUvb,SAAS,CAAC0jB,gBAAgB,CAAG,SAAUC,CAAgB,EAC7D,OAAO,IAAI,CAACvG,UAAU,CAACwG,MAAM,CAAC,SAAUpjB,CAAG,CAAES,CAAM,EAE/C,OAAOV,KAAKC,GAAG,CAACA,EAAKS,EAAO4iB,KAAK,EAAI5iB,EAAO4iB,KAAK,CAACvgB,MAAM,CACpDrC,EAAO4iB,KAAK,CAAC,EAAE,CAAGrjB,EAC1B,EAAGmjB,EACP,EASApI,EAAUvb,SAAS,CAAC0e,2BAA2B,CAAG,WAC9C,IAAI5U,EAAQ,IAAI,CAACA,KAAK,CACtB,GAAI,AAA6B,KAAA,IAAtBA,EAAMwI,WAAW,CAAkB,CAC1C,IAAIsN,EAAgB,IAAI,CAACR,gBAAgB,CAAC,CAAA,GACtCQ,GACCA,CAAAA,EAAczS,OAAO,GAAKrD,EAAMtJ,GAAG,EAChCof,EAAcxS,OAAO,GAAKtD,EAAMxJ,GAAG,AAAD,IACtCwJ,EAAMtJ,GAAG,CAAGof,EAAczS,OAAO,CACjCrD,EAAMxJ,GAAG,CAAGsf,EAAcxS,OAAO,CAEzC,CACJ,EAOAmO,EAAUvb,SAAS,CAACmgB,sBAAsB,CAAG,WACzC,IAMI5T,EAAQD,EANUnC,EAAYmV,AAAlB,IAAI,CAAwBte,KAAK,CAACmJ,SAAS,CAAE2Z,EAAexE,AAA5D,IAAI,CAAkEhN,WAAW,GAAIyR,EAAUD,EAAatjB,GAAG,CAAEwjB,EAAUF,EAAaxjB,GAAG,CAAE2jB,EAAcH,EAAa3W,OAAO,CAAE+W,EAAcJ,EAAa1W,OAAO,CAAEhB,EAAQ4X,EAAUD,EAASI,EAAaha,EAAUga,UAAU,CAAEC,EAAaja,EAAUia,UAAU,CAAEtV,EAAavD,EAAK+T,AAAxU,IAAI,CAA8U1e,OAAO,CAACkO,UAAU,CAAE,GAAIuO,EAAkBlT,EAAUlJ,MAAM,EAAIkJ,EAAUlJ,MAAM,CAAC,EAAE,CAAEojB,EAAiB,CAAC,CAAC/E,AAAxb,IAAI,CAA8bpL,WAAW,AAOzd,EAHQoL,CAAAA,AAJI,IAAI,CAIEgF,SAAS,EAC3BhF,AAAgC,wBAAhCA,AALY,IAAI,CAKNgF,SAAS,CAACtM,OAAO,AAAyB,IAKhDmM,GAEA5X,CAAAA,EAASD,AADTA,CAAAA,EAAS2X,CAAU,EACD7X,CAAI,EAItBgY,IACA7X,EAAS2X,EAAcpV,EAElBqV,GACD7X,CAAAA,EAAS/L,KAAKD,GAAG,CAAC2jB,EAClB1X,EAASH,EAAOjC,EAAUuZ,gBAAgB,CAACrG,GAAmBA,EAAgBwG,KAAK,CAC/ExG,EAAgBwG,KAAK,CAAC,EAAE,CACxB,CAACU,OAAOC,SAAS,EAAC,GAI1BH,GAAmBF,CAAAA,GAAcC,CAAS,GACtC9Y,EAASgB,KACTgT,AA7BI,IAAI,CA6BE9e,GAAG,CAAG8e,AA7BZ,IAAI,CA6BkBmF,OAAO,CAAGnY,EACpCgT,AA9BI,IAAI,CA8BEhf,GAAG,CAAGgf,AA9BZ,IAAI,CA8BkBoF,OAAO,CAAGnY,IAKhDpC,EAAUga,UAAU,CAChBha,EAAUia,UAAU,CAAG,IAC/B,EASA7I,EAAUvb,SAAS,CAACkgB,kBAAkB,CAAG,WACrC,IAAI/V,EAAY,IAAI,CAACnJ,KAAK,CAACmJ,SAAS,CAAqBkT,EAAkB,IAAI,CAACA,eAAe,CAAEsH,EAAmBxa,EAAUgV,gBAAgB,CAC1I5e,AAAoC,IAApCA,KAAKyP,KAAK,CAAC7F,EAAUyR,SAAS,EAC9Brb,KAAKyP,KAAK,CAAC7F,EAAU0R,SAAS,GAAKtb,KAAKyP,KAAK,CAAC7F,EAAUwJ,IAAI,CAGhExJ,CAAAA,EAAUia,UAAU,CAAG7Y,EAAK,IAAI,CAACvK,KAAK,CAACJ,OAAO,CAACuJ,SAAS,EACpD,IAAI,CAACnJ,KAAK,CAACJ,OAAO,CAACuJ,SAAS,CAACia,UAAU,CAAEO,GAC7Cxa,EAAUga,UAAU,CAAGha,EAAUya,gBAAgB,CAPE,IAAI,CAOOza,GAE1DkT,GAAmB,CAAClT,EAAU+Y,gBAAgB,GAC9C7F,EAAgBzc,OAAO,CAACikB,UAAU,CAAGzH,AAVU,IAAI,CAUHyG,KAAK,CAAC,EAAE,CACxDxG,EAAgByH,OAAO,CAAC1H,AAXuB,IAAI,CAWhBxc,OAAO,CAACogB,IAAI,CAAE,CAAA,EAAO,KAAM,CAAA,GAEtE,EAOAzF,EAAUvb,SAAS,CAAC4kB,gBAAgB,CAAG,SAAUxH,CAAU,CAAEjT,CAAS,EAClE,IAAI4a,EAAW5a,EAAUuZ,gBAAgB,CAACtG,EAAWyG,KAAK,CAAC,EAAE,EAAG/Z,EAAQsT,EAAWtT,KAAK,CAAExJ,EAAMwJ,EAAMxJ,GAAG,CAAEE,EAAMsJ,EAAMtJ,GAAG,CAAE4L,EAAQtC,EAAMlJ,OAAO,CAACwL,KAAK,CAiBvJ,QAfId,CAAAA,EAAShL,IAAQgL,EAAS9K,EAAG,IAGzB4L,GAAS9L,EAAMykB,EAAW,EACbzkB,EAAMykB,EAAW3Y,EAKjB5L,GAAOukB,EAOhC,EAOAxJ,EAAUvb,SAAS,CAACshB,cAAc,CAAG,WAC5B,IAAI,CAACjD,cAAc,EACpB,CAAA,IAAI,CAACA,cAAc,CAAG,EAAE,AAAD,EAE3B,IAAI,CAACA,cAAc,CAAC1W,IAAI,CAGxBpB,EAAS,IAAI,CAACvF,KAAK,CAAE,SAAU,WAC3B,IAAImJ,EAAY,IAAI,CAACA,SAAS,CAAEL,EAAQK,GAAcA,CAAAA,EAAUiT,UAAU,EACtEjT,EAAUiT,UAAU,CAAC,EAAE,EACvBjT,EAAUiT,UAAU,CAAC,EAAE,CAACtT,KAAK,EAC7B,IAAI,CAACA,KAAK,CAAC,EAAE,AAAD,EACZA,GACAK,EAAUrE,MAAM,CAACgE,EAAMtJ,GAAG,CAAEsJ,EAAMxJ,GAAG,CAE7C,GAEAiG,EAAS,IAAI,CAACvF,KAAK,CAAE,aAAc,WAC/B,IAAkBmJ,EAAYnJ,AAAlB,IAAI,CAAoBmJ,SAAS,CAAE6a,EAAa7a,EAAUS,QAAQ,CAC1E,UAAY,cACZ5J,CAFQ,IAAI,CAEN8P,QAAQ,EACdkU,CAAAA,EAAa7a,EAAUS,QAAQ,CAC3B,cAAgB,UAAS,EAEjC5J,AANY,IAAI,AAMX,CAACgkB,EAAW,CACb,AAAChkB,CAAAA,AAPO,IAAI,AAON,CAACgkB,EAAW,EAAI,CAAA,EAAM7a,CAAAA,EAAUsT,gBAAgB,EAAI,CAACzc,AAPnD,IAAI,CAOqD8P,QAAQ,CACrE3G,EAAUpH,MAAM,CAAGoH,EAAUyG,eAAe,CAC5C,CAAA,EAAKzG,EAAUgH,gBAAgB,CAACxL,MAAM,AAClD,GACJ,EAOA4V,EAAUvb,SAAS,CAACqG,OAAO,CAAG,WAC1B,IAAIkd,EAAQ,IAAI,CAEhB,IAAI,CAAC9K,YAAY,GACb,IAAI,CAAC3O,KAAK,GACVkR,EAAM,IAAI,CAACha,KAAK,CAAC8I,KAAK,CAAE,IAAI,CAACA,KAAK,EAClCkR,EAAM,IAAI,CAACha,KAAK,CAACikB,IAAI,CAAE,IAAI,CAACnb,KAAK,GAEjC,IAAI,CAACE,KAAK,GACVgR,EAAM,IAAI,CAACha,KAAK,CAACgJ,KAAK,CAAE,IAAI,CAACA,KAAK,EAClCgR,EAAM,IAAI,CAACha,KAAK,CAACikB,IAAI,CAAE,IAAI,CAACjb,KAAK,GAGrC,AAAC,CAAA,IAAI,CAAC/I,MAAM,EAAI,EAAE,AAAD,EAAG0V,OAAO,CAAC,SAAUmL,CAAC,EAC/BA,EAAEzb,OAAO,EACTyb,EAAEzb,OAAO,EAEjB,GAEA,CACI,SAAU,QAAS,QAAS,SAAU,UAAW,iBACjD,kBAAmB,iBAAkB,YAAa,iBAClD,WACH,CAACsQ,OAAO,CAAC,SAAU+B,CAAI,EAChB6K,CAAK,CAAC7K,EAAK,EAAI6K,CAAK,CAAC7K,EAAK,CAACrS,OAAO,EAClCkd,CAAK,CAAC7K,EAAK,CAACrS,OAAO,GAEvBkd,CAAK,CAAC7K,EAAK,CAAG,IAClB,GAEA,CAAC,IAAI,CAAChL,OAAO,CAAC,CAACiJ,OAAO,CAAC,SAAUuO,CAAI,EACjClP,EAAwBkP,EAC5B,EACJ,EACO3J,CACX,GAQJ,GACAjd,EAAgBD,EAAU,0BAA2B,EAAE,CAAE,WAwErD,SAAS8mB,EAAY3mB,CAAI,CAAEsa,CAAC,EAExB,IAAK,IADDxW,EAAI,EAAE,CACDgI,EAAI,EAAGA,EAAI9L,EAAK8E,MAAM,CAAEgH,IAAK,CAClC,IAAIhL,EAAId,CAAI,CAAC8L,EAAE,CAAC,EAAE,CACd/K,EAAIf,CAAI,CAAC8L,EAAE,CAAC,EAAE,CAClB,GAAI,AAAa,UAAb,OAAOhL,GAAkB,AAAa,UAAb,OAAOC,GAEhC,GAAI+K,AAAM,IAANA,EACAhI,EAAEqF,IAAI,CAAC,CAAC,IAAKrI,EAAGC,EAAE,OAEjB,GAAI+K,IAAM9L,EAAK8E,MAAM,CAAG,EACzBhB,EAAEqF,IAAI,CAAC,CAAC,IAAKrI,EAAGC,EAAE,OAGjB,GAAIuZ,EAAG,CACR,IAAIsM,EAAU5mB,CAAI,CAAC8L,EAAI,EAAE,CACrB+a,EAAU7mB,CAAI,CAAC8L,EAAI,EAAE,CACzB,GAAI8a,GAAWC,EAAS,CACpB,IAAIC,EAAKF,CAAO,CAAC,EAAE,CAAEG,EAAKH,CAAO,CAAC,EAAE,CAAEI,EAAKH,CAAO,CAAC,EAAE,CAAEI,EAAKJ,CAAO,CAAC,EAAE,CAEtE,GAAI,AAAc,UAAd,OAAOC,GACP,AAAc,UAAd,OAAOE,GACP,AAAc,UAAd,OAAOD,GACP,AAAc,UAAd,OAAOE,GACPH,IAAOE,GACPD,IAAOE,EAAI,CACX,IAAIC,EAAaJ,EAAKE,EAAK,EAAI,GAAIG,EAAaJ,EAAKE,EAAK,EAAI,GAC9DnjB,EAAEqF,IAAI,CAAC,CACH,IACArI,EAAIomB,EAAanlB,KAAKC,GAAG,CAACD,KAAKsd,GAAG,CAACve,EAAIgmB,GAAKxM,GAC5CvZ,EAAIomB,EAAaplB,KAAKC,GAAG,CAACD,KAAKsd,GAAG,CAACte,EAAIgmB,GAAKzM,GAC/C,CAAE,CACC,IACAxZ,EACAC,EACAD,EACAC,EACAD,EAAIomB,EAAanlB,KAAKC,GAAG,CAACD,KAAKsd,GAAG,CAACve,EAAIkmB,GAAK1M,GAC5CvZ,EAAIomB,EAAaplB,KAAKC,GAAG,CAACD,KAAKsd,GAAG,CAACte,EAAIkmB,GAAK3M,GAC/C,CACL,CACJ,CAEJ,MAEIxW,EAAEqF,IAAI,CAAC,CAAC,IAAKrI,EAAGC,EAAE,EAG9B,CACA,OAAO+C,CACX,CAMA,MALoB,CAChB6iB,YAAaA,EACbS,YAnHc,CACd,QAIJ,SAAwBC,CAAU,EAC9B,IAAIP,EAAKO,EAAWP,EAAE,CAAEC,EAAKM,EAAWN,EAAE,CAAEC,EAAKK,EAAWL,EAAE,CAAEC,EAAKI,EAAWJ,EAAE,CAAElb,EAAKsb,EAAW/iB,KAAK,CAAEA,EAAQyH,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKqb,EAAW/U,QAAQ,CAAEA,EAAWtG,AAAO,KAAK,IAAZA,GAAwBA,EAAI/G,EAASoiB,EAAWpiB,MAAM,CAAEqiB,EAAgBD,EAAWC,aAAa,CAC5QtnB,EAAO,CACP,CAAC,IAAK8mB,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKH,EAAIG,EAAG,CACb,CAAC,IAAKH,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKH,EAAIG,EAAG,CAChB,CACD,OAAOK,EACHX,EAAY,CACR,CAAC,IAAKG,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAKxiB,EAASgO,CAAAA,EAAW,IAAO,EAAE,EAAIyU,EAAG,CAC/C,CAAC,IAAKD,EAAKxiB,EAASgO,CAAAA,EAAW,IAAO,EAAE,EAAI2U,EAAG,CAC/C,CAAC,IAAKD,EAAIC,EAAG,CAChB,CAAEhiB,GACHjF,CACR,EArBIunB,SAsBJ,SAAyBF,CAAU,EAC/B,IAAIP,EAAKO,EAAWP,EAAE,CAAEC,EAAKM,EAAWN,EAAE,CAAEC,EAAKK,EAAWL,EAAE,CAAEC,EAAKI,EAAWJ,EAAE,CAAElb,EAAKsb,EAAW/iB,KAAK,CAAkC0H,EAAKqb,EAAW/U,QAAQ,CACnK,OAAOgV,AADqND,EAAWC,aAAa,CAC7N,CACnB,CAAC,IAAKR,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAKxiB,AAHoGyH,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAGhHuG,CAAAA,AAHwJtG,AAAO,KAAK,IAAZA,GAAwBA,EAGrK,GAAK,CAAA,EAAIib,EAAG,CAC3C,CAAC,IAAKD,EAAIC,EAAG,CAChB,CAAG,CACA,CAAC,IAAKH,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIG,EAAG,CACb,CAAC,IAAKH,EAAIG,EAAG,CAChB,AACL,EAhCIO,OAiCJ,SAAuBH,CAAU,EAC7B,IAAIP,EAAKO,EAAWP,EAAE,CAAEC,EAAKM,EAAWN,EAAE,CAAEC,EAAKK,EAAWL,EAAE,CAAEC,EAAKI,EAAWJ,EAAE,CAAElb,EAAKsb,EAAWvR,MAAM,CAAEA,EAAS/J,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKqb,EAAW/iB,KAAK,CAAEA,EAAQ0H,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKob,EAAW/U,QAAQ,CAAEA,EAAWrG,AAAO,KAAK,IAAZA,GAAwBA,EACjQ,OAAOqb,AAD8QD,EAAWC,aAAa,CAEzS,CACI,CAAC,IAAKR,EAAIC,EAAG,CACb,CACI,IACAD,EAAKhR,EACLiR,EACAD,EAAKhR,EAASxR,EAASgO,CAAAA,EAAW,GAAK,CAAA,EACvC2U,EACAH,EAAKxiB,EAASgO,CAAAA,EAAW,GAAK,CAAA,EAC9B2U,EACH,CACD,CAAC,IAAKD,EAAIC,EAAG,CAChB,CACD,CACI,CAAC,IAAKH,EAAIC,EAAG,CACb,CAAC,IAAKD,EAAIC,EAAID,EAAIG,EAAIH,EAAIG,EAAG,CAC7B,CAAC,IAAKD,EAAIC,EAAG,CAChB,AACT,CArDA,CAgHA,CAGJ,GACAnnB,EAAgBD,EAAU,gCAAiC,CAACA,CAAQ,CAAC,0BAA0B,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAU4nB,CAAa,CAAE/mB,CAAC,EAWvJ,IAAIqM,EAAOrM,EAAEqM,IAAI,CAMb/K,EAAMD,KAAKC,GAAG,CAAEF,EAAMC,KAAKD,GAAG,CAAEud,EAAMtd,KAAKsd,GAAG,CAyBlD,SAASqI,EAAuB1hB,CAAS,CAAEY,CAAI,CAAE+gB,CAAO,EAKpD,IAJA,IAGAvJ,EAAQwJ,EAHJ5lB,EAAM4E,EAAO,KACb2L,EAAOoV,GAAW,EACtBE,EAAQ7hB,EAAUlB,MAAM,CAAG,EAEpByN,GAAQsV,GAGX,GAAID,AADJA,CAAAA,EAAM5lB,EAAMgE,CAAS,CADrBoY,EAAS,AAACyJ,EAAQtV,GAAS,EACE,CAAC3L,IAAI,AAAD,EACvB,EACN2L,EAAO6L,EAAS,OAEf,IAAIwJ,CAAAA,EAAM,CAAA,EAIX,OAAOxJ,EAHPyJ,EAAQzJ,EAAS,EAMzB,OAAO7L,EAAO,EAAIA,EAAO,EAAI,CACjC,CAsCA,SAASuV,EAAsB9hB,CAAS,CAAEtB,CAAK,EAE3C,IADA,IAvByBqjB,EAuBrBjc,EAAI4b,EAAuB1hB,EAAWtB,EAAM5D,CAAC,CAAG,GAAK,EAClDgL,KACH,GAAI9F,CAAS,CAAC8F,EAAE,CAACjF,IAAI,EAAInC,EAAM5D,CAAC,GAzBXinB,EA2BG/hB,CAAS,CAAC8F,EAAE,CA1BhCpH,AA0BkCA,EA1B5B5D,CAAC,EAAIinB,EAASlhB,IAAI,EAC5BnC,AAyBsCA,EAzBhC5D,CAAC,EAAIinB,EAASnhB,IAAI,EACxBlC,AAwBsCA,EAxBhC3D,CAAC,EAAIgnB,EAAS/gB,IAAI,EACxBtC,AAuBsCA,EAvBhC3D,CAAC,EAAIgnB,EAAShhB,IAAI,EAwBpB,OAAO+E,EAGf,OAAO,EACX,CAaA,SAASkc,EAAiBC,CAAQ,EAC9B,IAAIjoB,EAAO,EAAE,CACb,GAAIioB,EAASnjB,MAAM,CAAE,CACjB9E,EAAKmJ,IAAI,CAAC,CAAC,IAAK8e,CAAQ,CAAC,EAAE,CAACC,KAAK,CAACpnB,CAAC,CAAEmnB,CAAQ,CAAC,EAAE,CAACC,KAAK,CAACnnB,CAAC,CAAC,EACzD,IAAK,IAAI+K,EAAI,EAAGA,EAAImc,EAASnjB,MAAM,CAAE,EAAEgH,EACnC9L,EAAKmJ,IAAI,CAAC,CAAC,IAAK8e,CAAQ,CAACnc,EAAE,CAACqc,GAAG,CAACrnB,CAAC,CAAEmnB,CAAQ,CAACnc,EAAE,CAACqc,GAAG,CAACpnB,CAAC,CAAC,CAE7D,CACA,OAAOf,CACX,CAgBA,SAASooB,EAAsBL,CAAQ,CAAEM,CAAM,EAC3CN,EAAShhB,IAAI,CAAGjF,EAAIimB,EAAShhB,IAAI,CAAEshB,EAAOthB,IAAI,EAC9CghB,EAAS/gB,IAAI,CAAGhF,EAAI+lB,EAAS/gB,IAAI,CAAEqhB,EAAOrhB,IAAI,EAC9C+gB,EAASnhB,IAAI,CAAG9E,EAAIimB,EAASnhB,IAAI,CAAEyhB,EAAOzhB,IAAI,EAC9CmhB,EAASlhB,IAAI,CAAG7E,EAAI+lB,EAASlhB,IAAI,CAAEwhB,EAAOxhB,IAAI,CAClD,CAoDA,IAAIyhB,EAAgB,SAAUJ,CAAK,CAAEC,CAAG,CAAE/lB,CAAO,EAC7C,IACImmB,EAA0GC,EAA4BC,EAAUC,EAAQC,EADxJV,EAAW,EAAE,CAAEliB,EAAiB3D,EAAQ2D,cAAc,CAAE6iB,EAAkBd,EAAsB/hB,EAAgBmiB,GAAQW,EAAgBf,EAAsB/hB,EAAgBoiB,GAClKW,EAAM/b,EAAK3K,EAAQgF,eAAe,CAAEiY,EAAI8I,EAAIrnB,CAAC,CAAGonB,EAAMpnB,CAAC,EAAIue,EAAI8I,EAAIpnB,CAAC,CAAGmnB,EAAMnnB,CAAC,GAAK,IAAM,IAOzG,SAASgoB,EAAc7mB,CAAI,CAAE8mB,CAAO,CAAE7mB,CAAE,CAAE8mB,CAAK,CAAEnT,CAAM,EACnD,IAAIpR,EAAQ,CACR5D,EAAGoB,EAAKpB,CAAC,CACTC,EAAGmB,EAAKnB,CAAC,AACb,EAEA,OADA2D,CAAK,CAACskB,EAAQ,CAAG7mB,CAAE,CAAC8mB,GAASD,EAAQ,CAAIlT,CAAAA,GAAU,CAAA,EAC5CpR,CACX,CAMA,SAASwkB,EAASnB,CAAQ,CAAErjB,CAAK,CAAEoW,CAAS,EACxC,IAAI4N,EAASrJ,EAAI3a,CAAK,CAACoW,EAAU,CAAGiN,CAAQ,CAACjN,EAAY,MAAM,EAC3DuE,EAAI3a,CAAK,CAACoW,EAAU,CAAGiN,CAAQ,CAACjN,EAAY,MAAM,EACtD,OAAOiO,EAAcrkB,EAAOoW,EAAWiN,EAAUjN,EAAa4N,CAAAA,EAAS,MAAQ,KAAI,EAAIA,EAAS,EAAI,GACxG,CAEIG,EAAgB,IAGhBN,EAAa,CACTL,MAFJO,EAAWS,EADGnjB,CAAc,CAAC8iB,EAAc,CACVV,EAAKW,GAGlCX,IAAKA,CACT,EACAQ,EAAWF,GAGXE,EAAWR,EAIXS,EAAkB,KAElBH,EAAWS,EADXV,EAAgBziB,CAAc,CAAC6iB,EAAgB,CACZV,EAAOY,GAC1Cb,EAAS9e,IAAI,CAAC,CACV+e,MAAOA,EACPC,IAAKM,CACT,GAKAA,CAAQ,CAACK,EAAI,EAAIZ,CAAK,CAACY,EAAI,EAEvBL,CAAQ,CAACK,EAAI,EAAIH,CAAQ,CAACG,EAAI,GAE9BJ,EAASR,CAAK,CADdY,EAAMA,AAAQ,MAARA,EAAc,IAAM,IACP,CAAGX,CAAG,CAACW,EAAI,CAC9Bb,EAAS9e,IAAI,CAAC,CACV+e,MAAOO,EACPN,IAAKY,EAAcN,EAAUK,EAAKN,EAAeM,EAAOJ,CAAAA,EAAS,MAAQ,KAAI,EAAIA,EAAS,EAAI,GAClG,GAEAI,EAAMA,AAAQ,MAARA,EAAc,IAAM,MAKlC,IAAIK,EAAelB,EAASnjB,MAAM,CAC9BmjB,CAAQ,CAACA,EAASnjB,MAAM,CAAG,EAAE,CAACqjB,GAAG,CACjCD,EACJO,EAAWM,EAAcI,EAAcL,EAAKH,GAC5CV,EAAS9e,IAAI,CAAC,CACV+e,MAAOiB,EACPhB,IAAKM,CACT,GAGA,IAAIW,EAAYL,EAAcN,EAD9BK,EAAMA,AAAQ,MAARA,EAAc,IAAM,IACmBH,GAQ7C,OAPAV,EAAS9e,IAAI,CAAC,CACV+e,MAAOO,EACPN,IAAKiB,CACT,GAEAnB,EAAS9e,IAAI,CAACof,GAEP,CACHvoB,KAFOynB,EAAcd,WAAW,CAACqB,EAAiBC,GAAW7lB,EAAQ6C,MAAM,EAG3Ee,UAAWiiB,CACf,CACJ,EAgCA,SAASoB,EAAUnB,CAAK,CAAEC,CAAG,CAAE/lB,CAAO,EAqBlC,IAsQ6B2lB,EAAUrjB,EAC/B4kB,EAIDZ,EAvQHT,EAAUS,EAAQa,EAJlBD,EAASvc,EAAK3K,EAAQgF,eAAe,CAAEiY,EAAI8I,EAAIrnB,CAAC,CAAGonB,EAAMpnB,CAAC,EAAIue,EAAI8I,EAAIpnB,CAAC,CAAGmnB,EAAMnnB,CAAC,GAAI+nB,EAAMQ,EAAS,IAAM,IAAKE,EAAc,EAAE,CAGnIC,EAAUrnB,EAAQsE,eAAe,CAAEgjB,EAAW1nB,EAAIkmB,EAAMpnB,CAAC,CAAEqnB,EAAIrnB,CAAC,EAAI2oB,EAAQE,QAAQ,CAAG,GAAIC,EAAW9nB,EAAIomB,EAAMpnB,CAAC,CAAEqnB,EAAIrnB,CAAC,EAAI2oB,EAAQE,QAAQ,CAAG,GAAIE,EAAW7nB,EAAIkmB,EAAMnnB,CAAC,CAAEonB,EAAIpnB,CAAC,EAAI0oB,EAAQK,SAAS,CAAG,GAAIC,EAAWjoB,EAAIomB,EAAMnnB,CAAC,CAAEonB,EAAIpnB,CAAC,EAAI0oB,EAAQK,SAAS,CAAG,GACxNE,EAAqB,CAAA,EAG9DjkB,EAAiB3D,EAAQ2D,cAAc,CAAE8iB,EAAgBnB,EAAuB3hB,EAAgB6jB,GAC5FhB,EAAkBlB,EAAuB3hB,EAAgB2jB,GAO7D,SAASO,EAAW3nB,CAAS,CAAEC,CAAO,CAAE2nB,CAAY,EAChD,IACIC,EAAYC,EAAWC,EAAcC,EADrCC,EAAkBjoB,EAAUxB,CAAC,CAAGyB,EAAQzB,CAAC,CAAG,EAAI,EAEhDwB,CAAAA,EAAUxB,CAAC,CAAGyB,EAAQzB,CAAC,EACvBqpB,EAAa7nB,EACb8nB,EAAY7nB,IAGZ4nB,EAAa5nB,EACb6nB,EAAY9nB,GAEZA,EAAUvB,CAAC,CAAGwB,EAAQxB,CAAC,EACvBupB,EAAchoB,EACd+nB,EAAe9nB,IAGf+nB,EAAc/nB,EACd8nB,EAAe/nB,GAWnB,IAPA,IAAIwJ,EAAIye,EAAkB,EAEtBvoB,EAAI0lB,EAAuB3hB,EAAgBqkB,EAAUtpB,CAAC,EAAGiF,EAAejB,MAAM,CAAG,GAGjF,EAEGiB,CAAc,CAAC+F,EAAE,EAAKye,CAAAA,EAAkB,GAAKxkB,CAAc,CAAC+F,EAAE,CAAClF,IAAI,EAAIwjB,EAAUtpB,CAAC,EACrFypB,EAAkB,GAAKxkB,CAAc,CAAC+F,EAAE,CAACjF,IAAI,EAAIsjB,EAAWrpB,CAAC,AAADA,GAAI,CAGhE,GAAIiF,CAAc,CAAC+F,EAAE,CAAClF,IAAI,EAAIwjB,EAAUtpB,CAAC,EACrCiF,CAAc,CAAC+F,EAAE,CAACjF,IAAI,EAAIsjB,EAAWrpB,CAAC,EACtCiF,CAAc,CAAC+F,EAAE,CAAC/E,IAAI,EAAIsjB,EAAatpB,CAAC,EACxCgF,CAAc,CAAC+F,EAAE,CAAC9E,IAAI,EAAIsjB,EAAYvpB,CAAC,CAAE,CACzC,GAAImpB,EACA,MAAO,CACHnpB,EAAGuB,EAAUvB,CAAC,CACdD,EAAGwB,EAAUxB,CAAC,CAAGyB,EAAQzB,CAAC,CACtBiF,CAAc,CAAC+F,EAAE,CAAClF,IAAI,CAAG,EACzBb,CAAc,CAAC+F,EAAE,CAACjF,IAAI,CAAG,EAC7BkhB,SAAUhiB,CAAc,CAAC+F,EAAE,AAC/B,EAGJ,MAAO,CACHhL,EAAGwB,EAAUxB,CAAC,CACdC,EAAGuB,EAAUvB,CAAC,CAAGwB,EAAQxB,CAAC,CACtBgF,CAAc,CAAC+F,EAAE,CAAC/E,IAAI,CAAG,EACzBhB,CAAc,CAAC+F,EAAE,CAAC9E,IAAI,CAAG,EAC7B+gB,SAAUhiB,CAAc,CAAC+F,EAAE,AAC/B,CACJ,CACAA,GAAKye,CACT,CACA,OAAOhoB,CACX,CA6BA,SAASioB,EAAkBzC,CAAQ,CAAEzlB,CAAS,CAAEC,CAAO,CAAE+mB,CAAM,CAAEjB,CAAM,EACnE,IAAIoC,EAAapC,EAAOqC,IAAI,CAAE/jB,EAAa0hB,EAAOsC,IAAI,CAAE7B,EAAMQ,EAAS,IAAM,IAAKsB,EAAa,CAAE9pB,EAAGwB,EAAUxB,CAAC,CAAEC,EAAGuB,EAAUvB,CAAC,AAAC,EAAG8pB,EAAa,CAAE/pB,EAAGwB,EAAUxB,CAAC,CAAEC,EAAGuB,EAAUvB,CAAC,AAAC,EAAG+pB,EAAqB/C,CAAQ,CAACe,EAAM,MAAM,EAC1N2B,CAAU,CAAC3B,EAAM,MAAM,CAAEiC,EAAqBhD,CAAQ,CAACe,EAAM,MAAM,EACnE2B,CAAU,CAAC3B,EAAM,MAAM,CAAEkC,EAAqBjD,CAAQ,CAACe,EAAM,MAAM,EACnEniB,CAAU,CAACmiB,EAAM,MAAM,CAAEmC,EAAqBlD,CAAQ,CAACe,EAAM,MAAM,EACnEniB,CAAU,CAACmiB,EAAM,MAAM,CAG3BoC,EAAc7L,EAAI0I,CAAQ,CAACe,EAAM,MAAM,CAAGxmB,CAAS,CAACwmB,EAAI,EAAGqC,EAAc9L,EAAI0I,CAAQ,CAACe,EAAM,MAAM,CAAGxmB,CAAS,CAACwmB,EAAI,EAGnHJ,EAASrJ,AAAiC,GAAjCA,EAAI6L,EAAcC,GACvB7oB,CAAS,CAACwmB,EAAI,CAAGvmB,CAAO,CAACumB,EAAI,CAC7BqC,EAAcD,CAGlBL,CAAAA,CAAU,CAAC/B,EAAI,CAAGf,CAAQ,CAACe,EAAM,MAAM,CACvC8B,CAAU,CAAC9B,EAAI,CAAGf,CAAQ,CAACe,EAAM,MAAM,CACvC,IAAIsC,EAAWnB,EAAW3nB,EAAWuoB,EAAYvB,EAAO,CAACR,EAAI,GACzD+B,CAAU,CAAC/B,EAAI,CAAEuC,EAAWpB,EAAW3nB,EAAWsoB,EAAYtB,EAAO,CAACR,EAAI,GAC1E8B,CAAU,CAAC9B,EAAI,CAenB,OAdAJ,EAAS0C,EACJC,CAAAA,GAAW3C,EACX2C,CAAAA,GAAmB3C,EAKxBA,EAASqC,EACJD,CAAAA,GAAqBpC,EACrBoC,CAAAA,GAA6BpC,EAElCA,EAASuC,EACJD,CAAAA,GAAqBtC,EACrBsC,CAAAA,GAA6BtC,CAEtC,CA2JA,IAVKG,CAAAA,EAAgBf,EAJrB/hB,EACIA,EAAe4e,KAAK,CAACiE,EAAiBC,EAAgB,GAGCV,EAAG,EAAK,KApBtCJ,EAqBehiB,CAAc,CAAC8iB,EAAc,CArBlCnkB,EAqBoCyjB,EApBnEmB,EAAStnB,EAAI+lB,EAASlhB,IAAI,CAAGnC,EAAM5D,CAAC,CAAE4D,EAAM5D,CAAC,CAAGinB,EAASnhB,IAAI,EAC7D5E,EAAI+lB,EAAS/gB,IAAI,CAAGtC,EAAM3D,CAAC,CAAE2D,EAAM3D,CAAC,CAAGgnB,EAAShhB,IAAI,EAGrD2hB,EAAS8B,EAAkBzC,EAAUrjB,EAgBoCwjB,EAhBlBoB,EAHU,CAChEoB,KAAMtoB,EAAQuE,UAAU,CACxBgkB,KAAMvoB,EAAQuE,UAAU,AAC5B,GAiBA6iB,EAAYrgB,IAAI,CAAC,CACbgf,IAAKA,EACLD,MAHJqB,EAfOD,EAAS,CACZvoB,EAAG2D,EAAM3D,CAAC,CACVD,EAAGinB,CAAQ,CAACW,EAAS,OAAS,OAAO,CAAIA,CAAAA,EAAS,EAAI,EAAC,CAC3D,EAAI,CACA5nB,EAAG4D,EAAM5D,CAAC,CACVC,EAAGgnB,CAAQ,CAACW,EAAS,OAAS,OAAO,CAAIA,CAAAA,EAAS,EAAI,EAAC,CAC3D,CAaA,GACAP,EAAMoB,GAIH,AAACV,CAAAA,EAAgBf,EAAsB/hB,EAAgBoiB,EAAG,EAAK,IAClEO,EAASP,CAAG,CAACW,EAAI,CAAGZ,CAAK,CAACY,EAAI,CAAG,EAKjCS,AAJAA,CAAAA,EAAoB,CAChBzoB,EAAGqnB,EAAIrnB,CAAC,CACRC,EAAGonB,EAAIpnB,CAAC,AACZ,CAAA,CACiB,CAAC+nB,EAAI,CAAG/iB,CAAc,CAAC8iB,EAAc,CAACH,EAASI,EAAM,MAAQA,EAAM,MAAM,CAAIJ,CAAAA,EAAS,EAAI,EAAC,EAC5Gc,EAAYrgB,IAAI,CAAC,CACbgf,IAAKA,EACLD,MAAOqB,CACX,GACApB,EAAMoB,EAMV,MAAO,CACHvpB,KAAMgoB,EAFVC,EAAWA,AAFXA,CAAAA,EAAWqD,AAnKX,SAASA,EAAYhpB,CAAS,CAAEC,CAAO,CAAE+mB,CAAM,EAE3C,GAAIhnB,EAAUxB,CAAC,GAAKyB,EAAQzB,CAAC,EAAIwB,EAAUvB,CAAC,GAAKwB,EAAQxB,CAAC,CACtD,MAAO,EAAE,CAEb,IASIwqB,EAAOtD,EAAUQ,EAAU+C,EAAgBC,EAAoBC,EAA0BC,EATzF7C,EAAMQ,EAAS,IAAM,IAAKsC,EAAiBxpB,EAAQ8E,eAAe,CAACC,MAAM,CAAEkhB,EAAS,CACpFqC,KAAM,CACF9jB,KAAM8iB,EACN7iB,KAAM+iB,EACN7iB,KAAM8iB,EACN7iB,KAAM+iB,CACV,EACAY,KAAMvoB,EAAQuE,UAAU,AAC5B,EAkGA,MA3FI8kB,AAFJA,CAAAA,EACI3D,EAAsB/hB,EAAgBzD,EAAS,EAC1B,IAErBkpB,EAAiBhB,EADjBiB,EAAqB1lB,CAAc,CAAC0lB,EAAmB,CACAnpB,EAAWC,EAAS+mB,EAAQjB,GAEnFD,EAAsBqD,EAAoBrpB,EAAQuE,UAAU,EAC5DglB,EAAkBrC,EAAS,CACvBvoB,EAAGuB,EAAUvB,CAAC,CACdD,EAAG2qB,CAAkB,CAACD,EAAiB,OAAS,OAAO,CAClDA,CAAAA,EAAiB,EAAI,EAAC,CAC/B,EAAI,CACA1qB,EAAGwB,EAAUxB,CAAC,CACdC,EAAG0qB,CAAkB,CAACD,EAAiB,OAAS,OAAO,CAClDA,CAAAA,EAAiB,EAAI,EAAC,CAC/B,EAGAE,CAAAA,EAA2B5D,EAAsB/hB,EAAgB4lB,EAAe,EACjD,KAG3BvD,EAFAsD,EAA2B3lB,CAAc,CAAC2lB,EAAyB,CAEnBtpB,EAAQuE,UAAU,EAElEglB,CAAe,CAAC7C,EAAI,CAAG0C,EAAiB1pB,EAAI2pB,CAAkB,CAAC3C,EAAM,MAAM,CAAG8C,EAAiB,EAAG,AAACF,CAAAA,CAAwB,CAAC5C,EAAM,MAAM,CACpI2C,CAAkB,CAAC3C,EAAM,MAAM,AAAD,EAAK,GACnC9mB,EAAKypB,CAAkB,CAAC3C,EAAM,MAAM,CAAG8C,EAAiB,EAAK,AAACF,CAAAA,CAAwB,CAAC5C,EAAM,MAAM,CAC/F2C,CAAkB,CAAC3C,EAAM,MAAM,AAAD,EAAK,GAIvCxmB,EAAUxB,CAAC,GAAK6qB,EAAgB7qB,CAAC,EACjCwB,EAAUvB,CAAC,GAAK4qB,EAAgB5qB,CAAC,EAC7BipB,GACA2B,CAAAA,CAAe,CAAC7C,EAAI,CAAG0C,EACnB1pB,EAAI2pB,CAAkB,CAAC3C,EAAM,MAAM,CAAE4C,CAAwB,CAAC5C,EAAM,MAAM,EAAI,EAC9E9mB,EAAIypB,CAAkB,CAAC3C,EAAM,MAAM,CAAE4C,CAAwB,CAAC5C,EAAM,MAAM,EAAI,CAAA,EAGtFkB,EAAqB,CAACA,GAKtBA,EAAqB,CAAA,GAG7B/B,EAAW,CAAC,CACJC,MAAO5lB,EACP6lB,IAAKwD,CACT,EAAE,GAGNJ,EAAQtB,EAAW3nB,EAAW,CAC1BxB,EAAGwoB,EAAS/mB,EAAQzB,CAAC,CAAGwB,EAAUxB,CAAC,CACnCC,EAAGuoB,EAAShnB,EAAUvB,CAAC,CAAGwB,EAAQxB,CAAC,AACvC,EAAGuoB,GACHrB,EAAW,CAAC,CACJC,MAAO5lB,EACP6lB,IAAK,CACDrnB,EAAGyqB,EAAMzqB,CAAC,CACVC,EAAGwqB,EAAMxqB,CAAC,AACd,CACJ,EAAE,CAEFwqB,CAAK,CAACjC,EAAS,IAAM,IAAI,GAAK/mB,CAAO,CAAC+mB,EAAS,IAAM,IAAI,GAEzDkC,EAAiBhB,EAAkBe,EAAMxD,QAAQ,CAAEwD,EAAOhpB,EAAS,CAAC+mB,EAAQjB,GAE5ED,EAAsBmD,EAAMxD,QAAQ,CAAE3lB,EAAQuE,UAAU,EACxD8hB,EAAW,CACP3nB,EAAGwoB,EACCiC,EAAMzqB,CAAC,CACPyqB,EAAMxD,QAAQ,CAACyD,EAAiB,OAAS,OAAO,CAC3CA,CAAAA,EAAiB,EAAI,EAAC,EAC/BzqB,EAAGuoB,EACCiC,EAAMxD,QAAQ,CAACyD,EAAiB,OAAS,OAAO,CAC3CA,CAAAA,EAAiB,EAAI,EAAC,EAC3BD,EAAMxqB,CAAC,AACf,EAIAuoB,EAAS,CAACA,EACVrB,EAAWA,EAASrgB,MAAM,CAAC0jB,EAAY,CACnCxqB,EAAGyqB,EAAMzqB,CAAC,CACVC,EAAGwqB,EAAMxqB,CAAC,AACd,EAAG0nB,EAAUa,MAKrBrB,EAAWA,EAASrgB,MAAM,CAAC0jB,EAAYrD,CAAQ,CAACA,EAASnjB,MAAM,CAAG,EAAE,CAACqjB,GAAG,CAAE5lB,EAAS,CAAC+mB,GAExF,EAmDuBpB,EAAOC,EAAKmB,EAAM,EAErB1hB,MAAM,CAAC4hB,EAAYzI,OAAO,KAG1C/a,UAAWiiB,CACf,CACJ,QA7WAK,EAAcriB,iBAAiB,CAAG,CAAA,EA8WlCojB,EAAUpjB,iBAAiB,CAAG,CAAA,EASb,CACbojB,UAAWA,EACX9B,SAtfJ,SAAkBW,CAAK,CAAEC,CAAG,EACxB,MAAO,CACHnoB,KAAM,CACF,CAAC,IAAKkoB,EAAMpnB,CAAC,CAAEonB,EAAMnnB,CAAC,CAAC,CACvB,CAAC,IAAKonB,EAAIrnB,CAAC,CAAEqnB,EAAIpnB,CAAC,CAAC,CACtB,CACDiF,UAAW,CAAC,CAAEkiB,MAAOA,EAAOC,IAAKA,CAAI,EAAE,AAC3C,CACJ,EA+eIG,cAAeA,CACnB,CAGJ,GACAxoB,EAAgBD,EAAU,8BAA+B,EAAE,CAAE,WA4RzD,MAtQyB,CAmBrBsG,WAAY,CA0ERlC,KAAM,WAMNgB,OAAQ,EAORS,UAAW,EASX+B,OAAQ,CA+CJ5C,QAAS,CAAA,EAMT+L,MAAO,SAMPoC,cAAe,SAIf6Y,OAAQ,CAAA,EAIRnmB,UAAW,CACf,EASAa,YAAa,CAITnB,OAAQ,SACZ,EASAoB,UAAW,CAIPpB,OAAQ,cACZ,CACJ,CACJ,CAkDJ,GACAtF,EAAgBD,EAAU,iCAAkC,CAACA,CAAQ,CAAC,8BAA8B,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUisB,CAAkB,CAAE/hB,CAAC,CAAEtJ,CAAC,CAAEC,CAAC,EAWlO,IAiEIqrB,EAjEAla,EAAa9H,EAAE8H,UAAU,CACzBlR,EAAWF,EAAEE,QAAQ,CACrBc,EAAUf,EAAEe,OAAO,CAAEC,EAAQhB,EAAEgB,KAAK,CAAEC,EAAQjB,EAAEiB,KAAK,CAAEf,EAAaF,EAAEE,UAAU,CAmBpF,SAASorB,EAAWtnB,CAAK,EACrB,IAAIunB,EAAYvnB,EAAMunB,SAAS,CAE/B,GAAIA,EACA,MAAO,CACHrlB,KAAMqlB,EAAUnrB,CAAC,EAAI,EACrB+F,KAAM,AAAColB,CAAAA,EAAUnrB,CAAC,EAAI,CAAA,EAAMmrB,CAAAA,EAAU3nB,KAAK,EAAI,CAAA,EAC/CyC,KAAMklB,EAAUlrB,CAAC,EAAI,EACrBiG,KAAM,AAACilB,CAAAA,EAAUlrB,CAAC,EAAI,CAAA,EAAMkrB,CAAAA,EAAU1nB,MAAM,EAAI,CAAA,CACpD,EAGJ,IAAI2nB,EAAKxnB,EAAMynB,OAAO,EAAIznB,EAAMynB,OAAO,CAACC,OAAO,GAC/C,OAAOF,EAAK,CACRtlB,KAAMlC,EAAM2nB,KAAK,CAAGH,EAAG5nB,KAAK,CAAG,EAC/BuC,KAAMnC,EAAM2nB,KAAK,CAAGH,EAAG5nB,KAAK,CAAG,EAC/ByC,KAAMrC,EAAM4nB,KAAK,CAAGJ,EAAG3nB,MAAM,CAAG,EAChCyC,KAAMtC,EAAM4nB,KAAK,CAAGJ,EAAG3nB,MAAM,CAAG,CACpC,EAAI,IACR,CAmMA,OAzKA,AAAC,SAAUwnB,CAAqB,EAwC5B,SAASQ,EAA8BC,CAAa,EAChD,IACI1rB,EAAGC,EADHmrB,EAAKF,EAAW,IAAI,EAExB,OAAQQ,EAAc5b,KAAK,EACvB,IAAK,QACD9P,EAAI,OACJ,KACJ,KAAK,OACDA,EAAI,MACZ,CACA,OAAQ0rB,EAAcxZ,aAAa,EAC/B,IAAK,MACDjS,EAAI,OACJ,KACJ,KAAK,SACDA,EAAI,MACZ,CACA,MAAO,CACHD,EAAGA,EAAIorB,CAAE,CAACprB,EAAE,CAAG,AAACorB,CAAAA,EAAGtlB,IAAI,CAAGslB,EAAGrlB,IAAI,AAAD,EAAK,EACrC9F,EAAGA,EAAImrB,CAAE,CAACnrB,EAAE,CAAG,AAACmrB,CAAAA,EAAGnlB,IAAI,CAAGmlB,EAAGllB,IAAI,AAAD,EAAK,CACzC,CACJ,CAgBA,SAASylB,EAAwBC,CAAE,CAAEC,CAAE,EACnC,IAAItoB,EAUJ,MATI,CAAC5C,EAAQkrB,IACTtoB,CAAAA,EAAM2nB,EAAW,IAAI,CAAA,GAEjBW,CAAAA,EAAK,CACD7rB,EAAG,AAACuD,CAAAA,EAAIuC,IAAI,CAAGvC,EAAIwC,IAAI,AAAD,EAAK,EAC3B9F,EAAG,AAACsD,CAAAA,EAAI0C,IAAI,CAAG1C,EAAI2C,IAAI,AAAD,EAAK,CAC/B,CAAA,EAGDjF,KAAK6qB,KAAK,CAACD,EAAG5rB,CAAC,CAAG2rB,EAAG3rB,CAAC,CAAE2rB,EAAG5rB,CAAC,CAAG6rB,EAAG7rB,CAAC,CAC9C,CAsBA,SAAS+rB,EAAqB1oB,CAAO,CAAE2oB,CAAY,CAAEnoB,CAAM,EAMvD,IALA,IAAIooB,EAAQhrB,AAAU,EAAVA,KAAKirB,EAAE,CAAQd,EAAKF,EAAW,IAAI,EAAGiB,EAAYf,EAAGrlB,IAAI,CAAGqlB,EAAGtlB,IAAI,CAAEsmB,EAAahB,EAAGllB,IAAI,CAAGklB,EAAGnlB,IAAI,CAAEomB,EAAQprB,KAAK6qB,KAAK,CAACM,EAAYD,GAAYG,EAAgBH,EAAY,EAAKI,EAAiBH,EAAa,EAAKI,EAAuBpB,EAAGtlB,IAAI,CAAGwmB,EAAeG,EAAqBrB,EAAGnlB,IAAI,CAAGsmB,EAAgBG,EAAY,CACvU1sB,EAAGwsB,EACHvsB,EAAGwsB,CACP,EACIE,EAAQtpB,EAASupB,EAAW,EAAGC,EAAoB,CAAA,EAAOC,EAAU,EAAGC,EAAU,EAC9EJ,EAAQ,CAAC1rB,KAAKirB,EAAE,EACnBS,GAASV,EAEb,KAAOU,EAAQ1rB,KAAKirB,EAAE,EAClBS,GAASV,EAoCb,OAlCAW,EAAW3rB,KAAK+rB,GAAG,CAACL,GAChB,AAACA,EAAQ,CAACN,GAAWM,GAASN,GAE9BU,EAAU,GACVF,EAAoB,CAAA,GAEfF,EAAQN,GAASM,GAAU1rB,KAAKirB,EAAE,CAAGG,EAE1CU,EAAU,GAELJ,EAAS1rB,KAAKirB,EAAE,CAAGG,GAAUM,GAAS,CAAE1rB,CAAAA,KAAKirB,EAAE,CAAGG,CAAI,GAE3DS,EAAU,GACVD,EAAoB,CAAA,GAIpBC,EAAU,GAGVD,GACAH,EAAU1sB,CAAC,EAAI8sB,EAAWR,EAC1BI,EAAUzsB,CAAC,EAAI8sB,EAAWT,EAAiBM,IAG3CF,EAAU1sB,CAAC,EAAI8sB,EAAWV,CAAAA,EAAc,CAAA,EAAMQ,CAAO,CAAC,EACtDF,EAAUzsB,CAAC,EAAI8sB,EAAWR,GAE1B1oB,EAAO7D,CAAC,GAAKwsB,GACbE,CAAAA,EAAU1sB,CAAC,CAAG6D,EAAO7D,CAAC,AAADA,EAErB6D,EAAO5D,CAAC,GAAKwsB,GACbC,CAAAA,EAAUzsB,CAAC,CAAG4D,EAAO5D,CAAC,AAADA,EAElB,CACHD,EAAG0sB,EAAU1sB,CAAC,CAAIgsB,EAAe/qB,KAAKgsB,GAAG,CAACN,GAC1C1sB,EAAGysB,EAAUzsB,CAAC,CAAI+rB,EAAe/qB,KAAKisB,GAAG,CAACP,EAC9C,CACJ,CAvIA1B,EAAsB1qB,OAAO,CAnB7B,SAASA,EAAQ8S,CAAU,CAAE8Z,CAAe,CAAEC,CAAU,EACpD,GAAIttB,EAAWD,EAAUU,GAAU,CAC/B,IAAI8sB,EAAaD,EAAW1sB,SAAS,CAErC2S,EAAW3S,SAAS,CAAC+S,SAAS,CAACpL,IAAI,CAAC,SAAU3G,CAAK,EAEZ,CAAA,IAA/BJ,AADUI,EAAMJ,OAAO,CACf+D,UAAU,CAACtB,OAAO,GAhCtCrC,CAAAA,AAiCuBA,EAjCjBJ,OAAO,CAACM,UAAU,EACxBF,AAgCuBA,EAhCjBC,MAAM,CAAC2iB,MAAM,CAAC,SAAUgJ,CAAG,CAAE3rB,CAAM,EAKrC,OAJIA,EAAOL,OAAO,EACdT,EAAM,CAAA,EAAOc,EAAOL,OAAO,CAAC+D,UAAU,CAAG1D,EAAOL,OAAO,CAAC+D,UAAU,EAC9D,CAAC,EAAI1D,EAAOL,OAAO,CAACM,UAAU,EAE/B0rB,GAAO3rB,EAAOL,OAAO,EAAIK,EAAOL,OAAO,CAACM,UAAU,AAC7D,EAAG,CAAA,EAAK,IACRf,EAAM,CAAA,EAAOa,AAyBUA,EAzBJJ,OAAO,CAAC+D,UAAU,CAAG3D,AAyBjBA,EAzBuBJ,OAAO,CAAC+D,UAAU,EAAI,CAAC,EAAI3D,AAyBlDA,EAzBwDJ,OAAO,CAACM,UAAU,EACjGhB,EAAM,0GAyBM,IAAI,CAACgB,UAAU,CAAG,IAAIurB,EAAgB,IAAI,EAC1C,IAAI,CAACvrB,UAAU,CAAC0Z,MAAM,CAAC,CAAA,GAE/B,GACA+R,EAAWnpB,eAAe,CAAG6nB,EAC7BsB,EAAWvpB,wBAAwB,CAAG2nB,EACtC4B,EAAWppB,kBAAkB,CAAG0nB,EAEhC5a,EAAWia,EACf,CACJ,CAyIJ,EAAGC,GAA0BA,CAAAA,EAAwB,CAAC,CAAA,GAO/CA,CACX,GACAjsB,EAAgBD,EAAU,sBAAuB,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,iCAAiC,CAAEA,CAAQ,CAAC,uBAAuB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUoC,CAAU,CAAEosB,CAAoB,CAAEC,CAAqB,CAAEC,CAAK,CAAE7tB,CAAC,EAWnT,IAAIqH,EAAWrH,EAAEqH,QAAQ,CAAEtG,EAAUf,EAAEe,OAAO,CAAEsL,EAAOrM,EAAEqM,IAAI,CAAEhC,EAAQrK,EAAEqK,KAAK,CAM1EjJ,EAAMC,KAAKD,GAAG,CAAEE,EAAMD,KAAKC,GAAG,CAgH9BwsB,EAA4B,WAM5B,SAASA,EAAWhsB,CAAK,EACrB,IAAI,CAACH,IAAI,CAACG,EACd,CA6PA,OAvPAgsB,EAAWntB,OAAO,CAAG,SAAU8S,CAAU,CAAE+Z,CAAU,EACjDI,EAAsBjtB,OAAO,CAAC8S,EAAYqa,EAAYN,EAC1D,EAcAM,EAAWhtB,SAAS,CAACa,IAAI,CAAG,SAAUG,CAAK,EAEvC,IAAI,CAACA,KAAK,CAAGA,EAEb,IAAI,CAACisB,WAAW,CAAG,EAAE,CAErB1mB,EAASvF,EAAO,SAAU,WACtB,IAAI,CAACE,UAAU,CAAC0Z,MAAM,EAC1B,EACJ,EAUAoS,EAAWhtB,SAAS,CAAC4a,MAAM,CAAG,SAAUsS,CAAW,EAC/C,IAAIlsB,EAAQ,IAAI,CAACA,KAAK,CAAEE,EAAa,IAAI,CAAEisB,EAAiBjsB,EAAW+rB,WAAW,AAElF/rB,CAAAA,EAAW+rB,WAAW,CAAG,EAAE,CAC3BjsB,EAAMC,MAAM,CAAC0V,OAAO,CAAC,SAAU1V,CAAM,EAC7BA,EAAO8hB,OAAO,EAAI,CAAC9hB,EAAOL,OAAO,CAAC8R,UAAU,EAC5CzR,EAAOmsB,MAAM,CAACzW,OAAO,CAAC,SAAUzT,CAAK,EAEjC,IADIqH,EAUA5J,EATA0sB,EAAoBnqB,EAAMtC,OAAO,CAGjCysB,GAAqBA,EAAkBC,UAAU,EACjDD,CAAAA,EAAkBE,OAAO,CAAGF,EACvBC,UAAU,AAAD,EAElB,IAAIE,EAAY,AAAC,CAAA,AAAyB,OAAxBjjB,CAAAA,EAAKrH,EAAMtC,OAAO,AAAD,GAAe2J,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGgjB,OAAO,AAAD,GAChFhkB,EAAMrG,EAAMtC,OAAO,CAAC2sB,OAAO,CAE3BrqB,CAAAA,EAAM6f,OAAO,EAAI7f,AAAmB,CAAA,IAAnBA,EAAMuqB,QAAQ,EAAcD,GAC7CA,EAAS7W,OAAO,CAAC,SAAU4W,CAAO,EAC9B5sB,CAAAA,EAAKK,EAAM8M,GAAG,CAAC,AAAmB,UAAnB,OAAOyf,EAClBA,EAAUA,EAAQ5sB,EAAE,CAAA,YACNosB,GACdpsB,EAAGM,MAAM,CAAC8hB,OAAO,EACjBpiB,EAAGoiB,OAAO,EACVpiB,AAAgB,CAAA,IAAhBA,EAAG8sB,QAAQ,EAEXvsB,EAAW+rB,WAAW,CAACtlB,IAAI,CAAC,IAAIlH,EAAWyC,EAC3CvC,EAAI,AAAmB,UAAnB,OAAO4sB,EACP,CAAC,EACDA,GAEZ,EAER,EAER,GAGA,IAAK,IAAIG,EAAI,EAAGC,EAAI,KAAK,EAAGC,EAAQ,KAAK,EAAGC,EAASV,EAAe7pB,MAAM,CAAEwqB,EAAS5sB,EAAW+rB,WAAW,CAAC3pB,MAAM,CAAEoqB,EAAIG,EAAQ,EAAEH,EAAG,CACjIE,EAAQ,CAAA,EACR,IAAIG,EAASZ,CAAc,CAACO,EAAE,CAC9B,IAAKC,EAAI,EAAGA,EAAIG,EAAQ,EAAEH,EAAG,CACzB,IAAIK,EAAS9sB,EAAW+rB,WAAW,CAACU,EAAE,CACtC,GAAI,AAACI,CAAAA,EAAOntB,OAAO,EAAImtB,EAAOntB,OAAO,CAAC6B,IAAI,AAAD,IACpCurB,CAAAA,EAAOptB,OAAO,EAAIotB,EAAOptB,OAAO,CAAC6B,IAAI,AAAD,GACrCsrB,EAAOjtB,SAAS,GAAKktB,EAAOltB,SAAS,EACrCitB,EAAOhtB,OAAO,GAAKitB,EAAOjtB,OAAO,CAAE,CACnCitB,EAAOvsB,QAAQ,CAAGssB,EAAOtsB,QAAQ,CACjCmsB,EAAQ,CAAA,EACR,KACJ,CACJ,CACKA,GACDG,EAAO1nB,OAAO,EAEtB,CAIA,OAAO,IAAI,CAAC9B,cAAc,CAC1B,OAAO,IAAI,CAACU,aAAa,CAEzB/D,EAAW+sB,iBAAiB,CAACf,EACjC,EAUAF,EAAWhtB,SAAS,CAACiuB,iBAAiB,CAAG,SAAUf,CAAW,EACtDA,EAEA,IAAI,CAAClsB,KAAK,CAACC,MAAM,CAAC0V,OAAO,CAAC,SAAU1V,CAAM,EACtC,IAAI6E,EAAS,WAGT,IAAI5E,EAAaD,EAAOD,KAAK,CAACE,UAAU,CACxCgtB,AADkDhtB,CAAAA,GAAcA,EAAW+rB,WAAW,EAAI,EAAE,AAAD,EACrFtW,OAAO,CAAC,SAAUnV,CAAU,EAC1BA,EAAWV,SAAS,EACpBU,EAAWV,SAAS,CAACG,MAAM,GAAKA,GAChCO,EAAWsE,MAAM,EAEzB,GACI7E,EAAOktB,2BAA2B,GAClCltB,EAAOktB,2BAA2B,GAClC,OAAOltB,EAAOktB,2BAA2B,CAEjD,CACIltB,AAA6B,EAAA,IAA7BA,EAAOL,OAAO,CAACuD,SAAS,CACxB2B,IAGA7E,EAAOktB,2BAA2B,CAAG5nB,EAAStF,EAAQ,eAAgB6E,EAE9E,GAIA,IAAI,CAACmnB,WAAW,CAACtW,OAAO,CAAC,SAAUnV,CAAU,EACzCA,EAAWsE,MAAM,EACrB,EAER,EAeAknB,EAAWhtB,SAAS,CAAC0E,iBAAiB,CAAG,SAAU9D,CAAO,EAGtD,IAAK,IADewtB,EADhBntB,EAAS,IAAI,CAACD,KAAK,CAACC,MAAM,CAAE0E,EAAS4F,EAAK3K,EAAQgE,eAAe,CAAE,GACnEJ,EAAY,EAAE,CACT8F,EAAI,EAAG+jB,EAAOptB,EAAOqC,MAAM,CAAEgH,EAAI+jB,EAAM,EAAE/jB,EAC9C,GAAIrJ,CAAM,CAACqJ,EAAE,CAACyY,OAAO,EAAI,CAAC9hB,CAAM,CAACqJ,EAAE,CAAC1J,OAAO,CAAC8R,UAAU,CAClD,IAAK,IAAIgb,EAAI,EAAGY,EAAOrtB,CAAM,CAACqJ,EAAE,CAAC8iB,MAAM,CAAC9pB,MAAM,CAAEonB,EAAK,KAAK,EAAGxnB,EAAQ,KAAK,EAAGwqB,EAAIY,EAAM,EAAEZ,EAEjFxqB,AADJA,CAAAA,EAAQjC,CAAM,CAACqJ,EAAE,CAAC8iB,MAAM,CAACM,EAAE,AAAD,EAChB3K,OAAO,EACb2H,CAAAA,EAAKF,AAhR7B,SAAoBtnB,CAAK,EACrB,IAAIunB,EAAYvnB,EAAMunB,SAAS,CAE/B,GAAIA,EACA,MAAO,CACHrlB,KAAMqlB,EAAUnrB,CAAC,EAAI,EACrB+F,KAAM,AAAColB,CAAAA,EAAUnrB,CAAC,EAAI,CAAA,EAAMmrB,CAAAA,EAAU3nB,KAAK,EAAI,CAAA,EAC/CyC,KAAMklB,EAAUlrB,CAAC,EAAI,EACrBiG,KAAM,AAACilB,CAAAA,EAAUlrB,CAAC,EAAI,CAAA,EAAMkrB,CAAAA,EAAU1nB,MAAM,EAAI,CAAA,CACpD,EAGJ,IAAI2nB,EAAKxnB,EAAMynB,OAAO,EAAIznB,EAAMynB,OAAO,CAACC,OAAO,GAC/C,OAAOF,EAAK,CACRtlB,KAAMlC,EAAM2nB,KAAK,CAAGH,EAAG5nB,KAAK,CAAG,EAC/BuC,KAAMnC,EAAM2nB,KAAK,CAAGH,EAAG5nB,KAAK,CAAG,EAC/ByC,KAAMrC,EAAM4nB,KAAK,CAAGJ,EAAG3nB,MAAM,CAAG,EAChCyC,KAAMtC,EAAM4nB,KAAK,CAAGJ,EAAG3nB,MAAM,CAAG,CACpC,EAAI,IACR,EA6PwCG,EAAK,GAEjBsB,EAAUmD,IAAI,CAAC,CACXvC,KAAMslB,EAAGtlB,IAAI,CAAGO,EAChBN,KAAMqlB,EAAGrlB,IAAI,CAAGM,EAChBJ,KAAMmlB,EAAGnlB,IAAI,CAAGI,EAChBH,KAAMklB,EAAGllB,IAAI,CAAGG,CACpB,GAsBpB,OAfAnB,EAAYA,EAAU+pB,IAAI,CAAC,SAAUrjB,CAAC,CAAEvC,CAAC,EACrC,OAAOuC,EAAE9F,IAAI,CAAGuD,EAAEvD,IAAI,AAC1B,GAEKnF,EAAQW,EAAQgE,eAAe,IAChCwpB,EACIxtB,EAAQgE,eAAe,CACnB4pB,AAlPpB,SAAiChqB,CAAS,EAItC,IAAK,IAFDiqB,EADA3X,EAAMtS,EAAUlB,MAAM,CAAEorB,EAAY,EAAE,CAGjCpkB,EAAI,EAAGA,EAAIwM,EAAK,EAAExM,EAGvB,IAAK,IAAIojB,EAAIpjB,EAAI,EAAGojB,EAAI5W,EAAK,EAAE4W,EAC3Be,CAAAA,EACIE,AApChB,SAASA,EAA0BzjB,CAAC,CAAEvC,CAAC,CAAEimB,CAAQ,EAE7C,IAAIjpB,EAAS4F,EAAKqjB,EAAU,IAAKC,EAAW3jB,EAAE1F,IAAI,CAAGG,EAASgD,EAAEpD,IAAI,CAAGI,GACnEuF,EAAE3F,IAAI,CAAGI,EAASgD,EAAEnD,IAAI,CAAGG,EAAQmpB,EAAW5jB,EAAE7F,IAAI,CAAGM,EAASgD,EAAEvD,IAAI,CAAGO,GACzEuF,EAAE9F,IAAI,CAAGO,EAASgD,EAAEtD,IAAI,CAAGM,EAAQopB,EAAYF,EAAY3jB,EAAE9F,IAAI,CAAGuD,EAAEtD,IAAI,CAAG6F,EAAE9F,IAAI,CAAGuD,EAAEtD,IAAI,CAAGsD,EAAEvD,IAAI,CAAG8F,EAAE7F,IAAI,CAAIgO,IAAU2b,EAAYF,EAAY5jB,EAAE3F,IAAI,CAAGoD,EAAEnD,IAAI,CAAG0F,EAAE3F,IAAI,CAAGoD,EAAEnD,IAAI,CAAGmD,EAAEpD,IAAI,CAAG2F,EAAE1F,IAAI,CAAI6N,WAG/M,AAAIyb,GAAYD,EACJlpB,EACJgpB,EAA0BzjB,EAAGvC,EAAGpI,KAAK+Z,KAAK,CAAC3U,EAAS,IACpD0N,IAED7S,EAAIuuB,EAAWC,EAC1B,EAuB0CxqB,CAAS,CAAC8F,EAAE,CAAE9F,CAAS,CAACkpB,EAAE,CAAA,EAEjC,IACnBgB,EAAU/mB,IAAI,CAAC8mB,GAM3B,OADAC,EAAU/mB,IAAI,CAAC,IACRrH,EAAIC,KAAK+Z,KAAK,CAACoU,EAAUH,IAAI,CAAC,SAAUrjB,CAAC,CAAEvC,CAAC,EAC/C,OAAQuC,EAAIvC,CAChB,EAAE,CAGFpI,KAAK+Z,KAAK,CAACoU,EAAUprB,MAAM,CAAG,IAAI,CAAG,EAAI,GACtC,EAEP,EAwN4CkB,GAChCA,EAAUmS,OAAO,CAAC,SAAU4P,CAAQ,EAChCA,EAASnhB,IAAI,EAAIgpB,EACjB7H,EAASlhB,IAAI,EAAI+oB,EACjB7H,EAAShhB,IAAI,EAAI6oB,EACjB7H,EAAS/gB,IAAI,EAAI4oB,CACrB,IAEG5pB,CACX,EAeAwoB,EAAWhtB,SAAS,CAAC8E,kBAAkB,CAAG,SAAUN,CAAS,EAEzD,IADA,IAAiC1B,EAAOC,EAApColB,EAAW,EAAGG,EAAY,EAAkBhe,EAAI9F,EAAUlB,MAAM,CAC7DgH,KACHxH,EAAQ0B,CAAS,CAAC8F,EAAE,CAACjF,IAAI,CAAGb,CAAS,CAAC8F,EAAE,CAAClF,IAAI,CAC7CrC,EAASyB,CAAS,CAAC8F,EAAE,CAAC9E,IAAI,CAAGhB,CAAS,CAAC8F,EAAE,CAAC/E,IAAI,CAC1C4iB,EAAWrlB,GACXqlB,CAAAA,EAAWrlB,CAAI,EAEfwlB,EAAYvlB,GACZulB,CAAAA,EAAYvlB,CAAK,EAGzB,MAAO,CACHulB,UAAWA,EACXH,SAAUA,CACd,CACJ,EAaA6E,EAAWhtB,SAAS,CAAC6F,0BAA0B,CAAG,SAAUmlB,CAAa,EACrE,IAAIiE,EAAUjE,AAAwB,SAAxBA,EAAc5b,KAAK,EAC7B4b,AAAwB,UAAxBA,EAAc5b,KAAK,CAAc8f,EAAUlE,AAAgC,QAAhCA,EAAcxZ,aAAa,EACtEwZ,AAAgC,WAAhCA,EAAcxZ,aAAa,CAC/B,OAAOyd,EACFC,EAAAA,GAAU,KAAK,EACfA,EAAAA,GAAiB,KAAK,CAC/B,EACOlC,CACX,IAwCA,OAnCAA,EAAWhtB,SAAS,CAACsE,UAAU,CAAGuoB,EAmC3BG,CACX,GACA1uB,EAAgBD,EAAU,+CAAgD,EAAE,CAAE,WA+gB1E,MAL4B,CACxB8wB,KAreO,CAMPC,kBAAmB,OAQnBC,kBAAmB,GAMnBC,gBAAiB,GACrB,EAidItjB,cAvcgB,CAYhBujB,kBAAmB,CAAA,EA0CnBtY,QAAS,KAAK,EAqGduY,cAAe,EAgBfC,SAAU,aAWVpsB,QAAS,KAAK,EAadmO,cAAe,MAqBfke,YAAa,CAET5sB,MAAO,GAEPC,OAAQ,GAER4sB,QAAS,EAET5tB,OAAQ,CACZ,EAWA2P,SAAU,CAAA,EAOVpS,EAAG,EAOHC,EAAG,EASHwD,OAAQ,KAAK,EAUb6sB,oBAAqB,OASrBC,eAAgB,GAWhBC,cAAe,KAAK,EAgBpBC,gBAAiB,WAiBjBC,gBAAiB,KAAK,EActBC,oBAAqB,WAIrBC,aAAc,CAAA,EAOdC,cAAe,CAWX/gB,MAAO,QAIP9P,EAAG,EAIHC,EAAG,CACP,EAOA6wB,aAAc,EAQdC,SAAU,KAAK,EAMfC,eAAgB,CAWZlhB,MAAO,OAIP9P,EAAG,EAIHC,EAAG,CACP,EAcAgxB,WAAY,CAERxsB,MAAO,UAEP6Y,OAAQ,UAER1V,SAAU,OACd,EAYAspB,WAAY,CAERzsB,MAAO,UAEPmD,SAAU,OACd,CACJ,CASA,CAGJ,GACA5I,EAAgBD,EAAU,kDAAmD,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,+CAA+C,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUkK,CAAC,CAAEtJ,CAAC,CAAEwxB,CAAqB,CAAEvxB,CAAC,EAUvQ,IAcIwxB,EAdAjqB,EAAiB8B,EAAE9B,cAAc,CACjCtH,EAAWF,EAAEE,QAAQ,CACrBoH,EAAWrH,EAAEqH,QAAQ,CAAEtG,EAAUf,EAAEe,OAAO,CAAEsQ,EAASrR,EAAEqR,MAAM,CAAE0K,EAAO/b,EAAE+b,IAAI,CAAE3P,EAAWpM,EAAEoM,QAAQ,CAAEnL,EAAQjB,EAAEiB,KAAK,CAAEoL,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAM9JuxB,EAAqB,EAAE,CAuB3B,SAASC,IACL,IAaIpwB,EAAK4L,EAbLykB,EAAe,IAAI,CAACzkB,KAAK,CAAE3J,EAAOouB,EAAapuB,IAAI,CAAEnC,EAAM,IAAI,CAACA,GAAG,CAAEyG,EAAO,IAAI,CAAC/F,KAAK,CAAC+F,IAAI,CAE/F+pB,EAAe,SAAUnO,CAAI,CAAEoO,CAAK,EAChC,IAAIC,EAAWvuB,AAAS,SAATA,EACX,WAAa,QACbwuB,EAAO,IAAIlqB,EAAKQ,IAAI,CAACob,GACrBuO,EAAanqB,EAAK+G,GAAG,CAACkjB,EAAUC,GAKpC,OAJAlqB,EAAKoqB,GAAG,CAACH,EAAUC,EAAMC,EAAaH,GAClCG,IAAenqB,EAAK+G,GAAG,CAACkjB,EAAUC,IAClClqB,EAAKoqB,GAAG,CAAC,OAAQF,EAAM,GAEpBA,EAAKG,OAAO,GAAKzO,CAC5B,EAEIrX,EAASulB,IACTrwB,EAAMF,EAAMuwB,EACZzkB,EAAQykB,GAEHA,IACLrwB,EAAMF,EAAMwwB,EAAaxwB,EAAK,CAAEuwB,CAAAA,EAAaE,KAAK,EAAI,CAAA,GAElD,IAAI,CAAC/vB,KAAK,EACV,CAAA,IAAI,CAACA,KAAK,CAACgM,UAAU,CAAG1M,EAAME,CAAE,GAGxC,IAAI2M,EAAU5B,EAAK,IAAI,CAAC4B,OAAO,CAAEoX,OAAO8M,SAAS,EAmBjD,OAlBK/lB,EAAS9K,IACVA,CAAAA,EAAM2M,CAAM,EAEZ3M,GAAO2M,IACP3M,EAAM2M,EACe,KAAA,IAAVf,GACPA,CAAAA,EAAQ0kB,EAAatwB,EAAKqwB,EAAaE,KAAK,CAAA,EAEhD,IAAI,CAACxkB,MAAM,CAAGhM,KAAKC,GAAG,CAACA,EAAM4L,EAAOb,EAAK,IAAI,CAAC6B,OAAO,CAAEmX,OAAOC,SAAS,IAEtElZ,EAAShL,GAGL,CAACgL,EAASulB,IACfA,GACAA,EAAaS,UAAU,EACvB9wB,CAAAA,GAAOqwB,EAAaS,UAAU,AAAD,EAL7B9wB,EAAM,KAAK,EAORA,CACX,CAwBA,SAAS+wB,IACD,IAAI,CAAC3wB,OAAO,CAACoL,aAAa,EAC1B,IAAI,CAACpL,OAAO,CAACoL,aAAa,CAAC3I,OAAO,EAClC,CAAA,IAAI,CAAC2I,aAAa,CAAG,IAAI0kB,EAAyB,IAAI,CAAA,CAE9D,CAIA,SAASxe,IACL,IAAkB+S,EAAOjkB,AAAb,IAAI,CAAeikB,IAAI,CAAEjZ,EAAgBhL,AAAzC,IAAI,CAA2CgL,aAAa,CACxE,GAAIA,EAAe,CACXV,EAASU,EAAcwlB,gBAAgB,IACvCxlB,EAAcylB,WAAW,CAACzlB,EAAcwlB,gBAAgB,EACxD,OAAOxlB,EAAcwlB,gBAAgB,EAEzCvM,EAAKtO,OAAO,CAAC,SAAU7P,CAAI,EACvBA,EAAK4qB,WAAW,GAChB5qB,EAAK6qB,QAAQ,EACjB,GACA3wB,AAVQ,IAAI,CAUN4wB,cAAc,GACpB5lB,EAAclG,MAAM,GACpB,IAAI0L,EAAgBxF,EAAcpL,OAAO,CAAC4Q,aAAa,AAClDxF,CAAAA,EAAcpL,OAAO,CAAC8Q,QAAQ,GAC3BF,AAAkB,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAACqgB,cAAc,CAAG,CAAA,CAAG,EAGrC,CACJ,CAIA,SAASzf,EAAgBpR,CAAK,EAE1B,IADIqR,EAAUnI,EAAQ4nB,EAAStgB,EAC3BxF,EAAgBhL,EAAMgL,aAAa,CAAEiG,EAAS,WAC1CjG,IACAqG,EAAWrR,EAAM8I,KAAK,CAAC,EAAE,CAACwI,WAAW,GACrCpI,EAASlJ,EAAMkJ,MAAM,CACrBsH,EAAiBxF,GACbA,EAAcpL,OAAO,CAAC4Q,aAAa,CACnClG,EAAS+G,EAAS7R,GAAG,GACrBwL,EAAclG,MAAM,CAACuM,EAAS7R,GAAG,CAAE6R,EAAS/R,GAAG,EAG/C4J,EAAO6nB,OAAO,EACdvgB,AAAkB,QAAlBA,GACAA,IAAkBtH,EAAOtJ,OAAO,CAAC4Q,aAAa,GAE9CsgB,EAAU3xB,EAAMa,EAAMgxB,UAAU,EAC5B9nB,AAA0B,aAA1BA,EAAOtJ,OAAO,CAAC6Q,MAAM,CACrBqgB,EAAQvyB,CAAC,CAAGyB,EAAMoB,OAAO,CAGzB0vB,EAAQvyB,CAAC,EAAIyM,EAAcuF,SAAS,GAExCrH,EAAOxI,KAAK,CAACuwB,MAAM,CAAG,CAAA,EACtB/nB,EAAOkF,KAAK,CAAC0iB,IAGzB,EACI9lB,IACaiP,EAAK0V,EAAoB,SAAU/kB,CAAC,EAAI,OAAOA,CAAC,CAAC,EAAE,GAAK5K,CAAO,IAExE2vB,EAAmBhpB,IAAI,CAAC,CAAC3G,EAAO,CAExBuF,EAASvF,EAAM8I,KAAK,CAAC,EAAE,CAAE,mBAAoB,SAAU8B,CAAC,EAChDI,GACAA,EAAclG,MAAM,CAAC8F,EAAEpL,GAAG,CAAEoL,EAAEtL,GAAG,CAEzC,GAEAiG,EAASvF,EAAO,SAAUiR,GAC7B,CAAC,EAGVA,IAER,CAKA,SAASigB,IACL,IAAK,IAAI5nB,EAAI,EAAG6nB,EAAOxB,EAAmBrtB,MAAM,CAAEgH,EAAI6nB,EAAM,EAAE7nB,EAAG,CAC7D,IAAIsU,EAAS+R,CAAkB,CAACrmB,EAAE,CAClC,GAAIsU,CAAM,CAAC,EAAE,GAAK,IAAI,CAAE,CACpBA,CAAM,CAAC,EAAE,CAACjI,OAAO,CAAC,SAAUoJ,CAAM,EAAI,OAAOA,GAAU,GACvD4Q,EAAmByB,MAAM,CAAC9nB,EAAG,GAC7B,MACJ,CACJ,CACJ,CACA,SAAS+nB,IACL,IAAIrmB,EAAgB,IAAI,CAACA,aAAa,CACtC,GAAIA,EAAe,CACf,IAAIsmB,EAAsBtmB,EAAcuF,SAAS,EAC7C,CAAA,IAAI,CAACsgB,cAAc,EACnB,CAAA,IAAI,CAACzvB,OAAO,EAAIkwB,CAAkB,EAElC,IAAI,CAAChhB,iBAAiB,EACtB,CAAA,IAAI,CAACihB,YAAY,EAAID,CAAkB,CAE/C,CACJ,CAIA,SAASE,IACL,IAAkBxmB,EAAgBhL,AAAtB,IAAI,CAAwBgL,aAAa,CACrD,GAAIA,GAAiB,CAACA,EAAcpL,OAAO,CAAC8Q,QAAQ,CAAE,CAClD1F,EAAclG,MAAM,GACpB,IAAI0L,EAAgBxF,EAAcpL,OAAO,CAAC4Q,aAAa,AACnDA,AAAkB,CAAA,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAACqgB,cAAc,CAAG,CAAA,CAAG,CAEjC,CACJ,CAIA,SAAStf,EAAc3G,CAAC,EACpB,IAAuC6mB,EAAuB7xB,AAAlCgL,EAAEhL,OAAO,CAAiCoL,aAAa,CAAE0mB,EAAuB,IAAI,CAACphB,iBAAiB,CAAEqhB,EAAoB,IAAI,CAACd,cAAc,CACvK7lB,EAAgBhL,AADR,IAAI,CACUgL,aAAa,CAUvC,GATIymB,GACAA,EAAqBpvB,OAAO,EAC5B,CAACpD,EAAQ+L,IACT,IAAI,CAACpL,OAAO,CAACoL,aAAa,GAC1B,IAAI,CAACpL,OAAO,CAACoL,aAAa,CAAC3I,OAAO,CAAG,CAAA,EACrC,IAAI,CAAC2I,aAAa,CAAGA,EAAgB,IAAI0kB,EAAyB,IAAI,GAE1E,IAAI,CAACpf,iBAAiB,CAAG,CAAA,EACzB,IAAI,CAACugB,cAAc,CAAG,CAAA,EAClB7lB,EAAe,CACfoG,EAAgB,IAAI,EACpB,IAAIZ,EAAgB,AAACihB,GACjBA,EAAqBjhB,aAAa,EAAMxF,EAAcpL,OAAO,EAAIoL,EAAcpL,OAAO,CAAC4Q,aAAa,AACnGxF,CAAAA,EAAcpL,OAAO,CAAC8Q,QAAQ,GAC3BF,AAAkB,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAACqgB,cAAc,CAAG,CAAA,CAAG,GAG7B,CAAA,IAAI,CAACvgB,iBAAiB,GAAKohB,GAC3B,IAAI,CAACb,cAAc,GAAKc,CAAgB,GACxC,CAAA,IAAI,CAAClS,UAAU,CAAG,CAAA,CAAG,CAE7B,CACJ,CAUA,MAJ+B,CAC3B5gB,QAvLJ,SAASA,EAAQuI,CAAS,CAAEuK,CAAU,CAAEigB,CAAkB,EAEtD,GADAlC,EAA2BkC,EACvBxzB,EAAWD,EAAUU,GAAU,CAC/B,IAAIiT,EAAaH,EAAW3S,SAAS,AACrCoI,CAAAA,EAAUpI,SAAS,CAAC6yB,YAAY,CAAGjC,EACnCrqB,EAASoM,EAAY,oBAAqB4e,GAC1ChrB,EAASoM,EAAY,eAAgBT,GACrC3L,EAASoM,EAAY,UAAWuf,GAChC3rB,EAASoM,EAAY,aAAc0f,GACnC9rB,EAASoM,EAAY,SAAU6f,GAC/BjsB,EAASoM,EAAY,SAAUJ,GAC/BO,EAAWC,SAAS,CAACpL,IAAI,CAACyK,GAC1B7B,EAAO9J,EAAgB,CAAEuF,cAAeykB,EAAsBzkB,aAAa,AAAC,GAC5EuE,EAAO9J,EAAe0oB,IAAI,CAAEsB,EAAsBtB,IAAI,CAC1D,CACJ,CAyKA,CAGJ,GACA7wB,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,kDAAkD,CAAEA,CAAQ,CAAC,kCAAkC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwc,CAAI,CAAEtS,CAAC,CAAEtJ,CAAC,CAAE6zB,CAAwB,CAAEC,CAAU,CAAE7zB,CAAC,EAUhW,IAAIuH,EAAiB8B,EAAE9B,cAAc,CACjCF,EAAWrH,EAAEqH,QAAQ,CAAEysB,EAAgB9zB,EAAE8zB,aAAa,CAAEhW,EAAM9d,EAAE8d,GAAG,CAAE/c,EAAUf,EAAEe,OAAO,CAAE+V,EAA0B9W,EAAE8W,uBAAuB,CAAEid,EAAiB/zB,EAAE+zB,cAAc,CAAE1iB,EAASrR,EAAEqR,MAAM,CAAE0F,EAAY/W,EAAE+W,SAAS,CAAE3K,EAAWpM,EAAEoM,QAAQ,CAAEnL,EAAQjB,EAAEiB,KAAK,CAAEC,EAAalB,EAAEkB,UAAU,CAAE8yB,EAAMh0B,EAAEg0B,GAAG,CAAE3nB,EAAOrM,EAAEqM,IAAI,CAAE4nB,EAAOj0B,EAAEi0B,IAAI,CAAE5pB,EAAQrK,EAAEqK,KAAK,CA6C3V6pB,EAA+B,WAM/B,SAASA,EAAcpyB,CAAK,EACxB,IAAI,CAACqyB,aAAa,CAAGD,EAAcpzB,SAAS,CAACszB,cAAc,CAC3D,IAAI,CAACC,uBAAuB,CAAG,EAC/B,IAAI,CAACvyB,KAAK,CAAGA,EACb,IAAI,CAACH,IAAI,CAACG,EACd,CAy1CA,OAh1CAoyB,EAAcvzB,OAAO,CAAG,SAAUuI,CAAS,CAAEuK,CAAU,EACnDmgB,EAAyBjzB,OAAO,CAACuI,EAAWuK,EAAYygB,EAC5D,EAgBAA,EAAcpzB,SAAS,CAACyxB,WAAW,CAAG,SAAUnnB,CAAC,CAAE2H,CAAM,EACrD,IACsE3F,EACtEknB,EAA+CC,EAAUC,EAAYC,EAAcC,EAAKC,EAF9D7yB,EAAQgL,AAAd,IAAI,CAAwBhL,KAAK,CAAE6vB,EAAe7kB,AAAlD,IAAI,CAA4DqnB,aAAa,CAAC/oB,EAAE,CAAEmX,EAAWzgB,EAAM8I,KAAK,CAAC,EAAE,CAAE8V,EAAgB,AAAC5e,EAAMgR,QAAQ,EAAIhR,EAAMgR,QAAQ,CAACoN,gBAAgB,IAAOqC,GAAY,CAAC,EAAGhf,EAAOouB,EAAapuB,IAAI,CAAE4L,EAAewiB,EAAaxiB,YAAY,CACxRlB,EAAUyS,EAAczS,OAAO,CAAEC,EAAUwS,EAAcxS,OAAO,CAAUb,EAASkV,GAAYlhB,KAAKyP,KAAK,CAACzP,KAAKC,GAAG,CAACihB,EAASnhB,GAAG,CAAEiL,EAAK6B,EAASqU,EAASnhB,GAAG,IAC7I8L,EAAQykB,EAAaiD,MAAM,CAAwDC,EAAe,CAAA,EAEpH,GAAI5mB,AAAY,OAAZA,GAAoBC,AAAY,OAAZA,GAaxB,GATApM,EAAMgM,UAAU,CAAGZ,EACnBJ,AAToB,IAAI,CASVgoB,WAAW,CAAC1pB,GAEtB+D,IACA,IAAI,CAAC4lB,kBAAkB,CAAG,CAAA,EAC1BpZ,EAAK7a,SAAS,CAACk0B,eAAe,CAAC/rB,IAAI,CAACsZ,GAAY,CAAEzgB,MAAO,IAAI,CAACA,KAAK,AAAC,EAAGqN,EAAc,CAAA,GACrF,IAAI,CAAC8lB,YAAY,CAAGtD,EAAauD,oBAAoB,EAGrD3xB,AAAS,UAATA,GAAoBA,AAAS,SAATA,EACfgf,GAMDmS,EAAM,CACFxnB,MAAOykB,EACPvwB,IAAKiM,EACLvL,MAAOA,EACPmM,QAASA,EACTC,QAASA,CACb,EACAd,EAASmV,EAASoR,YAAY,CAAC1qB,IAAI,CAACyrB,GAChCtoB,EAASsoB,EAAIrnB,MAAM,GACnBA,CAAAA,EAASqnB,EAAIrnB,MAAM,AAAD,EAItBwnB,EAAe,CAAA,GAhBf3nB,EAAQykB,OAoBX,GAAIzkB,EAELG,EAAShM,KAAKC,GAAG,CAAC8L,AADlBA,CAAAA,EAAS/L,KAAKD,GAAG,CAACiM,EAASH,EAAOe,EAAO,EACdf,EAAOgB,GAClC2mB,EAAe,CAAA,OAEd,GAAItxB,AAAS,QAATA,GAGL,GAAIgf,EAMI,CAAA,AAAmB,KAAA,IAAZrU,GACP,AAAmB,KAAA,IAAZD,CAAsB,IAC7BA,EAAUoX,OAAOC,SAAS,CAC1BpX,EAAUmX,OAAO8M,SAAS,CAC1BrwB,EAAMC,MAAM,CAAC0V,OAAO,CAAC,SAAU1V,CAAM,EAEjC,IAAI4iB,EAAQ5iB,EAAO4iB,KAAK,CACpBA,IACA1W,EAAU5M,KAAKC,GAAG,CAACqjB,CAAK,CAAC,EAAE,CAAE1W,GAC7BC,EAAU7M,KAAKD,GAAG,CAACujB,CAAK,CAACA,EAAMvgB,MAAM,CAAG,EAAE,CAAE8J,GAEpD,GACA6E,EAAS,CAAA,GAGb3F,EAASmnB,EAAWI,AADpBA,CAAAA,EAAc7nB,AArEF,IAAI,CAqEYqoB,cAAc,CAACjnB,EAASD,EAASnM,EAAM+F,IAAI,CAACutB,MAAM,CAAA,EAC9C9zB,GAAG,CACnC+L,EAASsnB,EAAYvzB,GAAG,KAKvB,CACD0L,AA7EY,IAAI,CA6EFwlB,gBAAgB,CAAGlnB,EACjC,MACJ,MAEc,QAAT7H,GAAkBgf,IAGnBzgB,EAAMmJ,SAAS,EAAInJ,EAAMmJ,SAAS,CAACiT,UAAU,CAAC,EAAE,EAChDpc,CAAAA,EAAMmJ,SAAS,CAACiT,UAAU,CAAC,EAAE,CAACtT,KAAK,CAAClJ,OAAO,CAACwL,KAAK,CAAG,KAAK,CAAA,EAE7DE,EAASa,EACTZ,EAASa,GAET2mB,GAAgBlD,EAAaS,UAAU,EAAIrxB,EAAQqM,IACnDA,CAAAA,GAAUukB,EAAaS,UAAU,AAAD,EAEhCT,EAAa0D,UAAU,EAAIt0B,EAAQsM,IACnCA,CAAAA,GAAUskB,EAAa0D,UAAU,AAAD,EAEhC,IAAI,CAAC9E,QAAQ,EACb,CAAA,IAAI,CAACA,QAAQ,CAAC+E,aAAa,CAAGlqB,EAAI,CAAA,EAGjCmX,EAeDA,EAASvN,WAAW,CAAC5H,EAAQC,EAAQhB,EAAK0G,EAAQ,CAAA,GAAO,KAAK,EAC9D,CACI+F,QAAS,sBACTyc,oBAAqB5D,CACzB,IAfA8C,EAAeH,AADfA,CAAAA,EAAmBjqB,EAAMvI,EAAMJ,OAAO,CAACkJ,KAAK,CAAC,CAAC,EAAE,AAAD,EACfsC,KAAK,CACrConB,EAAiBpnB,KAAK,CAAGA,EACzBsnB,EAAaF,EAAiBhzB,GAAG,CACjCgzB,EAAiBhzB,GAAG,CAAGizB,EACvBltB,EAASvF,EAAO,OAAQ,WACpBwyB,EAAiBpnB,KAAK,CAAGunB,EACzBH,EAAiBhzB,GAAG,CAAGkzB,CAC3B,IAUJzd,EAAU,IAAI,CAAE,iBACpB,EASAmd,EAAcpzB,SAAS,CAACg0B,WAAW,CAAG,SAAU3D,CAAQ,EACpD,IAAI,CAACA,QAAQ,CAAG,IAAI,CAACzvB,OAAO,CAACyvB,QAAQ,CAAGA,CAC5C,EAQA+C,EAAcpzB,SAAS,CAACa,IAAI,CAAG,SAAUG,CAAK,EAC1C,IAAIgL,EAAgB,IAAI,CAAEpL,EAAUI,EAAMJ,OAAO,CAACoL,aAAa,CAAEqnB,EAAiBzyB,EAAQqW,OAAO,EAAIjL,EAAcsnB,cAAc,CAACnQ,KAAK,GAAKuR,EAAiB9zB,EAAQyvB,QAAQ,CAAEsE,EAAa,WACxL,IAAIC,EAAW5oB,EAAc4oB,QAAQ,CAAEC,EAAW7oB,EAAc6oB,QAAQ,CAEpED,GAAcA,EAASE,IAAI,EAC3B7e,EAAU2e,EAAU,QAEpBC,GAAcA,EAASC,IAAI,EAC3B7e,EAAU4e,EAAU,OAE5B,CACA7oB,CAAAA,EAAchL,KAAK,CAAGA,EACtBgL,EAAcpL,OAAO,CAAGA,EACxBoL,EAAciL,OAAO,CAAG,EAAE,CAC1BjL,EAAcqnB,aAAa,CAAGA,EAC9B,IAAI,CAAChV,cAAc,CAAG,EAAE,CACxB,IAAI,CAACA,cAAc,CAAC1W,IAAI,CAACpB,EAASvF,EAAMod,SAAS,CAAE,YAAauW,IAChE,IAAI,CAACtW,cAAc,CAAC1W,IAAI,CAACpB,EAASvF,EAAO,SAAU2zB,IAEnDtB,EAAc1c,OAAO,CAAC3K,EAAc+oB,kBAAkB,EAExB,KAAA,IAAnBL,GACPrB,CAAa,CAACqB,EAAe,EAC7B,IAAI,CAACjD,WAAW,CAACiD,EAAgB,CAAA,GAErC,IAAI,CAACrW,cAAc,CAAC1W,IAAI,CAACpB,EAASvF,EAAO,OAAQ,WAGzCA,EAAM8I,KAAK,EAAI9I,EAAM8I,KAAK,CAAC,EAAE,EAC7BvD,EAASvF,EAAM8I,KAAK,CAAC,EAAE,CAAE,cAAe,SAAU8B,CAAC,EAC3C,IAAI,CAACtL,GAAG,CAAG,IAAI,CAACE,GAAG,GACnBQ,EAAMgM,UAAU,EAChBpB,AAAc,wBAAdA,EAAEoM,OAAO,EACTpM,AAAc,gBAAdA,EAAEoM,OAAO,EACThM,EAAcioB,kBAAkB,EAChC,CAACjoB,EAAcmoB,YAAY,EAC3B,IAAI,CAACD,eAAe,CAAC,CAAA,EAAO,CAAA,EAEpC,EAER,GACJ,EAQAd,EAAcpzB,SAAS,CAACg1B,kBAAkB,CAAG,WACzC,IAAIhpB,EAAgB,IAAI,CAAEhL,EAAQ,IAAI,CAACA,KAAK,CAAEyuB,EAAW,IAAI,CAACA,QAAQ,CAAEhO,EAAWzgB,EAAM8I,KAAK,CAAC,EAAE,CAAEmrB,EAAc10B,KAAKyP,KAAK,CAACyR,EAASnhB,GAAG,CAAGmhB,EAASjhB,GAAG,EAAG00B,EAAY,CAACzT,EAAS0T,gBAAgB,CAAEC,EAAM,GAAK,KAC7MxV,EAAgB,AAAC5e,EAAMgR,QAAQ,EAC3BhR,EAAMgR,QAAQ,CAACoN,gBAAgB,IAAOqC,EAAUtU,EAAUyS,EAAczS,OAAO,CAAEC,EAAUwS,EAAcxS,OAAO,CAAEymB,EAAc7nB,EAAcqoB,cAAc,CAACjnB,EAASD,EAASnM,EAAM+F,IAAI,CAACutB,MAAM,EAAGe,EAASxB,EAAYrzB,GAAG,CAAE80B,EAASzB,EAAYvzB,GAAG,CAAE+vB,EAAWrkB,EAAcqkB,QAAQ,CAAEd,EAAoBvjB,EAAcpL,OAAO,CAAC2uB,iBAAiB,CAAEtY,EAAUjL,EAAciL,OAAO,CACtXse,EAAiBjqB,EAAS+kB,GAAWmF,EAAqB,CAAA,EAC9DxpB,EAAcqnB,aAAa,CAAC1c,OAAO,CAAC,SAAUka,CAAY,CAAEvmB,CAAC,EACzD,IAAI8B,EAAQykB,EAAaiD,MAAM,CAAErxB,EAAOouB,EAAapuB,IAAI,CAAEsuB,EAAQF,EAAaE,KAAK,EAAI,EAAG0E,EAASxe,CAAO,CAAC3M,EAAE,CAAEorB,EAAc7E,EAAa0D,UAAU,CAClJ1D,EAAaS,UAAU,CAAEqE,EAAarrB,IAAM+lB,EAGhDuF,EAAkBxpB,EACdgB,EAAUD,EAGd0oB,EAAkBzpB,EAAQqV,EAAS/D,QAAQ,CACvCoY,EAAQ,EAEZC,EAAsB,CAAA,EAEtBC,EAA4B,CAAA,EAAOC,EAAc7pB,IAAU6oB,EACvDU,GAAcC,GACdJ,CAAAA,EAAqB,CAAA,CAAG,EAGxB,AAAC/yB,CAAAA,AAAS,UAATA,GAAoBA,AAAS,SAATA,CAAc,GAClCwyB,EAAc,MACX,CAAA,CAAEiB,MAAO,GAAIC,KAAM,GAAI,CAAA,CAAC,CAAC1zB,EAAK,CAAG2yB,EAAMrE,EAAQ2E,GAClDT,EAAc,MACX,CAAA,CAAEiB,MAAO,GAAIC,KAAM,GAAI,CAAA,CAAC,CAAC1zB,EAAK,CAAG2yB,EAAMrE,EAAQ2E,EACnDO,EAAc,CAAA,EAETxzB,AAAS,QAATA,GACLwzB,EAAc,AAACX,EAASD,EAASK,IAAiBT,EAClDc,EAAsB,CAACJ,GAET,QAATlzB,IACLwzB,EAAexU,EAASnhB,GAAG,CAAGmhB,EAASjhB,GAAG,EACtC4M,EAAUD,EACd6oB,EAA6B,CAACL,GAC1BJ,GACAU,GAMR,IAAIG,EAAW,CAAC7G,GACZ,CAAEiG,CAAAA,GAAsB/yB,AAAS,QAATA,CAAa,GACpCmzB,CAAAA,GACGC,GACAG,GACAd,CAAQ,EACZmB,EAAU,AAACb,GAAsB/yB,AAAS,QAATA,GAChCkzB,GAAcM,GACdA,GAAe,CAACV,GAAkB,CAACQ,GACnCJ,GAAc3pB,EAAcmoB,YAAY,CACzCiC,EACAN,EAAQ,EAEHO,IACLd,EAAiB,CAAA,EACjBO,EAAQ,GAGRL,EAAOK,KAAK,GAAKA,IACjBL,EAAOa,QAAQ,CAACR,GACZrG,IACAA,EAAS7uB,OAAO,CAAC0J,EAAI,EAAE,CAACisB,QAAQ,CAAGH,EACrB,IAAVN,GACArG,CAAAA,EAAS+E,aAAa,CAAGlqB,EAAI,CAAA,GAIjCwrB,AAAU,IAAVA,GAAezF,IAAa/lB,EAC5B0B,EAAcgoB,WAAW,GAEpB,CAAA,AAAW,IAAV8B,GAAe,CAAC71B,EAAQowB,IAC9BmF,CAAiB,GACjBxpB,EAAcgoB,WAAW,CAAC1pB,GAGtC,EACJ,EAQA8oB,EAAcpzB,SAAS,CAAC+0B,kBAAkB,CAAG,SAAUlE,CAAY,EAC/D,IAAIpuB,EAAOouB,EAAapuB,IAAI,CAAEsuB,EAAQF,EAAaE,KAAK,EAAI,EAG5DyF,EAAa,CACTC,YAAa,EACbC,OAAQ,IACRC,OAAQ,IACRC,KAAM,KACNxB,IAAK,MACLyB,KAAM,MACV,CAEIL,CAAAA,CAAU,CAAC/zB,EAAK,CAChBouB,EAAaiD,MAAM,CAAG0C,CAAU,CAAC/zB,EAAK,CAAGsuB,EAEpCtuB,CAAAA,AAAS,UAATA,GAAoBA,AAAS,SAATA,CAAc,GACvCouB,CAAAA,EAAaiD,MAAM,CAAG,AAGZ,GAHY,CAAA,CAClBoC,MAAO,GACPC,KAAM,GACV,CAAA,CAAC,CAAC1zB,EAAK,CAAQ,KAAOsuB,CAAI,EAE9BF,EAAaS,UAAU,CAAG/lB,EAAKslB,EAAaiG,SAAS,CAAE,GACvDjG,EAAa0D,UAAU,CAAGhpB,EAAKslB,EAAakG,SAAS,CAAE,GACvDlG,EAAaiD,MAAM,EACfjD,EAAa0D,UAAU,CAAG1D,EAAaS,UAAU,AACzD,EAOA8B,EAAcpzB,SAAS,CAACg3B,aAAa,CAAG,SAAUnY,CAAI,EAClD,IAAIoY,EAAQpY,AAAS,QAATA,EAAiB,IAAI,CAAC+V,QAAQ,CAAG,IAAI,CAACC,QAAQ,CACtDj0B,EAAU,IAAI,CAACI,KAAK,CAACJ,OAAO,CAC3BoL,aAAa,CACdjF,EAAO,IAAI,CAAC/F,KAAK,CAAC+F,IAAI,QAC1B,AAAIkwB,EACO,AAAC,CAAA,AAAgB,SAAfA,EAAMx0B,IAAI,EAAe7B,EAAQovB,eAAe,EACrD,IAAI,CAACkH,sBAAsB,AAAD,EAAGD,EAAMpwB,KAAK,CAAEE,EAAKutB,MAAM,CAAEvtB,GAExD,CACX,EAOAqsB,EAAcpzB,SAAS,CAACm3B,aAAa,CAAG,SAAUtY,CAAI,CAAEuY,CAAS,EAC7D,IAAIx2B,EAAU,IAAI,CAACA,OAAO,CAAEmG,EAAO,IAAI,CAAC/F,KAAK,CAAC+F,IAAI,CAAEkwB,EAAQpY,AAAS,QAATA,EAAiB,IAAI,CAAC+V,QAAQ,CAAG,IAAI,CAACC,QAAQ,CAAEwC,EAAUxY,AAAS,QAATA,EAAiB,IAAI,CAACyY,UAAU,CAAG,IAAI,CAACC,UAAU,CACxK,GAAIN,EAAO,CACP,IAAIO,EAAaP,EAAMQ,YAAY,CAAC,gBAChCC,EAAcz3B,EAAQu3B,GAAcjT,OAAOiT,GAAc,KAAK,EAClE,GAAIv3B,EAAQm3B,GAAY,CACpB,IAAIO,EAAeD,EACfz3B,EAAQ03B,IACRV,EAAMW,YAAY,CAAC,wBAAyBD,GAEhDV,EAAMW,YAAY,CAAC,eAAgBR,GACnCM,EAAcN,CAClB,CACAH,EAAMpwB,KAAK,CAAGE,EAAKC,UAAU,CAAE,IAAI,CAAC6wB,gBAAgB,CAACZ,EAAMx0B,IAAI,CAAC,EAC5D7B,EAAQqvB,mBAAmB,CAAGyH,GAC9BL,GACAA,EAAQv1B,IAAI,CAAC,CACT+F,KAAMd,EAAKC,UAAU,CAACpG,EAAQmvB,eAAe,CAAE2H,EACnD,EAER,CACJ,EAOAtE,EAAcpzB,SAAS,CAAC83B,gBAAgB,CAAG,SAAUjZ,CAAI,CAAEre,CAAG,CAAEF,CAAG,EAC/D,IAAI22B,EAAQpY,AAAS,QAATA,EAAiB,IAAI,CAAC+V,QAAQ,CAAG,IAAI,CAACC,QAAQ,CAC1D,GAAIoC,EAAO,CACP,IAAItwB,EAAS,IAAI,CAACkxB,gBAAgB,CAACZ,EAAMx0B,IAAI,CAAC,CAC1CsE,EAAO,IAAI,CAAC/F,KAAK,CAAC+F,IAAI,CAC1B,GAAIJ,EAAQ,CACR,IAAI2F,EAASvF,EAAKC,UAAU,CAACL,EAAQnG,EACjCy2B,CAAAA,EAAMz2B,GAAG,GAAK8L,GACd2qB,CAAAA,EAAMz2B,GAAG,CAAG8L,CAAK,EAErB,IAAIC,EAASxF,EAAKC,UAAU,CAACL,EAAQrG,EACjC22B,CAAAA,EAAM32B,GAAG,GAAKiM,GACd0qB,CAAAA,EAAM32B,GAAG,CAAGiM,CAAK,CAEzB,CACJ,CACJ,EAMA6mB,EAAcpzB,SAAS,CAAC+3B,SAAS,CAAG,SAAUlZ,CAAI,EAC9C,IAAIwY,EAAUxY,AAAS,QAATA,EAAiB,IAAI,CAACyY,UAAU,CAAG,IAAI,CAACC,UAAU,CAAEN,EAAQpY,AAAS,QAATA,EAAiB,IAAI,CAAC+V,QAAQ,CAAG,IAAI,CAACC,QAAQ,CACxH,GAAIoC,GAASI,GAAW,IAAI,CAACW,UAAU,CAAE,CACrC,IAAIC,EAAchB,AAAe,SAAfA,EAAMx0B,IAAI,CAAa8H,EAAK,IAAI,CAACytB,UAAU,CAAExtB,EAAKD,EAAGsP,UAAU,CAAEA,EAAarP,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKF,EAAGuP,UAAU,CAAEA,EAAarP,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIytB,EAAKb,EAAQ/3B,CAAC,CAAEA,EAAI44B,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKd,EAAQv0B,KAAK,CAAEA,EAAQq1B,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAIC,EAAKf,EAAQt0B,MAAM,CAAEA,EAASq1B,AAAO,KAAK,IAAZA,EAAgB,EAAIA,EAAItI,EAAgB,IAAI,CAAClvB,OAAO,CAACkvB,aAAa,CACjX9S,EAAIia,EAAO,CACPn0B,MAAOm1B,EACF,AAACn1B,EAASgtB,CAAAA,EAAgB,GAAK,EAAC,EAAM,KACvC,OACJ/sB,OAAQ,AAACA,EAAS,EAAK,KACvBs1B,OAAQ,kBACZ,GACIJ,GAAenI,EACf9S,EAAIia,EAAO,CACPlmB,KAAM,AAAC8I,EAAava,EAAK,KACzB4R,IAAK4I,EAAa,IACtB,GAKAkD,EAAIia,EAAO,CACPlmB,KAAMxQ,KAAKC,GAAG,CAACD,KAAKyP,KAAK,CAAC1Q,EACtBua,EACA,AAACod,CAAAA,EAAMqB,WAAW,CAAGx1B,CAAI,EAAK,GAAI,IAAI,CAAC9B,KAAK,CAACgQ,UAAU,CAAGimB,EAAMqB,WAAW,EAAI,KACnFpnB,IAAK,AAAC4I,EAAa,AAACmd,CAAAA,EAAMsB,YAAY,CAAGx1B,CAAK,EAAK,EAAK,IAC5D,EAER,CACJ,EAMAqwB,EAAcpzB,SAAS,CAACw4B,SAAS,CAAG,SAAU3Z,CAAI,EAC9C,IAAIoY,EAAQpY,AAAS,QAATA,EAAiB,IAAI,CAAC+V,QAAQ,CAAG,IAAI,CAACC,QAAQ,CACtDoC,GACAja,EAAIia,EAAO,CACP/lB,IAAK,UACLmnB,OAAQ,EACRv1B,MAAO,MACPC,OAAQ,KACZ,EAER,EAKAqwB,EAAcpzB,SAAS,CAACk3B,sBAAsB,CAAG,SAAUuB,CAAS,CAAEnE,CAAM,CAAEvtB,CAAI,EAM9E,IAL4B2xB,EAKxBzB,EAAQwB,EAAUE,KAAK,CAAC,KAAKC,IAAI,CAAC,KAAKD,KAAK,CAAC,KAAKC,IAAI,CAAC,KAI3D,GAH2B,KAAvB3B,EAAM/uB,OAAO,CAAC,MACd+uB,CAAAA,GAAS,QAAO,EAEhB3C,EACA2C,GAAS,SAER,GAAIh4B,EAAE45B,QAAQ,EAAI,CAXZH,CAAAA,CADiBA,EAYQzB,GAXrB3zB,MAAM,CAAG,GACfo1B,CAAAA,EAAII,WAAW,CAAC,OAASJ,EAAIp1B,MAAM,CAAG,GACnCo1B,EAAII,WAAW,CAAC,OAASJ,EAAIp1B,MAAM,CAAG,CAAA,CAAC,EASP,CACxC,IAAIgR,EAAS,IAAI/M,KAAK0vB,GAAO8B,iBAAiB,GAAK,GACnD9B,GAAS3iB,GAAU,EAAI,IAAIlO,MAAM,CAAC8sB,EAAI,CAAC5e,GAAS,OAAS,IAAIlO,MAAM,CAAC8sB,EAAI5e,GAAS,MACrF,CACA,IAAI2c,EAAO1pB,KAAKgG,KAAK,CAAC0pB,GAItB,GAAI,CAAC3rB,EAAS2lB,GAAO,CACjB,IAAI+H,EAAQP,EAAUE,KAAK,CAAC,KAC5B1H,EAAO1pB,KAAK0xB,GAAG,CAAC9F,EAAK6F,CAAK,CAAC,EAAE,EAAG7F,EAAK6F,CAAK,CAAC,EAAE,EAAI,EAAG7F,EAAK6F,CAAK,CAAC,EAAE,EACrE,CAIA,OAHIjyB,GAAQutB,GAAUhpB,EAAS2lB,IAC3BA,CAAAA,GAAQlqB,EAAKgyB,iBAAiB,CAAC9H,EAAI,EAEhCA,CACX,EAOAmC,EAAcpzB,SAAS,CAACk5B,SAAS,CAAG,SAAUra,CAAI,EAC9C,IAAe7d,EAAQuJ,AAAd,IAAI,CAAavJ,KAAK,CAAEm4B,EAAM5uB,AAA9B,IAAI,CAA6B4uB,GAAG,CAAEnB,EAAaztB,AAAnD,IAAI,CAAkDytB,UAAU,CACrEhsB,EAAgB,IAAI,CAAEotB,EAAap4B,EAAMW,QAAQ,CAACsF,KAAK,EAAI,CAAC,EAAGtF,EAAWX,EAAMW,QAAQ,CAAEf,EAAUI,EAAMJ,OAAO,CAACoL,aAAa,CAAEmjB,EAAO1oB,EAAe0oB,IAAI,CAAEkK,EAAQxa,AAAS,QAATA,EAIzK,SAASya,IACL,IAAIzE,EAAW7oB,EAAc6oB,QAAQ,CAAED,EAAW5oB,EAAc4oB,QAAQ,CAAE2E,EAAYv4B,EAAM8I,KAAK,CAAC,EAAE,CAAE8V,EAAgB,AAAC5e,EAAMgR,QAAQ,EAAIhR,EAAMgR,QAAQ,CAACoN,gBAAgB,IAAOma,EAAWpsB,EAAUyS,EAAczS,OAAO,CAAEC,EAAUwS,EAAcxS,OAAO,CACtPvG,EAAQmF,EAAcgrB,aAAa,CAACnY,GACpChY,IAAU0d,OAAO0S,EAAMQ,YAAY,CAAC,2BACpCnsB,EAASzE,KACTowB,EAAMW,YAAY,CAAC,wBAAyB/wB,GAGxCwyB,GAASxE,GAAYvpB,EAAS6B,GAC1BtG,EAAQ0d,OAAOsQ,EAAS4C,YAAY,CAAC,iBACrC5wB,EAAQ,KAAK,EAERA,EAAQsG,GACbtG,CAAAA,EAAQsG,CAAM,EAGbynB,GAAYtpB,EAAS8B,KACtBvG,EAAQ0d,OAAOqQ,EAAS6C,YAAY,CAAC,iBACrC5wB,EAAQ,KAAK,EAERA,EAAQuG,GACbvG,CAAAA,EAAQuG,CAAM,GAID,KAAA,IAAVvG,GACP0yB,EAAUrlB,WAAW,CAACmlB,EAAQxyB,EAAQ0yB,EAAU/4B,GAAG,CAAE64B,EAAQE,EAAUj5B,GAAG,CAAGuG,EAAO,KAAK,EAAG,KAAK,EAAG,CAAEmR,QAAS,oBAAqB,GAGhJ,CAEA,IAAInQ,EAAOsnB,CAAI,CAACkK,EAAQ,oBAAsB,kBAAkB,EAAI,GAChE3yB,EAAQ/E,EACP+E,KAAK,CAACmB,EAAM,GACZhG,QAAQ,CAAC,0BACTC,IAAI,CAAC,CACN6tB,QAAS9nB,EAAO,EAAI,EACpB9E,OAAQ8E,EAAOjH,EAAQivB,cAAc,CAAG,CAC5C,GACK7tB,GAAG,CAACg2B,GAGLX,EAAU11B,EACT+E,KAAK,CAAC,GAAI,GACV7E,QAAQ,CAAC,0BACTC,IAAI,CAAC,CACN6tB,QAAS,EACT7sB,MAAOlC,EAAQkvB,aAAa,CAC5B/sB,OAAQnC,EAAQivB,cAAc,CAC9B,aAAc,QAClB,GACK2J,EAAE,CAAC,QAAS,WAGbxtB,EAAc+rB,SAAS,CAAClZ,GACxB7S,CAAa,CAAC6S,EAAO,QAAQ,CAAC4a,KAAK,EACvC,EACKz4B,CAAAA,EAAMK,UAAU,EACjBg2B,EAAQv1B,IAAI,CAAC,CACTkC,OAAQpD,EAAQgvB,mBAAmB,CACnC,eAAgB,CACpB,GAEJyH,EAAQr1B,GAAG,CAACg2B,GAGZ,IAAIf,EAAQjE,EAAc,QAAS,CAC/BnU,KAAMA,EACNpX,UAAW,2BACf,EAAG,KAAK,EAAG0xB,GAGXlC,EAAMW,YAAY,CAAC,OAAQ8B,AAvmBnC,SAA4B/yB,CAAM,EAE9B,GADSA,AAAyB,KAAzBA,EAAOuB,OAAO,CAAC,MAEpB,MAAO,OAEX,IAAI+oB,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CAC7D0I,IAAI,CAAC,SAAUC,CAAI,EAAI,OAAOjzB,AAA+B,KAA/BA,EAAOuB,OAAO,CAAC,IAAM0xB,EAAc,GAClE7yB,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CACpC4yB,IAAI,CAAC,SAAUC,CAAI,EAAI,OAAOjzB,AAA+B,KAA/BA,EAAOuB,OAAO,CAAC,IAAM0xB,EAAc,UACtE,AAAI3I,GAAQlqB,EACD,iBAEPkqB,EACO,OAEPlqB,EACO,OAEJ,MACX,EAolBsDnG,EAAQmvB,eAAe,EAAI,aACpE/uB,EAAMK,UAAU,GAEjBqF,EAAMsW,GAAG,CAAC7c,EAAMi5B,EAAYx4B,EAAQ4vB,UAAU,GAC9C6G,EAAQra,GAAG,CAAC7c,EAAM,CACd4D,MAAO,SACX,EAAGq1B,EAAYx4B,EAAQ2vB,UAAU,GACjCvT,EAAIia,EAAO1mB,EAAO,CACdkE,SAAU,WACV4jB,OAAQ,EACRwB,UAAW,2BACX/2B,MAAO,MACPC,OAAQ,MACR4sB,QAAS,EACTmK,UAAW,SACX5yB,SAAUkyB,EAAWlyB,QAAQ,CAC7B6yB,WAAYX,EAAWW,UAAU,CACjC7oB,IAAK,SACT,EAAGtQ,EAAQ2vB,UAAU,IAGzB0G,EAAM+C,OAAO,CAAG,WACZhuB,EAAc+rB,SAAS,CAAClZ,EAC5B,EAEAoY,EAAMgD,MAAM,CAAG,WAEPhD,IAAUh4B,EAAEi7B,GAAG,CAACC,aAAa,EAG7Bb,IAGJttB,EAAcwsB,SAAS,CAAC3Z,GACxB7S,EAAcmrB,aAAa,CAACtY,GAC5BoY,EAAMnC,IAAI,EACd,EACA,IAAIsF,EAAU,CAAA,EA0Bd,OAxBAnD,EAAMoD,QAAQ,CAAG,WAERD,IACDd,IACAttB,EAAcwsB,SAAS,CAAC3Z,GACxBoY,EAAMnC,IAAI,GAElB,EACAmC,EAAMqD,UAAU,CAAG,SAAUvoB,CAAK,EAER,KAAlBA,EAAMwoB,OAAO,EACbjB,GAER,EACArC,EAAMuD,SAAS,CAAG,SAAUzoB,CAAK,EAC7BqoB,EAAU,CAAA,EAENroB,CAAAA,AAAkB,KAAlBA,EAAMwoB,OAAO,EAAWxoB,AAAkB,KAAlBA,EAAMwoB,OAAO,AAAM,GAC3CjB,GAER,EACArC,EAAMwD,OAAO,CAAG,WACZL,EAAU,CAAA,CACd,EACO,CAAE/C,QAASA,EAASJ,MAAOA,EAAOvwB,MAAOA,CAAM,CAC1D,EAQA0sB,EAAcpzB,SAAS,CAAC06B,WAAW,CAAG,WAClC,IAAI15B,EAAQ,IAAI,CAACA,KAAK,CAAEJ,EAAUI,EAAMJ,OAAO,CAACoL,aAAa,CAAEkF,EAAMtQ,AAA0B,QAA1BA,EAAQ4Q,aAAa,CACtFxQ,EAAMoB,OAAO,CAAGpB,EAAM0S,UAAU,CAAC,EAAE,CACnC,EACJ,MAAO,CACHinB,UAAWzpB,EAAMtQ,EAAQ0vB,cAAc,CAAC/wB,CAAC,CACzCq7B,SAAU1pB,EAAMtQ,EAAQuvB,aAAa,CAAC5wB,CAAC,CAAG,EAC9C,CACJ,EAWA6zB,EAAcpzB,SAAS,CAACq0B,cAAc,CAAG,SAAUjnB,CAAO,CAAED,CAAO,CAAEmnB,CAAM,EACvE,IAAIvtB,EAAO,IAAI,CAAC/F,KAAK,CAAC+F,IAAI,CAAES,EAAM,IAAIT,EAAKQ,IAAI,CAAC6F,GAAU+oB,EAAOpvB,EAAK+G,GAAG,CAAC,WAAYtG,GAAMqzB,EAAcvG,EACtGvtB,EAAKQ,IAAI,CAAC0xB,GAAG,CAAC9C,EAAM,EAAG,GACvB,CAAC,IAAIpvB,EAAKQ,IAAI,CAAC4uB,EAAM,EAAG,GAA0C2E,EAAKtzB,EAAI4pB,OAAO,GACtF,MAAO,CACH9wB,IAAKC,KAAKC,GAAG,CAAC4M,GAAW0tB,EAAIA,GAC7Bt6B,IAHkCD,KAAKD,GAAG,CAAC6M,EAAS0tB,EAIxD,CACJ,EAaAzH,EAAcpzB,SAAS,CAAC8F,MAAM,CAAG,SAAUtF,CAAG,CAAEF,CAAG,EAC/C,IAAIU,EAAQ,IAAI,CAACA,KAAK,CAAEW,EAAWX,EAAMW,QAAQ,CAAEyc,EAAYpd,EAAMod,SAAS,CAAEvS,EAAe7K,EAAMJ,OAAO,CAAEA,EAAUiL,EAAaG,aAAa,CAElJ+uB,EAAexvB,EAAKM,EAAa7K,KAAK,CAACiG,KAAK,EACxC4E,EAAa7K,KAAK,CAACiG,KAAK,CAAClF,MAAM,CAAE,GAAK,EAAGmuB,EAAetvB,EAAQsvB,YAAY,CAAEvW,EAAW,IAAI,CAACA,QAAQ,CAC1G,GAAI/Y,AAAoB,CAAA,IAApBA,EAAQyC,OAAO,EAInB,GAAI,CAACsW,IACD,IAAI,CAACjY,KAAK,CAAGC,EAASC,CAAC,CAAC,wBACnBE,IAAI,CAAC,CACNC,OAAQ,CACZ,GACKC,GAAG,GACR,IAAI,CAACm3B,GAAG,CAAGnG,EAAc,MAAO,KAAK,EAAG,CACpCve,SAAU,WACV1R,OAAQ,EACRhB,OAAQg5B,CACZ,GACI,IAAI,CAAC1H,aAAa,CAAC/vB,MAAM,EACzB,IAAI,CAAC03B,aAAa,GAIlB5c,EAAU6c,UAAU,EACpB7c,EAAU6c,UAAU,CAACC,YAAY,CAAC,IAAI,CAAC/B,GAAG,CAAE/a,GAE5C8R,GAAc,CAEd,IAAI,CAAC8H,UAAU,CAAGr2B,EAASC,CAAC,CAAC,eAAeI,GAAG,CAAC,IAAI,CAACN,KAAK,EAC1D,IAAIy5B,EAAW,IAAI,CAACjC,SAAS,CAAC,MAC9B,CAAA,IAAI,CAAC5B,UAAU,CAAG6D,EAAS9D,OAAO,CAClC,IAAI,CAAC+D,QAAQ,CAAGD,EAASz0B,KAAK,CAC9B,IAAI,CAACkuB,QAAQ,CAAGuG,EAASlE,KAAK,CAC9B,IAAIoE,EAAW,IAAI,CAACnC,SAAS,CAAC,MAC9B,CAAA,IAAI,CAAC3B,UAAU,CAAG8D,EAAShE,OAAO,CAClC,IAAI,CAACiE,QAAQ,CAAGD,EAAS30B,KAAK,CAC9B,IAAI,CAACmuB,QAAQ,CAAGwG,EAASpE,KAAK,AAClC,CAEJ,GAAI/G,EAAc,CAEd,IAAI,CAACiH,aAAa,CAAC,MAAO32B,GAC1B,IAAI,CAAC22B,aAAa,CAAC,MAAO72B,GAC1B,IAAIsf,EAAgB,AAAC5e,EAAMgR,QAAQ,EAAIhR,EAAMgR,QAAQ,CAACoN,gBAAgB,IAAOpe,EAAM8I,KAAK,CAAC,EAAE,EAAI,CAAC,EAChG,GAAI7J,EAAQ2f,EAAczS,OAAO,GAC7BlN,EAAQ2f,EAAcxS,OAAO,EAAG,CAChC,IAAIsQ,EAAW1c,EAAM8I,KAAK,CAAC,EAAE,CAAC4T,QAAQ,EAAI,EAC1C,IAAI,CAACoa,gBAAgB,CAAC,MAAOlY,EAAczS,OAAO,CAAE5M,KAAKC,GAAG,CAACof,EAAcxS,OAAO,CAAE,IAAI,CAAC4pB,aAAa,CAAC,QAAUtZ,GACjH,IAAI,CAACoa,gBAAgB,CAAC,MAAOv3B,KAAKD,GAAG,CAACsf,EAAczS,OAAO,CAAE,IAAI,CAAC6pB,aAAa,CAAC,QAAUtZ,EAAUkC,EAAcxS,OAAO,CAC7H,CAEA,GAAI,IAAI,CAAC4qB,UAAU,CAAE,CACjB,IAAIuD,EAAM,EACV,CACI,IAAI,CAACH,QAAQ,CACb,IAAI,CAAC9D,UAAU,CACf,IAAI,CAACgE,QAAQ,CACb,IAAI,CAAC/D,UAAU,CAClB,CAAC5gB,OAAO,CAAC,SAAUjQ,CAAK,EACrB,GAAIA,EAAO,CACP,IAAI5D,EAAQ4D,EAAMkkB,OAAO,GAAG9nB,KAAK,CAC7BA,IACA4D,EAAM5E,IAAI,CAAC,CAAExC,EAAGi8B,CAAI,GACpBA,GAAOz4B,EAAQlC,EAAQwvB,YAAY,CAE3C,CACJ,EACJ,CACJ,CACA,IAAI,CAACoL,aAAa,GAClB,IAAI,CAAC7hB,QAAQ,CAAG,CAAA,EACpB,EAQAyZ,EAAcpzB,SAAS,CAACg7B,aAAa,CAAG,WACpC,IAAIzX,EAAQ,IAAI,CACDtM,EAAU1M,AAAhB,IAAI,CAAe0M,OAAO,CAAEjW,EAAQuJ,AAApC,IAAI,CAAmCvJ,KAAK,CAAEJ,EAAU2J,AAAxD,IAAI,CAAuD3J,OAAO,CACvEuuB,EAAO1oB,EAAe0oB,IAAI,CAC1BxtB,EAAWX,EAAMW,QAAQ,CACzB+tB,EAAcvvB,EAAMS,EAAQ8uB,WAAW,EACvClN,EAASkN,GAAeA,EAAYlN,MAAM,CAI1C1f,EAAQ4sB,EAAY5sB,KAAK,EAAI,EACjC,QAAO4sB,EAAY5sB,KAAK,CACxB,OAAO4sB,EAAYlN,MAAM,CACzB,IAAI,CAACiZ,WAAW,CAAG95B,EAASC,CAAC,CAAC,0BAA0BI,GAAG,CAAC,IAAI,CAACN,KAAK,EACtE,IAAI+tB,EAAW,IAAI,CAACA,QAAQ,CAAGuD,EAAc,SAAU,KAAK,EAAG,CAC3Dve,SAAU,WACV3R,MAAO,MACPC,OAAQ,MACR4sB,QAAS,EACT0I,OAAQ,EACRnnB,IAAK,UACL0L,OAAQ,UACRva,QAAS,IACb,EAAG,IAAI,CAAC82B,GAAG,EAEX5yB,EAASkpB,EAAU,aAAc,WAC7BA,EAASxoB,KAAK,CAACC,QAAQ,CAAG,MAC9B,GAEA,CACI,CAACjI,EAAEy8B,IAAI,CAAG,YAAc,aAAa,CACrC,CAACz8B,EAAEy8B,IAAI,CAAG,WAAa,aAAa,CACpC,CAAC,SAAU,QAAQ,CACtB,CAAC/kB,OAAO,CAAC,SAAUpM,CAAE,EAClB,IAAI7J,EAAO6J,CAAE,CAAC,EAAE,CAAE5J,EAAK4J,CAAE,CAAC,EAAE,CAC5BhE,EAASkpB,EAAU/uB,EAAM,WACrB,IAAI+0B,EAASxe,CAAO,CAACsM,EAAMoY,kBAAkB,GAAG,CAC5ClG,GACAxf,EAAUwf,EAAOre,OAAO,CAAEzW,GAAMD,EAExC,EACJ,GACA,IAAI,CAACk7B,QAAQ,CAAGj6B,EACX+E,KAAK,CAAC,AAACyoB,GAAQA,EAAKC,iBAAiB,EAAK,GAAI,GAC9CttB,IAAI,CAAC,CACN6tB,QAAS/uB,EAAQ8uB,WAAW,CAACC,OAAO,CACpC5sB,OAAQnC,EAAQ8uB,WAAW,CAAC3sB,MAAM,CAClC84B,YAAa,EACbC,aAAc,CAClB,GACK95B,GAAG,CAAC,IAAI,CAACy5B,WAAW,EACpB,IAAI,CAACz6B,KAAK,CAACK,UAAU,GACtB,IAAI,CAACu6B,QAAQ,CAAC5e,GAAG,CAACpc,EAAQ4vB,UAAU,EACpCd,CAAW,CAAC,eAAe,CAAGnkB,EAAKmkB,CAAW,CAAC,eAAe,CAAE,IAEpEsD,EAAc,SAAU,CACpB+I,YAAa,IAAI,CAACH,QAAQ,CAACI,OAAO,CAClCzF,SAAU,CAAA,CACd,EAAG,KAAK,EAAG9G,GACX,IAAI,CAAC4D,aAAa,CAAC1c,OAAO,CAAC,SAAUka,CAAY,CAAEvmB,CAAC,EAChD0oB,EAAc,SAAU,CACpB+I,YAAalL,EAAa5mB,KAAK,EAAI4mB,EAAahpB,IAAI,AACxD,EAAG,KAAK,EAAG4nB,GACXxY,CAAO,CAAC3M,EAAE,CAAG3I,EACR8zB,MAAM,CAAC5E,EAAahpB,IAAI,CAAE,EAAG,EAAG,SAAU+D,CAAC,EAE5C,IACIqwB,EADAC,EAAgBrL,EAAajS,MAAM,EAAIiS,EAAajS,MAAM,CAACud,KAAK,CAEhED,GACAD,CAAAA,EACIC,EAAa/zB,IAAI,CAAC0oB,EAAcjlB,EAAC,EAEhB,CAAA,IAArBqwB,GACA1Y,EAAMkO,WAAW,CAACnnB,GAEtBiZ,EAAM6Y,QAAQ,CAAG,CAAA,CACrB,EAAG1M,EAAalN,GAAUA,EAAO6Z,KAAK,CAAE7Z,GAAUA,EAAO6T,MAAM,CAAE7T,GAAUA,EAAO+T,QAAQ,EACrFz0B,IAAI,CAAC,CACN,aAAc,SACdgB,MAAOA,CACX,GACKd,GAAG,CAACuhB,EAAMkY,WAAW,EACtB5K,EAAa5mB,KAAK,EAClBgN,CAAO,CAAC3M,EAAE,CAACxI,IAAI,CAAC,QAAS+uB,EAAa5mB,KAAK,CAEnD,EACJ,EAOAmpB,EAAcpzB,SAAS,CAACw7B,aAAa,CAAG,WACpC,IAAIjY,EAAQ,IAAI,CACDkY,EAAclxB,AAApB,IAAI,CAAmBkxB,WAAW,CAAExkB,EAAU1M,AAA9C,IAAI,CAA6C0M,OAAO,CAAEjW,EAAQuJ,AAAlE,IAAI,CAAiEvJ,KAAK,CAAEU,EAAQ6I,AAApF,IAAI,CAAmF7I,KAAK,CAAEs2B,EAAaztB,AAA3G,IAAI,CAA0GytB,UAAU,CAAEp3B,EAAU2J,AAApI,IAAI,CAAmI3J,OAAO,CAAEg7B,EAAWrxB,AAA3J,IAAI,CAA0JqxB,QAAQ,CAC3K/vB,EAAe7K,EAAMJ,OAAO,CAC5B07B,EAAoBzwB,EAAa0wB,SAAS,EAC1C1wB,AAAmC,CAAA,IAAnCA,EAAa0wB,SAAS,CAACl5B,OAAO,EAC9BwI,EAAa2wB,UAAU,EACvB3wB,EAAa2wB,UAAU,CAACnJ,aAAa,CACrC/C,EAAiB1vB,EAAQ0vB,cAAc,CAAEH,EAAgBvvB,EAAQuvB,aAAa,CAAE3e,EAAgB5Q,EAAQ4Q,aAAa,CAGrHirB,EAA4B,SAAU/6B,CAAK,CAAE+S,CAAQ,SACrD,AAAI6nB,GACA/Y,EAAMmZ,cAAc,CAAC17B,IACrBwQ,AAAkB,QAAlBA,GACAiD,AAAmB,UAAnBA,EAASrF,KAAK,EAAiB,AAACqF,EAASlV,CAAC,CAC1CmC,EAAMkpB,OAAO,GAAG7nB,MAAM,CAAG,GACxB,AAACu5B,CAAAA,EAAiB/8B,CAAC,EAAI,CAAA,EACnB+8B,CAAAA,EAAiBv5B,MAAM,EAAI,CAAA,EAC5B/B,EAAMiQ,OAAO,CAAC,EAAE,CACb,IAEJ,CACX,EACI9O,EAAWnB,EAAMmB,QAAQ,CAC7B,GAAIT,GAAS4uB,GAAkBH,EAAe,CAC1C,IAAItW,EAAayW,EAAehxB,CAAC,CAAG0B,EAAMiQ,OAAO,CAAC,EAAE,CACpD,GAAIwqB,EAAa,CAEb,GADA,IAAI,CAACkB,eAAe,GAChB,CAAC,IAAI,CAACpJ,uBAAuB,CAAE,CAC/B,IAAIpW,EAAU,EACVye,GACAze,CAAAA,GAAWye,EAAShR,OAAO,GAAG9nB,KAAK,CAAG,CAAA,EAE1CmU,EAAQN,OAAO,CAAC,SAAU8e,CAAM,CAAEnrB,CAAC,EAC/B6S,GAAWsY,EAAO3yB,KAAK,EAAI,EACvBwH,IAAM2M,EAAQ3T,MAAM,CAAG,GACvB6Z,CAAAA,GAAWvc,EAAQ4uB,aAAa,AAAD,CAEvC,GACA,IAAI,CAAC+D,uBAAuB,CAAGpW,CACnC,CACAhb,GAAYnB,EAAMiQ,OAAO,CAAC,EAAE,CAC5B,IAAI,CAAC+jB,kBAAkB,GAEvB,IAAI4H,EAA2BH,EAA0BhB,EAAanL,GACtE,IAAI,CAACuM,gBAAgB,CAACD,GAEtBl7B,EAAMuwB,MAAM,CAAGwJ,EAAYxJ,MAAM,CAAGjxB,EAAM87B,SAAS,AACvD,CACA,IAAIC,EAAyB,EACzB/E,IAEA+E,EAAyBN,EAA0BzE,EAAY7H,GAC3DA,AAAwB,SAAxBA,EAAc/gB,KAAK,CACnByK,EAAa1X,EAEgB,UAAxBguB,EAAc/gB,KAAK,EACxByK,CAAAA,EAAa,CAACtZ,KAAKD,GAAG,CAACU,EAAM0S,UAAU,CAAC,EAAE,CAAE,CAACqpB,EAAsB,EAGvE/E,EAAW5oB,KAAK,CAAC,CACb7P,EAAG4wB,EAAc5wB,CAAC,CAClBuD,MAAOk1B,EAAWpN,OAAO,GAAG9nB,KAAK,CACjCsM,MAAO+gB,EAAc/gB,KAAK,CAE1B9P,EAAG6wB,EAAc7wB,CAAC,CAAGua,EAAa,CACtC,EAAG,CAAA,EAAM7Y,EAAMgxB,UAAU,EAEzBgG,EAAW/F,MAAM,CAAGjxB,EAAM87B,SAAS,EAEvC,IAAI,CAACE,eAAe,CAACD,GAErBr7B,EAAM0N,KAAK,CAAC,CACRoC,cAAeA,CACnB,EAAG,CAAA,EAAMxQ,EAAMgxB,UAAU,EACzB,IAAIiL,EAAkBv7B,EAAMw7B,SAAS,CAACpjB,UAAU,CAE5CqjB,EAAcz7B,EAAMkpB,OAAO,GAAG7nB,MAAM,CAAG,GACvC+W,EAAa,EAEjB,GAAItI,AAAkB,WAAlBA,EAA4B,CAC5B,IAAIb,EAAgB3P,EAAMkJ,MAAM,EAAIlJ,EAAMkJ,MAAM,CAACtJ,OAAO,CASxDkZ,EAAcmjB,EADdE,CAAAA,EAAcA,EAPMxsB,CAAAA,GAChBA,AAAgC,WAAhCA,EAAca,aAAa,EAC3Bb,EAActN,OAAO,EACrB,CAACsN,EAAce,QAAQ,CACtB1Q,EAAMkJ,MAAM,CAACyH,YAAY,CACtBpG,EAAKoF,EAAchL,MAAM,CAAE,IAC/B,CAAA,EACuC,EAAC,EAGvC/E,CAAAA,EAAQ8Q,QAAQ,CAAG,EAAI9Q,EAAQrB,CAAC,AAADA,EAC/ByB,CAAAA,EAAM4Q,WAAW,CAAG5Q,EAAM4Q,WAAW,CAAC,EAAE,CAAG,CAAA,EAC5C,EAER,CACIJ,AAAkB,QAAlBA,GACI5Q,EAAQ8Q,QAAQ,EAChBoI,CAAAA,EAAa,CAAA,EAEb9Y,EAAM4Q,WAAW,EAAI5Q,EAAM4Q,WAAW,CAAC,EAAE,EACzCkI,CAAAA,EAAa9Y,EAAM4Q,WAAW,CAAC,EAAE,AAAD,EAEpCkI,GAAe,AAAC9Y,EAAM2E,MAAM,CAAC,EAAE,CAAG3E,EAAMiQ,OAAO,CAAC,EAAE,EAAK,GAEhC,WAAlBO,IACD2e,EAAc5wB,CAAC,GAAK+wB,EAAe/wB,CAAC,CACpCua,EAAamjB,EAER9M,CAAAA,EAAc5wB,CAAC,EAAI+wB,EAAe/wB,CAAC,AAADA,IACnC4wB,EAAc5wB,CAAC,CAAG,GAClB+wB,EAAe/wB,CAAC,CAAG,EACnBua,GAAcvZ,KAAKC,GAAG,CAAC2vB,EAAc5wB,CAAC,CAAE+wB,EAAe/wB,CAAC,EAGxDua,EAAamjB,EAAkBE,IAI3Cz7B,EAAMQ,SAAS,CAACtB,EAAQtB,CAAC,CAAEsB,EAAQrB,CAAC,CAAGgB,KAAK+Z,KAAK,CAACR,IAElD,IAAe8a,EAAWpqB,AAAjB,IAAI,CAAgBoqB,QAAQ,CAAEC,EAAWrqB,AAAzC,IAAI,CAAwCqqB,QAAQ,CAAEpF,EAAWjlB,AAAjE,IAAI,CAAgEilB,QAAQ,AACjF7uB,CAAAA,EAAQsvB,YAAY,EAAI0E,GAAYC,IACpCD,EAAS3tB,KAAK,CAACm2B,SAAS,CAAG17B,EAAMoY,UAAU,CAAG,KAC9C+a,EAAS5tB,KAAK,CAACm2B,SAAS,CAAG17B,EAAMoY,UAAU,CAAG,MAE9C2V,GACAA,CAAAA,EAASxoB,KAAK,CAACm2B,SAAS,CAAG17B,EAAMoY,UAAU,CAAG,IAAG,CAEzD,CACJ,EASAsZ,EAAcpzB,SAAS,CAAC68B,gBAAgB,CAAG,SAAUE,CAAsB,CAAEj6B,CAAK,EAC9E,IAAe9B,EAAQuJ,AAAd,IAAI,CAAavJ,KAAK,CAAEJ,EAAU2J,AAAlC,IAAI,CAAiC3J,OAAO,CAAE66B,EAAclxB,AAA5D,IAAI,CAA2DkxB,WAAW,AAAYlxB,CAAtF,IAAI,CAAqF0M,OAAO,CACzG,IAAIqZ,EAAiB1vB,EAAQ0vB,cAAc,CACvCnuB,EAAWnB,EAAMmB,QAAQ,CAAGnB,EAAMiQ,OAAO,CAAC,EAAE,CAC5C4I,EAAayW,EAAehxB,CAAC,CAAG0B,EAAMiQ,OAAO,CAAC,EAAE,AAChDqf,AAAyB,CAAA,UAAzBA,EAAelhB,KAAK,CACpByK,GAAckjB,EAAyB56B,EAET,WAAzBmuB,EAAelhB,KAAK,EACzByK,CAAAA,GAAc1X,EAAW,CAAA,EAEzBs5B,GAEAA,EAAYrsB,KAAK,CAAC,CACd7P,EAAG+wB,EAAe/wB,CAAC,CACnBuD,MAAOyI,EAAKzI,EAAO,IAAI,CAACywB,uBAAuB,EAC/CnkB,MAAOkhB,EAAelhB,KAAK,CAC3B9P,EAAGua,CACP,EAAG,CAAA,EAAM7Y,EAAMgxB,UAAU,CAEjC,EAKAoB,EAAcpzB,SAAS,CAAC28B,eAAe,CAAG,WACtC,IAAe1lB,EAAU1M,AAAhB,IAAI,CAAe0M,OAAO,CAAEjW,EAAQuJ,AAApC,IAAI,CAAmCvJ,KAAK,CAAEJ,EAAU2J,AAAxD,IAAI,CAAuD3J,OAAO,CAAEg7B,EAAWrxB,AAA/E,IAAI,CAA8EqxB,QAAQ,CAC/FngB,EAAOza,EAAM87B,SAAS,CAAG,UAAY,OACrCxM,EAAiB1vB,EAAQ0vB,cAAc,CACvCnuB,EAAWnB,EAAMmB,QAAQ,CACzBk7B,EAAal7B,EACby5B,GAAYA,AAAwB,WAAxBA,EAAS9e,UAAU,GAE/B8e,CAAQ,CAACngB,EAAK,CAAC,CACXnc,EAAGiM,EAAKpJ,EAAWmuB,EAAehxB,CAAC,CAAE6C,EACzC,GAEAk7B,GAAc/M,EAAehxB,CAAC,CAC1Bs8B,EAAShR,OAAO,GAAG9nB,KAAK,CAAG,GAEnC,IAAK,IAAIwH,EAAI,EAAG6nB,EAAO,IAAI,CAACkB,aAAa,CAAC/vB,MAAM,CAAEgH,EAAI6nB,EAAM,EAAE7nB,EACtD2M,AAA0B,WAA1BA,CAAO,CAAC3M,EAAE,CAACwS,UAAU,EACrB7F,CAAO,CAAC3M,EAAE,CAACmR,EAAK,CAAC,CAAEnc,EAAG+9B,CAAW,GAEjCA,GAAc,AAACpmB,CAAAA,CAAO,CAAC3M,EAAE,CAACxH,KAAK,EAAI,CAAA,EAAKlC,EAAQ4uB,aAAa,EAG7DvY,CAAO,CAAC3M,EAAE,CAACmR,EAAK,CAAC,CAAEnc,EAAG6C,CAAS,EAG3C,EAWAixB,EAAcpzB,SAAS,CAACg9B,eAAe,CAAG,SAAUD,CAAsB,EACtE,IAAIxZ,EAAQ,IAAI,CACDviB,EAAQuJ,AAAd,IAAI,CAAavJ,KAAK,CAAEy6B,EAAclxB,AAAtC,IAAI,CAAqCkxB,WAAW,CAAEzD,EAAaztB,AAAnE,IAAI,CAAkEytB,UAAU,CACrFxtB,EAAK,IAAI,CAAC5J,OAAO,CAAE0vB,EAAiB9lB,EAAG8lB,cAAc,CAAEb,EAAWjlB,EAAGilB,QAAQ,CAAEU,EAAgB3lB,EAAG2lB,aAAa,CAC/GmN,EAAiB,WACjB,IAAIC,EAAc,EAOlB,OANAha,EAAMtM,OAAO,CAACN,OAAO,CAAC,SAAU8e,CAAM,EAClC,IAAI+H,EAAO/H,EAAO7K,OAAO,EACrB4S,CAAAA,EAAK16B,KAAK,CAAGy6B,GACbA,CAAAA,EAAcC,EAAK16B,KAAK,AAAD,CAE/B,GACOy6B,CACX,EACIE,EAAgB,SAAUC,CAAgB,EAC1C,GAAI1F,GAAcyD,EAAa,CAC3B,IAAIkC,EAAe3F,EAAWkF,SAAS,CAACrjB,UAAU,CAC9Cme,EAAW4F,YAAY,CAACt+B,CAAC,CACzBy9B,EAEA/E,EAAWpN,OAAO,GAAGtrB,CAAC,CAEtB,EACAu+B,EAAkB7F,EAAW4F,YAAY,CAAC96B,KAAK,CAC/Cg7B,EAAerC,EAAYyB,SAAS,CAACrjB,UAAU,CAC/C4hB,EAAY7Q,OAAO,GAAGtrB,CAAC,CAC3B,OAAO,AAACw+B,EAAeJ,EAAmBC,GACrCA,EAAcE,EAAkBC,GAChCxN,EAAe/wB,CAAC,CACZ4wB,EAAc5wB,CAAC,CACZy4B,EAAWpN,OAAO,GAAG7nB,MAAM,AAC3C,CACA,MAAO,CAAA,CACX,EACIg7B,EAAiB,WACb/F,GAAcyD,GACdzD,EAAWl2B,IAAI,CAAC,CACZ+X,WAAYme,EAAWkF,SAAS,CAACrjB,UAAU,CAAI7Y,CAAAA,EAAM0S,UAAU,CAAC,EAAE,EAAI,CAACqpB,EACnE,EACA,CAACA,CAAqB,EAC1BjjB,WAAYke,EAAWkF,SAAS,CAACpjB,UAAU,CACvC2hB,EAAY7Q,OAAO,GAAG7nB,MAAM,CAAG,EACvC,EAER,EACA,GAAI04B,EAAa,CACb,GAAIhM,AAAa,WAAbA,EAAuB,CACvB,IAAI,CAACuO,eAAe,CAACjB,GACjBU,EAAcH,MAGdS,IAEJ,MACJ,CACiB,UAAbtO,GACA,IAAI,CAACwO,aAAa,EAE1B,CAEIjG,GAAcyD,EACV,AAACtL,EAAc/gB,KAAK,GAAKkhB,EAAelhB,KAAK,EAE7CquB,EAAc,IAAI,CAAClK,uBAAuB,CAAG,IACzC9D,AAAa,eAAbA,GACA,IAAI,CAACuO,eAAe,CAACjB,GACjBU,EAAcH,MACdS,KAIJA,IAGc,eAAbtO,GACL,IAAI,CAACwO,aAAa,GAGjBxC,GAAehM,AAAa,eAAbA,IAChB,IAAI,CAAC8D,uBAAuB,CAAGvyB,EAAMsE,SAAS,CAC9C,IAAI,CAAC04B,eAAe,CAACjB,GAGrB,IAAI,CAACkB,aAAa,GAG9B,EAQA7K,EAAcpzB,SAAS,CAACg+B,eAAe,CAAG,SAAUjB,CAAsB,EACtE,IAAe9lB,EAAU1M,AAAhB,IAAI,CAAe0M,OAAO,CAAEoc,EAAgB9oB,AAA5C,IAAI,CAA2C8oB,aAAa,CAAEryB,EAAQuJ,AAAtE,IAAI,CAAqEvJ,KAAK,CAAEyuB,EAAWllB,AAA3F,IAAI,CAA0FklB,QAAQ,CAAE7uB,EAAU2J,AAAlH,IAAI,CAAiH3J,OAAO,CAAEg7B,EAAWrxB,AAAzI,IAAI,CAAwIqxB,QAAQ,CAE7J,GAAI,AAAqB,CAAA,IAArB,IAAI,CAACsC,WAAW,EAGpB,IAAI,CAACA,WAAW,CAAG,CAAA,EACnB,IAAIC,EAAkB,AAACn9B,EAAM0I,WAAW,CAACsC,aAAa,EAClDhL,EAAM0I,WAAW,CAACsC,aAAa,CAAC0jB,WAAW,EAAK,CAAC,EACjD0O,EAAa,SAAUv2B,CAAI,EAAI,MAAQ,CACvCA,KAAMA,EAAO,GAAGzB,MAAM,CAACyB,EAAM,MAAa,IAC1C/E,MAAO,OACP+4B,YAAatwB,EAAK3K,EAAQ8uB,WAAW,CAACmM,WAAW,CAAEsC,EAAgBxO,OAAO,CAAE,GAC5EmM,aAAcvwB,EAAK3K,EAAQ8uB,WAAW,CAACoM,YAAY,CAAEqC,EAAgBxO,OAAO,CAAE,EAClF,CAAI,EACAiM,GACAA,EAAS7hB,IAAI,GAEjB,IAAIskB,EAAkB,CAAA,EACtBhL,EAAc1c,OAAO,CAAC,SAAUka,CAAY,CAAEvmB,CAAC,EAC3C,IAAImrB,EAASxe,CAAO,CAAC3M,EAAE,AACnBmrB,AAAiB,CAAA,IAAjBA,EAAOK,KAAK,CACZL,EAAO1b,IAAI,IAGX0b,EAAO7b,IAAI,GACX6b,EAAO3zB,IAAI,CAACs8B,EAAWvN,EAAahpB,IAAI,GACxCw2B,EAAkB,CAAA,EAE1B,GACKA,IACG5O,GACAA,CAAAA,EAAS+E,aAAa,CAAG,CAAA,EAE7Bvd,CAAO,CAAC,EAAE,CAAC2C,IAAI,GACf3C,CAAO,CAAC,EAAE,CAACnV,IAAI,CAACs8B,EAAW,IAAI,CAACxC,QAAQ,EAAI,IAAI,CAACA,QAAQ,CAACI,OAAO,IAErE,IAAI5sB,EAAQxO,EAAQ0vB,cAAc,CAAClhB,KAAK,CACxC,IAAI,CAACutB,eAAe,GAChBvtB,CAAAA,AAAU,UAAVA,GAAqBA,AAAU,WAAVA,CAAiB,GACtC,IAAI,CAACytB,gBAAgB,CAACE,EAAwB9lB,CAAO,CAAC,IAAI,CAAC0kB,kBAAkB,GAAG,CAAC/Q,OAAO,GAAG9nB,KAAK,EAEpG,IAAI,CAACw7B,YAAY,GACrB,EAOAlL,EAAcpzB,SAAS,CAACi+B,aAAa,CAAG,WACpC,IAAehnB,EAAU1M,AAAhB,IAAI,CAAe0M,OAAO,CAAEoc,EAAgB9oB,AAA5C,IAAI,CAA2C8oB,aAAa,CAAEzyB,EAAU2J,AAAxE,IAAI,CAAuE3J,OAAO,CAAEg7B,EAAWrxB,AAA/F,IAAI,CAA8FqxB,QAAQ,CACnH,IAAI,CAAC2C,YAAY,GAEQ,CAAA,IAArB,IAAI,CAACL,WAAW,GAGpB,IAAI,CAACA,WAAW,CAAG,CAAA,EACftC,GACAA,EAAShiB,IAAI,GAEjByZ,EAAc1c,OAAO,CAAC,SAAUka,CAAY,CAAEvmB,CAAC,EAC3C,IAAImrB,EAASxe,CAAO,CAAC3M,EAAE,CACvBmrB,EAAO7b,IAAI,GACX6b,EAAO3zB,IAAI,CAAC,CACR+F,KAAMgpB,EAAahpB,IAAI,CACvB/E,MAAOlC,EAAQ8uB,WAAW,CAAC5sB,KAAK,EAAI,GACpC+4B,YAAatwB,EAAK3K,EAAQ8uB,WAAW,CAACmM,WAAW,CAAE,SACnDC,aAAcvwB,EAAK3K,EAAQ8uB,WAAW,CAACoM,YAAY,CAAE,QACzD,GACIrG,EAAOK,KAAK,CAAG,GACfL,EAAOa,QAAQ,CAAC,EAExB,GACA,IAAI,CAACqG,eAAe,GACxB,EAOAvJ,EAAcpzB,SAAS,CAAC27B,kBAAkB,CAAG,WACzC,IAAIlM,EAAW,IAAI,CAACA,QAAQ,QAC5B,AAAIA,GAAYA,EAAS+E,aAAa,CAAG,EAC9B/E,EAAS+E,aAAa,CAAG,EAE7B,CACX,EAOApB,EAAcpzB,SAAS,CAACs+B,YAAY,CAAG,WACnC,IAAe7C,EAAclxB,AAApB,IAAI,CAAmBkxB,WAAW,CAAExkB,EAAU1M,AAA9C,IAAI,CAA6C0M,OAAO,CAAEjW,EAAQuJ,AAAlE,IAAI,CAAiEvJ,KAAK,CAAEyuB,EAAWllB,AAAvF,IAAI,CAAsFklB,QAAQ,CAC3G,GAAIgM,GAAehM,EAAU,CACzB,IAAIjlB,EAAKixB,EAAY5hB,UAAU,CAAuCpP,EAAKgxB,EAAY3hB,UAAU,CAAuC0jB,EAAOvmB,CAAO,CAAC,IAAI,CAAC0kB,kBAAkB,GAAG,CAAC/Q,OAAO,GACzL5N,EAAIyS,EAAU,CACV1e,KAAM,AAAC/P,EAAMmB,QAAQ,CAFqBqI,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAEzB,KACtC0G,IAAK,AAHuGzG,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAG9G,GAAO,KAC1B3H,MAAO06B,EAAK16B,KAAK,CAAG,KACpBC,OAAQy6B,EAAKz6B,MAAM,CAAG,IAC1B,GACA,IAAI,CAACy7B,kBAAkB,CAAG,CAAA,CAC9B,CACJ,EAKApL,EAAcpzB,SAAS,CAACu+B,YAAY,CAAG,WACnC,IAAI9O,EAAW,IAAI,CAACA,QAAQ,CACxBA,IACAzS,EAAIyS,EAAU,CACVve,IAAK,UACLpO,MAAO,MACPC,OAAQ,KACZ,GACA,IAAI,CAACy7B,kBAAkB,CAAG,CAAA,EAElC,EASApL,EAAcpzB,SAAS,CAACuR,SAAS,CAAG,WAChC,IAA0B3Q,EAAUoL,AAAhB,IAAI,CAA0BpL,OAAO,CAAE69B,EAAqBzyB,AAA5D,IAAI,CAAsEtK,KAAK,CAAEyuB,EAAgBvvB,EAAQuvB,aAAa,CAAEG,EAAiB1vB,EAAQ0vB,cAAc,CAAEoO,EAAY99B,EAAQrB,CAAC,CAAEo/B,EAAkBrO,EAAe/wB,CAAC,CAAEq/B,EAAiBzO,EAAc5wB,CAAC,CAC5Q+yB,EAAsB,SAC1B,AAAI1xB,EAAQmC,MAAM,CACPnC,EAAQmC,MAAM,EAIzB,IAAI,CAACy4B,aAAa,GAClBlJ,EAAsBmM,EAElB,AAACA,EAAmB7T,OAAO,CAAC,CAAA,GAAM7nB,MAAM,CAAI,GACxC27B,EACJ,EAEA,CAAA,AAACE,EAAiB,GAAKD,EAAkB,GACxCC,EAAiB,GAAKD,EAAkB,CAAC,GAC1CrM,CAAAA,GAAuB/xB,KAAKsd,GAAG,CAHjBtd,KAAKC,GAAG,CAACo+B,EAAgBD,GAGI,EAExCrM,EACX,EASAc,EAAcpzB,SAAS,CAAC08B,cAAc,CAAG,SAAU17B,CAAK,EACpD,MAAO,CAAEA,CAAAA,EAAMJ,OAAO,CAACqJ,KAAK,CAACpC,IAAI,EAC7B7G,EAAMJ,OAAO,CAACi+B,QAAQ,CAACh3B,IAAI,AAAD,CAClC,EAQAurB,EAAcpzB,SAAS,CAAC4a,MAAM,CAAG,SAAUha,CAAO,EAC9C,IAAII,EAAQ,IAAI,CAACA,KAAK,CACtBb,EAAM,CAAA,EAAMa,EAAMJ,OAAO,CAACoL,aAAa,CAAEpL,GACzC,IAAI,CAACyF,OAAO,GACZ,IAAI,CAACxF,IAAI,CAACG,GACV,IAAI,CAAC8E,MAAM,EACf,EAOAstB,EAAcpzB,SAAS,CAACqG,OAAO,CAAG,WAC9B,IAAIy4B,EAAY,IAAI,CAAElK,EAAWkK,EAAUlK,QAAQ,CAAEC,EAAWiK,EAAUjK,QAAQ,AAC9EiK,CAAAA,EAAUzgB,cAAc,GACxBygB,EAAUzgB,cAAc,CAAC1H,OAAO,CAAC,SAAUoJ,CAAM,EAAI,OAAOA,GAAU,GACtE+e,EAAUzgB,cAAc,CAAG,KAAK,GAGpCrI,EAAwB8oB,EAAU7nB,OAAO,EAErC2d,GACAA,CAAAA,EAASoF,OAAO,CAAGpF,EAASqF,MAAM,CAAGrF,EAASyF,QAAQ,CAAG,IAAG,EAE5DxF,GACAA,CAAAA,EAASmF,OAAO,CAAGnF,EAASoF,MAAM,CAAGpF,EAASwF,QAAQ,CAAG,IAAG,EAGhEj6B,EAAW0+B,EAAW,SAAUx4B,CAAG,CAAEy4B,CAAG,EAChCz4B,GAAOy4B,AAAQ,UAARA,IACHz4B,aAAeysB,EAEfzsB,EAAID,OAAO,GAENC,aAAexH,OAAOkgC,WAAW,EAEtC/L,EAAe3sB,IAGnBA,IAAQ8sB,EAAcpzB,SAAS,CAAC++B,EAAI,EACpCD,CAAAA,CAAS,CAACC,EAAI,CAAG,IAAG,CAE5B,EAAG,IAAI,CACX,EACO3L,CACX,IAqFA,OApFA7iB,EAAO6iB,EAAcpzB,SAAS,CAAE,CAK5BszB,eAAgB,CAAC,CACT7wB,KAAM,QACNsuB,MAAO,EACPlpB,KAAM,KACNoC,MAAO,cACX,EAAG,CACCxH,KAAM,QACNsuB,MAAO,EACPlpB,KAAM,KACNoC,MAAO,eACX,EAAG,CACCxH,KAAM,QACNsuB,MAAO,EACPlpB,KAAM,KACNoC,MAAO,eACX,EAAG,CACCxH,KAAM,MACNoF,KAAM,MACNoC,MAAO,mBACX,EAAG,CACCxH,KAAM,OACNsuB,MAAO,EACPlpB,KAAM,KACNoC,MAAO,aACX,EAAG,CACCxH,KAAM,MACNoF,KAAM,MACNoC,MAAO,UACX,EAAE,CAKN4tB,iBAAkB,CACd,iBAAkB,oBAClB,KAAQ,WACR,KAAQ,UACZ,CACJ,GAyCOzE,CACX,GACA90B,EAAgBD,EAAU,4BAA6B,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAU/H,IAAIC,EAAWF,EAAEE,QAAQ,CACrBoH,EAAWrH,EAAEqH,QAAQ,CAAEtG,EAAUf,EAAEe,OAAO,CAAEqL,EAAWpM,EAAEoM,QAAQ,CAAEC,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAgB/G,SAAS+H,IACL,IAAI0E,EAAe,IAAI,CAAC7K,KAAK,CAACJ,OAAO,CAACI,KAAK,AACvC,EAAC,IAAI,CAAC+L,KAAK,EACXzB,EAAS,IAAI,CAAC1K,OAAO,CAACkK,WAAW,GAChC,CAAA,CAACe,EAAa9I,MAAM,EAChB8I,EAAaozB,kBAAkB,EAC5BpzB,EAAaozB,kBAAkB,CAACC,SAAS,GACjD,CAAA,IAAI,CAACp0B,WAAW,CAAG,IAAI,CAAClK,OAAO,CAACkK,WAAW,AAAD,CAElD,CAEA,SAASq0B,IAEL,GAAIn+B,AAAwB,iBAAxBA,AADQ,IAAI,CACNo+B,aAAa,CAAqB,CA6BxC,IAAK,IAAIhkB,EAAK,EAAG7Q,EAAMvJ,AA9Bf,IAAI,CA8BiBikB,IAAI,EAAI,EAAE,CAAG7J,EAAK7Q,EAAGjH,MAAM,CAAE8X,KAEtDikB,AA9BU,SAAUv4B,CAAI,EACxB,IAAIw4B,EAAUx4B,EAAK9F,KAAK,CAAEuB,EAAU,CAAC,CAAC+8B,EAAQC,cAAc,EACxDD,EAAQ1+B,OAAO,CAACuD,SAAS,CAAE2G,EAAchE,EAAKlG,OAAO,CAACkK,WAAW,CACrE,GAAIhE,EAAKgE,WAAW,EAAI7K,EAAQ6G,EAAKtG,GAAG,EAAG,CACvC,IAAIuC,EAASwI,EAAKzE,EAAK04B,UAAU,EAAI14B,EAAK04B,UAAU,CAACC,UAAU,CAAE34B,EAAKxG,GAAG,CAAGwG,EAAK44B,YAAY,CAAG54B,EAAKtG,GAAG,EAAIsK,EAGxG60B,EAAO58B,AADXA,CAAAA,EAASxC,KAAKD,GAAG,CAACyC,EAAQ+H,EAAW,EACjBw0B,EAAQ75B,UAAU,AAClC,EAAC65B,EAAQM,iBAAiB,EAAIr/B,KAAKsd,GAAG,CAAC8hB,IAAS,IAChDL,EAAQ75B,UAAU,CAAG1C,EACrBu8B,EAAQF,aAAa,CAAG,eACxBE,EAAQO,OAAO,CAAC,KAAK,EAAGP,EAAQluB,WAAW,CAAGuuB,EAAMp9B,IAIxDuE,EAAK7F,MAAM,CAAC0V,OAAO,CAAC,SAAU1V,CAAM,EAChC,IAAI6+B,EAAW7+B,EAAO8+B,aAAa,EAC/BT,EAAQU,WAAW,CAAC/+B,EAAO8+B,aAAa,CAAC,CACzCD,GACAA,EAASh+B,IAAI,CAACw9B,EAAQxuB,QAAQ,CAAG,CAC7BhO,MAAOw8B,EAAQ75B,UAAU,AAC7B,EAAI,CACA1C,OAAQu8B,EAAQ75B,UAAU,AAC9B,EAER,EACJ,CACJ,EAEe8E,CAAE,CAAC6Q,EAAG,CAGrB,CAAA,IAAI,CAACmkB,cAAc,CAAG,CAAA,CAC1B,CACA,IAAI,CAACH,aAAa,CAAG,IACzB,CAgCA,MA1BkB,CACdv/B,QAjEJ,SAASA,EAAQuI,CAAS,CAAEuK,CAAU,EAClC,GAAIvT,EAAWD,EAAUU,GAAU,CAC/B,IAAIiT,EAAaH,EAAW3S,SAAS,CACrCuG,EAAS6B,EAAW,kBAAmBjB,GACvC2L,EAAWmtB,YAAY,CAAGd,EAC1B54B,EAASoM,EAAY,SAAUG,EAAWmtB,YAAY,CAC1D,CACJ,CA2DA,CAyBJ,GACA3hC,EAAgBD,EAAU,wCAAyC,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUa,CAAC,EAY3G,IAAImM,EAAenM,EAAEmM,YAAY,CAAEC,EAAWpM,EAAEoM,QAAQ,CAAE40B,EAAWhhC,EAAEghC,QAAQ,CAyM/E,MA7K2B,CAkCvBC,aAAc,CAAA,EACdxxB,WAAY,CACR/H,UAAW,WACP,IAAwBw5B,EAASl9B,AAArB,IAAI,CAACA,KAAK,CAAiBm9B,WAAW,CAIlD,GAHIH,EAASE,IACTA,CAAAA,EAASA,EAAOA,MAAM,AAAD,EAErB90B,EAAS80B,IAAWA,EAAS,EAC7B,OAAO/0B,EAAa+0B,AAAS,IAATA,GAAgB,GAE5C,EACA/V,OAAQ,CAAA,EACR7Y,cAAe,SACfvK,MAAO,CACHq5B,WAAY,QAChB,CACJ,EACAC,QAAS,CACLC,aAAc,oEACdC,YAAa,yFACjB,EACAC,aAAc,EACdxzB,WAAY,CAChB,CAqHJ,GACA5O,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUiP,CAAc,CAAEpO,CAAC,EAY7J,IACQsJ,EADJE,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUlG,CAAC,CAAEqG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAUzG,CAAC,CAAEqG,CAAC,EAAIrG,EAAEwG,SAAS,CAAGH,CAAG,GAC1E,SAAUrG,CAAC,CAAEqG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAO5I,SAAS,CAACrB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI1G,CAAAA,CAAC,CAAC0G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E1G,EAAGqG,EAC5B,EACO,SAAUrG,CAAC,CAAEqG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAG9G,CAAG,CADtCkG,EAAclG,EAAGqG,GAEjBrG,EAAEtC,SAAS,CAAG2I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGnJ,SAAS,CAAG2I,EAAE3I,SAAS,CAAE,IAAImJ,CAAG,CACtF,GAEAw3B,EAAcrzB,EAAeE,WAAW,CAACozB,MAAM,CAAC5gC,SAAS,CAAC6gC,UAAU,CACpEtwB,EAASrR,EAAEqR,MAAM,CAMjBuwB,EAA6B,SAAUt3B,CAAM,EAO7C,SAASs3B,EAAY7/B,CAAM,CAAEL,CAAO,EAChC,IAAI2iB,EAAQ/Z,EAAOrB,IAAI,CAAC,IAAI,CAAElH,EAAQL,IAAY,IAAI,CAItD,OAHK2iB,EAAMhkB,CAAC,EACRgkB,CAAAA,EAAMhkB,CAAC,CAAG,CAAA,EAEPgkB,CACX,CAiFA,OA7FA7a,EAAUo4B,EAAat3B,GAiCvBs3B,EAAYC,kBAAkB,CAAG,SAAU9/B,CAAM,CAAEiC,CAAK,EACpD,IAAIogB,EAASriB,EAAOL,OAAO,CAAC0iB,MAAM,EAAIriB,EAAOD,KAAK,CAACJ,OAAO,CAAC0iB,MAAM,CAAE0d,EAAa1d,EAC5EA,EAAOhgB,MAAM,CACbrC,EAAOD,KAAK,CAACJ,OAAO,CAACI,KAAK,CAACggC,UAAU,CAAEn9B,EAAaX,EAAM3D,CAAC,CAAGyhC,EAAYj9B,EAAQuf,GAAUA,CAAM,CAACzf,EAAW,CAClH,MAAO,CACHA,WAAYA,EACZE,MAAOA,CACX,CACJ,EASA+8B,EAAY9gC,SAAS,CAACihC,YAAY,CAAG,WACjC,IAAIhgC,EAAS,IAAI,CAACA,MAAM,CACxB,GAAIA,EAAOL,OAAO,CAACu/B,YAAY,EAAI,CAAC,IAAI,CAACv/B,OAAO,CAACmD,KAAK,CAAE,CACpD,IAAIo8B,EAAeW,EAAYC,kBAAkB,CAAC9/B,EAAQ,IAAI,CACzDA,CAAAA,EAAOD,KAAK,CAACK,UAAU,EACxB,CAAA,IAAI,CAAC0C,KAAK,CAAGo8B,EAAap8B,KAAK,AAAD,EAE7B,IAAI,CAACnD,OAAO,CAACiD,UAAU,EACxB,CAAA,IAAI,CAACA,UAAU,CAAGs8B,EAAat8B,UAAU,AAAD,CAEhD,MACU,IAAI,CAACE,KAAK,EAChB,CAAA,IAAI,CAACA,KAAK,CAAG9C,EAAO8C,KAAK,AAAD,CAEhC,EAIA+8B,EAAY9gC,SAAS,CAACs2B,QAAQ,CAAG,WAC7B9sB,EAAOxJ,SAAS,CAACs2B,QAAQ,CAAC13B,KAAK,CAAC,IAAI,CAAE6K,WACtC,IAAI,CAACxI,MAAM,CAACigC,SAAS,CAAC,IAAI,CAAE,IAAI,CAACjgC,MAAM,CAACkgC,gBAAgB,GAC5D,EAMAL,EAAY9gC,SAAS,CAACohC,cAAc,CAAG,WACnC,IAAIC,EAAM73B,EAAOxJ,SAAS,CAACohC,cAAc,CAACj5B,IAAI,CAAC,IAAI,EAAGm5B,EAAQ,IAAI,CAACrgC,MAAM,CAAC+I,KAAK,CAACgB,UAAU,CAM1F,OALAq2B,EAAI7b,EAAE,CAAG,IAAI,CAACA,EAAE,CAChB6b,EAAIE,SAAS,CAAG,IAAI,CAACA,SAAS,CAAGD,GAASA,CAAK,CAAC,IAAI,CAAC/hC,CAAC,CAAC,CAGvD8hC,EAAItC,GAAG,CAAG,IAAI,CAACyC,QAAQ,EAAI,IAAI,CAAC3iB,IAAI,CAC7BwiB,CACX,EAIAP,EAAY9gC,SAAS,CAACyhC,OAAO,CAAG,WAC5B,MAAO,AAAkB,UAAlB,OAAO,IAAI,CAACniC,CAAC,EAChB,AAAmB,UAAnB,OAAO,IAAI,CAACkmB,EAAE,AACtB,EACOsb,CACX,EAAEH,GAwCF,OAvCApwB,EAAOuwB,EAAY9gC,SAAS,CAAE,CAC1B0hC,QAAS,CAAA,EACTC,gBAAiB,CAAC,IAAK,KAAK,AAChC,GAoCOb,CACX,GACAxiC,EAAgBD,EAAU,gCAAiC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,+BAA+B,CAAC,CAAE,SAAUY,CAAC,CAAEoO,CAAK,CAAEC,CAAc,CAAEpO,CAAC,CAAE0iC,CAAoB,CAAEd,CAAW,EAYtW,IACQt4B,EADJE,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUlG,CAAC,CAAEqG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAUzG,CAAC,CAAEqG,CAAC,EAAIrG,EAAEwG,SAAS,CAAGH,CAAG,GAC1E,SAAUrG,CAAC,CAAEqG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAO5I,SAAS,CAACrB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI1G,CAAAA,CAAC,CAAC0G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E1G,EAAGqG,EAC5B,EACO,SAAUrG,CAAC,CAAEqG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAG9G,CAAG,CADtCkG,EAAclG,EAAGqG,GAEjBrG,EAAEtC,SAAS,CAAG2I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGnJ,SAAS,CAAG2I,EAAE3I,SAAS,CAAE,IAAImJ,CAAG,CACtF,GAEAhK,EAAWF,EAAEE,QAAQ,CAAE0iC,EAAO5iC,EAAE4iC,IAAI,CACpC99B,EAAQsJ,EAAME,KAAK,CACnBu0B,EAAex0B,EAAeE,WAAW,CAACozB,MAAM,CAChDr6B,EAAWrH,EAAEqH,QAAQ,CAAEwU,EAAQ7b,EAAE6b,KAAK,CAAE9a,EAAUf,EAAEe,OAAO,CAAEsQ,EAASrR,EAAEqR,MAAM,CAAE0K,EAAO/b,EAAE+b,IAAI,CAAE3P,EAAWpM,EAAEoM,QAAQ,CAAE40B,EAAWhhC,EAAEghC,QAAQ,CAAE//B,EAAQjB,EAAEiB,KAAK,CAAEoL,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAAE2iC,EAAiB7iC,EAAE6iC,cAAc,CAU7O,SAASC,IACL,IAAI50B,EAAS60B,EACb,GAAI,IAAI,CAAC/1B,OAAO,CAAE,CACdkB,EAAU7B,EAAK,IAAI,CAAC6B,OAAO,CAAE,CAACmX,OAAOC,SAAS,EAC9C,IAAK,IAAIpJ,EAAK,EAAG7Q,EAAK,IAAI,CAACtJ,MAAM,CAAEma,EAAK7Q,EAAGjH,MAAM,CAAE8X,IAAM,CACrD,IAAIna,EAASsJ,CAAE,CAAC6Q,EAAG,CACnB,GAAIna,EAAOihC,MAAM,CACb,IAAK,IAAI13B,EAAK,EAAGC,EAAKxJ,EAAOihC,MAAM,CAAE13B,EAAKC,EAAGnH,MAAM,CAAEkH,IAAM,CACvD,IAAIlE,EAAMmE,CAAE,CAACD,EAAG,CACZlE,GAAOA,EAAM8G,IACbA,EAAU9G,EACV27B,EAAS,CAAA,EAEjB,CAER,CACIA,GACA,CAAA,IAAI,CAAC70B,OAAO,CAAGA,CAAM,CAE7B,CACJ,CAaA,IAAI+0B,EAA8B,SAAU34B,CAAM,EAE9C,SAAS24B,IACL,OAAO34B,AAAW,OAAXA,GAAmBA,EAAO5K,KAAK,CAAC,IAAI,CAAE6K,YAAc,IAAI,AACnE,CAoVA,OAvVAf,EAAUy5B,EAAc34B,GASxB24B,EAAatiC,OAAO,CAAG,SAAUuI,CAAS,EAClChJ,EAAWD,EAAU,IAAI,CAACU,OAAO,GACjC0G,EAAS6B,EAAW,yBAA0B45B,EAEtD,EASAG,EAAaniC,SAAS,CAACa,IAAI,CAAG,WAC1B2I,EAAOxJ,SAAS,CAACa,IAAI,CAACjC,KAAK,CAAC,IAAI,CAAE6K,WAClC,IAAI,CAAC7I,OAAO,CAAC2hB,QAAQ,CAAG,KAAK,CACjC,EAMA4f,EAAaniC,SAAS,CAACoiC,gBAAgB,CAAG,WACtC,IAAI7e,EAAQ,IAAI,CACZ8e,EAAW,WACX,IAAK,IAAIjnB,EAAK,EAAG7Q,EAAKgZ,EAAMviB,KAAK,CAACC,MAAM,CAAEma,EAAK7Q,EAAGjH,MAAM,CAAE8X,IAAM,CAC5D,IAAIna,EAASsJ,CAAE,CAAC6Q,EAAG,CACftR,EAAQ7I,EAAO6I,KAAK,AACxB7I,CAAAA,EAAO6I,KAAK,CAAG7I,EAAO+I,KAAK,CAC3B/I,EAAO+I,KAAK,CAAGF,CACnB,CACJ,EACAu4B,IACA,IAAIpa,EAAUze,EAAOxJ,SAAS,CAACoiC,gBAAgB,CAACj6B,IAAI,CAAC,IAAI,EAEzD,OADAk6B,IACOpa,CACX,EAMAka,EAAaniC,SAAS,CAACsiC,QAAQ,CAAG,SAAUze,CAAK,CAAE0e,CAAK,CAAE/hC,CAAG,CAAEF,CAAG,EAE9D,IAAIkiC,EAAOh5B,EAAOxJ,SAAS,CAACsiC,QAAQ,CAACn6B,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC+5B,MAAM,CAAEK,EAAO/hC,EAAKF,GAGzE,OADAkiC,EAAK3e,KAAK,CAAGA,EAAMV,KAAK,CAACqf,EAAK9b,KAAK,CAAE8b,EAAK7b,GAAG,EACtC6b,CACX,EAcAL,EAAaniC,SAAS,CAACyiC,cAAc,CAAG,SAAU7hC,CAAO,EACrD,IAEI8hC,EAFWC,EAAYp4B,AAAlB,IAAI,CAAiBo4B,SAAS,CAAEvV,EAAS7iB,AAAzC,IAAI,CAAwC6iB,MAAM,CACvDxe,EAAKhO,EAAQgO,EAAE,CAEnB,GAAIA,EAAI,CACJ,IAAI1L,EAAQ+X,EAAKmS,EAAQ,SAAUlqB,CAAK,EAAI,OAAOA,EAAM0L,EAAE,GAAKA,CAAI,GACpE8zB,EAAax/B,EAAQA,EAAMsQ,KAAK,CAAG,KAAK,CAC5C,CACA,GAAI,AAAsB,KAAA,IAAfkvB,EAA4B,CACnC,IAAIx/B,EAAQ+X,EAAKmS,EAAQ,SAAUlqB,CAAK,EAAI,OAAQA,EAAM5D,CAAC,GAAKsB,EAAQtB,CAAC,EACrE4D,EAAMsiB,EAAE,GAAK5kB,EAAQ4kB,EAAE,EACvB,CAACtiB,EAAM0/B,OAAO,AAAG,GACrBF,EAAax/B,EAAQA,EAAMsQ,KAAK,CAAG,KAAK,CAC5C,CAQA,OANI,IAAI,CAACqvB,OAAO,EACZv3B,EAASo3B,IACTp3B,EAASq3B,IACTD,GAAcC,GACdD,CAAAA,GAAcC,CAAQ,EAEnBD,CACX,EACAP,EAAaniC,SAAS,CAAC8iC,cAAc,CAAG,SAAU5/B,CAAK,EAEnD,IADIqH,EACAw4B,EAAW7/B,EAAM2nB,KAAK,AAC1B3nB,CAAAA,EAAM2nB,KAAK,CAAGtf,EAAKrI,EAAM8/B,KAAK,EAAI9/B,EAAM8/B,KAAK,CAACC,OAAO,CAAE//B,EAAM2nB,KAAK,EAC9D3nB,EAAMggC,SAAS,EAAK,CAAA,AAA2B,OAA1B34B,CAAAA,EAAKrH,EAAMunB,SAAS,AAAD,GAAelgB,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGzH,KAAK,AAAD,GACvFI,EAAMggC,SAAS,CAAClmB,GAAG,CAAC,CAChBla,MAAO,GAAGsD,MAAM,CAAClD,EAAMunB,SAAS,CAAC3nB,KAAK,CAAE,KAC5C,GAEJ0G,EAAOxJ,SAAS,CAAC8iC,cAAc,CAAClkC,KAAK,CAAC,IAAI,CAAE6K,WAC5CvG,EAAM2nB,KAAK,CAAGkY,CAClB,EAIAZ,EAAaniC,SAAS,CAACmjC,cAAc,CAAG,SAAUjgC,CAAK,EACnD,IAGIkgC,EAAiB/C,EAAgFgD,EAAQC,EAASC,EAASC,EAH3H15B,EAAQ,IAAI,CAACA,KAAK,CAAEE,EAAQ,IAAI,CAACA,KAAK,CAAEie,EAAU,IAAI,CAACwb,aAAa,CAAE7iC,EAAU,IAAI,CAACA,OAAO,CAAE8iC,EAAiB9iC,EAAQ8iC,cAAc,EAAI,EAAGC,EAAc,AAACzgC,CAAAA,EAAMunB,SAAS,EAAIvnB,EAAMunB,SAAS,CAAC3nB,KAAK,EAAI,CAAA,EAAK,EAAG8gC,EAAgB,IAAI,CAACC,YAAY,CAAG5b,EAAQ3T,MAAM,CAAEwvB,EAAOv4B,EAAKrI,EAAMsiB,EAAE,CAAEtiB,EAAM5D,CAAC,CAAI4D,CAAAA,EAAM4T,GAAG,EAAI,CAAA,GAAK4pB,EAAe9/B,EAAQ8/B,YAAY,CAAEt+B,EAAU,IAAI,CAACpB,KAAK,CAACoB,OAAO,CAAED,EAAW,IAAI,CAACnB,KAAK,CAACmB,QAAQ,CACvZ0oB,EAAQ3nB,EAAM2nB,KAAK,CAAEkZ,EAASj6B,EAAM5H,SAAS,CAAC4hC,EAAM,EAAG,EAAG,EAAG,GAC7DxgC,EAAS/C,KAAKsd,GAAG,CAACkmB,EAASlZ,GAAQ/Z,EAAW,IAAI,CAAC9P,KAAK,CAAC8P,QAAQ,CAA8CkzB,EAAUC,AAAxC14B,EAAK3K,EAAQqjC,WAAW,CAAE,GAA4B,EAAI,EAC7GzrB,EAAUyP,EAAQ3T,MAAM,CAAE4vB,EAAc3jC,KAAKyP,KAAK,CAACiY,EAAQnlB,KAAK,EAC9F4gC,IACAN,CAAAA,EAAkBM,EAAiBpgC,CAAK,EAClB,GAClB8/B,CAAAA,EAAkB,CAAA,EAEtBvY,GAASuY,EAAkB,EAC3BW,GAAUX,EAAkB,GAEhCvY,EAAQtqB,KAAKD,GAAG,CAACuqB,EAAO,KACxBkZ,EAAShpB,EAAMgpB,EAAQ,IAAKj6B,EAAMgN,GAAG,CAAG,IAEpC7W,EAAQiD,EAAMtC,OAAO,CAACujC,UAAU,IAChC3rB,GAAY,AAACjY,CAAAA,KAAK2F,IAAI,CAAChD,EAAMtC,OAAO,CAACujC,UAAU,EAAID,CAAU,EAAK,EAClEA,EAAc3jC,KAAK2F,IAAI,CAAChD,EAAMtC,OAAO,CAACujC,UAAU,GAGhDvjC,EAAQwjC,cAAc,EACtB94B,EAASpI,EAAM4nB,KAAK,GACpB9gB,EAAMgB,UAAU,EAChB9H,CAAAA,EAAM4nB,KAAK,CAAG9gB,EAAM9H,SAAS,CAACgB,EAAM3D,CAAC,CAAE,EAAG,EAAG,EAAG,EAAGqB,EAAQwjC,cAAc,CAAA,EAE7E,IAAI9kC,EAAIiB,KAAK+Z,KAAK,CAAC/Z,KAAKC,GAAG,CAACqqB,EAAOkZ,IAAWC,EAA6DlhC,EAAQ0iB,AAAvDjlB,KAAK+Z,KAAK,CAAC/Z,KAAKD,GAAG,CAACuqB,EAAOkZ,IAAWC,EAAsB1kC,EACpHwZ,EAAIvY,KAAKC,GAAG,CAACuhC,EAAgB,AAAwB,UAAxB,OAAOrB,EACpCA,EAAaj9B,MAAM,CACnBi9B,GAAgB,EAAIwD,GAAc3jC,KAAKC,GAAG,CAACsC,EAAOohC,GAAe,GACjEzZ,EAAY,CACZnrB,EAAGA,EACHC,EAAGgB,KAAK+Z,KAAK,CAACpX,EAAM4nB,KAAK,CAAGtS,GAAWwrB,EACvClhC,MAAOA,EACPC,OAAQmhC,EACRprB,EAAGA,CACP,CACA5V,CAAAA,EAAMunB,SAAS,CAAGA,EAEb3Z,EAMD5N,EAAMmhC,UAAU,CAAC,EAAE,EAAIT,EACnBD,EANJzgC,EAAMmhC,UAAU,CAAC,EAAE,EAAIV,EACnBC,EACAnZ,EAAU3nB,KAAK,CAAG,EAQ1BwgC,EAAUD,AADVA,CAAAA,EAAS5Y,EAAUnrB,CAAC,AAADA,EACAmrB,EAAU3nB,KAAK,CAC9BugC,EAAS,GAAKC,EAAUx5B,EAAMgN,GAAG,EACjCusB,EAAStoB,EAAMsoB,EAAQ,EAAGv5B,EAAMgN,GAAG,EAEnCysB,EAAUD,AADVA,CAAAA,EAAUvoB,EAAMuoB,EAAS,EAAGx5B,EAAMgN,GAAG,CAAA,EACjBusB,EACpBngC,EAAM8/B,KAAK,CAAG7iC,EAAMsqB,EAAW,CAC3BnrB,EAAG+jC,EACHvgC,MAAOwgC,EAAUD,EACjBJ,QAASM,EAAUA,EAAU,EAAI,IACrC,IAGArgC,EAAM8/B,KAAK,CAAG,KAGlB,IAAIqB,EAAanhC,EAAMmhC,UAAU,CAC7BC,EAAS,AAACxzB,EAAe,EAAJ,EACrByzB,EAAS,AAACzzB,EAAe,EAAJ,EACrB0zB,EAAkB,IAAI,CAACf,aAAa,CACpC,IAAI,CAACA,aAAa,CAACnvB,MAAM,CACzB,CAAC2T,EAAQnlB,KAAK,CAAG,EAEjBgO,EACAuzB,CAAU,CAACC,EAAO,EAAI7Z,EAAU3nB,KAAK,CAAG,EAGxCuhC,CAAU,CAACC,EAAO,CAAGvpB,EAAMspB,CAAU,CAACC,EAAO,CACzC,AAACx6B,CAAAA,EAAMiB,QAAQ,CAAG,GAAK,CAAA,EAAK0f,EAAU3nB,KAAK,CAAEgH,EAAMiH,IAAI,CAAG5O,EAAU2H,EAAMiH,IAAI,CAAGjH,EAAMgN,GAAG,CAAG3U,EAAW,GAEhHkiC,CAAU,CAACE,EAAO,CAAGxpB,EAAMspB,CAAU,CAACE,EAAO,CAAI,AAACzzB,CAAAA,EAAW,GAAK,CAAA,EAAK0zB,EAAiBx6B,EAAMkH,GAAG,CAAG9O,EAAS4H,EAAMkH,GAAG,CAAGlH,EAAM8M,GAAG,CAAG1U,EAAU,GAE/Ii+B,CAAAA,EAAcn9B,EAAMm9B,WAAW,AAAD,IAGtBH,EAASG,IACTA,CAAAA,EAAcA,EAAYD,MAAM,AAAD,EAG9B90B,EAAS+0B,IACVA,CAAAA,EAAc,CAAA,EAElBn9B,EAAMuhC,aAAa,CAAGtkC,EAAMsqB,GAC5B+Y,EAAgBjjC,KAAKD,GAAG,CAACC,KAAKyP,KAAK,CAAC1M,EAAS+8B,EAAcn9B,EAAM2nB,KAAK,CAClEA,GAAQ,GACZ3nB,EAAMwhC,YAAY,CAAG,CACjBplC,EAAGwK,EAAMiB,QAAQ,CACb0f,EAAUnrB,CAAC,CAAGgE,EAASkgC,EACvB/Y,EAAUnrB,CAAC,CACfC,EAAGkrB,EAAUlrB,CAAC,CACduD,MAAO0gC,EACPzgC,OAAQ0nB,EAAU1nB,MAAM,AAC5B,EAER,EAIAo/B,EAAaniC,SAAS,CAACkC,SAAS,CAAG,WAC/BsH,EAAOxJ,SAAS,CAACkC,SAAS,CAACtD,KAAK,CAAC,IAAI,CAAE6K,WACvC,IAAK,IAAI2R,EAAK,EAAG7Q,EAAK,IAAI,CAAC6iB,MAAM,CAAEhS,EAAK7Q,EAAGjH,MAAM,CAAE8X,IAAM,CACrD,IAAIlY,EAAQqH,CAAE,CAAC6Q,EAAG,CAClB,IAAI,CAAC+nB,cAAc,CAACjgC,EACxB,CACJ,EAeAi/B,EAAaniC,SAAS,CAACkhC,SAAS,CAAG,SAAUh+B,CAAK,CAAEuY,CAAI,EACpD,IAAIkpB,EAAa,IAAI,CAAC/jC,OAAO,CAAEe,EAAW,IAAI,CAACX,KAAK,CAACW,QAAQ,CAAEc,EAAOS,EAAM0hC,SAAS,CAAEna,EAAYvnB,EAAMunB,SAAS,CAAEga,EAAgBvhC,EAAMuhC,aAAa,CAAEC,EAAexhC,EAAMwhC,YAAY,CAAEG,EAAa3hC,EAAM4yB,KAAK,CAAEgP,EAAaH,EAAWniB,MAAM,CAACqiB,GAAc,SAAS,EACxQ,CAAC,EAAIE,EAAiB,AAAsB,KAAA,IAAfF,EAC7B,OAASppB,EAAMupB,EAAY,IAAI,CAACC,YAAY,CAAC/hC,EAAO2hC,GAAa1gC,EAAYoH,EAAK,IAAI,CAACvK,KAAK,CAACJ,OAAO,CAACI,KAAK,CAACmD,SAAS,CAAE2gC,EAAU3gC,SAAS,EACzIwmB,EAAUznB,EAAMynB,OAAO,CAAEua,EAAYhiC,EAAMm9B,WAAW,CAC1D,GAAI,AAACn9B,EAAMiiC,MAAM,EAAIjiC,AAAkB,CAAA,IAAlBA,EAAM6f,OAAO,CAqDzB4H,GACLznB,CAAAA,EAAMynB,OAAO,CAAGA,EAAQtkB,OAAO,EAAC,OAxBhC,GA5BIskB,EACAA,EAAQ/R,IAAI,CAAC6C,EAAK,CAACgP,IAGnBvnB,EAAMynB,OAAO,CAAGA,EAAUhpB,EAASC,CAAC,CAAC,SAChCC,QAAQ,CAACqB,EAAMkiC,YAAY,IAC3BpjC,GAAG,CAACkB,EAAMxB,KAAK,EAAI,IAAI,CAACA,KAAK,EAClCipB,EAAQ/R,IAAI,CAAGjX,CAAQ,CAACc,EAAK,CAACtC,EAAMsqB,IAC/B5oB,QAAQ,CAACqB,EAAMkiC,YAAY,IAC3BvjC,QAAQ,CAAC,gCACTG,GAAG,CAAC2oB,IAGT8Z,IACI9Z,EAAQ0a,QAAQ,EAChB1a,EAAQ0a,QAAQ,CAAC5pB,EAAK,CAACtb,EAAMskC,IAC7B9Z,EAAQ2a,eAAe,CAAC7pB,EAAK,CAACtb,EAAMukC,MAGpC/Z,EAAQ2a,eAAe,CAAG3jC,EAASm+B,QAAQ,CAAC4E,EAAaplC,CAAC,CAAEolC,EAAanlC,CAAC,CAAEmlC,EAAa5hC,KAAK,CAAE4hC,EAAa3hC,MAAM,EACnH4nB,EAAQ0a,QAAQ,CACZ1jC,CAAQ,CAACc,EAAK,CAACgiC,GACV5iC,QAAQ,CAAC,+BACTG,GAAG,CAAC2oB,GACJ4a,IAAI,CAAC5a,EAAQ2a,eAAe,IAIzC,CAAC,IAAI,CAACtkC,KAAK,CAACK,UAAU,GACtBspB,EACK/R,IAAI,CAAC6C,EAAK,CAACupB,EAAW7gC,GACtBqhC,MAAM,CAACb,EAAWa,MAAM,EACzBf,GAAe,CAEVvE,EAASgF,IACVA,CAAAA,EAAY,CAAC,CAAA,EAEbhF,EAASyE,EAAWtE,WAAW,GAC/B6E,CAAAA,EAAY/kC,EAAMwkC,EAAWtE,WAAW,CAAE6E,EAAS,EAEvD,IAAIphC,EAAQohC,EAAUphC,IAAI,EACtBC,EAAMihC,EAAUlhC,IAAI,EAAE2hC,QAAQ,CAAC,KAAM33B,GAAG,IACxC/J,EAAMb,EAAMa,KAAK,EAAI,IAAI,CAACA,KAAK,EAC1B0hC,QAAQ,CAAC,KAAM33B,GAAG,EAC3Bk3B,CAAAA,EAAUlhC,IAAI,CAAGA,EACjB6mB,EACK0a,QAAQ,CAACN,EAAe,CAACC,EAAW7gC,GACpCqhC,MAAM,CAACb,EAAWa,MAAM,CACjC,CAMZ,EAIArD,EAAaniC,SAAS,CAAC0lC,UAAU,CAAG,WAGhC,IAAK,IAFDjqB,EAAO,IAAI,CAAC0lB,gBAAgB,GAEvB/lB,EAAK,EAAG7Q,EAAK,IAAI,CAAC6iB,MAAM,CAAEhS,EAAK7Q,EAAGjH,MAAM,CAAE8X,IAAM,CACrD,IAAIlY,EAAQqH,CAAE,CAAC6Q,EAAG,CAClB,IAAI,CAAC8lB,SAAS,CAACh+B,EAAOuY,EAC1B,CACJ,EAOA0mB,EAAaniC,SAAS,CAACmhC,gBAAgB,CAAG,WACtC,OAAQ,IAAI,CAACngC,KAAK,CAAC2kC,UAAU,CAAI,CAAA,IAAI,CAAC/kC,OAAO,CAACglC,cAAc,EAAI,GAAE,EAC9D,UACA,MACR,EAIAzD,EAAaniC,SAAS,CAAC6lC,aAAa,CAAG,SAAU3iC,CAAK,EAClD,IAAIunB,EAAYvnB,EAAMunB,SAAS,CAAEI,EAAQ3nB,EAAM2nB,KAAK,CAAEC,EAAQ5nB,EAAM4nB,KAAK,QACzE,AAAKL,EAGU,AAAiB,KAAA,IAAVI,GAClB,AAAiB,KAAA,IAAVC,GACPA,GAAS,GACTA,GAAS,IAAI,CAAC9gB,KAAK,CAAC8M,GAAG,EACvB,AAAC2T,CAAAA,EAAUnrB,CAAC,EAAI,CAAA,EAAMmrB,CAAAA,EAAU3nB,KAAK,EAAI,CAAA,GAAM,GAC/C+nB,GAAS,IAAI,CAAC/gB,KAAK,CAACgN,GAAG,CAPhBtN,EAAOxJ,SAAS,CAAC6lC,aAAa,CAACjnC,KAAK,CAAC,IAAI,CAAE6K,UAS1D,EAMA04B,EAAa17B,cAAc,CAAGtG,EAAM2hC,EAAar7B,cAAc,CAAEm7B,GAC1DO,CACX,EAAEL,GAmBF,OAlBAvxB,EAAO4xB,EAAaniC,SAAS,CAAE,CAC3B6gC,WAAYC,EACZgF,cAAe,CAAC,KAAM,IAAI,CAC1BC,mBAAoB,CAAA,EACpBC,eAAgB,CAAC,IAAK,KAAM,IAAI,CAChCC,eAAgB,CAAA,EAChBxjC,KAAM,SACNF,QAAS+K,EAAerM,MAAM,CAACjB,SAAS,CAACuC,OAAO,CAChD2jC,cAAerE,EACfsE,YAAatE,CACjB,GACAv0B,EAAe84B,kBAAkB,CAAC,SAAUjE,GAOrCA,CACX,GACA7jC,EAAgBD,EAAU,6BAA8B,CAACA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUiP,CAAc,CAAEpO,CAAC,EAY3J,IACQsJ,EADJE,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUlG,CAAC,CAAEqG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAUzG,CAAC,CAAEqG,CAAC,EAAIrG,EAAEwG,SAAS,CAAGH,CAAG,GAC1E,SAAUrG,CAAC,CAAEqG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAO5I,SAAS,CAACrB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI1G,CAAAA,CAAC,CAAC0G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E1G,EAAGqG,EAC5B,EACO,SAAUrG,CAAC,CAAEqG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAG9G,CAAG,CADtCkG,EAAclG,EAAGqG,GAEjBrG,EAAEtC,SAAS,CAAG2I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGnJ,SAAS,CAAG2I,EAAE3I,SAAS,CAAE,IAAImJ,CAAG,CACtF,GAEA23B,EAAcxzB,EAAeE,WAAW,CAAC64B,MAAM,CAACrmC,SAAS,CAAC6gC,UAAU,CACpEt1B,EAAOrM,EAAEqM,IAAI,CA0EjB,OApEgC,SAAU/B,CAAM,EAE5C,SAAS88B,IACL,OAAO98B,AAAW,OAAXA,GAAmBA,EAAO5K,KAAK,CAAC,IAAI,CAAE6K,YAAc,IAAI,AACnE,CAwDA,OA3DAf,EAAU49B,EAAY98B,GAYtB88B,EAAWC,oBAAoB,CAAG,SAAU3lC,CAAO,EAK/C,SAAS4lC,EAAY9tB,CAAI,CAAEpS,CAAG,EACP,KAAA,IAARA,GACP1F,CAAAA,CAAO,CAAC8X,EAAK,CAAGpS,CAAE,CAE1B,CACAkgC,EAAY,IAAKj7B,EAAK3K,EAAQ8lB,KAAK,CAAE9lB,EAAQtB,CAAC,GAC9CknC,EAAY,KAAMj7B,EAAK3K,EAAQ+lB,GAAG,CAAE/lB,EAAQ4kB,EAAE,GAC9CghB,EAAY,cAAej7B,EAAK3K,EAAQ6lC,SAAS,CAAE7lC,EAAQy/B,WAAW,EAC1E,EAsBAiG,EAAWtmC,SAAS,CAAC0mC,YAAY,CAAG,SAAU9lC,CAAO,CAAEtB,CAAC,EACpD,IAAIqnC,EAAan9B,EAAOxJ,SAAS,CAAC0mC,YAAY,CAACv+B,IAAI,CAAC,IAAI,CAAEvH,EAAStB,GAEnE,OADAgnC,EAAWC,oBAAoB,CAACI,GACzBA,CACX,EACAL,EAAWtmC,SAAS,CAACyhC,OAAO,CAAG,WAC3B,MAAQ,AAAC,CAAA,AAAsB,UAAtB,OAAO,IAAI,CAAC/a,KAAK,EACtB,AAAkB,UAAlB,OAAO,IAAI,CAACpnB,CAAC,AAAY,GACxB,CAAA,AAAoB,UAApB,OAAO,IAAI,CAACqnB,GAAG,EACZ,AAAmB,UAAnB,OAAO,IAAI,CAACnB,EAAE,EACd,IAAI,CAACohB,SAAS,AAAD,CACzB,EACON,CACX,EAAExF,EAQN,GACAxiC,EAAgBD,EAAU,sCAAuC,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUa,CAAC,EAYzG,IAAIoM,EAAWpM,EAAEoM,QAAQ,CAgNzB,MAjM0B,CAEtBu7B,SAAU,CAAA,EACVl4B,WAAY,CACRtL,QAAS,CAAA,CACb,EACAk9B,QAAS,CACLC,aAAc,2DACdC,YAAa,KACbqG,eAAgB,WACZ,IAAkB7lC,EAASiC,AAAf,IAAI,CAAiBjC,MAAM,CAAE6I,EAAQ7I,EAAO6I,KAAK,CAAEi9B,EAAU9lC,EAAO+lC,cAAc,CAACC,oBAAoB,CAAEC,EAAcp9B,EAAMlJ,OAAO,CAACsmC,WAAW,CAAEC,EAAYlmC,EAAO+lC,cAAc,CAAEJ,EAAY1jC,AAAjM,IAAI,CAAmMtC,OAAO,CAACgmC,SAAS,CAChOjgC,EAASwgC,EAAUC,WAAW,CAAEC,EAAS,MAASnkC,CAAAA,AAD1C,IAAI,CAC4C2b,IAAI,EAAI3b,AADxD,IAAI,CAC0Dq+B,SAAS,AAAD,EAAK,OACvF,GAAI4F,EAAU1G,WAAW,CACrB,OAAOv9B,AAHC,IAAI,CAGCokC,gBAAgB,CAACH,EAAU1G,WAAW,CAEnD,EAAC95B,GAAU2E,EAASpI,AALZ,IAAI,CAKcwjB,KAAK,GAC/B/f,CAAAA,EAAS1F,EAAOD,KAAK,CAAC+F,IAAI,CAACwgC,aAAa,CAACz9B,EAAM09B,iBAAiB,CAAEtkC,AAN1D,IAAI,CAM4DwjB,KAAK,CAAEwgB,EAAaH,GAAW,CAAC,EAAC,EAE7G,IAAIrgB,EAAQzlB,EAAOD,KAAK,CAAC+F,IAAI,CAACC,UAAU,CAACL,EAAQzD,AARrC,IAAI,CAQuCwjB,KAAK,EAAGC,EAAM1lB,EAAOD,KAAK,CAAC+F,IAAI,CAACC,UAAU,CAACL,EAAQzD,AAR9F,IAAI,CAQgGyjB,GAAG,EASnH,OARA0gB,GAAU,QACLT,EAKDS,GAAU3gB,EAAQ,QAHlB2gB,GADU,UAAY3gB,EAAZ,aACUC,EAAM,QAKvB0gB,CACX,CACJ,EACA1iC,WAAY,CACRlC,KAAM,gBAIN0B,UAAW,CACP4G,SAAU,CAAA,CACd,EACAtH,OAAQ,EACRsB,YAAa,CACT1B,QAAS,CAAA,EACTO,OAAQ,eACRH,OAAQ,EACRK,KAAM,OACNsL,MAAO,MACX,EACApK,UAAW,CACP3B,QAAS,CAAA,EACT+L,MAAO,OACX,CACJ,CACJ,CA+IJ,GACA9Q,EAAgBD,EAAU,0BAA2B,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,kCAAkC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEwoC,CAAS,CAAEvoC,CAAC,EAUrL,IAWIwoC,EAXAvoC,EAAWF,EAAEE,QAAQ,CACrBoH,EAAWrH,EAAEqH,QAAQ,CAAE0U,EAAO/b,EAAE+b,IAAI,CAAEhF,EAAY/W,EAAE+W,SAAS,CAAE3M,EAAUpK,EAAEoK,OAAO,CAAEgC,EAAWpM,EAAEoM,QAAQ,CAAEC,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAulBvJ,OA5kBA,AAAC,SAAUsoC,CAAU,EAkCjB,SAAS9zB,IAC0B,KAAA,IAApB,IAAI,CAAC4rB,UAAU,EACtB,IAAI,CAACA,UAAU,CAACmI,SAAS,CAAC,IAAI,CAAC/mC,OAAO,CAAC8f,MAAM,CAAE,CAAA,EAEvD,CAKA,SAASvZ,IAEL,IADIoD,EAEA,CAAA,AAA2B,OAA1BA,CAAAA,EAAKzD,AADC,IAAI,CACA04B,UAAU,AAAD,GAAej1B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGq9B,SAAS,AAAD,GACvE9gC,CAAAA,AAFO,IAAI,CAENlG,OAAO,CAAC+f,OAAO,CAAG,CAAA,CAAI,CAEnC,CAIA,SAASknB,IACL,IAAiBrI,EAAa14B,AAAnB,IAAI,CAAoB04B,UAAU,CAC7C,GAAIA,MAAAA,EAA+C,KAAK,EAAIA,EAAWoI,SAAS,CAAE,CAE9E,IAAK,IADDE,EAAgBhhC,AAFb,IAAI,CAEcghC,aAAa,CAAEC,EAAOjhC,AAFxC,IAAI,CAEyCghC,aAAa,CAACC,IAAI,CAAEC,EAAe,EAAE,CAChF19B,EAAI,EAAGA,EAAIw9B,EAAcxkC,MAAM,CAAEgH,IACjCk1B,EAAWyI,YAAY,CAACH,CAAa,CAACx9B,EAAE,GACzC09B,EAAargC,IAAI,CAACmgC,CAAa,CAACx9B,EAAE,CAG1CxD,CARO,IAAI,CAQNghC,aAAa,CAAGE,EACrBlhC,AATO,IAAI,CASNghC,aAAa,CAACC,IAAI,CAAGA,CAC9B,CACJ,CAIA,SAASv8B,IAEA1E,AADM,IAAI,CACL04B,UAAU,EAChB14B,CAAAA,AAFO,IAAI,CAEN04B,UAAU,CAAG,IAAI0I,EAFf,IAAI,CAEyB,CAE5C,CAIA,SAASC,IAEL,IADI59B,EAAIC,EACO49B,EAAU39B,AAAhB,IAAI,CAAe29B,OAAO,CAAEC,EAAe59B,AAA3C,IAAI,CAA0C7J,OAAO,CAACynC,YAAY,CAAEjb,EAAS3iB,AAA7E,IAAI,CAA4E2iB,MAAM,CAAEtjB,EAAQW,AAAhG,IAAI,CAA+FX,KAAK,CAAEE,EAAQS,AAAlH,IAAI,CAAiHT,KAAK,CAGnI,GAAIo+B,EAEA,IADA,IAAI99B,EAAI8iB,EAAO9pB,MAAM,CACdgH,KAAK,CACR,IAAIpH,EAAQkqB,CAAM,CAAC9iB,EAAE,CAGjBg+B,EAAkB,CADRplC,CAAAA,AAAY,OAAZA,EAAM3D,CAAC,EAAa8oC,AAAiB,CAAA,IAAjBA,CAAqB,GACpB,CAAA,AAAC,CAAA,AAA0E,OAAzE99B,CAAAA,EAAKT,MAAAA,EAAqC,KAAK,EAAIA,EAAM01B,UAAU,AAAD,GAAej1B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG09B,YAAY,CAAC/kC,EAAM5D,CAAC,CAAE,CAAA,EAAI,GACvK,CAAA,AAA0E,OAAzEkL,CAAAA,EAAKR,MAAAA,EAAqC,KAAK,EAAIA,EAAMw1B,UAAU,AAAD,GAAeh1B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGy9B,YAAY,CAAC/kC,EAAM3D,CAAC,CAAE,CAAA,EAAI,CAAC,CAG9I2D,CAAAA,EAAM6f,OAAO,CAAGulB,CAAAA,GAEZplC,AAA0B,CAAA,IAA1BA,EAAMtC,OAAO,CAACmiB,OAAO,AAC7B,CAER,CAIA,SAASwlB,IACL,IAAI,CAACC,UAAU,CAAC,IAAI,CAAC1+B,KAAK,CAAE,CAAC,IAAI,EACjC,IAAI,CAAC0+B,UAAU,CAAC,IAAI,CAACx+B,KAAK,CAAEuB,EAAK,IAAI,CAACu6B,aAAa,CAAE,CAAC,IAAI,EAC9D,CAIA,SAAS2C,EAAiB3hC,CAAI,CAAEgZ,CAAI,EAEhC,IADIvV,EAEAmW,EAAQ7R,EAAWtP,EADnB0B,EAAS,IAAI,CAAEmsB,EAASnsB,EAAOmsB,MAAM,CAEzC,GAAI,AAAuE,OAAtE7iB,CAAAA,EAAKzD,MAAAA,EAAmC,KAAK,EAAIA,EAAK04B,UAAU,AAAD,GAAej1B,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGq9B,SAAS,CAAE,CACtH,IAAIc,EAAe5hC,EAAK04B,UAAU,CAClC1f,EAAKnJ,OAAO,CAAC,SAAUooB,CAAG,EAEtBre,EAAS,AAACgoB,CAAAA,MAAAA,EAAmD,KAAK,EAAIA,EAAaC,UAAU,AAAD,GAAM,EAAE,CACpG95B,EAAY/H,EAAKoF,OAAO,CACpBpF,EAAKtG,GAAG,CACR+K,EAAKtK,EAAOL,OAAO,CAACiO,SAAS,CAAE/H,EAAKtG,GAAG,EAI3C,IARI+J,EAAIC,EAQJo+B,EAAmB,AAA0H,OAAzHp+B,CAAAA,EAAK,AAAoE,OAAnED,CAAAA,EAAKzD,MAAAA,EAAmC,KAAK,EAAIA,EAAKlG,OAAO,AAAD,GAAe2J,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGmW,MAAM,AAAD,GAAelW,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAG8Q,MAAM,CAAC,SAAUutB,CAAG,EAGrM,IAAK,IAFDC,EAAQ,CAAA,EAEHx+B,EAAI,EAAGA,EAAIoW,EAAOpd,MAAM,CAAEgH,IAAK,CACpC,IAAIy+B,EAAaroB,CAAM,CAACpW,EAAE,CAC1B,GAAIy+B,EAAWroC,IAAI,GAAKmoC,EAAInoC,IAAI,EAC5BqoC,EAAWpoC,EAAE,GAAKkoC,EAAIloC,EAAE,CAAE,CAC1BmoC,EAAQ,CAAA,EACR,KACJ,CACJ,CACA,OAAOA,CACX,GACA1b,EAAOzW,OAAO,CAAC,SAAUzT,CAAK,EAC1B3D,EAAIgM,EAAKrI,CAAK,CAAC,QAAU67B,EAAIiK,WAAW,GAAG,CAAE9lC,CAAK,CAAC67B,EAAI,EACvDre,EAAO/J,OAAO,CAAC,SAAUkyB,CAAG,EACxB,GAAIv9B,EAASuD,IAAcvD,EAAS/L,GAAI,CACpC,IAAIof,EAAY,EACZ,CAAC9P,EAAYg6B,EAAInoC,IAAI,EAAInB,EAAIspC,EAAIloC,EAAE,EAClCkO,EAAYg6B,EAAInoC,IAAI,EAAInB,EAAIspC,EAAInoC,IAAI,CACrCie,EAAY,aAEP,CAAA,AAAC9P,EAAYg6B,EAAInoC,IAAI,EAC1BnB,EAAIspC,EAAInoC,IAAI,EACZnB,EAAIspC,EAAIloC,EAAE,EAAMkO,EAAYg6B,EAAInoC,IAAI,EACpCnB,EAAIspC,EAAIloC,EAAE,EACVpB,EAAIspC,EAAInoC,IAAI,GACZie,CAAAA,EAAY,cAAa,EAEzBA,GACA1I,EAAUnP,EAAM6X,EAAW,CAAEzb,MAAOA,EAAO2lC,IAAKA,CAAI,EAE5D,CACJ,GACAD,MAAAA,GAAoEA,EAAiBjyB,OAAO,CAAC,SAAUkyB,CAAG,EACtG5yB,EAAUnP,EAAM,sBAAuB,CAAE5D,MAAOA,EAAO2lC,IAAKA,CAAI,EACpE,EACJ,EACJ,EACJ,CACJ,CAYA,SAASI,IACL,IAAIC,EAAsB,IAAI,CAACA,mBAAmB,CAAEC,EAAeD,MAAAA,EAAiE,KAAK,EAAIA,EAAoBE,OAAO,CAAEhc,EAAS,IAAI,CAACA,MAAM,CAACjK,KAAK,GAAInZ,EAAQ,IAAI,CAACA,KAAK,CACtNo/B,EAAU,IAAI,CAACxoC,OAAO,CAACwoC,OAAO,CAAE9+B,EAAI8iB,EAAO9pB,MAAM,CAAG,EAuDxD,GAAI8lC,GAAW9+B,EAAI,EAAG,CAEW,UAAzB,IAAI,CAAC1J,OAAO,CAACyoC,OAAO,EACpBD,CAAAA,GAAW,IAAI,CAACE,cAAc,AAAD,EAI7BH,GACAA,EAAeC,GAGfD,GAAgB,IAAI,CAACG,cAAc,EACnCF,CAAAA,EAAUD,CAAW,EAIzB,IADA,IAAII,EAAU,KAAK,EAAGC,EAAO,KAAK,EAC3Bl/B,KAOH,GALMk/B,GAAQA,AAAiB,CAAA,IAAjBA,EAAKzmB,OAAO,EACtBymB,CAAAA,EAAOpc,CAAM,CAAC9iB,EAAI,EAAE,AAAD,EAEvBi/B,EAAUnc,CAAM,CAAC9iB,EAAE,CAEfk/B,AAAiB,CAAA,IAAjBA,EAAKzmB,OAAO,EAAcwmB,AAAoB,CAAA,IAApBA,EAAQxmB,OAAO,EAG7C,GAAIymB,EAAKlqC,CAAC,CAAGiqC,EAAQjqC,CAAC,CAAG8pC,EAAS,CAC9B,IAAIK,EAAS,AAACF,CAAAA,EAAQjqC,CAAC,CAAGkqC,EAAKlqC,CAAC,AAADA,EAAK,EACpC8tB,EAAOgF,MAAM,CACb9nB,EAAI,EAAG,EAAG,CACN66B,OAAQ,CAAA,EACR7lC,EAAGmqC,CACP,GAEIz/B,EAAMuY,QAAQ,EAAI,IAAI,CAAC3hB,OAAO,CAAC2hB,QAAQ,EAEvCmnB,CAAAA,AADQ1/B,CAAAA,EAAMuY,QAAQ,CAAConB,MAAM,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACH,EAAO,CAAG,IAAIhC,EAAUz9B,EAAOA,EAAMpJ,OAAO,CAACipC,WAAW,CAAE,CAAA,EAAOJ,EAAQ,IAAI,CAACC,KAAK,CAAA,EAC1HI,KAAK,CAAG,CAAA,CAEtB,CAEAN,EAAOD,EAEf,CAEA,OAAO,IAAI,CAACQ,YAAY,CAAC3c,EAC7B,CAxPAsa,EAAW7nC,OAAO,CAflB,SAASA,EAAQuI,CAAS,CAAEyK,CAAW,EACnC,GAAIzT,EAAWD,EAAUU,GAAU,CAC/BuI,EAAUqE,SAAS,CAAC9E,IAAI,CAAC,cACzBpB,EAAS6B,EAAW,OAAQoD,GAC5BjF,EAAS6B,EAAW,YAAawL,GACjCrN,EAAS6B,EAAW,wBAAyBy/B,GAC7CthC,EAAS6B,EAAW,kBAAmBjB,GACvC,IAAI6iC,EAAcn3B,EAAY7S,SAAS,AACvCgqC,CAAAA,EAAYxB,UAAU,CAAGC,EACzBuB,EAAYC,UAAU,CAAGhB,EACzB1iC,EAASsM,EAAa,sBAAuBs1B,GAC7C5hC,EAASsM,EAAa,cAAe01B,EACzC,CACA,OAAOngC,CACX,EAoQA,IAAI8/B,EAA2B,WAM3B,SAASA,EAAUphC,CAAI,EACnB,IAAI,CAAC8gC,SAAS,CAAG,CAAA,EACjB,IAAI,CAAC9gC,IAAI,CAAGA,CAChB,CAwRA,OA/QAohC,EAAUgC,SAAS,CAAG,SAAUrB,CAAG,CAAEviC,CAAG,EACpC,IAAI6jC,EAAStB,EAAIsB,MAAM,EAAI92B,IAAU3S,EAAOmoC,EAAInoC,IAAI,CAAE4C,EAASulC,EAAIloC,EAAE,CAAGkoC,EAAInoC,IAAI,CAAE0pC,EAAQ9jC,GAAO5F,EAC7F,AAAC4F,CAAAA,EAAM5F,CAAG,EAAKypC,EACfA,EAAU,AAACzpC,CAAAA,EAAO4F,CAAE,EAAK6jC,EAQ7B,OANKtB,EAAIwB,SAAS,CAIRD,GAAQ9mC,EAHR8mC,EAAO9mC,GAAU8mC,AAAS,IAATA,CAM/B,EAIAlC,EAAUoC,OAAO,CAAG,SAAUhkC,CAAG,EAE7B,IAAIk5B,EAAa14B,AADN,IAAI,CACO04B,UAAU,CAC5BmJ,EAAanJ,GAAcA,EAAWmJ,UAAU,CACpD,GAAI,CAACA,GAAc,CAACr9B,EAAShF,GACzB,OAAOA,EAEX,IAAgBuiC,EAAKv+B,EAAjBigC,EAAOjkC,EACX,IAAKgE,EAAI,EAEL,AAFQA,EAAIq+B,EAAWrlC,MAAM,GAEzBulC,CAAAA,AADJA,CAAAA,EAAMF,CAAU,CAACr+B,EAAE,AAAD,EACV5J,IAAI,EAAI6pC,CAAG,EAFYjgC,IAKtBu+B,EAAIloC,EAAE,CAAG4pC,EACdA,GAAQ1B,EAAI/xB,GAAG,CAEVoxB,EAAUgC,SAAS,CAACrB,EAAK0B,IAC9BA,CAAAA,GAAQ1B,EAAI/xB,GAAG,AAAD,EAGtB,OAAOyzB,CACX,EAIArC,EAAUsC,OAAO,CAAG,SAAUlkC,CAAG,EAE7B,IAAIk5B,EAAa14B,AADN,IAAI,CACO04B,UAAU,CAC5BmJ,EAAanJ,GAAcA,EAAWmJ,UAAU,CACpD,GAAI,CAACA,GAAc,CAACr9B,EAAShF,GACzB,OAAOA,EAEX,IAAgBuiC,EAAKv+B,EAAjBigC,EAAOjkC,EACX,IAAKgE,EAAI,EAAGA,EAAIq+B,EAAWrlC,MAAM,CAAEgH,IAE/B,GAAIu+B,AADJA,CAAAA,EAAMF,CAAU,CAACr+B,EAAE,AAAD,EACV3J,EAAE,EAAI2F,EACVikC,GAAQ1B,EAAI/xB,GAAG,MAEd,GAAI+xB,EAAInoC,IAAI,EAAI4F,EACjB,WAEC,GAAI4hC,EAAUgC,SAAS,CAACrB,EAAKviC,GAAM,CACpCikC,GAASjkC,EAAMuiC,EAAInoC,IAAI,CACvB,KACJ,CAEJ,OAAO6pC,CACX,EAoBArC,EAAUloC,SAAS,CAACyqC,WAAW,CAAG,SAAUnrC,CAAC,CAAEohB,CAAM,EACjD,OAAOzF,EAAKyF,EAAQ,SAAU/X,CAAC,EAC3B,OAAOA,EAAEjI,IAAI,CAAGpB,GAAKA,EAAIqJ,EAAEhI,EAAE,AACjC,EACJ,EAIAunC,EAAUloC,SAAS,CAACioC,YAAY,CAAG,SAAU3hC,CAAG,CAAEokC,CAAQ,EACtD,IACuBC,EAAOC,EAAMppB,EADb1a,EAAO04B,AAAb,IAAI,CAAoB14B,IAAI,CAAE4Z,EAAS5Z,EAAKlG,OAAO,CAAC8f,MAAM,EAAI,EAAE,CAC7EpW,EAAIoW,EAAOpd,MAAM,CACrB,GAAIgH,GAAKgB,EAAShF,GAAM,CACpB,KAAOgE,KACC49B,EAAUgC,SAAS,CAACxpB,CAAM,CAACpW,EAAE,CAAEhE,KAC/BqkC,EAAQ,CAAA,EACHC,GACDA,CAAAA,EAAOr/B,EAAKmV,CAAM,CAACpW,EAAE,CAACugC,UAAU,CAAE,CAAC/jC,EAAKoF,OAAO,CAAA,GAKvDsV,EADAmpB,GAASD,EACHC,GAAS,CAACC,EAGVD,CAEd,CACA,OAAOnpB,CACX,EAcA0mB,EAAUloC,SAAS,CAAC2nC,SAAS,CAAG,SAAUjnB,CAAM,CAAEzO,CAAM,EACpD,IAAIutB,EAAa,IAAI,CACjB14B,EAAO04B,EAAW14B,IAAI,CACtB8gC,EAAYt+B,EAAQoX,IACpB,CAAC,CAACA,EAAOpd,MAAM,EACf,CAAC,CAACsF,OAAOkX,IAAI,CAACY,CAAM,CAAC,EAAE,EAAEpd,MAAM,AACnCwD,CAAAA,EAAKshC,OAAO,CAAG5I,EAAWoI,SAAS,GAAKA,EACxCpI,EAAWoI,SAAS,CAAGA,EACnBlnB,IAAW5Z,EAAKlG,OAAO,CAAC8f,MAAM,EAC9B5Z,CAAAA,EAAKlG,OAAO,CAAC8f,MAAM,CAAG5Z,EAAK4C,WAAW,CAACgX,MAAM,CAAGA,CAAK,EAEzD5Z,EAAKgkC,WAAW,CAAG,CAAA,EAEnBhkC,EAAK7F,MAAM,CAAC0V,OAAO,CAAC,SAAU1V,CAAM,EAChCA,EAAOmnC,OAAO,CAAG,CAAA,CACrB,GACKR,GAAa9gC,EAAKikC,OAAO,GAAK7C,EAAUsC,OAAO,GAEhD,OAAO1jC,EAAKikC,OAAO,CACnB,OAAOjkC,EAAKkkC,OAAO,EAEnBpD,IACA9gC,EAAK4C,WAAW,CAACiX,OAAO,CAAG,CAAA,EAC3B7Z,EAAKkkC,OAAO,CAAG9C,EAAUoC,OAAO,CAChCxjC,EAAKikC,OAAO,CAAG7C,EAAUsC,OAAO,CAChC1jC,EAAKoN,WAAW,CAAG,SAAU5H,CAAM,CAAEC,CAAM,CAAE0F,CAAM,CAAE9N,CAAS,CAAE8mC,CAAc,EAG1E,GAAIzL,EAAWoI,SAAS,CAAE,CAGtB,IAFA,IAAIsD,EAAY,IAAI,CAACtqC,OAAO,CAAC8f,MAAM,EAAI,EAAE,CACrCyqB,EAAY,KAAK,EACbA,EAAY3L,EAAWiL,WAAW,CAACn+B,EAAQ4+B,IAC/C5+B,EAAS6+B,EAAUxqC,EAAE,CAEzB,KAAQwqC,EAAY3L,EAAWiL,WAAW,CAACl+B,EAAQ2+B,IAC/C3+B,EAAS4+B,EAAUzqC,IAAI,CAGvB6L,EAASD,GACTC,CAAAA,EAASD,CAAK,CAEtB,CACAxF,EAAKsC,WAAW,CAACpJ,SAAS,CAACkU,WAAW,CAAC/L,IAAI,CAAC,IAAI,CAAEmE,EAAQC,EAAQ0F,EAAQ9N,EAAW8mC,EACzF,EACAnkC,EAAKskC,kBAAkB,CAAG,WAGtB,GAFAtkC,EAAKsC,WAAW,CAACpJ,SAAS,CAACorC,kBAAkB,CAACjjC,IAAI,CAAC,IAAI,EACvDq3B,EAAWC,UAAU,CAAG,KAAK,EACzBD,EAAWoI,SAAS,CAAE,CACtB,IAGkByD,EAASC,EAA8EC,EAASC,EAH9GC,EAAW3kC,EAAKlG,OAAO,CAAC8f,MAAM,EAAI,EAAE,CAExCgrB,EAAgB,EAAE,CAAEC,EAAe,EAAE,CAAEC,EAAoBrgC,EAAKzE,EAAK8kC,iBAAiB,CAAE,GACpFC,EAAW,EAAsBC,EAAQhlC,EAAK2d,OAAO,EAAI3d,EAAKtG,GAAG,CAAEurC,EAAQjlC,EAAK4d,OAAO,EAAI5d,EAAKxG,GAAG,CAEvGmrC,EAAS90B,OAAO,CAAC,SAAUkyB,CAAG,EAC1ByC,EAAWzC,EAAIsB,MAAM,EAAI92B,IACrB/H,EAASwgC,IAAUxgC,EAASygC,KACxB7D,EAAUgC,SAAS,CAACrB,EAAKiD,IACzBA,CAAAA,GAAU,AAACjD,EAAIloC,EAAE,CAAG2qC,EACfQ,EAAQR,CAAS,EAEtBpD,EAAUgC,SAAS,CAACrB,EAAKkD,IACzBA,CAAAA,GAAU,AAACA,EAAQT,EACdzC,EAAInoC,IAAI,CAAG4qC,CAAS,EAGrC,GAEAG,EAAS90B,OAAO,CAAC,SAAUkyB,CAAG,EAG1B,GAFA0C,EAAU1C,EAAInoC,IAAI,CAClB4qC,EAAWzC,EAAIsB,MAAM,EAAI92B,IACrB/H,EAASwgC,IAAUxgC,EAASygC,GAAQ,CACpC,KAAOR,EAAUD,EAAWQ,GACxBP,GAAWD,EAEf,KAAOC,EAAUO,GACbP,GAAWD,EAEf,IAAKE,EAAMD,EAASC,EAAMO,EAAOP,GAAOF,EACpCI,EAAc/jC,IAAI,CAAC,CACfd,MAAO2kC,EACPQ,KAAM,IACV,GACAN,EAAc/jC,IAAI,CAAC,CACfd,MAAO2kC,EAAM3C,EAAIloC,EAAE,CAAGkoC,EAAInoC,IAAI,CAC9BsrC,KAAM,MACNr4B,KAAMk1B,EAAIoD,SAAS,AACvB,EAER,CACJ,GACAP,EAAcnd,IAAI,CAAC,SAAUrjB,CAAC,CAAEvC,CAAC,EAC7B,OAAQ,AAACuC,EAAErE,KAAK,GAAK8B,EAAE9B,KAAK,CACvB,AAACqE,CAAAA,AAAW,OAAXA,EAAE8gC,IAAI,CAAY,EAAI,CAAA,EACnBrjC,CAAAA,AAAW,OAAXA,EAAEqjC,IAAI,CAAY,EAAI,CAAA,EAC3B9gC,EAAErE,KAAK,CAAG8B,EAAE9B,KAAK,AACzB,GAEAwkC,EAAU,EACVE,EAAUO,EACVJ,EAAc/0B,OAAO,CAAC,SAAUkyB,CAAG,EAEf,IADhBwC,CAAAA,GAAYxC,AAAa,OAAbA,EAAImD,IAAI,CAAY,EAAI,EAAE,GACjBnD,AAAa,OAAbA,EAAImD,IAAI,EACzBT,CAAAA,EAAU1C,EAAIhiC,KAAK,AAAD,EAEN,IAAZwkC,GAAiB//B,EAASigC,KAC1BI,EAAahkC,IAAI,CAAC,CACdjH,KAAM6qC,EACN5qC,GAAIkoC,EAAIhiC,KAAK,CACbiQ,IAAK+xB,EAAIhiC,KAAK,CAAG0kC,EAAW1C,CAAAA,EAAIl1B,IAAI,EAAI,CAAA,CAC5C,GACAk4B,GAAahD,EAAIhiC,KAAK,CAClB0kC,EACC1C,CAAAA,EAAIl1B,IAAI,EAAI,CAAA,EAEzB,GACA6rB,EAAWmJ,UAAU,CAAGgD,EAGpBrgC,EAASwgC,IACTxgC,EAASygC,IACTzgC,EAASxE,EAAKtG,GAAG,IACjBg/B,EAAWC,UAAU,CAAGsM,EAAQD,EAAQD,EACpCD,EACJ31B,EAAUnP,EAAM,eACZA,EAAKgE,WAAW,CAChBhE,EAAKolC,MAAM,CAAGplC,EAAKgE,WAAW,CAEzB00B,EAAWC,UAAU,EAC1B34B,CAAAA,EAAKolC,MAAM,EACP,AAACH,CAAAA,EAAQjlC,EAAKtG,GAAG,CAAGorC,CAAgB,EAChCpM,EAAWC,UAAU,AAAD,EAE5BmM,GACA9kC,CAAAA,EAAKqlC,eAAe,CAChBrlC,EAAKolC,MAAM,CAAIplC,CAAAA,EAAKslC,cAAc,EAAI,CAAA,CAAC,EAE/CtlC,EAAKtG,GAAG,CAAGsrC,EACXhlC,EAAKxG,GAAG,CAAGyrC,EAEnB,CACJ,GAEAxgC,EAAK0G,EAAQ,CAAA,IACbnL,EAAK9F,KAAK,CAACiR,MAAM,EAEzB,EACOi2B,CACX,GACAR,CAAAA,EAAWQ,SAAS,CAAGA,CAC3B,EAAGR,GAAeA,CAAAA,EAAa,CAAC,CAAA,GAOzBA,CACX,GACAppC,EAAgBD,EAAU,wBAAyB,CAACA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwc,CAAI,CAAE5b,CAAC,CAAEC,CAAC,EAWhK,IAYWmtC,EADPA,EAXAltC,EAAWF,EAAEE,QAAQ,CAAEmtC,EAAcrtC,EAAEqtC,WAAW,CAClD/lC,EAAWrH,EAAEqH,QAAQ,CAAEtG,EAAUf,EAAEe,OAAO,CAAE+a,EAAQ9b,EAAE8b,KAAK,CAAEC,EAAO/b,EAAE+b,IAAI,CAAE3R,EAAUpK,EAAEoK,OAAO,CAAEgC,EAAWpM,EAAEoM,QAAQ,CAAEnL,EAAQjB,EAAEiB,KAAK,CAAEoL,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAAEmtC,EAAYrtC,EAAEqtC,SAAS,CAAE/lC,EAAOtH,EAAEsH,IAAI,CA+B7N,SAAS05B,EAAS5gC,CAAC,EAEf,OAAOJ,EAAEghC,QAAQ,CAAC5gC,EAAG,CAAA,EACzB,CA0EA,SAASktC,EAAsBC,CAAK,CAAE3E,CAAa,EAC/C,IAAI4E,EAAa,CACb5pC,MAAO,EACPC,OAAQ,CACZ,EA0BA,GAzBA+kC,EAAcnxB,OAAO,CAAC,SAAUg2B,CAAG,EAC/B,IACqCjmC,EADjCkmC,EAAOH,CAAK,CAACE,EAAI,CACjBE,EAAc,EAAGC,EAAa,EAC9B5M,EAAS0M,KAGTC,EAAcnmC,AAFdA,CAAAA,EAAQw5B,EAAS0M,EAAKlmC,KAAK,EAAIkmC,EAAKlmC,KAAK,CAAG,CAAC,CAAA,EAEzBkkB,OAAO,CAAGlkB,EAAMkkB,OAAO,GAAG7nB,MAAM,CAAG,EACnD2D,EAAMs1B,OAAO,EAAI,CAAC1wB,EAAS5E,EAAMqmC,YAAY,GAC7CrmC,CAAAA,EAAMqmC,YAAY,CAAGrmC,EAAMkkB,OAAO,GAAG9nB,KAAK,AAAD,EAE7CgqC,EAAaxhC,EAAS5E,EAAMqmC,YAAY,EAEpCxsC,KAAKyP,KAAK,CAACtJ,EAAMqmC,YAAY,EAC7B,EACArmC,EAAMs1B,OAAO,EAGb8Q,CAAAA,EAAavsC,KAAKyP,KAAK,CAACtJ,EAAMkkB,OAAO,GAAG9nB,KAAK,CAAA,EAGjD4pC,EAAW3pC,MAAM,CAAGxC,KAAKD,GAAG,CAACusC,EAAaH,EAAW3pC,MAAM,EAC3D2pC,EAAW5pC,KAAK,CAAGvC,KAAKD,GAAG,CAACwsC,EAAYJ,EAAW5pC,KAAK,EAEhE,GAEI,AAAsB,aAAtB,IAAI,CAAClC,OAAO,CAAC6B,IAAI,EACjB,IAAI,CAACuqC,QAAQ,EACb,IAAI,CAACA,QAAQ,CAACC,kBAAkB,CAAE,CAClC,IAAIC,EAAY,IAAI,CAACF,QAAQ,CAACC,kBAAkB,CAAC,GAAG,CAAClqC,MAAM,EAAI,CAC/D2pC,CAAAA,EAAW5pC,KAAK,EAAK,IAAI,CAAClC,OAAO,CAACuO,MAAM,CAACg+B,WAAW,CAC/CD,CAAAA,EAAY,CAAA,CACrB,CACA,OAAOR,CACX,CAKA,SAASU,EAAcC,CAAO,EAC1B,IAAI3iC,EAAO,IAAI,CAACA,IAAI,CAGpB4iC,EAAe,AAAc,IAAd,IAAI,CAACC,IAAI,CAIxB,GAHKD,GACDD,EAAQzuC,KAAK,CAAC,IAAI,EAElB,CAAE8L,CAAAA,MAAAA,EAAmC,KAAK,EAAIA,EAAK8iC,QAAQ,AAAD,EAAI,CAC9D,IAAIC,EAAU,AAAC/iC,CAAAA,MAAAA,EAAmC,KAAK,EAAIA,EAAK+iC,OAAO,AAAD,GAAM,EAAE,CAC1EH,GACAG,CAAAA,EAAUA,EAAQtqB,KAAK,GAAG5D,OAAO,EAAC,EAEtCkuB,EACK92B,OAAO,CAAC,SAAUiqB,CAAM,EACzBA,EAAO8M,SAAS,EACpB,EACJ,CACIJ,GACAD,EAAQzuC,KAAK,CAAC,IAAI,CAE1B,CAIA,SAAS+uC,EAAwB/hC,CAAC,EAI9B,GAAIgiC,AAAwB,CAAA,IAAxBA,AADchtC,CAAAA,AADJkG,AADH,IAAI,CACIlG,OAAO,CACA8J,IAAI,EAAI,CAAC,CAAA,EACnBrH,OAAO,CAAW,CAE9B,IAAIwqC,EAAY/mC,AALT,IAAI,CAKU+mC,SAAS,CAAEC,EAAahnC,AALtC,IAAI,CAKuC/D,MAAM,CAAEgK,EAAQjG,AAL3D,IAAI,CAK4DiG,KAAK,CAAEghC,EAAWjnC,AALlF,IAAI,CAKmFiK,IAAI,CAAEuD,EAASxN,AALtG,IAAI,CAKuGwN,MAAM,CAAE1J,EAAW9D,AAL9H,IAAI,CAK+H8D,QAAQ,CAAEojC,EAAYlnC,AALzJ,IAAI,CAK0JlG,OAAO,CAAEqtC,EAAUnnC,AALjL,IAAI,CAKkLoK,GAAG,CAAEg9B,EAAYpnC,AALvM,IAAI,CAKwMhE,KAAK,CACpNqrC,EAAWrnC,AANR,IAAI,CAMSqnC,QAAQ,GACxBC,EAAaP,GAAaA,EAAUjjB,OAAO,GAAG9nB,KAAK,CACnDurC,EAAUL,EAAU/jC,KAAK,CAAC3K,CAAC,CAC3BgvC,EAAUN,EAAU/jC,KAAK,CAAC1K,CAAC,CAC3BgvC,EAAchjC,EAAKyiC,EAAU/jC,KAAK,CAACtE,MAAM,CAAEoH,EAAQ,EAAI,IACvDyhC,EAAgBX,EAAY/mC,AAXzB,IAAI,CAW0B9F,KAAK,CAACW,QAAQ,CAAC8sC,WAAW,CAACZ,GAAWa,CAAC,CAAG,EAI3EC,EAAW,AAAC5hC,CAAAA,EAAQkhC,EAAUH,EAAaC,CAAO,EAClD,AAAChhC,CAAAA,EAAQ,EAAI,EAAC,EACTnC,CAAAA,EAAW,GAAK,CAAA,EALTujC,CAAAA,EAAWA,CAAQ,CAAC,EAAE,CAAG,EAAI,CAAA,EAOxCrnC,CAAAA,AAnBE,IAAI,CAmBDymC,IAAI,GAAKlB,EAAauC,MAAM,CAAGJ,EAAgB,CAAA,CACzD5iC,CAAAA,EAAEijC,aAAa,CAACvvC,CAAC,CAAGyN,EAChBghC,EAAW,AAACK,CAAAA,GAAc,CAAA,EAAK,EAAIG,EAAcF,EACjDM,EAAW/jC,CAAAA,EAAWsjC,EAAY,CAAA,EAAK55B,EAAS+5B,EACpDziC,EAAEijC,aAAa,CAACtvC,CAAC,CAAGwN,EACf4hC,EACI/jC,CAAAA,EAAWkjC,EAAa,CAAA,EACzB,AAACljC,CAAAA,EAAW4jC,EAAgB,CAACA,CAAY,EAAK,EAC9Cl6B,EACAg6B,EACJL,EAAUM,EAAcD,CAChC,CACJ,CAIA,SAASQ,IAEL,IA/KIluC,EA+KAI,EAAQ8F,AADD,IAAI,CACE9F,KAAK,CAAEuJ,EAAKzD,AADlB,IAAI,CACmBlG,OAAO,CAAC8J,IAAI,CAAEkjC,EAAcrjC,AAAO,KAAK,IAAZA,EAAgB,CAAC,EAAIA,EAAIb,EAAc5C,AAD1F,IAAI,CAC2F4C,WAAW,CAIrH,GAHIkkC,EAAYvqC,OAAO,GAzKvBzC,CAPIA,EAAUkG,AA8KH,IAAI,CA9KIlG,OAAO,EAOlBuO,MAAM,CAACC,KAAK,CAAG7D,EAAK3K,EAAQuO,MAAM,CAACC,KAAK,CAAE,UAO7CtI,AAgKM,IAAI,CAhKLkE,UAAU,EAChBpK,CAAAA,EAAQmuC,aAAa,CAAG,CAAA,CAAI,EAIhCjoC,AA2JW,IAAI,CA3JVkoC,aAAa,CAAG,EACrBpuC,EAAQuO,MAAM,CAACvM,QAAQ,CAAG,EAE1BhC,EAAQquC,eAAe,CAAG,GA6JtBrB,EAAYH,OAAO,CAInB,IAHA,IAAIA,EAAU3mC,AANP,IAAI,CAMQ4D,IAAI,CAAC+iC,OAAO,CAAG,EAAE,CAChCyB,EAAcpoC,AAPX,IAAI,CAOY4D,IAAI,CAACwkC,WAAW,CAAG,EAEnC,EAAEA,EAActB,EAAYH,OAAO,CAACnqC,MAAM,EAAE,CAC/C,IAAI6rC,EAAgBhvC,EAAMuJ,EAAakkC,EAAYH,OAAO,CAACyB,EAAY,CAAE,CACrEx8B,WAAY,CAAA,EACZ7H,SAAU,EAEVwG,UAAW,CACPhO,QAAS,CAAA,CACb,CACJ,EAEA,CACIqH,KAAM,CACF+iC,QAAS,KAAK,CAClB,CACJ,GACI7M,EAAS,IAAI/lB,EAAK/T,AAxBnB,IAAI,CAwBoB9F,KAAK,CAAEmuC,EAAe,QACjDvO,CAAAA,EAAOl2B,IAAI,CAAC8iC,QAAQ,CAAG,CAAA,EACvB5M,EAAOl2B,IAAI,CAACwkC,WAAW,CAAGA,EAG1Bl0B,EAAMha,EAAMikB,IAAI,CAAE2b,GAClB5lB,EAAMha,CAAK,CAAC8F,AA9BT,IAAI,CA8BUoe,IAAI,CAAC,EAAI,EAAE,CAAE0b,GAC9B6M,EAAQ9lC,IAAI,CAACi5B,EACjB,CAER,CAcA,SAASwO,IACL,IAAiBvB,EAAY/mC,AAAlB,IAAI,CAAmB+mC,SAAS,CAAEnjC,EAAO5D,AAAzC,IAAI,CAA0C4D,IAAI,CAAE9J,EAAUkG,AAA9D,IAAI,CAA+DlG,OAAO,CACrF,GAAIgtC,AAAwB,CAAA,IAAxBA,AADiGhtC,CAAAA,EAAQ8J,IAAI,EAAI,CAAC,CAAA,EACtGrH,OAAO,CAAW,CAC9B,IAAI7C,EAAMsG,AAFH,IAAI,CAEItG,GAAG,EAAI,EAAGF,EAAMwG,AAFxB,IAAI,CAEyBxG,GAAG,EAAI,EAAG+uC,EAAYvoC,AAFnD,IAAI,CAEoD2lC,KAAK,CAAC3lC,AAF9D,IAAI,CAE+DghC,aAAa,CAAC,EAAE,CAAC,CAsB3F,GApBI+F,GACA,CAAC/mC,AALE,IAAI,CAKD9F,KAAK,CAACK,UAAU,EACrBguC,CAAAA,MAAAA,EAA6C,KAAK,EAAIA,EAAUC,SAAS,AAAD,GACzE,CAACxoC,AAPE,IAAI,CAODlG,OAAO,CAACqJ,KAAK,CAAChD,KAAK,CAACnE,KAAK,EAC/B+qC,EAAU7wB,GAAG,CAAC,CAAEla,MAAO,GAAGsD,MAAM,CAACipC,EAAUC,SAAS,CAAE,KAAM,GAGhExoC,AAXO,IAAI,CAWNyoC,kBAAkB,CAAGzoC,AAXnB,IAAI,CAWoB0lC,qBAAqB,CAAC1lC,AAX9C,IAAI,CAW+C2lC,KAAK,CAAE3lC,AAX1D,IAAI,CAW2DghC,aAAa,EAE/EhhC,AAbG,IAAI,CAaF0oC,SAAS,EACd1oC,AAdG,IAAI,CAcF0oC,SAAS,CAACnpC,OAAO,GAUtBS,AAxBG,IAAI,CAwBF4D,IAAI,EAAI5D,AAxBV,IAAI,CAwBW4D,IAAI,CAAC+kC,WAAW,IAAM3oC,AAxBrC,IAAI,CAwBsC4oC,QAAQ,CAAE,CACvD,IAAIxrC,EAAYtD,EAAQsD,SAAS,CACjC,GAAIA,EAAW,CACX,IAAIyrC,EAAW7oC,AA3BhB,IAAI,CA2BiB8oC,WAAW,CAAC1rC,GAAY2rC,EAAaF,CAAQ,CAAC,EAAE,CAAExoB,EAAWwoB,CAAQ,CAAC,EAAE,CAG5CG,EAAW,AAAC/gC,CAAAA,AAA/C,AAACjI,CAAAA,AA9Bf,IAAI,CA8BgBqnC,QAAQ,CAAC,SAAW,CAAC,EAAE,AAAD,CAAE,CAAC,EAAE,CAA2B,CAAA,EAAM,CAAA,AAACrnC,AA9BjF,IAAI,CA8BkFymC,IAAI,GAAKlB,EAAan7B,GAAG,EAC1GpK,AA/BL,IAAI,CA+BMymC,IAAI,GAAKlB,EAAat7B,IAAI,CAAI,GAAK,CAAA,EAc5C,GAZsB,MAAlB8+B,CAAU,CAAC,EAAE,EAAY1oB,AAAgB,MAAhBA,CAAQ,CAAC,EAAE,GAChCrgB,AAlCT,IAAI,CAkCUiG,KAAK,EACV8iC,CAAU,CAAC,EAAE,EAAIC,EACjB3oB,CAAQ,CAAC,EAAE,EAAI2oB,IAGfD,CAAU,CAAC,EAAE,EAAIC,EACjB3oB,CAAQ,CAAC,EAAE,EAAI2oB,IAKnB,CAAChpC,AA7CN,IAAI,CA6COiG,KAAK,EAAIjG,AA7CpB,IAAI,CA6CqB9F,KAAK,CAAC+uC,WAAW,CAAE,CACvC,IAAwCC,EAAsB,CAC1D,IACAlpC,AAhDT,IAAI,CAgDUiK,IAAI,CACT8+B,CAAU,CAAC,EAAE,EAAI,EACpB,CAAEI,EAAkB,CAJOJ,EAMxBG,EACH,CAAEE,EAAsB,CACrB,IACAppC,AAvDT,IAAI,CAuDU9F,KAAK,CAACgQ,UAAU,CAAGlK,AAvDjC,IAAI,CAuDkC9F,KAAK,CAAC+uC,WAAW,CAC9CjpC,AAxDT,IAAI,CAwDU8W,QAAQ,CAACtd,EAAMwG,AAxD7B,IAAI,CAwD8BqpC,cAAc,EAC1C,CAIEC,EAAkB,CAJM,CACvB,IACAjpB,CAAQ,CAAC,EAAE,EAAI,EACfrgB,AA5DT,IAAI,CA4DU8W,QAAQ,CAACtd,EAAMwG,AA5D7B,IAAI,CA4D8BqpC,cAAc,EAC1C,CAEGD,EACH,AACIppC,CAjEV,IAAI,CAiEW4D,IAAI,CAAC2lC,WAAW,EAAI7vC,EAAM,GAAM,GACtCsG,CAAAA,AAlET,IAAI,CAkEU4D,IAAI,CAAC2lC,WAAW,CAAGvpC,AAlEjC,IAAI,CAkEkC4D,IAAI,CAAC4lC,YAAY,CAACL,EAAe,EAE9DnpC,AApET,IAAI,CAoEU4D,IAAI,CAAC2lC,WAAW,GACrBvpC,AArET,IAAI,CAqEU4D,IAAI,CAAC2lC,WAAW,CAACvuC,IAAI,CAAC,CACvBkC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,AACrC,GACA4C,AAzET,IAAI,CAyEU4D,IAAI,CAAC2lC,WAAW,CAAC9tC,OAAO,CAAC,CAC1BD,EAAG2tC,CACP,IAECnpC,AA7EV,IAAI,CA6EW4D,IAAI,CAAC6lC,WAAW,EAAIjwC,EAAM,GAAM,GACtCwG,CAAAA,AA9ET,IAAI,CA8EU4D,IAAI,CAAC6lC,WAAW,CAAGzpC,AA9EjC,IAAI,CA8EkC4D,IAAI,CAAC4lC,YAAY,CAACF,EAAe,EAE9DtpC,AAhFT,IAAI,CAgFU4D,IAAI,CAAC6lC,WAAW,GACrBzpC,AAjFT,IAAI,CAiFU4D,IAAI,CAAC6lC,WAAW,CAACzuC,IAAI,CAAC,CACvBkC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,AACrC,GACA4C,AArFT,IAAI,CAqFU4D,IAAI,CAAC6lC,WAAW,CAAChuC,OAAO,CAAC,CAC1BD,EAAG8tC,CACP,GAER,CAGKtpC,AA5FN,IAAI,CA4FO4D,IAAI,CAAC8lC,aAAa,EAIxB1pC,AAhGL,IAAI,CAgGM4D,IAAI,CAAC8lC,aAAa,CAAC1uC,IAAI,CAAC,CACzBkC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,AACrC,GACA4C,AApGL,IAAI,CAoGM4D,IAAI,CAAC8lC,aAAa,CAACjuC,OAAO,CAAC,CAC5BD,EAAGqtC,CACP,IATA7oC,AA7FL,IAAI,CA6FM4D,IAAI,CAAC8lC,aAAa,CAAG1pC,AA7F/B,IAAI,CA6FgC4D,IAAI,CAAC4lC,YAAY,CAACX,GAYrD7oC,AAzGD,IAAI,CAyGE4oC,QAAQ,CAAC5oC,AAzGf,IAAI,CAyGgB2pC,QAAQ,CAAG,OAAS,OAAO,EAClD,CACJ,CAIA,GAHA,AAAC/lC,CAAAA,GAAQA,EAAK+iC,OAAO,EAAI,EAAE,AAAD,EAAG92B,OAAO,CAAC,SAAUiqB,CAAM,EAAI,OAAOA,EAAO96B,MAAM,EAAI,GAG7E,CAACgB,AA/GE,IAAI,CA+GDiG,KAAK,EACXjG,AAhHG,IAAI,CAgHF9F,KAAK,CAAC0vC,WAAW,EACrB5pC,CAAAA,AAjHE,IAAI,CAiHDuK,SAAS,EACVvK,AAlHF,IAAI,CAkHG6pC,YAAY,EAAI7pC,AAlHvB,IAAI,CAkHwB6pC,YAAY,CAACt/B,SAAS,GACrDvK,AAnHG,IAAI,CAmHFghC,aAAa,CAACxkC,MAAM,CAAE,CAG3B,IAFA,IAAI6sC,EAAiBrpC,AApHlB,IAAI,CAoHmBqpC,cAAc,CAAES,EAAW9pC,AApHlD,IAAI,CAoHmDghC,aAAa,CAAChhC,AApHrE,IAAI,CAoHsEghC,aAAa,CAACxkC,MAAM,CAAG,EAAE,CAAEutC,EAAc/pC,AApHnH,IAAI,CAoHoHghC,aAAa,CAAC,EAAE,CACvIphC,EAAQ,KAAK,EAAGoqC,EAAW,KAAK,EAC7B,AAACpqC,CAAAA,EAAQI,AAtHb,IAAI,CAsHciqC,YAAY,CAACC,GAAG,EAAC,GAAMtqC,EAAM0Q,OAAO,EACrD1Q,EAAMkT,IAAI,GAEd,KAAO,AAACk3B,CAAAA,EAAWhqC,AAzHhB,IAAI,CAyHiBmqC,WAAW,CAACD,GAAG,EAAC,GACpCF,EAAS15B,OAAO,EAChB05B,EAASl3B,IAAI,GAGjBlT,CAAAA,EAAQI,AA9HL,IAAI,CA8HM2lC,KAAK,CAACoE,EAAY,CAACnqC,KAAK,AAAD,IAE5BlG,EAAMqwC,EAAcV,EACpBrpC,AAjIL,IAAI,CAiIMiqC,YAAY,CAACppC,IAAI,CAACjB,EAAMqT,IAAI,IAGjCrT,EAAMkT,IAAI,IAIlBlT,CAAAA,EAAQI,AAxIL,IAAI,CAwIM2lC,KAAK,CAACmE,EAAS,CAAClqC,KAAK,AAAD,IAEzBkqC,EAAWtwC,EAAM6vC,EACjBrpC,AA3IL,IAAI,CA2IMiqC,YAAY,CAACppC,IAAI,CAACjB,EAAMqT,IAAI,IAGjCrT,EAAMkT,IAAI,IAGlB,IAAIs3B,EAAOpqC,AAjJR,IAAI,CAiJS2lC,KAAK,CAACmE,EAAS,CAACM,IAAI,CAChCA,GACAN,EAAWtwC,EAAM6vC,GACjBS,EAAWtwC,EAAM,GAAKwG,AApJvB,IAAI,CAoJwB2lC,KAAK,CAACmE,EAAS,CAACO,MAAM,EACjDrqC,AArJD,IAAI,CAqJEmqC,WAAW,CAACtpC,IAAI,CAACupC,EAAKn3B,IAAI,GAEvC,CACJ,CACJ,CAIA,SAASq3B,IAEL,IAAIC,EAAWvqC,AADJ,IAAI,CACKghC,aAAa,EAAIhhC,AAD1B,IAAI,CAC2BghC,aAAa,CAACC,IAAI,CACxDnnC,EAAUkG,AAFH,IAAI,CAEIlG,OAAO,CACtBgtC,EAAchtC,EAAQ8J,IAAI,EAAI,CAAC,EAC/B4mC,EAAaxqC,AAJN,IAAI,CAIO4C,WAAW,CAACyF,MAAM,EAAI,CAAC,CAEzCy+B,CAAAA,EAAYvqC,OAAO,GACfyD,AAPG,IAAI,CAOFiG,KAAK,EACVjG,AARG,IAAI,CAQF7F,MAAM,CAAC0V,OAAO,CAAC,SAAU1V,CAAM,EAChCA,EAAOL,OAAO,CAACsM,UAAU,CAAG,CAChC,GAKImkC,GACAzwC,EAAQqmC,oBAAoB,EAC5BrmC,EAAQuO,MAAM,EACd,CAAClP,EAAQqxC,EAAWliC,KAAK,GACxBxO,CAAAA,AACc,CAAA,IADdA,EAAQqmC,oBAAoB,CAACoK,EAASE,QAAQ,CAAC,CAC3CnlC,KAAK,EACNilC,EAAStgB,KAAK,CAAG,CAAA,IAErBnwB,EAAQuO,MAAM,CAACC,KAAK,CAAG,OAClBnP,EAAQqxC,EAAWhyC,CAAC,GACrBsB,CAAAA,EAAQuO,MAAM,CAAC7P,CAAC,CAAG,CAAA,IAOD,aAAtB,IAAI,CAACsB,OAAO,CAAC6B,IAAI,EACjBqE,AAjCD,IAAI,CAiCE4D,IAAI,EACT5D,AAlCD,IAAI,CAkCE4D,IAAI,CAAC+iC,OAAO,EACjB,CAAA,IAAI,CAACrB,cAAc,CAAG,IAAI,CAAC1M,YAAY,AAAD,EAItD,CASA,SAAS8R,EAAkB5lC,CAAC,EACxB,IACI6lC,EADA7wC,EAAU,IAAI,CAACA,OAAO,CAAE8I,EAAckC,EAAElC,WAAW,CAAEkkC,EAAe,AAAChtC,GAAWs/B,EAASt/B,EAAQ8J,IAAI,EAAK9J,EAAQ8J,IAAI,CAAG,CAAC,CAElG,EAAA,IAAxBkjC,EAAYvqC,OAAO,GAGnBouC,EAAkBtxC,EAAM,CAAA,EAAM,CAC1BsH,UAAY,wBAA2BiC,CAAAA,EAAYjC,SAAS,EAAI,EAAC,EACjEw/B,qBAAsB,CAClBrQ,KAAM,CACF8a,KAAM,CAAC,QAAS,KAAK,AACzB,EACAtc,IAAK,CACDsc,KAAM,CAAC,aAAc,aAAc,KAAK,AAC5C,EACA7a,KAAM,CACF6a,KAAM,CAAC,UAAW,MAAM,AAC5B,EACAxb,MAAO,CACHwb,KAAM,CAAC,KAAM,KAAM,KAAK,AAC5B,CACJ,EACAhnC,KAAM,CACFu5B,YAAa,CACjB,EACA90B,OAAQ,CACJwgB,QAAS,EACT1oB,MAAO,CACHC,SAAU,OACd,CACJ,EACAvB,OAAQ,EACRsE,MAAO,CACHpC,KAAM,KACN8pC,aAAc,CAAA,EACd/uC,SAAU,EACVqE,MAAO,CACH2qC,aAAc,UAClB,CACJ,EAIAljC,MAAO,CAAC,CACA,cACA,CAAC,EAAG,GAAI,IAAI,CACf,CAAE,CACC,SACA,CAAC,EAAG,GAAG,CACV,CAAE,CACC,SACA,CAAC,EAAG,EAAG,GAAG,CACb,CAAE,CACC,OACA,CAAC,EAAG,EAAE,CACT,CAAE,CACC,MACA,CAAC,EAAE,CACN,CAAE,CACC,OACA,CAAC,EAAE,CACN,CAAE,CACC,QACA,CAAC,EAAE,CACN,CAAE,CACC,OACA,KACH,CAAC,AACV,EAAGhF,GAEe,UAAd,IAAI,CAACwb,IAAI,GAILjlB,EAAQyJ,EAAYmB,QAAQ,GAC5B,CAAC5K,EAAQyJ,EAAYwF,iBAAiB,GACtCuiC,CAAAA,EAAgBviC,iBAAiB,CAAG,GAAE,GAM1C,CAAA,CAACjP,EAAQyJ,EAAYwF,iBAAiB,GAElCjP,EAAQyJ,EAAYmB,QAAQ,CAAA,GAC3B5K,EAAQyJ,EAAYmoC,cAAc,GAClC5xC,EAAQyJ,EAAYg2B,YAAY,GAChCz/B,EAAQyJ,EAAYgF,KAAK,GAC1B+iC,CAAAA,EAAgBI,cAAc,CAAG,SAAUrxC,CAAG,CAAEF,CAAG,EAC/C,IAAIwxC,EAAc,IAAI,CAACnB,YAAY,EAC/B,IAAI,CAACA,YAAY,CAAC7I,aAAa,EAC/B,IAAI,CAAC6I,YAAY,CAAC7I,aAAa,CAACC,IAAI,CACxC,GAAI+J,EAAY,CAGZ,IAAK,IAFDpjC,EAAS+iC,EAAgB/iC,KAAK,EAAI,EAAE,CACpCqjC,EAAU,KAAK,EAAGhhB,EAAQ,EAAGwgB,EAAW,OACnCjnC,EAAI,EAAGA,EAAIoE,EAAMpL,MAAM,CAAEgH,IAAK,CACnC,IAAI0nC,EAAStjC,CAAK,CAACpE,EAAE,CACrB,GAAI0nC,GAAUA,CAAM,CAAC,EAAE,GAAKF,EAAWP,QAAQ,CAAE,CAC7CQ,EAAUznC,EACV,KACJ,CACJ,CARA,IAUI2nC,EAAQ3mC,EAASymC,IAAYrjC,CAAK,CAACqjC,EAAU,EAAE,CACnD,GAAIE,EAAM,CACNV,EAAWU,CAAI,CAAC,EAAE,EAAI,OACtB,IAAIC,EAASD,CAAI,CAAC,EAAE,CACpBlhB,EAAQmhB,GAAUA,CAAM,CAAC,EAAE,EAAI,CAGnC,KACiC,SAAxBJ,EAAWP,QAAQ,EAExBxgB,CAAAA,EAAQ+gB,AAAmB,GAAnBA,EAAW/gB,KAAK,AAAI,EAEhC,IAAIohB,EAAY5F,CAAS,CAACgF,EAAS,CAEnC,OADA,IAAI,CAAC7R,YAAY,CAAGyS,EAAYphB,EACzB,IAAI,CAAC/vB,KAAK,CAAC+F,IAAI,CAACqrC,YAAY,CAAC,CAAED,UAAWA,EAAWphB,MAAOA,EAAOwgB,SAAUA,CAAS,EAAG/wC,EAAKF,EAAK,IAAI,CAACM,OAAO,CAACsmC,WAAW,CACtI,CACJ,CAAA,GAIR/mC,EAAM,CAAA,EAAM,IAAI,CAACS,OAAO,CAAE6wC,GACtB,IAAI,CAAC1kC,KAAK,GAOVnM,EAAQ6O,UAAU,CAAGlE,EAAK7B,EAAY+F,UAAU,CAAE,GAClD7O,EAAQ8O,UAAU,CAAGnE,EAAK7B,EAAYgG,UAAU,CAAE,IAIlDpE,EAAS1K,EAAQ8J,IAAI,CAACu5B,WAAW,GACjCrjC,CAAAA,EAAQ+O,SAAS,CAAG/O,EAAQsD,SAAS,CACjC0pC,EAAY3J,WAAW,AAAD,EAGtC,CAIA,SAASoO,EAAmBzmC,CAAC,EAEzB,IAAIlC,EAAckC,EAAElC,WAAW,CAC3BkkC,EAAclkC,GAAeA,EAAYgB,IAAI,EAAI,CAAC,EAClD+iC,EAAUG,EAAYH,OAAO,AAG7BG,CAAAA,EAAYvqC,OAAO,EAAIoqC,GACvBttC,EAAM,CAAA,EAAM2G,AAPL,IAAI,CAOMlG,OAAO,CAAE6sC,CAAO,CAAC,EAAE,CAE5C,CAKA,SAAS6E,IAEL,AAACxrC,CAAAA,AADU,IAAI,CACT4D,IAAI,CAAC+iC,OAAO,EAAI,EAAE,AAAD,EAAG92B,OAAO,CAAC,SAAUiqB,CAAM,EAAI,OAAOA,EAAOjP,QAAQ,EAAI,EACpF,CAMA,SAAS4gB,EAAgB3mC,CAAC,EACtB,IAAemB,EAAQxC,AAAd,IAAI,CAAawC,KAAK,CAAEwiC,EAAqBhlC,AAA7C,IAAI,CAA4CglC,kBAAkB,CAAE/kC,EAAKD,AAAzE,IAAI,CAAwE3J,OAAO,CAAC8J,IAAI,CAAEkjC,EAAcpjC,AAAO,KAAK,IAAZA,EAAgB,CAAC,EAAIA,EACtI,GAAIojC,EAAYvqC,OAAO,EAAIksC,EAAoB,CAC3C,IAAIiD,EAAe,AAA+B,EAA/B,IAAI,CAAC5xC,OAAO,CAACuO,MAAM,CAAC2gC,QAAQ,CAC3CA,EAAW/iC,EACV6gC,EAAY6E,UAAU,EACnBD,EAAejD,EAAmBxsC,MAAM,CAC5CyvC,EAAejD,EAAmBzsC,KAAK,CACvCwG,EAAQsC,EAAEuiC,QAAQ,EAClBviC,EAAEuiC,QAAQ,CAAC,EAAE,CAAG2B,EAGhBlkC,EAAEuiC,QAAQ,CAAG,CAAC2B,EAAU,EAAE,AAElC,CACJ,CAIA,SAASp/B,IACL,IAAI,CAACuU,IAAI,CAACtO,OAAO,CAAC,SAAU7P,CAAI,EAC5B,AAACA,CAAAA,EAAK4D,IAAI,EAAI5D,EAAK4D,IAAI,CAAC+iC,OAAO,EAAI,EAAE,AAAD,EAAG92B,OAAO,CAAC,SAAUiqB,CAAM,EAC3DA,EAAO/uB,WAAW,GAClB+uB,EAAOwK,kBAAkB,EAC7B,EACJ,EACJ,CAIA,SAASsH,EAAU9mC,CAAC,EAChB,IAAIlB,EAAO,IAAI,CAACA,IAAI,CACpB,AAACA,CAAAA,EAAK+iC,OAAO,EAAI,EAAE,AAAD,EAAG92B,OAAO,CAAC,SAAUiqB,CAAM,EAAI,OAAOA,EAAOv6B,OAAO,CAACuF,EAAE+mC,UAAU,CAAG,GACtFjoC,EAAK+iC,OAAO,CAAG,KAAK,CACxB,CAKA,SAASmF,EAAOhnC,CAAC,EAEb,IAAIlC,EAAckC,EAAElC,WAAW,EAAI,CAAC,EAChCkkC,EAAclkC,EAAYgB,IAAI,EAAI,CAAC,CACnCkjC,CAAAA,EAAYvqC,OAAO,EAAIpD,EAAQ2tC,EAAYjjC,WAAW,GACtDjB,CAAAA,EAAYmpC,SAAS,CAAGnpC,EAAYzF,SAAS,CAAI2pC,EAAYjjC,WAAW,EAEvE7D,AANM,IAAI,CAML4D,IAAI,EACV5D,CAAAA,AAPO,IAAI,CAON4D,IAAI,CAAG,IAAIooC,EAPT,IAAI,CAO2B,EAE1ChsC,AATW,IAAI,CASViqC,YAAY,CAAG,EAAE,CACtBjqC,AAVW,IAAI,CAUVmqC,WAAW,CAAG,EAAE,AACzB,CAKA,SAAS8B,EAA4BnnC,CAAC,EAClC,IAAiBlF,EAAQkmC,AAAd,IAAI,CAAelmC,KAAK,CAAEI,EAAO8lC,AAAjC,IAAI,CAAkC9lC,IAAI,CAAEiE,EAAWjE,EAAKiE,QAAQ,CAAE/J,EAAQ8F,EAAK9F,KAAK,CAA0B4sC,EAAchtC,AAA5BkG,EAAKlG,OAAO,CAAwB8J,IAAI,EAAI,CAAC,EAAGsoC,EAAYlsC,EAAKlG,OAAO,CAACuO,MAAM,CAAEC,EAAQ4jC,EAAU5jC,KAAK,CAGvNm+B,EAAOlB,CAAY,CAACvlC,EAAKymC,IAAI,CAAC,CAAE4C,EAAiBvkC,EAAEukC,cAAc,CAAErI,EAAgBhhC,EAAKghC,aAAa,CAAEmL,EAAUrG,AAHtG,IAAI,CAGuGD,GAAG,CAAGwD,EAAgB+C,EAAe5nC,EAASw8B,CAAa,CAACl8B,EAAE4H,KAAK,CAAG,EAAE,EAC1Ls0B,CAAa,CAACl8B,EAAE4H,KAAK,CAAG,EAAE,CAAG28B,EAC7B,AAACrpC,CAAAA,EAAKxG,GAAG,EAAI,CAAA,EAAK6vC,EAAiBhC,EAAWrnC,EAAKqnC,QAAQ,CAAC,QAASx+B,EAAYw+B,EAAWA,CAAQ,CAAC,EAAE,CAAG,EAAGgF,EAAYhF,EAAWA,CAAQ,CAAC,EAAE,CAAG,EAAI,EAE1J,GAAIP,AAAwB,CAAA,IAAxBA,EAAYvqC,OAAO,CAAW,CAC9B,IAAqB+vC,EAAjBxE,EAAS,KAAK,EAAU79B,EAAO,KAAK,EAAGsV,EAAQ,KAAK,EA2CxD,GAzCIknB,AAAS,QAATA,EAEA6F,EAAQxE,AADRA,CAAAA,EAAS9nC,EAAKoK,GAAG,CAAGpK,EAAKwN,MAAM,AAAD,EACb3E,EAEZ49B,AAAS,WAATA,EAELqB,EAASwE,AADTA,CAAAA,EAAQpyC,EAAMoQ,WAAW,CAAGtK,EAAK8nC,MAAM,CAAG9nC,EAAKwN,MAAM,AAAD,EACnC3E,GAGjBi/B,EAAS9nC,EAAKoK,GAAG,CAAGpK,EAAKgQ,GAAG,CAAIhQ,CAAAA,EAAK5E,SAAS,CAAC6I,EAAWmoC,EAAcD,IAAY,CAAA,EACpFG,EAAQtsC,EAAKoK,GAAG,CAAGpK,EAAKgQ,GAAG,CAAIhQ,CAAAA,EAAK5E,SAAS,CAAC6I,EAAWkoC,EAAUC,IAAgB,CAAA,GAGnF3F,AAAS,UAATA,EAEAlnB,EAAQtV,AADRA,CAAAA,EAAO/P,EAAMgQ,UAAU,CAAGlK,EAAKuf,KAAK,CAAGvf,EAAKwN,MAAM,AAAD,EAClC3E,EAEV49B,AAAS,SAATA,EAELx8B,EAAOsV,AADPA,CAAAA,EAAQvf,EAAKiK,IAAI,CAAGjK,EAAKwN,MAAM,AAAD,EACf3E,GAGfoB,EAAOxQ,KAAKyP,KAAK,CAAClJ,EAAKiK,IAAI,CAAIjK,CAAAA,EAAK5E,SAAS,CAAC6I,EAAWmoC,EAAcD,IAAY,CAAA,GAAME,EACzF9sB,EAAQ9lB,KAAKC,GAAG,CAChBD,KAAKyP,KAAK,CAAClJ,EAAKiK,IAAI,CAAIjK,CAAAA,EAAK5E,SAAS,CAAC6I,EAAWkoC,EAAUC,IAAgB,CAAA,GAAMC,EAAWrsC,EAAKiK,IAAI,CAAGjK,EAAKgQ,GAAG,GAErH81B,AApCO,IAAI,CAoCN0C,SAAS,CAAGjpB,EAAQtV,EAGzBnF,EAAE+gC,GAAG,CAACrtC,CAAC,CAAI8P,AAAU,SAAVA,EACP2B,EACA3B,AAAU,UAAVA,EACIiX,EACAtV,EAAQ,AAACsV,CAAAA,EAAQtV,CAAG,EAAK,EAEjCnF,EAAE+gC,GAAG,CAACptC,CAAC,CAIC6zC,EAAS,AAACxE,CAAAA,EAASwE,CAAI,EAAK,EAEhC1sC,EAAO,CACP,IAAI2sC,EAAaryC,EAAMW,QAAQ,CAAC8sC,WAAW,CAAC/nC,GAAQmmC,EAAcnmC,EAAMkkB,OAAO,GAAG7nB,MAAM,CAGxF,GAAKiwC,EAAUM,OAAO,CAUlB1nC,EAAE+gC,GAAG,CAACptC,CAAC,EAEP8zC,EAAW1qC,CAAC,CAER,CAAEkkC,CAAAA,EAAc,CAAA,MAdA,CACpB,IAAI0G,EAAQhzC,KAAKyP,KAAK,CAAC68B,EAAcwG,EAAW5zC,CAAC,CACjDmM,CAAAA,EAAE+gC,GAAG,CAACptC,CAAC,EAGP,AAAE8zC,CAAAA,EAAW1qC,CAAC,CAAI0qC,CAAAA,EAAW5zC,CAAC,CAAG4zC,EAAW3E,CAAC,AAADA,CAAC,EAAK,EAE9C,CAAE,CAAA,AAAE6E,CAAAA,EAAQ,CAAA,EAAKF,EAAW5zC,CAAC,CAAI,CAAA,CACzC,CAQJ,CACAmM,EAAE+gC,GAAG,CAACrtC,CAAC,EAAI,AAACwH,EAAKiG,KAAK,EAAIimC,EAAU1zC,CAAC,EAAK,CAC9C,CACJ,CAIA,SAASk0C,EAAkB5f,CAAG,EAC1B,IAAI9sB,EAAO8sB,EAAI9sB,IAAI,CAAED,EAAQ+sB,EAAI/sB,KAAK,CACtC,GAAIC,EAAKlG,OAAO,CAAC8J,IAAI,EACjB5D,EAAKlG,OAAO,CAAC8J,IAAI,CAACrH,OAAO,CAAE,CAC3B,IAAI4vC,EAAUnsC,EAAKghC,aAAa,CAC5B7mC,EAAS,AAAC6F,CAAAA,EAAK6pC,YAAY,EAAI7pC,CAAG,EAAG7F,MAAM,CAAC,EAAE,CAC9CwyC,EAAU5sC,IAAUosC,CAAO,CAAC,EAAE,CAC9B9B,EAAStqC,IAAUosC,CAAO,CAACA,EAAQ3vC,MAAM,CAAG,EAAE,CAC9CJ,EAAQjC,GAAUga,EAAKha,EAAOL,OAAO,CAACogB,IAAI,CAAE,SAAUhY,CAAC,EACvD,OAAOA,CAAC,CAAClC,EAAKoF,OAAO,CAAG,IAAM,IAAI,GAAKrF,CAC3C,GACI6sC,EAAY,KAAK,EACjBxwC,GAASjC,EAAO0yC,EAAE,CAAC,WAGnBD,EAAYvzC,EAAM+C,GAClBjE,EAAEuO,WAAW,CAAComC,KAAK,CAAC5zC,SAAS,CAAC6gC,UAAU,CACnC0F,oBAAoB,CAACmN,IAI9B9f,EAAI6f,OAAO,CAAGA,EACd7f,EAAIud,MAAM,CAAGA,EACbvd,EAAI1wB,KAAK,CAAGwwC,CAChB,CACJ,CAoBA,SAASG,IACoB/sC,AAAd,IAAI,CAAe9F,KAAK,CAAnC,IAAqCJ,EAAUkG,AAApC,IAAI,CAAqClG,OAAO,CAAEgtC,EAAchtC,EAAQ8J,IAAI,EAAI,CAAC,EAAGopC,EAAehtC,AAAnG,IAAI,CAAoGkE,UAAU,CAAE88B,EAAgBhhC,AAApI,IAAI,CAAqIghC,aAAa,CAAEiM,EAAWjM,CAAa,CAAC,EAAE,CAAEkM,EAAYlM,CAAa,CAAC,EAAE,CAAEmM,EAAUnM,CAAa,CAACA,EAAcxkC,MAAM,CAAG,EAAE,CAAE4wC,EAAgBpM,CAAa,CAACA,EAAcxkC,MAAM,CAAG,EAAE,CAAE6wC,EAAYrtC,AAA3U,IAAI,CAA4U6pC,YAAY,EAAI7pC,AAAhW,IAAI,CAAiW6pC,YAAY,CAACnwC,GAAG,CAAE4zC,EAAYttC,AAAnY,IAAI,CAAoY6pC,YAAY,EAAI7pC,AAAxZ,IAAI,CAAyZ6pC,YAAY,CAACrwC,GAAG,CAAEE,EAAM2zC,GAAartC,AAAlc,IAAI,CAAmctG,GAAG,CAAEF,EAAM8zC,GAAattC,AAA/d,IAAI,CAAgexG,GAAG,CAAEo/B,EAAe54B,AAAxf,IAAI,CAAyf44B,YAAY,CAAE2U,EACthB/oC,EAAS9K,IACLA,GAAOuzC,EAAWrU,GAClBl/B,EAAMwzC,EAAYM,EAAkBhpC,EAAS9K,IAC7CuzC,EAAWvzC,GACXuzC,EAAWrU,EAAel/B,EAAM+zC,EAAoBjpC,EAAShL,IAC7D2zC,EAAU3zC,GACV2zC,EAAUvU,EAAep/B,EAAMk0C,EAAkBlpC,EAAShL,IAC1DA,GAAO2zC,EAAUvU,GACjBp/B,EAAM4zC,CACkB,EAAA,IAAxBtG,EAAYvqC,OAAO,EACnB,CAACywC,GACAhtC,CAAAA,AAZM,IAAI,CAYLoF,OAAO,EAAIpF,AAZV,IAAI,CAYW2tC,QAAQ,AAAD,IACxBH,CAAAA,GAAkBD,CAAe,GAAM,CAACzzC,EAAQ2O,WAAW,EAC5Du4B,CAAAA,CAAa,CAAC,EAAE,CAAGtnC,CAAE,EAEpB+zC,CAAAA,GAAoBC,CAAa,GAAM,CAAC5zC,EAAQ4O,SAAS,EAC1Ds4B,CAAAA,CAAa,CAACA,EAAcxkC,MAAM,CAAG,EAAE,CAAGhD,CAAE,EAGxD,CAKA,SAASo0C,EAAarH,CAAO,EAEzB,IApzBiB5uC,EAozBb8L,EAAKzD,AADE,IAAI,CACDlG,OAAO,CAAC8J,IAAI,OAC1B,AAAIkjC,AAAwB,CAAA,IAAxBA,AADsCrjC,CAAAA,AAAO,KAAK,IAAZA,EAAgB,CAAC,EAAIA,CAAC,EAChDlH,OAAO,EAAayD,AAFzB,IAAI,CAE0BkE,UAAU,CACxClE,AAHA,IAAI,CAGC44B,YAAY,CAErB2N,EAAQzuC,KAAK,CALT,IAAI,EAnzBEH,EAwzBsBgL,UAvzBhCV,MAAM/I,SAAS,CAACmjB,KAAK,CAAChb,IAAI,CAAC1J,EAAM,IAwzB5C,CAt0BI4tC,CADOA,EAKRA,GAAiBA,CAAAA,EAAe,CAAC,CAAA,EAJpB,CAACA,EAAa,GAAM,CAAG,EAAE,CAAG,MACxCA,CAAY,CAACA,EAAa,KAAQ,CAAG,EAAE,CAAG,QAC1CA,CAAY,CAACA,EAAa,MAAS,CAAG,EAAE,CAAG,SAC3CA,CAAY,CAACA,EAAa,IAAO,CAAG,EAAE,CAAG,OA80B7C,IAAIyG,EAAmC,WAMnC,SAASA,EAAkBhsC,CAAI,EAC3B,IAAI,CAACA,IAAI,CAAGA,CAChB,CAwEA,OAnDAgsC,EAAkB9yC,SAAS,CAACyvC,WAAW,CAAG,WAEtC,IADIllC,EACAzD,EAAO,IAAI,CAACA,IAAI,CAChB9F,EAAQ8F,EAAK9F,KAAK,CAClBkuC,EAAcpoC,EAAK4D,IAAI,CAACwkC,WAAW,CACnCzB,EAAW,AAAC,CAAA,AAA6B,OAA5BljC,CAAAA,EAAKzD,EAAK6pC,YAAY,AAAD,GAAepmC,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,EAAGG,IAAI,CAAC+iC,OAAO,AAAD,GACxF3mC,EAAK4D,IAAI,CAAC+iC,OAAO,EACjB,EAAE,CACFkH,EAAazF,EAAcpoC,EAAK6pC,YAAY,CAAG7pC,EAC/C8tC,EAAY,GAAIC,EAAY,SAGhC,AAAI/tC,AAAc,IAAdA,EAAKymC,IAAI,EAAU,CAACvsC,EAAM8P,QAAQ,EAAI28B,EAAQnqC,MAAM,CAC7C,CAACwD,EAAK6pC,YAAY,EAE7B,AAAC3vC,CAAAA,CAAK,CAAC8F,EAAKoe,IAAI,CAAC,EAAI,EAAE,AAAD,EAAGvO,OAAO,CAAC,SAAUm+B,CAAS,CAAEthC,CAAK,EACnDshC,EAAUvH,IAAI,GAAKzmC,EAAKymC,IAAI,EAC3BuH,EAAUl0C,OAAO,CAAC8R,UAAU,GAC7BmiC,EAAYrhC,EACRshC,IAAcH,GAEdC,CAAAA,EAAYphC,CAAI,EAG5B,GACQqhC,IAAcD,GACjBtpC,CAAAA,CAAAA,EAAS4jC,IACNzB,EAAQnqC,MAAM,GAAK4rC,CAChB,EACf,EASA4D,EAAkB9yC,SAAS,CAACswC,YAAY,CAAG,SAAU9xC,CAAI,EACrD,IAAIsI,EAAO,IAAI,CAACA,IAAI,CAAEnF,EAAWmF,EAAK9F,KAAK,CAACW,QAAQ,CAAEf,EAAUkG,EAAKlG,OAAO,CAAEm0C,EAAkBpzC,EAASnD,IAAI,CAACA,GACzGqD,QAAQ,CAAC,wBACTG,GAAG,CAAC8E,EAAKkuC,SAAS,EAQvB,OAPKrzC,EAASN,UAAU,EACpB0zC,EAAgBjzC,IAAI,CAAC,CACjBkC,OAAQpD,EAAQqD,SAAS,CACzB,eAAgBrD,EAAQsD,SAAS,CACjCnC,OAAQ,CACZ,GAEGgzC,CACX,EACOjC,CACX,WAOAxG,EAAY2I,CAAC,CAAG,SAAUC,CAAS,EAC/B,OAAO,IAAI,CAACluC,UAAU,CAAC,KAAMkuC,EAAW,CAAA,GAAMC,MAAM,CAAC,EACzD,EAEA7I,EAAY8I,CAAC,CAAG,SAAUF,CAAS,EAC/B,IAAInuC,EAAO,IAAI,CAAEzE,EAAI,IAAI,IAAI,CAACiF,IAAI,CAAC2tC,GACnCG,AAD6D,CAAC,QAAS,eAAgB,UAAW,UAAU,CAChG1+B,OAAO,CAAC,SAAUhQ,CAAM,EAChCI,EAAKoqB,GAAG,CAACxqB,EAAQrE,EAAG,EACxB,GACA,IAAIgzC,EAAW,AAAC,CAAA,IAAI,CAACxnC,GAAG,CAAC,MAAOxL,GAAK,CAAA,EAAK,EACtCizC,EAAW,IAAI,IAAI,CAAChuC,IAAI,CAACjF,EAAEkzC,OAAO,IACtC,IAAI,CAACrkB,GAAG,CAAC,OAAQokB,EAAU,IAAI,CAACznC,GAAG,CAAC,OAAQxL,GAAKgzC,EAAW,GAC5D,IAAIG,EAAgB,IAAI,IAAI,CAACluC,IAAI,CAAC,IAAI,CAACuG,GAAG,CAAC,WAAYynC,GAAW,EAAG,GAKrE,OAJuC,IAAnC,IAAI,CAACznC,GAAG,CAAC,MAAO2nC,KAChB,IAAI,CAACtkB,GAAG,CAAC,QAAS7uB,EAAG,GACrB,IAAI,CAAC6uB,GAAG,CAAC,OAAQ7uB,EAAG,EAAI,AAAC,CAAA,GAAK,IAAI,CAACwL,GAAG,CAAC,MAAO2nC,EAAa,EAAK,IAE7D,AAAC,CAAA,EACJl1C,KAAK+Z,KAAK,CAAC,AAACi7B,CAAAA,EAASC,OAAO,GAAKC,EAAcD,OAAO,EAAC,EAAK,OAAS,EAAGE,QAAQ,EACxF,EAMe,CACX71C,QA54BJ,SAASA,EAAQuI,CAAS,CAAEuK,CAAU,CAAEgjC,CAAS,EAsB7C,OArBIv2C,EAAWD,EAAUU,KACrBuI,EAAUqE,SAAS,CAAC9E,IAAI,CAAC,QACzBS,EAAUpI,SAAS,CAACwsC,qBAAqB,CAAGA,EAC5ChmC,EAAK4B,EAAUpI,SAAS,CAAE,WAAY00C,GACtCluC,EAAK4B,EAAUpI,SAAS,CAAE,YAAaotC,GAEvC7mC,EAAS6B,EAAW,OAAQwqC,GAC5BrsC,EAAS6B,EAAW,wBAAyBulC,GAC7CpnC,EAAS6B,EAAW,YAAa0mC,GACjCvoC,EAAS6B,EAAW,cAAegnC,GACnC7oC,EAAS6B,EAAW,0BAA2BgpC,GAC/C7qC,EAAS6B,EAAW,kBAAmBopC,GACvCjrC,EAAS6B,EAAW,kBAAmBiqC,GACvC9rC,EAAS6B,EAAW,gBAAiBkqC,GACrC/rC,EAAS6B,EAAW,gBAAiBmqC,GACrChsC,EAAS6B,EAAW,YAAayrC,GACjCttC,EAAS6B,EAAW,UAAWsqC,GAC/BnsC,EAASoM,EAAY,oBAAqBjC,GAC1CnK,EAASovC,EAAW,wBAAyB5C,GAC7CxsC,EAASovC,EAAW,cAAenC,IAEhCprC,CACX,CAs3BA,CAmFJ,GACA9J,EAAgBD,EAAU,gBAAiB,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUa,CAAC,EAYnF,IAAI02C,EAAS,AAAC,IAAI,EAAI,IAAI,CAACA,MAAM,EAAK,SAAU9zB,CAAC,CAAElW,CAAC,EAChD,IAAIiqC,EAAI,CAAC,EACT,IAAK,IAAI7sC,KAAK8Y,EAAOlZ,OAAO5I,SAAS,CAACrB,cAAc,CAACwJ,IAAI,CAAC2Z,EAAG9Y,IAAM4C,AAAe,EAAfA,EAAE1D,OAAO,CAACc,IACzE6sC,CAAAA,CAAC,CAAC7sC,EAAE,CAAG8Y,CAAC,CAAC9Y,EAAE,AAAD,EACd,GAAI8Y,AAAK,MAALA,GAAa,AAAwC,YAAxC,OAAOlZ,OAAOktC,qBAAqB,CAChD,IAAK,IAAIxrC,EAAI,EAAGtB,EAAIJ,OAAOktC,qBAAqB,CAACh0B,GAAIxX,EAAItB,EAAE1F,MAAM,CAAEgH,IACzC,EAAlBsB,EAAE1D,OAAO,CAACc,CAAC,CAACsB,EAAE,GAAS1B,OAAO5I,SAAS,CAAC+1C,oBAAoB,CAAC5tC,IAAI,CAAC2Z,EAAG9Y,CAAC,CAACsB,EAAE,GACzEurC,CAAAA,CAAC,CAAC7sC,CAAC,CAACsB,EAAE,CAAC,CAAGwX,CAAC,CAAC9Y,CAAC,CAACsB,EAAE,CAAC,AAAD,EAE5B,OAAOurC,CACX,EAMItlC,EAASrR,EAAEqR,MAAM,CAAEjF,EAAWpM,EAAEoM,QAAQ,CAAEC,EAAOrM,EAAEqM,IAAI,CA+C3D,SAASyqC,EAAQpnC,CAAE,CAAEqnC,CAAM,CAAEC,CAAK,CAAEl1B,CAAI,CAAEm1B,CAAiB,CAAEv1C,CAAO,EAChE,IAOiC8lB,EAAOC,EAPpCyvB,EAAQx1C,GAAWA,EAAQw1C,KAAK,CAAEC,EAASz1C,GAAWA,EAAQy1C,MAAM,CAAEC,EAAO,CAC7Et1B,KAAMA,EACNu1B,MAAOL,EAAQ,EACftnC,GAAIA,EACJsnC,MAAOA,EACPD,OAASA,GAAU,EACvB,EACIO,EAAc,EAAGzzC,EAAS,CAER,CAAA,YAAlB,OAAOszC,GACPA,EAAOC,EAAM11C,GAIjB,IAAI61C,EAAW,AAAEN,CAAAA,CAAiB,CAACvnC,EAAG,EAAI,EAAE,AAAD,EAAIvE,GAAG,CAAC,SAAUqsC,CAAK,EAC9D,IAAIJ,EAAON,EAAQU,EAAM9nC,EAAE,CAAEA,EAAKsnC,EAAQ,EAAIQ,EAAOP,EAAmBv1C,GAAU+1C,EAAaD,EAAMhwB,KAAK,EAAIkwB,IAAKC,EAAYH,AAAoB,CAAA,IAApBA,EAAM9P,SAAS,CAC1I+P,EACAD,EAAM/vB,GAAG,EACLiwB,IAYR,OAVAlwB,EAAS,AAAC,CAACpb,EAASob,IAAUiwB,EAAajwB,EACvCiwB,EACAjwB,EAGJC,EAAO,AAAC,CAACrb,EAASqb,IAAQkwB,EAAWlwB,EACjCkwB,EACAlwB,EACJ6vB,EAAcA,EAAc,EAAIF,EAAKE,WAAW,CAChDzzC,EAASxC,KAAKD,GAAG,CAACg2C,EAAKvzC,MAAM,CAAG,EAAGA,GAC5BuzC,CACX,GAeA,OAbIt1B,IACAA,EAAK0F,KAAK,CAAGnb,EAAKyV,EAAK0F,KAAK,CAAEA,GAC9B1F,EAAK2F,GAAG,CAAGpb,EAAKyV,EAAK2F,GAAG,CAAEA,IAE9BpW,EAAO+lC,EAAM,CACTG,SAAUA,EACVD,YAAaA,EACbzzC,OAAQA,CACZ,GAEqB,YAAjB,OAAOqzC,GACPA,EAAME,EAAM11C,GAET01C,CACX,CAeA,MALW,CACPN,QAASA,EACTc,QAVJ,SAAiB91B,CAAI,CAAEpgB,CAAO,EA3E1B,IAAem2C,EAAUC,EA4EzB,OAAOhB,EAAQ,GAAI,KAAM,EAAG,MA5Ebe,EAAM,EAAE,CAWvBnuC,OAAOkX,IAAI,CAXck3B,EAAgBh2B,AA4EUA,EA5EL4C,MAAM,CAAC,SAAUqzB,CAAI,CAAEC,CAAI,EACrE,IAAI3sC,EAAK2sC,EAAKjB,MAAM,CAAEA,EAAS1rC,AAAO,KAAK,IAAZA,EAAgB,GAAKA,EAAIqE,EAAKsoC,EAAKtoC,EAAE,CAQpE,OAP4B,KAAA,IAAjBqoC,CAAI,CAAChB,EAAO,EACnBgB,CAAAA,CAAI,CAAChB,EAAO,CAAG,EAAE,AAAD,EAEpBgB,CAAI,CAAChB,EAAO,CAACtuC,IAAI,CAACuvC,GACdtoC,GACAmoC,EAAIpvC,IAAI,CAACiH,GAENqoC,CACX,EAAG,CAAC,IACuBtgC,OAAO,CAAC,SAAU2/B,CAAI,EAC7C,IAAI/rC,EACJ,GAAI,AAbG,KAaF+rC,GAAmBS,AAAsB,KAAtBA,EAAI7uC,OAAO,CAACouC,GAAe,CAC/C,IAAIa,EAAgBH,CAAa,CAACV,EAAK,CAACjsC,GAAG,CAAC,SAAU+sC,CAAM,EAExD,OADaA,EAAOnB,MAAM,CAAmBL,EAAOwB,EAAQ,CAAC,SAAS,CAE1E,GACA,AAAC7sC,CAAAA,EAAKysC,CAAa,CAlBhB,GAkBsB,AAAD,EAAGrvC,IAAI,CAAC/I,KAAK,CAAC2L,EAAI4sC,GAC1C,OAAOH,CAAa,CAACV,EAAK,AAC9B,CACJ,GACOU,GAsDmDp2C,EAC9D,CASA,CAGJ,GACAtC,EAAgBD,EAAU,qCAAsC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAWxI,IAAIC,EAAWF,EAAEE,QAAQ,CACrBoH,EAAWrH,EAAEqH,QAAQ,CAAE2P,EAAchX,EAAEgX,WAAW,CAAEgqB,EAAWhhC,EAAEghC,QAAQ,CAAE50B,EAAWpM,EAAEoM,QAAQ,CAAEC,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAAEoH,EAAOtH,EAAEsH,IAAI,CAS7J,SAAS6wC,IAEAzK,AADM,IAAI,CACLI,QAAQ,EACdJ,CAAAA,AAFO,IAAI,CAENI,QAAQ,CAAG,IAAIsK,EAFb,IAAI,CAEmC,CAEtD,CA6DA,SAASC,EAAqBlK,CAAO,CAAE/tC,CAAC,CAAEC,CAAC,CAAEmH,CAAK,CAAEqG,CAAK,CAAEyqC,CAAY,CAAErH,CAAc,CAAE38B,CAAK,CAAE0B,CAAI,EAChG,IACI+3B,EAAoBqJ,EAAMJ,EADbuB,EAAYlsC,EAAKqhC,AAAvB,IAAI,CAAwBhsC,OAAO,EAAIgsC,AAAvC,IAAI,CAAwChsC,OAAO,CAACuO,MAAM,CAAEqoC,GAAe7K,EAAMC,AAAjF,IAAI,CAAkFD,GAAG,CAAE7lC,EAAO8lC,AAAlG,IAAI,CAAmG9lC,IAAI,CAA0B4wC,EAAa92C,AAAiB,aAAjBA,AAA3BkG,EAAKlG,OAAO,CAAuB6B,IAAI,CAAiBk1C,EAAStK,EAAQzuC,KAAK,CAArM,IAAI,CAAwM,CAACU,EAAGC,EAAGmH,EAAOqG,EAAO0qC,EAAWtH,EAAgB38B,EAAO0B,EAAK,EAEnR,GAAIwiC,EAAY,CACZ,IAAIntC,EAAMktC,GAAavX,EAASuX,EAAU7zC,MAAM,CAAE,CAAA,GAC9C6zC,EAAU7zC,MAAM,CAChB,CAAC,EAAI4G,EAAKD,EAAGzH,KAAK,CAAkC2H,EAAKF,EAAGolB,OAAO,CAAEA,EAAUllB,AAAO,KAAK,IAAZA,EAAgB3D,EAAK6pC,YAAY,CAAG,EAAI,EAAIlmC,EAAI0iC,EAAesK,GAAansC,EAASmsC,EAAUtK,WAAW,EACzLsK,EAAUtK,WAAW,CACrB,EAGJ+I,EAAQ,AADRI,CAAAA,EAAOrJ,AADPA,CAAAA,EAAqBnmC,EAAKkmC,QAAQ,CAACC,kBAAkB,AAAD,GACvBA,CAAkB,CAACN,EAAI,AAAD,GAClC2J,EAAKC,KAAK,EAAK,EAChCoB,EAAOr4C,CAAC,EAER,AARgCkL,CAAAA,AAAO,KAAK,IAAZA,EAAgB,EAAIA,CAAC,EAQ3CmlB,AAAU,EAAVA,EAEL,AAACumB,CAAAA,EAAQ,CAAA,EAAK/I,CACvB,CACA,OAAOwK,CACX,CAIA,SAASC,EAAgBvK,CAAO,EAC5B,IA5D2BwK,EACvBttC,EACAyiC,EAA0B8K,EAA6Bn2C,EAA4Bo2C,EAAsBn3C,EAA0BkC,EAA4BC,EAA8B4sB,EAAoGqoB,EAGlSp1C,EAAwCq1C,EACvCC,EAyDAC,EAHaxL,EAAMC,AAAZ,IAAI,CAAaD,GAAG,CAAE7lC,EAAO8lC,AAA7B,IAAI,CAA8B9lC,IAAI,CAAEJ,EAAQkmC,AAAhD,IAAI,CAAiDlmC,KAAK,CAAE0xC,EAAWxL,AAAvE,IAAI,CAAwEI,QAAQ,CAAEqL,EAAczL,AAApG,IAAI,CAAqGhsC,OAAO,CAAEs3C,EAAOE,MAAAA,EAA2C,KAAK,EAAIA,EAASE,SAAS,CAAEC,EAAe7xC,MAAAA,EAAqC,KAAK,EAAIA,EAAM0Q,OAAO,CAAEohC,EAAW1xC,EAAKkmC,QAAQ,CAAEyL,EAAc3xC,EAAKlG,OAAO,CAAEI,EAAQ8F,EAAK9F,KAAK,CAAE8mC,EAAgBhhC,EAAKghC,aAAa,CAAEmF,EAAqBuL,EAASvL,kBAAkB,CAAEuK,EAAejsC,EAAK8sC,MAAAA,EAAiD,KAAK,EAAIA,EAAYlpC,MAAM,CAAEspC,MAAAA,EAAiD,KAAK,EAAIA,EAAYtpC,MAAM,EAAGupC,EAAiBlB,GAAgBtX,EAASsX,EAAa5zC,MAAM,CAAE,CAAA,GACpqB4zC,EAAa5zC,MAAM,CACnB,CAAC,EAAI0yC,EAAOrJ,GAAsBA,CAAkB,CAACN,EAAI,CAAEpiC,EAAK+rC,GAAQ,CAAC,EAAGE,EAAcjsC,EAAGisC,WAAW,CAAED,EAAQhsC,EAAGgsC,KAAK,CAAEoC,EAAiBrC,GAAQE,GAAeA,EAAc,EAAkBoC,EAAoB,AAAsB,aAArBH,EAAYh2C,IAAI,EAAoB81C,EAAcN,EAAenQ,EAAc5/B,OAAO,CAACykC,GAAO,GAAIkM,EAAkB,4BAA6BC,EAAmBD,EAAkB,SAAUx3C,EAAaL,EAAMK,UAAU,EAEtbu3C,GAAqBtC,GAErB5vC,EACKqyC,WAAW,CAAC,AAAIC,OAAOF,EAAmB,OAC1Cj3C,QAAQ,CAACi3C,EAN+KvC,GAQjMlJ,EAAQzuC,KAAK,CAVF,IAAI,CAUKmK,MAAM/I,SAAS,CAACmjB,KAAK,CAAChb,IAAI,CAACsB,UAAW,IACtDmvC,GAAqBD,IACrBR,EAAYK,EAASta,WAAW,CAACoY,GAxEVuB,EAyED,CAClB9zC,MAAQ,CAAC1C,GACLqF,EAAMuyC,MAAM,EACZvyC,EAAMuyC,MAAM,CAACl1C,KAAK,EAClB,GACJo0C,UAAWA,EACXz2C,MAAOgF,EAAMwyC,WAAW,CACxBt4C,QAAS83C,EACT/2C,SAAU+E,EAAM/E,QAAQ,CACxBiY,KAAMq+B,EACNkB,GAAIzyC,EAAMyyC,EAAE,AAChB,EAlF0BrB,EAAQ,CAAC9K,CAAnCA,EAAWJ,AA0DJ,IAAI,CA1DKI,QAAQ,EAAoBsL,SAAS,CAAE32C,EAAWk2C,EAAOl2C,QAAQ,CAAEo2C,EAAWF,EAAOsB,EAAE,CAA4Br2C,EAAQlC,CAAlCA,EAAUi3C,EAAOj3C,OAAO,EAAkBkC,KAAK,EAAI,EAAGC,EAASnC,EAAQmC,MAAM,EAAI,EAAG4sB,EAAU,AAAC,CAAA,AAA2B,OAA1BplB,CAAAA,EAAK3J,EAAQ+uB,OAAO,AAAD,GAAeplB,AAAO,KAAK,IAAZA,EAAgBA,EAAKqiC,AA0DzP,IAAI,CA1D0P9lC,IAAI,CAAC6pC,YAAY,AAAD,EAAK,EAAI,EAAGqH,EAAa,CAC9S14C,EAAGy4C,EAASz4C,CAAC,CAAIwD,EAAQ,EAAK6sB,EAC9BpwB,EAAGw4C,EAASx4C,CAAC,CAAIwD,EAAS,CAC9B,EAAGH,EAAWi1C,EAAOM,SAAS,CAAG,GAAK,IAAKF,EAAeJ,EAAOj+B,IAAI,EAAItO,EAAS0sC,EAAWz4C,CAAC,GAC1F24C,EAAOlL,EAASsL,SAAS,GAEzBtL,CAAAA,EAASsL,SAAS,CAAGJ,EAAOv2C,EACvBnD,IAAI,CAACmD,EAAS5B,OAAO,CAACa,EAAQ6B,IAAI,CAAC,CAAC7B,EAAQtB,CAAC,EAAI,EAAGsB,EAAQrB,CAAC,EAAI,EAAGuD,EAAOC,IAC3ElB,QAAQ,CAAC,yBACTG,GAAG,CAAC61C,EAAOn2C,KAAK,CAAA,EAGzBw2C,CAAI,CAACD,EAAe,OAAS,OAAO,GAE/Bt2C,EAASN,UAAU,EACpB62C,EACKp2C,IAAI,CAAC,CACN8a,OAAQ,UACR,KAAQrR,EAAKssC,EAAO9zC,KAAK,CAAE,WAC3B,eAAgB,EAChBC,OAAQpD,EAAQqD,SAAS,CACzB8U,YAAanY,EAAQsD,SAAS,EAAI,CACtC,GAGJg0C,CAAI,CAACJ,EAAQ,OAAS,UAAU,CAAC,CAC7Bj+B,WAAYm+B,EAAW14C,CAAC,CACxBwa,WAAYk+B,EAAWz4C,CAAC,CACxBqD,SAAUA,CACd,GA2DI8D,EACK7E,QAAQ,CALEg3C,EACVV,CAAAA,EAAY,YAAc,UAAS,GAKnCY,WAAW,CAJEF,EACbV,CAAAA,EAAY,WAAa,WAAU,GAInC92C,GACDqF,EAAMsW,GAAG,CAAC,CACNJ,OAAQ,SACZ,GAGJ,CAAClW,EAAOwxC,EAAK,CAACvhC,OAAO,CAAC,SAAUyiC,CAAM,EAC9BA,GAAU,CAACA,EAAOC,sBAAsB,GAExC9yC,EAAS6yC,EAAOhiC,OAAO,CAAE,YAAa,WA1HlD1Q,AA2H4BA,EA3HtB7E,QAAQ,CAAC,mCACV6E,AA0HuBA,EA1HjB/E,QAAQ,CAACN,UAAU,EAC1BqF,AAyHwBA,EAzHlBsW,GAAG,CAAC,CACNs8B,eAAgB,WACpB,EAwHQ,GAEA/yC,EAAS6yC,EAAOhiC,OAAO,CAAE,WAAY,eAnH7C4F,EAAAA,EAAMkjB,EAASt/B,AAoHoB42C,EApHZvwC,KAAK,EAAIrG,AAoHG42C,EApHKvwC,KAAK,CAAG,CAAC,EACrDP,AAmHgCA,EAnH1BqyC,WAAW,CAAC,mCACbryC,AAkH2BA,EAlHrB/E,QAAQ,CAACN,UAAU,EAC1BqF,AAiH4BA,EAjHtBsW,GAAG,CAAC,CAAEs8B,eAAiBt8B,EAAIs8B,cAAc,EAAI,MAAQ,EAkHnD,GACA/yC,EAAS6yC,EAAOhiC,OAAO,CAAE,QAAS,WAC9BghC,EAASmB,cAAc,EAC3B,GACAH,EAAOC,sBAAsB,CAAG,CAAA,EAExC,IAEKnB,IACLhiC,EAAYqiC,GACZ7xC,MAAAA,GAA8CA,EAAMsW,GAAG,CAAC,CAAEJ,OAAQ,SAAU,GAC5Es7B,EAAK7xC,OAAO,GAEpB,CAUA,IAAIixC,EAAuC,WASvC,SAASA,EAAsB1K,CAAI,EAC/B,IAAI,CAACA,IAAI,CAAGA,CAChB,CAuGA,OA9FA0K,EAAsBz3C,OAAO,CAAG,SAAU81C,CAAS,EAC/C,GAAIv2C,EAAWD,EAAU,IAAI,CAACU,OAAO,EAAG,CACpC,IAAI25C,EAAY7D,EAAU31C,SAAS,CACnCuG,EAASovC,EAAW,OAAQ0B,GAC5B7wC,EAAKgzC,EAAW,mBAAoBjC,GACpC/wC,EAAKgzC,EAAW,cAAe5B,GAE/B4B,EAAUC,QAAQ,CAAG,SAAUxnC,CAAM,EACjC,IAAI,CAAC+6B,QAAQ,CAACyM,QAAQ,CAACxnC,EAC3B,EACAunC,EAAUE,MAAM,CAAG,SAAUznC,CAAM,EAC/B,IAAI,CAAC+6B,QAAQ,CAAC0M,MAAM,CAACznC,EACzB,EACAunC,EAAUD,cAAc,CAAG,SAAUtnC,CAAM,EACvC,IAAI,CAAC+6B,QAAQ,CAACuM,cAAc,CAACtnC,EACjC,CACJ,CACJ,EAkBAqlC,EAAsBt3C,SAAS,CAACy5C,QAAQ,CAAG,SAAUxnC,CAAM,EACvD,IAAI26B,EAAO,IAAI,CAACA,IAAI,CAAE9lC,EAAO8lC,EAAK9lC,IAAI,CAAE04B,EAAa14B,EAAK04B,UAAU,CACpE,GAAIA,GACA14B,EAAKkmC,QAAQ,CAACC,kBAAkB,CAAE,CAClC,IAAIN,EAAMC,EAAKD,GAAG,CAAE2J,EAAOxvC,EAAKkmC,QAAQ,CAACC,kBAAkB,CAACN,EAAI,CAAEjsB,EAAS5Z,EAAKkmC,QAAQ,CAACyM,QAAQ,CAACnD,GAClG9W,EAAWmI,SAAS,CAACjnB,EAAQnV,EAAK0G,EAAQ,CAAA,GAC9C,CACJ,EAOAqlC,EAAsBt3C,SAAS,CAACqG,OAAO,CAAG,WAClC,IAAI,CAACiyC,SAAS,EACd,IAAI,CAACA,SAAS,CAACjyC,OAAO,EAE9B,EAaAixC,EAAsBt3C,SAAS,CAAC05C,MAAM,CAAG,SAAUznC,CAAM,EACrD,IAAI1H,EAAK,IAAI,CAACqiC,IAAI,CAAED,EAAMpiC,EAAGoiC,GAAG,CAAE7lC,EAAOyD,EAAGzD,IAAI,CAAEkmC,EAAWlmC,EAAKkmC,QAAQ,CAAExN,EAAa14B,EAAK04B,UAAU,CAAEma,EAAiB3M,EAASC,kBAAkB,CACtJ,GAAIzN,GAAcma,EAAgB,CAC9B,IAAIrD,EAAOqD,CAAc,CAAChN,EAAI,CAAEjsB,EAASssB,EAAS0M,MAAM,CAACpD,GACzD9W,EAAWmI,SAAS,CAACjnB,EAAQnV,EAAK0G,EAAQ,CAAA,GAC9C,CACJ,EAcAqlC,EAAsBt3C,SAAS,CAACu5C,cAAc,CAAG,SAAUtnC,CAAM,EAC7D,IAAI26B,EAAO,IAAI,CAACA,IAAI,CAAE9lC,EAAO8lC,EAAK9lC,IAAI,CAAE04B,EAAa14B,EAAK04B,UAAU,CACpE,GAAIA,GACA14B,EAAKkmC,QAAQ,CAACC,kBAAkB,CAAE,CAClC,IAAIN,EAAMC,EAAKD,GAAG,CAAE2J,EAAOxvC,EAAKkmC,QAAQ,CAACC,kBAAkB,CAACN,EAAI,CAAEjsB,EAAS5Z,EAAKkmC,QAAQ,CAACuM,cAAc,CAACjD,GACxG9W,EAAWmI,SAAS,CAACjnB,EAAQnV,EAAK0G,EAAQ,CAAA,GAC9C,CACJ,EACOqlC,CACX,IAOA,OAAOA,CACX,GACAh5C,EAAgBD,EAAU,0BAA2B,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUgP,CAAK,CAAEnO,CAAC,EAYrI,IAAIqR,EAASrR,EAAEqR,MAAM,CAAEjH,EAAUpK,EAAEoK,OAAO,CAAEgC,EAAWpM,EAAEoM,QAAQ,CAAE40B,EAAWhhC,EAAEghC,QAAQ,CAAE//B,EAAQjB,EAAEiB,KAAK,CAAEoL,EAAOrM,EAAEqM,IAAI,CAiLxH,MAPoB,CAChBquC,SAjKJ,SAAkBtD,CAAI,CAAE11C,CAAO,EAC3B,IAMQi5C,EALa32C,EAAOgzC,EAAO/V,EAAc2Z,EAAmB/1C,EAAOF,EADvE2P,EAAQ5S,EAAQ4S,KAAK,CAAEumC,EAAoBn5C,EAAQm5C,iBAAiB,CAAEC,EAAcp5C,EAAQo5C,WAAW,CAAEC,EAAmBr5C,EAAQq5C,gBAAgB,CAAEh5C,EAASL,EAAQK,MAAM,CAAEqiB,EAAS1iB,EAAQ0iB,MAAM,CAAE42B,EAAWt5C,EAAQs5C,QAAQ,CAAE9sB,EAASnsB,EAAOmsB,MAAM,CAAE+sB,EAAoBl5C,EAAOD,KAAK,CAACJ,OAAO,CAACI,KAAK,CA+B/S,OAhBIs1C,IACApzC,EAAQkqB,CAAM,CAACkpB,EAAKhsC,CAAC,CAAC,CACtB4rC,EAAQ6D,CAAiB,CAACzD,EAAKJ,KAAK,CAAC,EAAI,CAAC,EACxBhzC,GAASgzC,EAAM/V,YAAY,GAEzC2Z,EAAoB52C,EAAMsQ,KAAK,CAAI8P,CAAAA,EAC/BA,EAAOhgB,MAAM,CACb62C,EAAkBnZ,UAAU,AAAD,EAC/Bb,EAAe7c,GAAUA,CAAM,CAACw2B,EAAkB,EAGjD74C,EAAOD,KAAK,CAACK,UAAU,EACxB0C,CAAAA,EAAQwH,EAAKrI,GAASA,EAAMtC,OAAO,CAACmD,KAAK,CAAEmyC,GAASA,EAAMnyC,KAAK,CAAEo8B,EAAc6Z,GApBnF,CAAA,AAAIH,CADAA,EAAiB3D,GAASA,EAAM2D,cAAc,GAE9CA,AAAuB,eAAvBA,EAAe9a,GAAG,EAClBvrB,GACA0mC,EACO7sC,EAAME,KAAK,CAgByFysC,GAhBjFvU,QAAQ,CAACoU,EAAel5C,EAAE,CAAI6S,CAAAA,EAAQ0mC,CAAO,GAAIpsC,GAAG,GAgB6BksC,CAf/G,EAe6H/4C,EAAO8C,KAAK,CAAA,EAEzIF,EAAa0H,EAAKrI,GAASA,EAAMtC,OAAO,CAACiD,UAAU,CAAEqyC,GAASA,EAAMryC,UAAU,CAAEi2C,EAAmBG,EAAkBr5C,EAAQiD,UAAU,GAEpI,CACHE,MAAOA,EACPF,WAAYA,CAChB,CACJ,EA8HIu2C,gBA5GJ,SAAyBvC,CAAM,EAC3B,IAAiBwC,EAAUC,EAAWhwC,EAAG5J,EAAMC,EAAI45C,EAA/C5C,EAAS,CAAC,EACd,GAAIzX,EAAS2X,GA2BT,IA1BAn3C,EAAO4K,EAASusC,EAAOn3C,IAAI,EAAIm3C,EAAOn3C,IAAI,CAAG,EAC7C65C,EAAS1C,EAAO0C,MAAM,CACtBD,EAAY,CAAC,EACbD,EAAWna,EAAS2X,EAAOwC,QAAQ,EAAIxC,EAAOwC,QAAQ,CAAG,CAAC,EACtD/wC,EAAQixC,IACRD,CAAAA,EAAYC,EAAO32B,MAAM,CAAC,SAAUrlB,CAAG,CAAEi8C,CAAI,EACzC,IAAItE,EAAOuE,EAAiB75C,EAgB5B,OAfIs/B,EAASsa,IAASlvC,EAASkvC,EAAKtE,KAAK,IAErCuE,EAAkBlvC,EAAK3K,AADvBA,CAAAA,EAAUT,EAAM,CAAC,EAAGq6C,EAAI,EACOC,eAAe,CAAEJ,EAASI,eAAe,EAExE,OAAO75C,EAAQ65C,eAAe,CAC9B,OAAO75C,EAAQs1C,KAAK,CAGhBhW,EAAS3hC,CAAG,CADhB23C,EAAQsE,EAAKtE,KAAK,CAAIuE,CAAAA,EAAkB,EAAI/5C,EAAO,CAAA,EAC5B,EACnBP,EAAM,CAAA,EAAM5B,CAAG,CAAC23C,EAAM,CAAEt1C,GAGxBrC,CAAG,CAAC23C,EAAM,CAAGt1C,GAGdrC,CACX,EAAG,CAAC,EAAC,EAEToC,EAAK2K,EAASusC,EAAOl3C,EAAE,EAAIk3C,EAAOl3C,EAAE,CAAG,EAClC2J,EAAI,EAAGA,GAAK3J,EAAI2J,IACjBqtC,CAAM,CAACrtC,EAAE,CAAGnK,EAAM,CAAC,EAAGk6C,EAAUna,EAASoa,CAAS,CAAChwC,EAAE,EAAIgwC,CAAS,CAAChwC,EAAE,CAAG,CAAC,GAGjF,OAAOqtC,CACX,EA2EI+C,cArEJ,SAASA,EAAcC,CAAI,CAAE/5C,CAAO,EAChC,IAAIy1C,EAASz1C,EAAQy1C,MAAM,CAAEuE,EAASh6C,EAAQg6C,MAAM,CAAqCC,EAAWC,AAAhCl6C,EAAQk6C,WAAW,AAAwB,CAACF,EAAO,CAAEH,EAAmB75C,AAA4B,CAAA,IAA5BA,EAAQ65C,eAAe,CAAsCv3C,EAAQkqB,AAAxBxsB,EAAQwsB,MAAM,AAAgB,CAACutB,EAAKrwC,CAAC,CAAC,CAAEywC,EAAe73C,GAASA,EAAMtC,OAAO,EAAI,CAAC,EAAG61C,EAAW,EAAE,CACvRuE,EAAgB,CACpBL,CAAAA,EAAKM,YAAY,CAAGN,EAAKzE,KAAK,CAAIuE,CAAAA,EAAkB,EAAII,EAAS3E,KAAK,AAAD,EACrEyE,EAAK97B,IAAI,CAAGtT,EAAKrI,GAASA,EAAM2b,IAAI,CAAE,IACtC87B,EAAK53B,OAAO,CAAI63B,IAAWD,EAAK/rC,EAAE,EAC9BhO,AAAoB,CAAA,IAApBA,EAAQmiB,OAAO,CACG,YAAlB,OAAOszB,GACPsE,CAAAA,EAAOtE,EAAOsE,EAAM/5C,EAAO,EAG/B+5C,EAAKlE,QAAQ,CAAC9/B,OAAO,CAAC,SAAU+/B,CAAK,CAAEpsC,CAAC,EACpC,IAAI4wC,EAAa3qC,EAAO,CAAC,EAAG3P,GAC5B2P,EAAO2qC,EAAY,CACf1nC,MAAOlJ,EACP4vC,SAAUS,EAAKlE,QAAQ,CAACnzC,MAAM,CAC9Byf,QAAS43B,EAAK53B,OAAO,AACzB,GACA2zB,EAAQgE,EAAchE,EAAOwE,GAC7BzE,EAAS9uC,IAAI,CAAC+uC,GACVA,EAAM3zB,OAAO,EACbi4B,CAAAA,GAAiBtE,EAAMpwC,GAAG,AAAD,CAEjC,GAEA,IAAIO,EAAQ0E,EAAKwvC,EAAal0C,KAAK,CAAEm0C,GAMrC,OALAL,EAAK53B,OAAO,CAAGlc,GAAS,GAAMm0C,CAAAA,EAAgB,GAAKL,EAAK53B,OAAO,AAAD,EAC9D43B,EAAKlE,QAAQ,CAAGA,EAChBkE,EAAKK,aAAa,CAAGA,EACrBL,EAAKQ,MAAM,CAAGR,EAAK53B,OAAO,EAAI,CAACi4B,EAC/BL,EAAKr0C,GAAG,CAAGO,EACJ8zC,CACX,EAsCIS,aAzBJ,SAAsBn6C,CAAM,EACxB,IAAIo6C,EAAQz6C,EAaZ,OAZIs/B,EAASj/B,KAETL,EAAUs/B,EAASj/B,EAAOL,OAAO,EAAIK,EAAOL,OAAO,CAAG,CAAC,EAEvDy6C,EAAS9vC,EAAKtK,EAAOq6C,QAAQ,CAAE16C,EAAQy6C,MAAM,CAAE,IAE3Cnb,EAASj/B,EAAOyI,WAAW,GAC3BzI,CAAAA,EAAOyI,WAAW,CAAC2xC,MAAM,CAAGA,CAAK,EAGrCp6C,EAAOq6C,QAAQ,CAAGD,GAEfA,CACX,CAWA,CAGJ,GACA/8C,EAAgBD,EAAU,qCAAsC,CAACA,CAAQ,CAAC,0BAA0B,CAAEA,CAAQ,CAAC,wBAAwB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,gBAAgB,CAAEA,CAAQ,CAAC,qCAAqC,CAAEA,CAAQ,CAAC,0BAA0B,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUqpC,CAAU,CAAE6T,CAAQ,CAAEt8C,CAAC,CAAEu8C,CAAI,CAAEC,CAAY,CAAEC,CAAE,CAAEx8C,CAAC,EAW9W,IAQIy8C,EARAx8C,EAAWF,EAAEE,QAAQ,CACrBi7C,EAAkBsB,EAAGtB,eAAe,CACpC7zC,EAAWrH,EAAEqH,QAAQ,CAAE0U,EAAO/b,EAAE+b,IAAI,CAAEhF,EAAY/W,EAAE+W,SAAS,CAAE3M,EAAUpK,EAAEoK,OAAO,CAAE42B,EAAWhhC,EAAEghC,QAAQ,CAAE0b,EAAW18C,EAAE08C,QAAQ,CAAEz7C,EAAQjB,EAAEiB,KAAK,CAAEoL,EAAOrM,EAAEqM,IAAI,CAAEnM,EAAaF,EAAEE,UAAU,CAAE8W,EAAchX,EAAEgX,WAAW,CAAE1P,EAAOtH,EAAEsH,IAAI,CAe3O,SAASq1C,EAAiBvF,CAAI,CAAEh2C,CAAG,EAC/B,IAAIK,EAAK21C,EAAKwF,WAAW,EAAI,EACzBp7C,EAAO41C,EAAKyF,aAAa,EAAI,EASjC,OAHIp7C,GAAML,GACNI,CAAAA,GAAQ,EAAE,EAEP,CACHA,KAAMA,EACNC,GAAIA,EACJkqC,WAAY,CAAA,CAChB,CACJ,CA0BA,SAASmR,EAAoBh7B,CAAI,CAAEi7B,CAAW,CAAEC,CAAc,EAC1D,IA2EwC7xC,EAChC8xC,EA5EJnxC,EAAa,EAAE,CAAEoxC,EAAiB,EAAE,CAAEC,EAAgB,CAAC,EAAGC,EAAqB,AAAuB,WAAvB,OAAOL,GACtFA,EACAhP,EAAqB,CAAC,EAAGsP,EAAc,GAuGvC5B,EAAOa,EAAK1E,OAAO,CAAC91B,EArGP,CAEbo1B,MAAO,SAAUE,CAAI,EACjB,IAAIkG,EAAWvP,CAAkB,CAACqJ,EAAK3J,GAAG,CAAC,CACvC5pC,EAAS,EAAGyzC,EAAc,EAC9BgG,EAAS/F,QAAQ,CAAC9/B,OAAO,CAAC,SAAU+/B,CAAK,EACrCF,GAAe,AAACE,CAAAA,EAAMF,WAAW,EAAI,CAAA,EAAK,EAC1CzzC,EAASxC,KAAKD,GAAG,CAAC,AAACo2C,CAAAA,EAAM3zC,MAAM,EAAI,CAAA,EAAK,EAAGA,EAC/C,GACAy5C,EAAShG,WAAW,CAAGA,EACvBgG,EAASz5C,MAAM,CAAGA,EACdy5C,EAASrE,SAAS,EAClBiE,EAAez0C,IAAI,CAAC60C,EAE5B,EAEAnG,OAAQ,SAAUC,CAAI,EAClB,IAOIkG,EAAU7P,EAPV3rB,EAAOkf,EAASoW,EAAKt1B,IAAI,CAAE,CAAA,GAC3Bs1B,EAAKt1B,IAAI,CACT,CAAC,EAAGnC,EAAO+8B,EAAS56B,EAAKnC,IAAI,EAAImC,EAAKnC,IAAI,CAAG,GAAIoc,EAAaohB,CAAa,CAAC/F,EAAKL,MAAM,CAAC,CAAEwG,EAAkBvc,EAASjF,EAAY,CAAA,GACjIgS,CAAkB,CAAChS,EAAW0R,GAAG,CAAC,CAClC,IAKA2P,CAAAA,GACApc,EAASuc,EAAgB,CAAA,IACtBD,CAAAA,EAAWvhC,EAAKwhC,EAAehG,QAAQ,CAPrB,SAAUn3C,CAAC,EAChC,OAAOA,EAAEuf,IAAI,GAAKA,CACtB,EAK2D,GAEvD8tB,EAAM6P,EAAS7P,GAAG,CAElB6P,EAASE,KAAK,CAAC/0C,IAAI,CAAC2uC,IAIpB3J,EAAM4P,IAGN,CAACtP,CAAkB,CAACN,EAAI,GACxBM,CAAkB,CAACN,EAAI,CAAG6P,EAAW,CACjCjG,MAAOkG,EAAiBA,EAAelG,KAAK,CAAG,EAAI,EACnD13B,KAAMA,EACNjQ,GAAIoS,EAAKpS,EAAE,CACX8tC,MAAO,CAACpG,EAAK,CACbG,SAAU,EAAE,CACZ9J,IAAKA,CACT,EAEY,KAARA,GACA3hC,EAAWrD,IAAI,CAACkX,GAGhBqhB,EAASuc,EAAgB,CAAA,IACzBA,EAAehG,QAAQ,CAAC9uC,IAAI,CAAC60C,IAIjCZ,EAAStF,EAAK1nC,EAAE,GAChBytC,CAAAA,CAAa,CAAC/F,EAAK1nC,EAAE,CAAC,CAAG0nC,CAAG,EAI5BkG,GACAx7B,AAAmB,CAAA,IAAnBA,EAAKm3B,SAAS,EACdqE,CAAAA,EAASrE,SAAS,CAAG,CAAA,CAAG,EAG5B7B,EAAK3J,GAAG,CAAGA,CACf,CACJ,GAmCA,OAlCwCtiC,EAgCK4iC,EAEtC,CACHjiC,WAAYA,EACZqxC,cAAeA,EACfpP,mBALJA,EALWkP,CA1BHA,EAAY,SAAUK,CAAQ,CAAE91B,CAAK,CAAEixB,CAAM,EAC7C,IAAI+E,EAAQF,EAASE,KAAK,CACtB/1B,EAAMD,EAASA,CAAAA,AAAU,KAAVA,EAAe,EAAIw1B,AA6BmBA,EA7BF,CAAA,EACnDvc,EAAO,AAAChZ,CAAAA,EAAMD,CAAI,EAAK,EAAGimB,EAAMjmB,EAAQiZ,EAqB5C,OApBA+c,EAAM/lC,OAAO,CAAC,SAAU2/B,CAAI,EACxB,IAAIt1B,EAAOs1B,EAAKt1B,IAAI,CAChBkf,EAASlf,EAAM,CAAA,KAEfA,EAAKzhB,CAAC,CAAGmnB,EAAS1F,CAAAA,EAAK27B,WAAW,EAAI,CAAA,EAEtC,OAAO37B,EAAK27B,WAAW,EAE3BrG,EAAK3J,GAAG,CAAGA,CACf,GACAgL,CAAM,CAAChL,EAAI,CAAG6P,EACdA,EAAS7P,GAAG,CAAGA,EACf6P,EAASrM,cAAc,CAAGxQ,EAfY,GAgBtC6c,EAAST,aAAa,CAAGp1B,EAhBa,GAiBtC61B,EAAS/F,QAAQ,CAAC9/B,OAAO,CAAC,SAAU+/B,CAAK,EACrCyF,EAAUzF,EAAO/vB,EAAM,EAAGgxB,GAC1BhxB,EAAM,AAAC+vB,CAAAA,EAAMoF,WAAW,EAAI,CAAA,EAnBM,EAoBtC,GAEAU,EAASV,WAAW,CAAGn1B,EAtBe,GAuB/BgxB,CACX,GACiBttC,CAAG,CAAC,KAAK,CAAE,GAAI,CAAC,GAWjC+xC,eAAgBA,EAChBzB,KAAMA,CACV,CACJ,CAQA,SAASiC,EAAehxC,CAAC,EAErBqZ,AAD6BjkB,AAAjB4K,EAAEixC,MAAM,CAAe53B,IAAI,CAClC3J,MAAM,CAAC,SAAUxU,CAAI,EACtB,MAAOA,AAAsB,aAAtBA,EAAKlG,OAAO,CAAC6B,IAAI,AAC5B,GAAGkU,OAAO,CAAC,SAAU7P,CAAI,EACrB,IAWwBka,EAAMgsB,EAX1BpsC,EAAUkG,EAAKlG,OAAO,EAAI,CAAC,EAAG42C,EAAe52C,EAAQuO,MAAM,CAAE8sC,EAAcr7C,EAAQq7C,WAAW,CAAE37C,EAAMM,EAAQN,GAAG,CAKrH8nC,EAAW,CAACthC,EAAKkmC,QAAQ,CAACC,kBAAkB,EACxCnmC,EAAK7F,MAAM,CAAC04B,IAAI,CAAC,SAAU14B,CAAM,EAC7B,MAAO,CAACA,EAAOyvC,WAAW,EACtBzvC,EAAO67C,WAAW,EAClB77C,EAAOmnC,OAAO,AACtB,GACA8T,EAAiB,EACrB,GAAI9T,EAAS,CA6BT,GA3BApnB,EAAOla,EAAK7F,MAAM,CAAC2iB,MAAM,CAAC,SAAUm5B,CAAG,CAAEj7B,CAAC,EAuBtC,OAtBIA,EAAEiB,OAAO,GAET,AAACjB,CAAAA,EAAElhB,OAAO,CAACogB,IAAI,EAAI,EAAE,AAAD,EAAGrK,OAAO,CAAC,SAAUqK,CAAI,EAErCc,EAAElhB,OAAO,CAACkf,IAAI,EAAIgC,EAAElhB,OAAO,CAACkf,IAAI,CAACxc,MAAM,GACvC0d,EAAOc,EAAE+e,UAAU,CAAC7gC,SAAS,CACxBg9C,eAAe,CACf70C,IAAI,CAAC,CAAElH,OAAQ6gB,CAAE,EAAGd,GACzBc,EAAE+e,UAAU,CAAC0F,oBAAoB,CAACvlB,IAElCkf,EAASlf,EAAM,CAAA,KAGfA,EAAK27B,WAAW,CAAIT,EACpBa,EAAIp1C,IAAI,CAACqZ,GAEjB,GAEoB,CAAA,IAAhBi7B,GACAC,KAGDa,CACX,EAAG,EAAE,EAGDz8C,GAAO0gB,EAAK1d,MAAM,CAAGhD,EACrB,IAAK,IAAIgK,EAAI0W,EAAK1d,MAAM,CAAEgH,GAAKhK,EAAKgK,IAChC0W,EAAKrZ,IAAI,CAAC,CAGNkX,KAAMvU,EAAI,GACd,GAKR0iC,EAAWgP,EAAoBh7B,EAAMi7B,GAAe,CAAA,EAAO,AAACA,AAAgB,CAAA,IAAhBA,EAAwBC,EAAiB,GAErGp1C,EAAKkE,UAAU,CAAGgiC,EAAShiC,UAAU,CACrClE,EAAKkmC,QAAQ,CAACC,kBAAkB,CAAID,EAASC,kBAAkB,CAC/DnmC,EAAKm2C,QAAQ,CAAG,CAAA,EAChBn2C,EAAKkmC,QAAQ,CAAC2N,IAAI,CAAG3N,EAAS2N,IAAI,CAElC7zC,EAAK7F,MAAM,CAAC0V,OAAO,CAAC,SAAU1V,CAAM,EAChC,IAAIi8C,EAAW,AAACj8C,CAAAA,EAAOL,OAAO,CAACogB,IAAI,EAAI,EAAE,AAAD,EAAG3W,GAAG,CAAC,SAAU/H,CAAC,EAatD,OAZIgH,EAAQhH,IACRrB,EAAOL,OAAO,CAACkf,IAAI,EACnB7e,EAAOL,OAAO,CAACkf,IAAI,CAACxc,MAAM,EAG1B0d,EAAKrK,OAAO,CAAC,SAAUzT,CAAK,EACpBZ,EAAE4F,OAAO,CAAChF,EAAM5D,CAAC,GAAK,GACtBgD,EAAE4F,OAAO,CAAChF,EAAMsiB,EAAE,GAAK,GACvBljB,CAAAA,EAAIY,CAAI,CAEhB,GAEGg9B,EAAS59B,EAAG,CAAA,GAAQnC,EAAMmC,GAAKA,CAC1C,EAEIrB,CAAAA,EAAO8hB,OAAO,EACd9hB,EAAO6jB,OAAO,CAACo4B,EAAU,CAAA,EAEjC,GAEAp2C,EAAKkmC,QAAQ,CAAC+M,iBAAiB,CAC3BK,EAAgB,CACZC,SAAU7C,EACV92C,KAAM,EACN65C,OAAQ/C,GAAgBA,EAAa+C,MAAM,CAC3C55C,GAAImG,EAAKkmC,QAAQ,CAAC2N,IAAI,EAAI7zC,EAAKkmC,QAAQ,CAAC2N,IAAI,CAAC53C,MAAM,AACvD,GAEW,iBAAX6I,EAAEnJ,IAAI,EACNqE,CAAAA,EAAKkmC,QAAQ,CAACoP,cAAc,CAAGpP,EAASoP,cAAc,AAAD,CAE7D,CACJ,EACJ,CAaA,SAASe,EAAiB9P,CAAO,CAAEV,CAAG,EAClC,IACuByQ,EAAcx8C,EAAS47C,EAD7BzC,EAAoBjzC,AAA1B,IAAI,CAA2BkmC,QAAQ,CAAC+M,iBAAiB,EAAI,CAAC,EAAGrC,EAAa5wC,AAAsB,aAAtBA,AAA9E,IAAI,CAA+ElG,OAAO,CAAC6B,IAAI,CAAiBgqC,EAAQ3lC,AAAxH,IAAI,CAAyH2lC,KAAK,CACzIG,EAAOH,CAAK,CAACE,EAAI,AACjB+K,CAAAA,GACA5wC,AAHO,IAAI,CAGNkmC,QAAQ,CAACC,kBAAkB,EAEhCmQ,CAAAA,EAAerD,CAAiB,CAACyC,AADjCA,CAAAA,EAAW11C,AAJJ,IAAI,CAIKkmC,QAAQ,CAACC,kBAAkB,CAACN,EAAI,AAAD,EACL4J,KAAK,CAAC,AAAD,GAE3C31C,CAAAA,EAAU,CACNuO,OAAQiuC,CACZ,CAAA,EAEA,CAACxQ,GACD+O,EACAlP,CAAK,CAACE,EAAI,CAAGC,EACT,IAAI+O,EAdL,IAAI,CAcuBhP,EAAK,KAAK,EAAG,KAAK,EAAG,CAC3CnL,SAAUgb,EAAS39B,IAAI,CACvBsxB,eAAgBqM,EAASrM,cAAc,CACvCvvC,QAASA,CACb,IAIJgsC,EAAKyQ,UAAU,CAAC7b,QAAQ,CAAGgb,EAAS39B,IAAI,CACxC+tB,EAAKhsC,OAAO,CAAGA,EACfgsC,EAAK0Q,QAAQ,KAIjBjQ,EAAQzuC,KAAK,CA5BN,IAAI,CA4BSmK,MAAM/I,SAAS,CAACmjB,KAAK,CAAChb,IAAI,CAACsB,UAAW,GAElE,CAIA,SAAS8zC,EAASlQ,CAAO,CAAErsC,CAAK,CAAE0I,CAAW,CAAEwb,CAAI,EAC/C,IAAIpe,EAAO,IAAI,CAAE4wC,EAAahuC,AAAqB,aAArBA,EAAYjH,IAAI,AACzCqE,CAAAA,EAAKkmC,QAAQ,EACdlmC,CAAAA,EAAKkmC,QAAQ,CAAG,IAAIwQ,EAAsB12C,EAAI,EAG9C4wC,IAGAnxC,EAASvF,EAAO,eAAgB47C,GAChCr2C,EAASvF,EAAO,eAAgB47C,GAEhCr2C,EAASvF,EAAO,YAAa,SAAU4K,CAAC,EACpC,GAAIA,EAAEhL,OAAO,CAACogB,IAAI,CAAE,CAChB,IAAIgsB,EAAWgP,EAAoBpwC,EAAEhL,OAAO,CAACogB,IAAI,CAAEtX,EAAYuyC,WAAW,EAAI,CAAA,EAAO,EACrFn1C,CAAAA,EAAKkmC,QAAQ,CAACoP,cAAc,CAAG,AAACt1C,CAAAA,EAAKkmC,QAAQ,CAACoP,cAAc,EAAI,EAAE,AAAD,EAAGh2C,MAAM,CAAC4mC,EAASoP,cAAc,CACtG,CACJ,GAGA71C,EAASO,EAAM,gBAAiB,WACxBA,EAAKkmC,QAAQ,CAACoP,cAAc,EAC5Bt1C,EAAKkmC,QAAQ,CAACoP,cAAc,CAACzlC,OAAO,CAAC,SAAU2/B,CAAI,EAC/C,IAAI51B,EAAS5Z,EAAKkmC,QAAQ,CAACyM,QAAQ,CAACnD,EAChCxvC,CAAAA,EAAK04B,UAAU,GACf14B,EAAK04B,UAAU,CAACmI,SAAS,CAACjnB,EAAQ,CAAA,GAE9B5Z,EAAKkmC,QAAQ,CAACoP,cAAc,EAC5Bt1C,CAAAA,EAAKkmC,QAAQ,CAACoP,cAAc,CAAGt1C,EAAKkmC,QAAQ,CACvCoP,cAAc,CACd9gC,MAAM,CAAC,SAAUmiC,CAAC,EAAI,OAAQ,AAACnH,EAAKyF,aAAa,GAClD0B,EAAE1B,aAAa,EACfzF,EAAKwF,WAAW,GAAK2B,EAAE3B,WAAW,AAAG,EAAC,EAGtD,EAER,GAIAv1C,EAASO,EAAM,cAAe,WACR,UAAdA,EAAKoe,IAAI,EACT,CAACpe,EAAKgE,WAAW,EACjBhE,EAAK9F,KAAK,CAACJ,OAAO,CAACI,KAAK,CAAC+B,MAAM,EAC/B+D,CAAAA,EAAKshC,OAAO,CAAG,CAAA,CAAG,CAE1B,GACA1+B,EAAcvJ,EAAM,CAEhBuK,KAAM,CACFrH,QAAS,CAAA,CACb,EAEA8L,OAAQ,CACJC,MAAO,OAcPmrC,OAAQ,CAAC,CAWDrE,MAAO,KAAK,CAChB,EAAG,CACCA,MAAO,EAQPjvC,MAAO,CAEHy2C,WAAY,MAChB,CACJ,EAAE,CAUN95C,OAAQ,CASJnB,KAAM,WACNnD,EAAG,GACHC,EAAG,GACHwD,OAAQ,GACRD,MAAO,EACX,CACJ,EACAm5C,YAAa,CAAA,CACjB,EAAGvyC,EAAa,CAEZqB,SAAU,CAAA,CACd,IAIJsiC,EAAQzuC,KAAK,CAACkI,EAAM,CAAC9F,EAAO0I,EAAawb,EAAK,EAC1CwyB,IACA5wC,EAAKm2C,QAAQ,CAAG,CAAA,EAChBn2C,EAAKlG,OAAO,CAACmuC,aAAa,CAAG,CAAA,EAErC,CAUA,SAAS4O,EAAoBtQ,CAAO,EAEhC,IADI9iC,EACa3J,EAAUkG,AAAhB,IAAI,CAAiBlG,OAAO,CAAE+vC,EAAe,AAA4B,UAA5B,OAAO/vC,EAAQiK,QAAQ,CAC3E,AAAiC,OAAhCN,CAAAA,EAAK,IAAI,CAACvJ,KAAK,CAAC8F,AADV,IAAI,CACWoe,IAAI,CAAC,AAAD,GAAe3a,AAAO,KAAK,IAAZA,EAAgB,KAAK,EAAIA,CAAE,CAAC3J,EAAQiK,QAAQ,CAAC,CACtF,KAAK,EACT,GADyBjK,AAAiB,aAAjBA,EAAQ6B,IAAI,CACrB,CAYZ,GAXAqE,AAJO,IAAI,CAINtG,GAAG,CAAG+K,EAAKzE,AAJT,IAAI,CAIU2d,OAAO,CAAE7jB,EAAQJ,GAAG,CAAEsG,AAJpC,IAAI,CAIqCqG,OAAO,EACvDrG,AALO,IAAI,CAKNxG,GAAG,CAAGiL,EAAKzE,AALT,IAAI,CAKU4d,OAAO,CAAE9jB,EAAQN,GAAG,CAAEwG,AALpC,IAAI,CAKqCsG,OAAO,EACvD6I,EANO,IAAI,CAMK,iBAGhBnP,AATO,IAAI,CASNskC,kBAAkB,GACvBtkC,AAVO,IAAI,CAUN44B,YAAY,CAAG,EACpB54B,AAXO,IAAI,CAWNqpC,cAAc,CAAG,GACtBrpC,AAZO,IAAI,CAYNghC,aAAa,CAAGhhC,AAZd,IAAI,CAYekmC,QAAQ,CAACC,kBAAkB,CACjDnmC,AAbG,IAAI,CAaFkmC,QAAQ,CAAC4Q,gBAAgB,GAC9B,EAAE,CACFjN,EAAc,CACd,IAAIkN,EAAuBlN,EAAar+B,WAAW,EACnDxL,CAjBG,IAAI,CAiBFtG,GAAG,CAAG+K,EAAKsyC,EAAqBr9C,GAAG,CAAEq9C,EAAqB1wC,OAAO,EACtErG,AAlBG,IAAI,CAkBFxG,GAAG,CAAGiL,EAAKsyC,EAAqBv9C,GAAG,CAAEu9C,EAAqBzwC,OAAO,EACtEtG,AAnBG,IAAI,CAmBFghC,aAAa,CAAG6I,EAAa7I,aAAa,AACnD,CACAhhC,AArBO,IAAI,CAqBN6pC,YAAY,CAAGA,CACxB,MAEItD,EAAQzuC,KAAK,CAxBN,IAAI,CAwBSmK,MAAM/I,SAAS,CAACmjB,KAAK,CAAChb,IAAI,CAACsB,UAAW,GAElE,CAUA,SAASq0C,EAAWzQ,CAAO,EACvB,IAAIvmC,EAAO,IAAI,AAAwD,CAAA,aAAjBlG,AAA3BkG,EAAKlG,OAAO,CAAuB6B,IAAI,EAChDqE,EAAKic,OAAO,EAC1Bjc,EAAKghC,aAAa,CAACnxB,OAAO,CAAC,SAAUg2B,CAAG,EACpC,IAAIC,EAAO9lC,EAAK2lC,KAAK,CAACE,EAAI,AACtBC,CAAAA,EAAKlmC,KAAK,EAAIkmC,EAAKlmC,KAAK,CAAC2yC,sBAAsB,GAC/CnjC,EAAY02B,EAAKlmC,KAAK,CAAC0Q,OAAO,EAC9Bw1B,EAAKlmC,KAAK,CAAC2yC,sBAAsB,CAAG,CAAA,EAE5C,GAEJhM,EAAQzuC,KAAK,CAACkI,EAAMiC,MAAM/I,SAAS,CAACmjB,KAAK,CAAChb,IAAI,CAACsB,UAAW,GAC9D,CAUA,IAAI+zC,EAAuC,WASvC,SAASA,EAAsB12C,CAAI,EAC/B,IAAI,CAACA,IAAI,CAAGA,CAChB,CAqLA,OA5KA02C,EAAsB39C,OAAO,CAAG,SAAUuI,CAAS,CAAEuK,CAAU,CAAEE,CAAW,CAAE8iC,CAAS,EACnF,GAAIv2C,EAAWD,EAAU,IAAI,CAACU,OAAO,EAAG,CACpC,IAAIk+C,EAAY31C,EAAUpI,SAAS,AACa,CAAA,KAA5CoI,EAAUqE,SAAS,CAACvE,OAAO,CAAC,aAC5BE,EAAUqE,SAAS,CAAC9E,IAAI,CAAC,YAE7BnB,EAAKu3C,EAAW,eAAgBZ,GAChC32C,EAAKu3C,EAAW,OAAQR,GACxB/2C,EAAKu3C,EAAW,kBAAmBJ,GACnCn3C,EAAKu3C,EAAW,SAAUD,GAE1BC,EAAUC,KAAK,CAAG,CACdhI,QAASwF,EAAKxF,OAAO,AACzB,EACK2F,GACDA,CAAAA,EAAkBhG,CAAQ,CAElC,CAIA,OAHA4F,EAAS17C,OAAO,CAACuI,EAAWuK,EAAYgjC,GACxCjO,EAAW7nC,OAAO,CAACuI,EAAWyK,GAC9B4oC,EAAa57C,OAAO,CAAC81C,GACdvtC,CACX,EAiBAo1C,EAAsBx9C,SAAS,CAACi+C,kBAAkB,CAAG,SAAU3H,CAAI,EAC/D,IAAIxvC,EAAO,IAAI,CAACA,IAAI,CAAE9F,EAAQ8F,EAAK9F,KAAK,CACxC8F,EAAK7F,MAAM,CAAC0V,OAAO,CAAC,SAAU1V,CAAM,EAChC,IAAI+f,EAAO/f,EAAOL,OAAO,CAACogB,IAAI,CAC9B,GAAIs1B,EAAK1nC,EAAE,EAAIoS,EAAM,CACjB,IAAI9d,EAAQlC,EAAM8M,GAAG,CAACwoC,EAAK1nC,EAAE,EAAGsvC,EAAYl9B,CAAI,CAAC/f,EAAO+f,IAAI,CAAC9Y,OAAO,CAAChF,GAAO,CACxEA,GAASg7C,IACTh7C,EAAMi1C,SAAS,CAAG7B,EAAK6B,SAAS,CAChC+F,EAAU/F,SAAS,CAAG7B,EAAK6B,SAAS,CAE5C,CACJ,EACJ,EAkBAqF,EAAsBx9C,SAAS,CAACy5C,QAAQ,CAAG,SAAUnD,CAAI,EACrD,IAAIxvC,EAAO,IAAI,CAACA,IAAI,CAAE4Z,EAAU5Z,EAAKlG,OAAO,CAAC8f,MAAM,EAAI,EAAE,CAAGniB,EAAMs9C,EAAiBvF,EAAMxvC,EAAKxG,GAAG,EAKjG,OAJAogB,EAAO/Y,IAAI,CAACpJ,GAEZ+3C,EAAK6B,SAAS,CAAG,CAAA,EACjBrxC,EAAKkmC,QAAQ,CAACiR,kBAAkB,CAAC3H,GAC1B51B,CACX,EAkBA88B,EAAsBx9C,SAAS,CAAC05C,MAAM,CAAG,SAAUpD,CAAI,EACnD,IAAIxvC,EAAO,IAAI,CAACA,IAAI,CAAE4Z,EAAU5Z,EAAKlG,OAAO,CAAC8f,MAAM,EAAI,EAAE,CAAGniB,EAAMs9C,EAAiBvF,EAAMxvC,EAAKxG,GAAG,EAKjG,OAHAg2C,EAAK6B,SAAS,CAAG,CAAA,EACjBrxC,EAAKkmC,QAAQ,CAACiR,kBAAkB,CAAC3H,GAE1B51B,EAAOkD,MAAM,CAAC,SAAUm5B,CAAG,CAAEp0C,CAAC,EAIjC,MAHIA,CAAAA,EAAEhI,EAAE,GAAKpC,EAAIoC,EAAE,EAAIgI,EAAEjI,IAAI,GAAKnC,EAAImC,IAAI,AAAD,GACrCq8C,EAAIp1C,IAAI,CAACgB,GAENo0C,CACX,EAAG,EAAE,CACT,EAUAS,EAAsBx9C,SAAS,CAAC49C,gBAAgB,CAAG,WAC/C,IAAI92C,EAAO,IAAI,CAACA,IAAI,CAAEq3C,EAAa59C,KAAK+Z,KAAK,CAACxT,EAAKtG,GAAG,CAAGsG,EAAK44B,YAAY,EAAI54B,EAAK44B,YAAY,CAAE0e,EAAa79C,KAAK2F,IAAI,CAACY,EAAKxG,GAAG,CAAGwG,EAAK44B,YAAY,EAAI54B,EAAK44B,YAAY,CACzK,OAAO92B,OAAOkX,IAAI,CAAChZ,EAAKkmC,QAAQ,CAACC,kBAAkB,EAAI,CAAC,GAAGrpB,MAAM,CAAC,SAAUm5B,CAAG,CAAEhe,CAAG,EAChF,IAAI4N,EAAM,CAAC5N,EAMX,OALI4N,GAAOwR,GACPxR,GAAOyR,GACP,CAAEt3C,CAAAA,EAAK04B,UAAU,EAAI14B,EAAK04B,UAAU,CAACyI,YAAY,CAAC0E,EAAG,GACrDoQ,EAAIp1C,IAAI,CAACglC,GAENoQ,CACX,EAAG,EAAE,CACT,EAkBAS,EAAsBx9C,SAAS,CAACk+B,WAAW,CAAG,SAAUoY,CAAI,EACxD,IAAIxvC,EAAO,IAAI,CAACA,IAAI,CAAE4Z,EAAU5Z,EAAKlG,OAAO,CAAC8f,MAAM,EAAI,EAAE,CAAGniB,EAAMs9C,EAAiBvF,EAAMxvC,EAAKxG,GAAG,EACjG,OAAOogB,EAAOiZ,IAAI,CAAC,SAAUhxB,CAAC,EAC1B,OAAOA,EAAEjI,IAAI,GAAKnC,EAAImC,IAAI,EAAIiI,EAAEhI,EAAE,GAAKpC,EAAIoC,EAAE,AACjD,EACJ,EAiBA68C,EAAsBx9C,SAAS,CAACu5C,cAAc,CAAG,SAAUjD,CAAI,EAC3D,OAAQ,IAAI,CAACpY,WAAW,CAACoY,GACrB,IAAI,CAACoD,MAAM,CAACpD,GACZ,IAAI,CAACmD,QAAQ,CAACnD,EACtB,EACOkH,CACX,IAOA,OAAOA,CACX,GACAl/C,EAAgBD,EAAU,8BAA+B,CAACA,CAAQ,CAAC,6BAA6B,CAAEA,CAAQ,CAAC,sCAAsC,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,4BAA4B,CAAEA,CAAQ,CAAC,qCAAqC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUioC,CAAU,CAAE+X,CAAmB,CAAErxB,CAAU,CAAE1f,CAAc,CAAEgxC,CAAW,CAAEC,CAAY,CAAEr/C,CAAC,EAYrb,IACQsJ,EADJE,EAAY,AAAC,IAAI,EAAI,IAAI,CAACA,SAAS,GAC/BF,EAAgB,SAAUlG,CAAC,CAAEqG,CAAC,EAI9B,MAAOH,AAHPA,CAAAA,EAAgBI,OAAOC,cAAc,EAChC,CAAA,CAAEC,UAAW,EAAE,AAAC,CAAA,YAAaC,OAAS,SAAUzG,CAAC,CAAEqG,CAAC,EAAIrG,EAAEwG,SAAS,CAAGH,CAAG,GAC1E,SAAUrG,CAAC,CAAEqG,CAAC,EAAI,IAAK,IAAIK,KAAKL,EAAOC,OAAO5I,SAAS,CAACrB,cAAc,CAACwJ,IAAI,CAACQ,EAAGK,IAAI1G,CAAAA,CAAC,CAAC0G,EAAE,CAAGL,CAAC,CAACK,EAAE,AAAD,CAAG,CAAA,EAC/E1G,EAAGqG,EAC5B,EACO,SAAUrG,CAAC,CAAEqG,CAAC,EACjB,GAAI,AAAa,YAAb,OAAOA,GAAoBA,AAAM,OAANA,EAC3B,MAAM,AAAIM,UAAU,uBAAyBC,OAAOP,GAAK,iCAE7D,SAASQ,IAAO,IAAI,CAACC,WAAW,CAAG9G,CAAG,CADtCkG,EAAclG,EAAGqG,GAEjBrG,EAAEtC,SAAS,CAAG2I,AAAM,OAANA,EAAaC,OAAOS,MAAM,CAACV,GAAMQ,CAAAA,EAAGnJ,SAAS,CAAG2I,EAAE3I,SAAS,CAAE,IAAImJ,CAAG,CACtF,GAEAq1C,EAASlxC,EAAerM,MAAM,CAAEkhC,EAAe70B,EAAeE,WAAW,CAAC64B,MAAM,CAChF91B,EAASrR,EAAEqR,MAAM,CAAEjF,EAAWpM,EAAEoM,QAAQ,CAAEnL,EAAQjB,EAAEiB,KAAK,CAazDs+C,EAA6B,SAAUj1C,CAAM,EAE7C,SAASi1C,IACL,OAAOj1C,AAAW,OAAXA,GAAmBA,EAAO5K,KAAK,CAAC,IAAI,CAAE6K,YAAc,IAAI,AACnE,CAqGA,OAxGAf,EAAU+1C,EAAaj1C,GASvBi1C,EAAY5+C,OAAO,CAAG,SAAUuI,CAAS,CAAEuK,CAAU,CAAEE,CAAW,CAAE8iC,CAAS,EACzExT,EAAatiC,OAAO,CAACuI,GAChBuK,IAGL2rC,EAAYz+C,OAAO,CAACuI,EAAWuK,GAC1BE,KAGLma,EAAWntB,OAAO,CAAC8S,EAAYE,EAAY7S,SAAS,CAAC6gC,UAAU,EAC1D8U,GAGL4I,EAAa1+C,OAAO,CAACuI,EAAWuK,EAAYE,EAAa8iC,GAC7D,EAuBA8I,EAAYz+C,SAAS,CAACkhC,SAAS,CAAG,SAAUh+B,CAAK,CAAEuY,CAAI,EACnD,IAC6BijC,EADV/Z,EAAa1jC,AAAnB,IAAI,CAAsBL,OAAO,CAAEe,EAAWV,AAA9C,IAAI,CAAiDD,KAAK,CAACW,QAAQ,CAAE8oB,EAAYvnB,EAAMunB,SAAS,CAAEK,EAAQ5nB,EAAM4nB,KAAK,CAAEgL,EAAQ5yB,EAAMmtB,QAAQ,EAAI,SAAUsuB,EAASha,EAAWpiB,QAAQ,EAAI,CAACoiB,EAAWjE,YAAY,CAC5N/V,EAAUznB,EAAMynB,OAAO,AACvBznB,CAAAA,EAAMtC,OAAO,CAACgmC,SAAS,CACnBt7B,EAASwf,IACT5nB,AAAY,OAAZA,EAAM3D,CAAC,EACP2D,AAAkB,CAAA,IAAlBA,EAAM6f,OAAO,EACb27B,EAAe/8C,EAAS5B,OAAO,CAAC6+C,OAAO,CAACn0B,EAAUnrB,CAAC,EAAI,EAAGmrB,EAAUlrB,CAAC,EAAI,EAAGkrB,EAAU3nB,KAAK,EAAI,EAAG2nB,EAAU1nB,MAAM,EAAI,GAClH4nB,EACAA,CAAO,CAAClP,EAAK,CAAC,CACVnZ,EAAGo8C,CACP,GAGAx7C,EAAMynB,OAAO,CAAGA,EAAUhpB,EAASnD,IAAI,CAACkgD,GACnC78C,QAAQ,CAACqB,EAAMkiC,YAAY,GAAI,CAAA,GAC/BpjC,GAAG,CAACkB,EAAMxB,KAAK,EAAIT,AAfvB,IAAI,CAe0BS,KAAK,EAGnCT,AAlBA,IAAI,CAkBGD,KAAK,CAACK,UAAU,EACxB6B,EAAMynB,OAAO,CACR7oB,IAAI,CAACb,AApBT,IAAI,CAoBYgkC,YAAY,CAAC/hC,EAAO4yB,IAChC0P,MAAM,CAACb,EAAWa,MAAM,CAAE,KAAMmZ,IAGpCh0B,GACLznB,CAAAA,EAAMynB,OAAO,CAAGA,EAAQtkB,OAAO,EAAC,EAIpCmD,EAAOxJ,SAAS,CAACkhC,SAAS,CAAC/4B,IAAI,CAAC,IAAI,CAAEjF,EAAOuY,EAErD,EAKAgjC,EAAYz+C,SAAS,CAACmjC,cAAc,CAAG,SAAUjgC,CAAK,EAElD,IAAIunB,EAAW9W,EACfnK,EAAOxJ,SAAS,CAACmjC,cAAc,CAACh7B,IAAI,CAAC,IAAI,CAAEjF,GACvCA,EAAMtC,OAAO,CAACgmC,SAAS,GAEvBjzB,EAAO8W,AADPA,CAAAA,EAAYvnB,EAAMunB,SAAS,AAAD,EACT1nB,MAAM,EAAI,EAC3BG,EAAMunB,SAAS,CAAG,CACdnrB,EAAG,AAACmrB,CAAAA,EAAUnrB,CAAC,EAAI,CAAA,EAAMqU,EAAO,EAChCpU,EAAGkrB,EAAUlrB,CAAC,CACduD,MAAO6Q,EACP5Q,OAAQ4Q,CACZ,EAER,EAMA8qC,EAAYh4C,cAAc,CAAGtG,EAAMgiC,EAAa17B,cAAc,CAAE43C,GACzDI,CACX,EAAEtc,GAaF,OAZA5xB,EAAOkuC,EAAYz+C,SAAS,CAAE,CAC1B8lC,cAAe,CAAC,QAAS,MAAO,IAAI,CACpCjF,WAAYyF,EACZxhB,QAAS05B,EAAOx+C,SAAS,CAAC8kB,OAAO,AACrC,GACAxX,EAAe84B,kBAAkB,CAAC,QAASqY,GAOpCA,CACX,GACAngD,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,6BAA6B,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,sCAAsC,CAAEA,CAAQ,CAAC,2BAA2B,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,4BAA4B,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,8BAA8B,CAAC,CAAE,SAAUF,CAAU,CAAE0gD,CAAY,CAAEp+C,CAAU,CAAEq+C,CAAqB,CAAEr2C,CAAU,CAAE8S,CAAS,CAAEyR,CAAU,CAAEoG,CAAa,CAAEngB,CAAS,CAAEqrC,CAAW,CAAEnc,CAAY,CAAEsc,CAAW,EAKjsBM,AAFQ5gD,EAENsC,UAAU,CAAGA,EACfs+C,AAHQ5gD,EAGNsK,UAAU,CAAGA,EACfs2C,AAJQ5gD,EAIN8M,UAAU,CAAGxC,EAAWwC,UAAU,CACpC8zC,AALQ5gD,EAKNod,SAAS,CAAGA,EACdwjC,AANQ5gD,EAMN6uB,UAAU,CAAGA,EACf+xB,AAPQ5gD,EAONi1B,aAAa,CAAGA,EAClB2rB,AARQ5gD,EAQN8U,SAAS,CAAGA,EAEd4rC,EAAah/C,OAAO,CAACk/C,AAVb5gD,EAUe6gD,WAAW,EAClCF,EAAsBj/C,OAAO,CAACk/C,AAXtB5gD,EAWwB0c,IAAI,CAAEkkC,AAX9B5gD,EAWgC8gD,cAAc,EACtDR,EAAY5+C,OAAO,CAACk/C,AAZZ5gD,EAYc0c,IAAI,CAAEkkC,AAZpB5gD,EAYsBmK,KAAK,CAAEy2C,AAZ7B5gD,EAY+BqgD,MAAM,CAAEO,AAZvC5gD,EAYyC+gD,IAAI,EACrD3jC,EAAU1b,OAAO,CAACk/C,AAbV5gD,EAaY0c,IAAI,CAAEkkC,AAblB5gD,EAaoBmK,KAAK,CAAEy2C,AAb3B5gD,EAa6BqgD,MAAM,EAC3CxxB,EAAWntB,OAAO,CAACk/C,AAdX5gD,EAcamK,KAAK,CAAEy2C,AAdpB5gD,EAcsB4uB,KAAK,EACnCqG,EAAcvzB,OAAO,CAACk/C,AAfd5gD,EAegB0c,IAAI,CAAEkkC,AAftB5gD,EAewBmK,KAAK,EACrC2K,EAAUpT,OAAO,CAACk/C,AAhBV5gD,EAgBY0c,IAAI,EACxBsnB,EAAatiC,OAAO,CAACk/C,AAjBb5gD,EAiBe0c,IAAI,EAC3ByjC,EAAYz+C,OAAO,CAACk/C,AAlBZ5gD,EAkBc0c,IAAI,CAAEkkC,AAlBpB5gD,EAkBsBmK,KAAK,CAEvC,EACJ"}