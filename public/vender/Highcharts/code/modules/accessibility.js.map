{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.3.0 (2024-01-10)\n *\n * Accessibility module\n *\n * (c) 2010-2024 Highsoft AS\n * Author: Oystein Moseng\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/accessibility', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Accessibility/Utils/HTMLUtilities.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Utility functions for accessibility module.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc, win } = H;\n        const { css } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const simulatedEventTarget = win.EventTarget && new win.EventTarget() || 'none';\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         * @param {Highcharts.HTMLDOMElement} el\n         * @param {string} className\n         * @return {void}\n         */\n        function addClass(el, className) {\n            if (el.classList) {\n                el.classList.add(className);\n            }\n            else if (el.className.indexOf(className) < 0) {\n                // Note: Dumb check for class name exists, should be fine for practical\n                // use cases, but will return false positives if the element has a class\n                // that contains the className.\n                el.className += ' ' + className;\n            }\n        }\n        /**\n         * @private\n         * @param {Highcharts.HTMLDOMElement} el\n         * @param {string} className\n         * @return {void}\n         */\n        function removeClass(el, className) {\n            if (el.classList) {\n                el.classList.remove(className);\n            }\n            else {\n                // Note: Dumb logic that will break if the element has a class name that\n                // consists of className plus something else.\n                el.className = el.className.replace(new RegExp(className, 'g'), '');\n            }\n        }\n        /**\n         * Utility function to clone a mouse event for re-dispatching.\n         * @private\n         */\n        function cloneMouseEvent(e) {\n            if (typeof win.MouseEvent === 'function') {\n                return new win.MouseEvent(e.type, e);\n            }\n            // No MouseEvent support, try using initMouseEvent\n            if (doc.createEvent) {\n                const evt = doc.createEvent('MouseEvent');\n                if (evt.initMouseEvent) {\n                    evt.initMouseEvent(e.type, e.bubbles, // #10561, #12161\n                    e.cancelable, e.view || win, e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey, e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n                    return evt;\n                }\n            }\n            return getFakeMouseEvent(e.type);\n        }\n        /**\n         * Utility function to clone a touch event for re-dispatching.\n         * @private\n         */\n        function cloneTouchEvent(e) {\n            const touchListToTouchArray = (l) => {\n                const touchArray = [];\n                for (let i = 0; i < l.length; ++i) {\n                    const item = l.item(i);\n                    if (item) {\n                        touchArray.push(item);\n                    }\n                }\n                return touchArray;\n            };\n            if (typeof win.TouchEvent === 'function') {\n                const newEvent = new win.TouchEvent(e.type, {\n                    touches: touchListToTouchArray(e.touches),\n                    targetTouches: touchListToTouchArray(e.targetTouches),\n                    changedTouches: touchListToTouchArray(e.changedTouches),\n                    ctrlKey: e.ctrlKey,\n                    shiftKey: e.shiftKey,\n                    altKey: e.altKey,\n                    metaKey: e.metaKey,\n                    bubbles: e.bubbles,\n                    cancelable: e.cancelable,\n                    composed: e.composed,\n                    detail: e.detail,\n                    view: e.view\n                });\n                if (e.defaultPrevented) {\n                    newEvent.preventDefault();\n                }\n                return newEvent;\n            }\n            const fakeEvt = cloneMouseEvent(e);\n            fakeEvt.touches = e.touches;\n            fakeEvt.changedTouches = e.changedTouches;\n            fakeEvt.targetTouches = e.targetTouches;\n            return fakeEvt;\n        }\n        /**\n         * @private\n         */\n        function escapeStringForHTML(str) {\n            return str\n                .replace(/&/g, '&amp;')\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;')\n                .replace(/\"/g, '&quot;')\n                .replace(/'/g, '&#x27;')\n                .replace(/\\//g, '&#x2F;');\n        }\n        /**\n         * Get an element by ID\n         * @private\n         */\n        function getElement(id) {\n            return doc.getElementById(id);\n        }\n        /**\n         * Get a fake mouse event of a given type. If relatedTarget is not given,\n         * it will point to simulatedEventTarget, as an indicator that the event\n         * is fake.\n         * @private\n         */\n        function getFakeMouseEvent(type, position, relatedTarget) {\n            const pos = position || {\n                x: 0,\n                y: 0\n            };\n            if (typeof win.MouseEvent === 'function') {\n                return new win.MouseEvent(type, {\n                    bubbles: true,\n                    cancelable: true,\n                    composed: true,\n                    button: 0,\n                    buttons: 1,\n                    relatedTarget: relatedTarget || simulatedEventTarget,\n                    view: win,\n                    detail: type === 'click' ? 1 : 0,\n                    screenX: pos.x,\n                    screenY: pos.y,\n                    clientX: pos.x,\n                    clientY: pos.y\n                });\n            }\n            // No MouseEvent support, try using initMouseEvent\n            if (doc.createEvent) {\n                const evt = doc.createEvent('MouseEvent');\n                if (evt.initMouseEvent) {\n                    evt.initMouseEvent(type, true, // Bubble\n                    true, // Cancel\n                    win, // View\n                    type === 'click' ? 1 : 0, // Detail\n                    // Coords\n                    pos.x, pos.y, pos.x, pos.y, \n                    // Pressed keys\n                    false, false, false, false, 0, // button\n                    null // related target\n                    );\n                    return evt;\n                }\n            }\n            return { type: type };\n        }\n        /**\n         * Get an appropriate heading level for an element. Corresponds to the\n         * heading level below the previous heading in the DOM.\n         *\n         * Note: Only detects previous headings in the DOM that are siblings,\n         * ancestors, or previous siblings of ancestors. Headings that are nested below\n         * siblings of ancestors (cousins et.al) are not picked up. This is because it\n         * is ambiguous whether or not the nesting is for layout purposes or indicates a\n         * separate section.\n         *\n         * @private\n         * @param {Highcharts.HTMLDOMElement} [element]\n         * @return {string} The heading tag name (h1, h2 etc).\n         * If no nearest heading is found, \"p\" is returned.\n         */\n        function getHeadingTagNameForElement(element) {\n            const getIncreasedHeadingLevel = (tagName) => {\n                const headingLevel = parseInt(tagName.slice(1), 10), newLevel = Math.min(6, headingLevel + 1);\n                return 'h' + newLevel;\n            };\n            const isHeading = (tagName) => /H[1-6]/.test(tagName);\n            const getPreviousSiblingsHeading = (el) => {\n                let sibling = el;\n                while (sibling = sibling.previousSibling) { // eslint-disable-line\n                    const tagName = sibling.tagName || '';\n                    if (isHeading(tagName)) {\n                        return tagName;\n                    }\n                }\n                return '';\n            };\n            const getHeadingRecursive = (el) => {\n                const prevSiblingsHeading = getPreviousSiblingsHeading(el);\n                if (prevSiblingsHeading) {\n                    return getIncreasedHeadingLevel(prevSiblingsHeading);\n                }\n                // No previous siblings are headings, try parent node\n                const parent = el.parentElement;\n                if (!parent) {\n                    return 'p';\n                }\n                const parentTagName = parent.tagName;\n                if (isHeading(parentTagName)) {\n                    return getIncreasedHeadingLevel(parentTagName);\n                }\n                return getHeadingRecursive(parent);\n            };\n            return getHeadingRecursive(element);\n        }\n        /**\n         * Remove an element from the DOM.\n         * @private\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} [element]\n         * @return {void}\n         */\n        function removeElement(element) {\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n            }\n        }\n        /**\n         * Remove all child nodes from an element.\n         * @private\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} [element]\n         * @return {void}\n         */\n        function removeChildNodes(element) {\n            while (element.lastChild) {\n                element.removeChild(element.lastChild);\n            }\n        }\n        /**\n         * Utility function. Reverses child nodes of a DOM element.\n         * @private\n         */\n        function reverseChildNodes(node) {\n            let i = node.childNodes.length;\n            while (i--) {\n                node.appendChild(node.childNodes[i]);\n            }\n        }\n        /**\n         * Used for aria-label attributes, painting on a canvas will fail if the\n         * text contains tags.\n         * @private\n         */\n        function stripHTMLTagsFromString(str, isForExport = false) {\n            return (typeof str === 'string') ?\n                (isForExport ?\n                    str.replace(/<\\/?[^>]+(>|$)/g, '') :\n                    str.replace(/<\\/?(?!\\s)[^>]+(>|$)/g, '')) : str;\n        }\n        /**\n         * Utility function for hiding an element visually, but still keeping it\n         * available to screen reader users.\n         * @private\n         */\n        function visuallyHideElement(element) {\n            css(element, {\n                position: 'absolute',\n                width: '1px',\n                height: '1px',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                clip: 'rect(1px, 1px, 1px, 1px)',\n                marginTop: '-3px',\n                '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=1)',\n                filter: 'alpha(opacity=1)',\n                opacity: 0.01\n            });\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const HTMLUtilities = {\n            addClass,\n            cloneMouseEvent,\n            cloneTouchEvent,\n            escapeStringForHTML,\n            getElement,\n            getFakeMouseEvent,\n            getHeadingTagNameForElement,\n            removeChildNodes,\n            removeClass,\n            removeElement,\n            reverseChildNodes,\n            simulatedEventTarget,\n            stripHTMLTagsFromString,\n            visuallyHideElement\n        };\n\n        return HTMLUtilities;\n    });\n    _registerModule(_modules, 'Accessibility/A11yI18n.js', [_modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (F, H, U) {\n        /* *\n         *\n         *  Accessibility module - internationalization support\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *  Author: Ã˜ystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { format } = F;\n        const { composed } = H;\n        const { getNestedProperty, pick, pushUnique } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var A11yI18nComposition;\n        (function (A11yI18nComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass) {\n                if (pushUnique(composed, compose)) {\n                    const chartProto = ChartClass.prototype;\n                    chartProto.langFormat = langFormat;\n                }\n            }\n            A11yI18nComposition.compose = compose;\n            /**\n             * i18n utility function.  Format a single array or plural statement in a\n             * format string.  If the statement is not an array or plural statement,\n             * returns the statement within brackets.  Invalid array statements return\n             * an empty string.\n             *\n             * @private\n             * @function formatExtendedStatement\n             * @param {string} statement\n             * @param {Highcharts.Dictionary<*>} ctx\n             * Context to apply to the format string.\n             */\n            function formatExtendedStatement(statement, ctx) {\n                const eachStart = statement.indexOf('#each('), pluralStart = statement.indexOf('#plural('), indexStart = statement.indexOf('['), indexEnd = statement.indexOf(']');\n                let arr, result;\n                // Dealing with an each-function?\n                if (eachStart > -1) {\n                    const eachEnd = statement.slice(eachStart).indexOf(')') + eachStart, preEach = statement.substring(0, eachStart), postEach = statement.substring(eachEnd + 1), eachStatement = statement.substring(eachStart + 6, eachEnd), eachArguments = eachStatement.split(',');\n                    let lenArg = Number(eachArguments[1]), len;\n                    result = '';\n                    arr = getNestedProperty(eachArguments[0], ctx);\n                    if (arr) {\n                        lenArg = isNaN(lenArg) ? arr.length : lenArg;\n                        len = lenArg < 0 ?\n                            arr.length + lenArg :\n                            Math.min(lenArg, arr.length); // Overshoot\n                        // Run through the array for the specified length\n                        for (let i = 0; i < len; ++i) {\n                            result += preEach + arr[i] + postEach;\n                        }\n                    }\n                    return result.length ? result : '';\n                }\n                // Dealing with a plural-function?\n                if (pluralStart > -1) {\n                    const pluralEnd = (statement.slice(pluralStart).indexOf(')') + pluralStart), pluralStatement = statement.substring(pluralStart + 8, pluralEnd), pluralArguments = pluralStatement.split(','), num = Number(getNestedProperty(pluralArguments[0], ctx));\n                    switch (num) {\n                        case 0:\n                            result = pick(pluralArguments[4], pluralArguments[1]);\n                            break;\n                        case 1:\n                            result = pick(pluralArguments[2], pluralArguments[1]);\n                            break;\n                        case 2:\n                            result = pick(pluralArguments[3], pluralArguments[1]);\n                            break;\n                        default:\n                            result = pluralArguments[1];\n                    }\n                    return result ? stringTrim(result) : '';\n                }\n                // Array index\n                if (indexStart > -1) {\n                    const arrayName = statement.substring(0, indexStart), ix = Number(statement.substring(indexStart + 1, indexEnd));\n                    let val;\n                    arr = getNestedProperty(arrayName, ctx);\n                    if (!isNaN(ix) && arr) {\n                        if (ix < 0) {\n                            val = arr[arr.length + ix];\n                            // Handle negative overshoot\n                            if (typeof val === 'undefined') {\n                                val = arr[0];\n                            }\n                        }\n                        else {\n                            val = arr[ix];\n                            // Handle positive overshoot\n                            if (typeof val === 'undefined') {\n                                val = arr[arr.length - 1];\n                            }\n                        }\n                    }\n                    return typeof val !== 'undefined' ? val : '';\n                }\n                // Standard substitution, delegate to format or similar\n                return '{' + statement + '}';\n            }\n            /* eslint-disable max-len */\n            /**\n             * i18n formatting function.  Extends Highcharts.format() functionality by\n             * also handling arrays and plural conditionals.  Arrays can be indexed as\n             * follows:\n             *\n             * - Format: 'This is the first index: {myArray[0]}. The last: {myArray[-1]}.'\n             *\n             * - Context: { myArray: [0, 1, 2, 3, 4, 5] }\n             *\n             * - Result: 'This is the first index: 0. The last: 5.'\n             *\n             *\n             * They can also be iterated using the #each() function.  This will repeat\n             * the contents of the bracket expression for each element.  Example:\n             *\n             * - Format: 'List contains: {#each(myArray)cm }'\n             *\n             * - Context: { myArray: [0, 1, 2] }\n             *\n             * - Result: 'List contains: 0cm 1cm 2cm '\n             *\n             *\n             * The #each() function optionally takes a length parameter.  If positive,\n             * this parameter specifies the max number of elements to iterate through.\n             * If negative, the function will subtract the number from the length of the\n             * array.  Use this to stop iterating before the array ends.  Example:\n             *\n             * - Format: 'List contains: {#each(myArray, -1) }and {myArray[-1]}.'\n             *\n             * - Context: { myArray: [0, 1, 2, 3] }\n             *\n             * - Result: 'List contains: 0, 1, 2, and 3.'\n             *\n             *\n             * Use the #plural() function to pick a string depending on whether or not a\n             * context object is 1.  Arguments are #plural(obj, plural, singular).\n             * Example:\n             *\n             * - Format: 'Has {numPoints} {#plural(numPoints, points, point}.'\n             *\n             * - Context: { numPoints: 5 }\n             *\n             * - Result: 'Has 5 points.'\n             *\n             *\n             * Optionally there are additional parameters for dual and none:\n             * #plural(obj, plural, singular, dual, none).  Example:\n             *\n             * - Format: 'Has {#plural(numPoints, many points, one point, two points,\n             *   none}.'\n             *\n             * - Context: { numPoints: 2 }\n             *\n             * - Result: 'Has two points.'\n             *\n             *\n             * The dual or none parameters will take precedence if they are supplied.\n             *\n             * @requires modules/accessibility\n             *\n             * @function Highcharts.i18nFormat\n             *\n             * @param {string} formatString\n             * The string to format.\n             *\n             * @param {Highcharts.Dictionary<*>} context\n             * Context to apply to the format string.\n             *\n             * @param {Highcharts.Chart} chart\n             * A `Chart` instance with a time object and numberFormatter, passed on to\n             * format().\n             *\n             * @deprecated\n             *\n             * @return {string}\n             * The formatted string.\n             */\n            function i18nFormat(formatString, context, chart) {\n                const getFirstBracketStatement = (sourceStr, offset) => {\n                    const str = sourceStr.slice(offset || 0), startBracket = str.indexOf('{'), endBracket = str.indexOf('}');\n                    if (startBracket > -1 && endBracket > startBracket) {\n                        return {\n                            statement: str.substring(startBracket + 1, endBracket),\n                            begin: offset + startBracket + 1,\n                            end: offset + endBracket\n                        };\n                    }\n                }, tokens = [];\n                let bracketRes, constRes, cursor = 0;\n                // Tokenize format string into bracket statements and constants\n                do {\n                    bracketRes = getFirstBracketStatement(formatString, cursor);\n                    constRes = formatString.substring(cursor, bracketRes && bracketRes.begin - 1);\n                    // If we have constant content before this bracket statement, add it\n                    if (constRes.length) {\n                        tokens.push({\n                            value: constRes,\n                            type: 'constant'\n                        });\n                    }\n                    // Add the bracket statement\n                    if (bracketRes) {\n                        tokens.push({\n                            value: bracketRes.statement,\n                            type: 'statement'\n                        });\n                    }\n                    cursor = bracketRes ? bracketRes.end + 1 : cursor + 1;\n                } while (bracketRes);\n                // Perform the formatting.  The formatArrayStatement function returns\n                // the statement in brackets if it is not an array statement, which\n                // means it gets picked up by format below.\n                tokens.forEach((token) => {\n                    if (token.type === 'statement') {\n                        token.value = formatExtendedStatement(token.value, context);\n                    }\n                });\n                // Join string back together and pass to format to pick up non-array\n                // statements.\n                return format(tokens.reduce((acc, cur) => acc + cur.value, ''), context, chart);\n            }\n            A11yI18nComposition.i18nFormat = i18nFormat;\n            /* eslint-enable max-len */\n            /**\n             * Apply context to a format string from lang options of the chart.\n             *\n             * @requires modules/accessibility\n             *\n             * @function Highcharts.Chart#langFormat\n             *\n             * @param {string} langKey\n             * Key (using dot notation) into lang option structure.\n             *\n             * @param {Highcharts.Dictionary<*>} context\n             * Context to apply to the format string.\n             *\n             * @return {string}\n             * The formatted string.\n             */\n            function langFormat(langKey, context) {\n                const keys = langKey.split('.');\n                let formatString = this.options.lang, i = 0;\n                for (; i < keys.length; ++i) {\n                    formatString = formatString && formatString[keys[i]];\n                }\n                return typeof formatString === 'string' ?\n                    i18nFormat(formatString, context, this) : '';\n            }\n            /**\n             * @private\n             * @function stringTrim\n             *\n             * @param {string} str\n             * The input string\n             *\n             * @return {string}\n             * The trimmed string\n             */\n            function stringTrim(str) {\n                return str.trim && str.trim() || str.replace(/^\\s+|\\s+$/g, '');\n            }\n        })(A11yI18nComposition || (A11yI18nComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return A11yI18nComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/ChartUtilities.js', [_modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Utils for dealing with charts.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { stripHTMLTagsFromString: stripHTMLTags } = HU;\n        const { defined, find, fireEvent } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Fire an event on an element that is either wrapped by Highcharts,\n         * or a DOM element.\n         * @private\n         */\n        function fireEventOnWrappedOrUnwrappedElement(el, eventObject) {\n            const type = eventObject.type;\n            const hcEvents = el.hcEvents;\n            if (!!doc.createEvent &&\n                (el.dispatchEvent || el.fireEvent)) {\n                if (el.dispatchEvent) {\n                    el.dispatchEvent(eventObject);\n                }\n                else {\n                    el.fireEvent(type, eventObject);\n                }\n            }\n            else if (hcEvents && hcEvents[type]) {\n                fireEvent(el, type, eventObject);\n            }\n            else if (el.element) {\n                fireEventOnWrappedOrUnwrappedElement(el.element, eventObject);\n            }\n        }\n        /**\n         * @private\n         */\n        function getChartTitle(chart) {\n            return stripHTMLTags(chart.options.title.text ||\n                chart.langFormat('accessibility.defaultChartTitle', { chart: chart }), chart.renderer.forExport);\n        }\n        /**\n         * Return string with the axis name/title.\n         * @private\n         */\n        function getAxisDescription(axis) {\n            return axis && (axis.options.accessibility?.description ||\n                axis.axisTitle?.textStr ||\n                axis.options.id ||\n                axis.categories && 'categories' ||\n                axis.dateTime && 'Time' ||\n                'values');\n        }\n        /**\n         * Return string with text description of the axis range.\n         * @private\n         * @param {Highcharts.Axis} axis\n         * The axis to get range desc of.\n         * @return {string}\n         * A string with the range description for the axis.\n         */\n        function getAxisRangeDescription(axis) {\n            const axisOptions = axis.options || {};\n            // Handle overridden range description\n            if (axisOptions.accessibility &&\n                typeof axisOptions.accessibility.rangeDescription !== 'undefined') {\n                return axisOptions.accessibility.rangeDescription;\n            }\n            // Handle category axes\n            if (axis.categories) {\n                return getCategoryAxisRangeDesc(axis);\n            }\n            // Use time range, not from-to?\n            if (axis.dateTime && (axis.min === 0 || axis.dataMin === 0)) {\n                return getAxisTimeLengthDesc(axis);\n            }\n            // Just use from and to.\n            // We have the range and the unit to use, find the desc format\n            return getAxisFromToDescription(axis);\n        }\n        /**\n         * Describe the range of a category axis.\n         * @private\n         */\n        function getCategoryAxisRangeDesc(axis) {\n            const chart = axis.chart;\n            if (axis.dataMax && axis.dataMin) {\n                return chart.langFormat('accessibility.axis.rangeCategories', {\n                    chart: chart,\n                    axis: axis,\n                    numCategories: axis.dataMax - axis.dataMin + 1\n                });\n            }\n            return '';\n        }\n        /**\n         * Describe the length of the time window shown on an axis.\n         * @private\n         */\n        function getAxisTimeLengthDesc(axis) {\n            const chart = axis.chart, range = {}, min = axis.dataMin || axis.min || 0, max = axis.dataMax || axis.max || 0;\n            let rangeUnit = 'Seconds';\n            range.Seconds = (max - min) / 1000;\n            range.Minutes = range.Seconds / 60;\n            range.Hours = range.Minutes / 60;\n            range.Days = range.Hours / 24;\n            ['Minutes', 'Hours', 'Days'].forEach(function (unit) {\n                if (range[unit] > 2) {\n                    rangeUnit = unit;\n                }\n            });\n            const rangeValue = range[rangeUnit].toFixed(rangeUnit !== 'Seconds' &&\n                rangeUnit !== 'Minutes' ? 1 : 0 // Use decimals for days/hours\n            );\n            // We have the range and the unit to use, find the desc format\n            return chart.langFormat('accessibility.axis.timeRange' + rangeUnit, {\n                chart: chart,\n                axis: axis,\n                range: rangeValue.replace('.0', '')\n            });\n        }\n        /**\n         * Describe an axis from-to range.\n         * @private\n         */\n        function getAxisFromToDescription(axis) {\n            const chart = axis.chart, options = chart.options, dateRangeFormat = (options &&\n                options.accessibility &&\n                options.accessibility.screenReaderSection.axisRangeDateFormat ||\n                ''), extremes = {\n                min: axis.dataMin || axis.min || 0,\n                max: axis.dataMax || axis.max || 0\n            }, format = function (key) {\n                return axis.dateTime ?\n                    chart.time.dateFormat(dateRangeFormat, extremes[key]) :\n                    extremes[key].toString();\n            };\n            return chart.langFormat('accessibility.axis.rangeFromTo', {\n                chart: chart,\n                axis: axis,\n                rangeFrom: format('min'),\n                rangeTo: format('max')\n            });\n        }\n        /**\n         * Get the DOM element for the first point in the series.\n         * @private\n         * @param {Highcharts.Series} series\n         * The series to get element for.\n         * @return {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement|undefined}\n         * The DOM element for the point.\n         */\n        function getSeriesFirstPointElement(series) {\n            if (series.points && series.points.length) {\n                const firstPointWithGraphic = find(series.points, (p) => !!p.graphic);\n                return (firstPointWithGraphic &&\n                    firstPointWithGraphic.graphic &&\n                    firstPointWithGraphic.graphic.element);\n            }\n        }\n        /**\n         * Get the DOM element for the series that we put accessibility info on.\n         * @private\n         * @param {Highcharts.Series} series\n         * The series to get element for.\n         * @return {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement|undefined}\n         * The DOM element for the series\n         */\n        function getSeriesA11yElement(series) {\n            const firstPointEl = getSeriesFirstPointElement(series);\n            return (firstPointEl &&\n                firstPointEl.parentNode || series.graph &&\n                series.graph.element || series.group &&\n                series.group.element); // Could be tracker series depending on series type\n        }\n        /**\n         * Remove aria-hidden from element. Also unhides parents of the element, and\n         * hides siblings that are not explicitly unhidden.\n         * @private\n         */\n        function unhideChartElementFromAT(chart, element) {\n            element.setAttribute('aria-hidden', false);\n            if (element === chart.renderTo ||\n                !element.parentNode ||\n                element.parentNode === doc.body // #16126: Full screen printing\n            ) {\n                return;\n            }\n            // Hide siblings unless their hidden state is already explicitly set\n            Array.prototype.forEach.call(element.parentNode.childNodes, function (node) {\n                if (!node.hasAttribute('aria-hidden')) {\n                    node.setAttribute('aria-hidden', true);\n                }\n            });\n            // Repeat for parent\n            unhideChartElementFromAT(chart, element.parentNode);\n        }\n        /**\n         * Hide series from screen readers.\n         * @private\n         */\n        function hideSeriesFromAT(series) {\n            const seriesEl = getSeriesA11yElement(series);\n            if (seriesEl) {\n                seriesEl.setAttribute('aria-hidden', true);\n            }\n        }\n        /**\n         * Get series objects by series name.\n         * @private\n         */\n        function getSeriesFromName(chart, name) {\n            if (!name) {\n                return chart.series;\n            }\n            return (chart.series || []).filter(function (s) {\n                return s.name === name;\n            });\n        }\n        /**\n         * Get point in a series from x/y values.\n         * @private\n         */\n        function getPointFromXY(series, x, y) {\n            let i = series.length, res;\n            while (i--) {\n                res = find(series[i].points || [], function (p) {\n                    return p.x === x && p.y === y;\n                });\n                if (res) {\n                    return res;\n                }\n            }\n        }\n        /**\n         * Get relative position of point on an x/y axis from 0 to 1.\n         * @private\n         */\n        function getRelativePointAxisPosition(axis, point) {\n            if (!defined(axis.dataMin) || !defined(axis.dataMax)) {\n                return 0;\n            }\n            const axisStart = axis.toPixels(axis.dataMin), axisEnd = axis.toPixels(axis.dataMax), \n            // We have to use pixel position because of axis breaks, log axis etc.\n            positionProp = axis.coll === 'xAxis' ? 'x' : 'y', pointPos = axis.toPixels(point[positionProp] || 0);\n            return (pointPos - axisStart) / (axisEnd - axisStart);\n        }\n        /**\n         * Get relative position of point on an x/y axis from 0 to 1.\n         * @private\n         */\n        function scrollAxisToPoint(point) {\n            const xAxis = point.series.xAxis, yAxis = point.series.yAxis, axis = (xAxis && xAxis.scrollbar ? xAxis : yAxis), scrollbar = (axis && axis.scrollbar);\n            if (scrollbar && defined(scrollbar.to) && defined(scrollbar.from)) {\n                const range = scrollbar.to - scrollbar.from;\n                const pos = getRelativePointAxisPosition(axis, point);\n                scrollbar.updatePosition(pos - range / 2, pos + range / 2);\n                fireEvent(scrollbar, 'changed', {\n                    from: scrollbar.from,\n                    to: scrollbar.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: null\n                });\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const ChartUtilities = {\n            fireEventOnWrappedOrUnwrappedElement,\n            getChartTitle,\n            getAxisDescription,\n            getAxisRangeDescription,\n            getPointFromXY,\n            getSeriesFirstPointElement,\n            getSeriesFromName,\n            getSeriesA11yElement,\n            unhideChartElementFromAT,\n            hideSeriesFromAT,\n            scrollAxisToPoint\n        };\n\n        return ChartUtilities;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/DOMElementProvider.js', [_modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Class that can keep track of elements added to DOM and clean them up on\n         *  destroy.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { removeElement } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        class DOMElementProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor() {\n                this.elements = [];\n            }\n            /**\n             * Create an element and keep track of it for later removal.\n             * Same args as document.createElement\n             * @private\n             */\n            createElement() {\n                const el = doc.createElement.apply(doc, arguments);\n                this.elements.push(el);\n                return el;\n            }\n            /**\n             * Destroy all created elements, removing them from the DOM.\n             * @private\n             */\n            destroyCreatedElements() {\n                this.elements.forEach(function (element) {\n                    removeElement(element);\n                });\n                this.elements = [];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DOMElementProvider;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/EventProvider.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Class that can keep track of events added, and clean them up on destroy.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { addEvent } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        class EventProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor() {\n                this.eventRemovers = [];\n            }\n            /**\n             * Add an event to an element and keep track of it for later removal.\n             * Same args as Highcharts.addEvent.\n             * @private\n             */\n            addEvent() {\n                const remover = addEvent.apply(H, arguments);\n                this.eventRemovers.push(remover);\n                return remover;\n            }\n            /**\n             * Remove all added events.\n             * @private\n             */\n            removeAddedEvents() {\n                this.eventRemovers.forEach((remover) => remover());\n                this.eventRemovers = [];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return EventProvider;\n    });\n    _registerModule(_modules, 'Accessibility/AccessibilityComponent.js', [_modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (CU, DOMElementProvider, EventProvider, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component class definition\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { fireEventOnWrappedOrUnwrappedElement } = CU;\n        const { getFakeMouseEvent } = HU;\n        const { extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AccessibilityComponent base class, representing a part of the chart that\n         * has accessibility logic connected to it. This class can be inherited from to\n         * create a custom accessibility component for a chart.\n         *\n         * Components should take care to destroy added elements and unregister event\n         * handlers on destroy. This is handled automatically if using this.addEvent and\n         * this.createElement.\n         *\n         * @sample highcharts/accessibility/custom-component\n         *         Custom accessibility component\n         *\n         * @requires module:modules/accessibility\n         * @class\n         * @name Highcharts.AccessibilityComponent\n         */\n        class AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the class\n             * @private\n             * @param {Highcharts.Chart} chart The chart object\n             * @param {Highcharts.ProxyProvider} proxyProvider The proxy provider of the accessibility module\n             */\n            initBase(chart, proxyProvider) {\n                this.chart = chart;\n                this.eventProvider = new EventProvider();\n                this.domElementProvider = new DOMElementProvider();\n                this.proxyProvider = proxyProvider;\n                // Key code enum for common keys\n                this.keyCodes = {\n                    left: 37,\n                    right: 39,\n                    up: 38,\n                    down: 40,\n                    enter: 13,\n                    space: 32,\n                    esc: 27,\n                    tab: 9,\n                    pageUp: 33,\n                    pageDown: 34,\n                    end: 35,\n                    home: 36\n                };\n            }\n            /**\n             * Add an event to an element and keep track of it for later removal.\n             * See EventProvider for details.\n             * @private\n             */\n            addEvent(el, type, fn, options) {\n                return this.eventProvider.addEvent(el, type, fn, options);\n            }\n            /**\n             * Create an element and keep track of it for later removal.\n             * See DOMElementProvider for details.\n             * @private\n             */\n            createElement(tagName, options) {\n                return this.domElementProvider.createElement(tagName, options);\n            }\n            /**\n             * Fire a fake click event on an element. It is useful to have this on\n             * AccessibilityComponent for users of custom components.\n             */\n            fakeClickEvent(el) {\n                const fakeEvent = getFakeMouseEvent('click');\n                fireEventOnWrappedOrUnwrappedElement(el, fakeEvent);\n            }\n            /**\n             * Remove traces of the component.\n             * @private\n             */\n            destroyBase() {\n                this.domElementProvider.destroyCreatedElements();\n                this.eventProvider.removeAddedEvents();\n            }\n        }\n        extend(AccessibilityComponent.prototype, \n        /** @lends Highcharts.AccessibilityComponent */\n        {\n            /**\n             * Called on component initialization.\n             */\n            init() { },\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation: function () { },\n            /**\n             * Called on updates to the chart, including options changes.\n             * Note that this is also called on first render of chart.\n             */\n            onChartUpdate() { },\n            /**\n             * Called on every chart render.\n             */\n            onChartRender() { },\n            /**\n             * Called when accessibility is disabled or chart is destroyed.\n             */\n            destroy() { }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return AccessibilityComponent;\n    });\n    _registerModule(_modules, 'Accessibility/KeyboardNavigationHandler.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Keyboard navigation handler base class definition\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { find } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Define a keyboard navigation handler for use with a\n         * Highcharts.AccessibilityComponent instance. This functions as an abstraction\n         * layer for keyboard navigation, and defines a map of keyCodes to handler\n         * functions.\n         *\n         * @requires module:modules/accessibility\n         *\n         * @sample highcharts/accessibility/custom-component\n         *         Custom accessibility component\n         *\n         * @class\n         * @name Highcharts.KeyboardNavigationHandler\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart this module should act on.\n         *\n         * @param {Highcharts.KeyboardNavigationHandlerOptionsObject} options\n         * Options for the keyboard navigation handler.\n         */\n        class KeyboardNavigationHandler {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, options) {\n                this.chart = chart;\n                this.keyCodeMap = options.keyCodeMap || [];\n                this.validate = options.validate;\n                this.init = options.init;\n                this.terminate = options.terminate;\n                // Response enum\n                this.response = {\n                    success: 1,\n                    prev: 2,\n                    next: 3,\n                    noHandler: 4,\n                    fail: 5 // Handler failed\n                };\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Find handler function(s) for key code in the keyCodeMap and run it.\n             *\n             * @function KeyboardNavigationHandler#run\n             * @param {global.KeyboardEvent} e\n             * @return {number} Returns a response code indicating whether the run was\n             *      a success/fail/unhandled, or if we should move to next/prev module.\n             */\n            run(e) {\n                const keyCode = e.which || e.keyCode;\n                let response = this.response.noHandler;\n                const handlerCodeSet = find(this.keyCodeMap, function (codeSet) {\n                    return codeSet[0].indexOf(keyCode) > -1;\n                });\n                if (handlerCodeSet) {\n                    response = handlerCodeSet[1].call(this, keyCode, e);\n                }\n                else if (keyCode === 9) {\n                    // Default tab handler, move to next/prev module\n                    response = this.response[e.shiftKey ? 'prev' : 'next'];\n                }\n                return response;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Options for the keyboard navigation handler.\n         *\n         * @interface Highcharts.KeyboardNavigationHandlerOptionsObject\n         */ /**\n        * An array containing pairs of an array of keycodes, mapped to a handler\n        * function. When the keycode is received, the handler is called with the\n        * keycode as parameter.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#keyCodeMap\n        * @type {Array<Array<Array<number>, Function>>}\n        */ /**\n        * Function to run on initialization of module.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#init\n        * @type {Function}\n        */ /**\n        * Function to run before moving to next/prev module. Receives moving direction\n        * as parameter: +1 for next, -1 for previous.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#terminate\n        * @type {Function|undefined}\n        */ /**\n        * Function to run to validate module. Should return false if module should not\n        * run, true otherwise. Receives chart as parameter.\n        * @name Highcharts.KeyboardNavigationHandlerOptionsObject#validate\n        * @type {Function|undefined}\n        */\n        (''); // keeps doclets above in JS file\n\n        return KeyboardNavigationHandler;\n    });\n    _registerModule(_modules, 'Accessibility/Components/ContainerComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (AccessibilityComponent, KeyboardNavigationHandler, CU, H, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart container.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT, getChartTitle } = CU;\n        const { doc } = H;\n        const { stripHTMLTagsFromString: stripHTMLTags } = HU;\n        /**\n         * The ContainerComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.ContainerComponent\n         */\n        class ContainerComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Called on first render/updates to the chart, including options changes.\n             */\n            onChartUpdate() {\n                this.handleSVGTitleElement();\n                this.setSVGContainerLabel();\n                this.setGraphicContainerAttrs();\n                this.setRenderToAttrs();\n                this.makeCreditsAccessible();\n            }\n            /**\n             * @private\n             */\n            handleSVGTitleElement() {\n                const chart = this.chart, titleId = 'highcharts-title-' + chart.index, titleContents = stripHTMLTags(chart.langFormat('accessibility.svgContainerTitle', {\n                    chartTitle: getChartTitle(chart)\n                }));\n                if (titleContents.length) {\n                    const titleElement = this.svgTitleElement =\n                        this.svgTitleElement || doc.createElementNS('http://www.w3.org/2000/svg', 'title');\n                    titleElement.textContent = titleContents;\n                    titleElement.id = titleId;\n                    chart.renderTo.insertBefore(titleElement, chart.renderTo.firstChild);\n                }\n            }\n            /**\n             * @private\n             */\n            setSVGContainerLabel() {\n                const chart = this.chart, svgContainerLabel = chart.langFormat('accessibility.svgContainerLabel', {\n                    chartTitle: getChartTitle(chart)\n                });\n                if (chart.renderer.box && svgContainerLabel.length) {\n                    chart.renderer.box.setAttribute('aria-label', svgContainerLabel);\n                }\n            }\n            /**\n             * @private\n             */\n            setGraphicContainerAttrs() {\n                const chart = this.chart, label = chart.langFormat('accessibility.graphicContainerLabel', {\n                    chartTitle: getChartTitle(chart)\n                });\n                if (label.length) {\n                    chart.container.setAttribute('aria-label', label);\n                }\n            }\n            /**\n             * Set attributes on the chart container element.\n             * @private\n             */\n            setRenderToAttrs() {\n                const chart = this.chart, shouldHaveLandmark = chart.options.accessibility\n                    .landmarkVerbosity !== 'disabled', containerLabel = chart.langFormat('accessibility.chartContainerLabel', {\n                    title: getChartTitle(chart),\n                    chart: chart\n                });\n                if (containerLabel) {\n                    chart.renderTo.setAttribute('role', shouldHaveLandmark ? 'region' : 'group');\n                    chart.renderTo.setAttribute('aria-label', containerLabel);\n                }\n            }\n            /**\n             * @private\n             */\n            makeCreditsAccessible() {\n                const chart = this.chart, credits = chart.credits;\n                if (credits) {\n                    if (credits.textStr) {\n                        credits.element.setAttribute('aria-label', chart.langFormat('accessibility.credits', {\n                            creditsStr: stripHTMLTags(credits.textStr, chart.renderer.forExport)\n                        }));\n                    }\n                    unhideChartElementFromAT(chart, credits.element);\n                }\n            }\n            /**\n             * Empty handler to just set focus on chart\n             * @private\n             */\n            getKeyboardNavigation() {\n                const chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [],\n                    validate: function () {\n                        return true;\n                    },\n                    init: function () {\n                        const a11y = chart.accessibility;\n                        if (a11y) {\n                            a11y.keyboardNavigation.tabindexContainer.focus();\n                        }\n                    }\n                });\n            }\n            /**\n             * Accessibility disabled/chart destroyed.\n             */\n            destroy() {\n                this.chart.renderTo.setAttribute('aria-hidden', true);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ContainerComponent;\n    });\n    _registerModule(_modules, 'Accessibility/FocusBorder.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Extend SVG and Chart classes with focus border capabilities.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, pick, pushUnique } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var FocusBorderComposition;\n        (function (FocusBorderComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            // Attributes that trigger a focus border update\n            const svgElementBorderUpdateTriggers = [\n                'x', 'y', 'transform', 'width', 'height', 'r', 'd', 'stroke-width'\n            ];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass, SVGElementClass) {\n                if (pushUnique(composed, compose)) {\n                    const chartProto = ChartClass.prototype, svgElementProto = SVGElementClass.prototype;\n                    chartProto.renderFocusBorder = chartRenderFocusBorder;\n                    chartProto.setFocusToElement = chartSetFocusToElement;\n                    svgElementProto.addFocusBorder = svgElementAddFocusBorder;\n                    svgElementProto.removeFocusBorder = svgElementRemoveFocusBorder;\n                }\n            }\n            FocusBorderComposition.compose = compose;\n            /**\n             * Redraws the focus border on the currently focused element.\n             *\n             * @private\n             * @function Highcharts.Chart#renderFocusBorder\n             */\n            function chartRenderFocusBorder() {\n                const focusElement = this.focusElement, focusBorderOptions = this.options.accessibility.keyboardNavigation.focusBorder;\n                if (focusElement) {\n                    focusElement.removeFocusBorder();\n                    if (focusBorderOptions.enabled) {\n                        focusElement.addFocusBorder(focusBorderOptions.margin, {\n                            stroke: focusBorderOptions.style.color,\n                            strokeWidth: focusBorderOptions.style.lineWidth,\n                            r: focusBorderOptions.style.borderRadius\n                        });\n                    }\n                }\n            }\n            /**\n             * Set chart's focus to an SVGElement. Calls focus() on it, and draws the\n             * focus border. This is used by multiple components.\n             *\n             * @private\n             * @function Highcharts.Chart#setFocusToElement\n             *\n             * @param {Highcharts.SVGElement} svgElement\n             * Element to draw the border around.\n             *\n             * @param {SVGDOMElement|HTMLDOMElement} [focusElement]\n             * If supplied, it draws the border around svgElement and sets the focus to\n             * focusElement.\n             */\n            function chartSetFocusToElement(svgElement, focusElement) {\n                const focusBorderOptions = this.options.accessibility.keyboardNavigation.focusBorder, browserFocusElement = focusElement || svgElement.element;\n                // Set browser focus if possible\n                if (browserFocusElement &&\n                    browserFocusElement.focus) {\n                    // If there is no focusin-listener, add one to work around Edge\n                    // where Narrator is not reading out points despite calling focus().\n                    if (!(browserFocusElement.hcEvents &&\n                        browserFocusElement.hcEvents.focusin)) {\n                        addEvent(browserFocusElement, 'focusin', function () { });\n                    }\n                    browserFocusElement.focus();\n                    // Hide default focus ring\n                    if (focusBorderOptions.hideBrowserFocusOutline) {\n                        browserFocusElement.style.outline = 'none';\n                    }\n                }\n                if (this.focusElement) {\n                    this.focusElement.removeFocusBorder();\n                }\n                this.focusElement = svgElement;\n                this.renderFocusBorder();\n            }\n            /**\n             * Add hook to destroy focus border if SVG element is destroyed, unless\n             * hook already exists.\n             * @private\n             * @param el Element to add destroy hook to\n             */\n            function svgElementAddDestroyFocusBorderHook(el) {\n                if (el.focusBorderDestroyHook) {\n                    return;\n                }\n                const origDestroy = el.destroy;\n                el.destroy = function () {\n                    if (el.focusBorder && el.focusBorder.destroy) {\n                        el.focusBorder.destroy();\n                    }\n                    return origDestroy.apply(el, arguments);\n                };\n                el.focusBorderDestroyHook = origDestroy;\n            }\n            /**\n             * Add focus border functionality to SVGElements. Draws a new rect on top of\n             * element around its bounding box. This is used by multiple components.\n             *\n             * @private\n             * @function Highcharts.SVGElement#addFocusBorder\n             *\n             * @param {number} margin\n             *\n             * @param {SVGAttributes} attribs\n             */\n            function svgElementAddFocusBorder(margin, attribs) {\n                // Allow updating by just adding new border\n                if (this.focusBorder) {\n                    this.removeFocusBorder();\n                }\n                // Add the border rect\n                const bb = this.getBBox(), pad = pick(margin, 3), parent = this.parentGroup, scaleX = this.scaleX || parent && parent.scaleX, scaleY = this.scaleY || parent && parent.scaleY, oneDefined = scaleX ? !scaleY : scaleY, scaleBoth = oneDefined ? Math.abs(scaleX || scaleY || 1) :\n                    (Math.abs(scaleX || 1) + Math.abs(scaleY || 1)) / 2;\n                bb.x += this.translateX ? this.translateX : 0;\n                bb.y += this.translateY ? this.translateY : 0;\n                let borderPosX = bb.x - pad, borderPosY = bb.y - pad, borderWidth = bb.width + 2 * pad, borderHeight = bb.height + 2 * pad;\n                /**\n                 * For text elements, apply x and y offset, #11397.\n                 * @private\n                 */\n                function getTextAnchorCorrection(text) {\n                    let posXCorrection = 0, posYCorrection = 0;\n                    if (text.attr('text-anchor') === 'middle') {\n                        posXCorrection = posYCorrection = 0.5;\n                    }\n                    else if (!text.rotation) {\n                        posYCorrection = 0.75;\n                    }\n                    else {\n                        posXCorrection = 0.25;\n                    }\n                    return {\n                        x: posXCorrection,\n                        y: posYCorrection\n                    };\n                }\n                const isLabel = !!this.text;\n                if (this.element.nodeName === 'text' || isLabel) {\n                    const isRotated = !!this.rotation;\n                    const correction = !isLabel ? getTextAnchorCorrection(this) :\n                        {\n                            x: isRotated ? 1 : 0,\n                            y: 0\n                        };\n                    const attrX = +this.attr('x');\n                    const attrY = +this.attr('y');\n                    if (!isNaN(attrX)) {\n                        borderPosX = attrX - (bb.width * correction.x) - pad;\n                    }\n                    if (!isNaN(attrY)) {\n                        borderPosY = attrY - (bb.height * correction.y) - pad;\n                    }\n                    if (isLabel && isRotated) {\n                        const temp = borderWidth;\n                        borderWidth = borderHeight;\n                        borderHeight = temp;\n                        if (!isNaN(attrX)) {\n                            borderPosX = attrX - (bb.height * correction.x) - pad;\n                        }\n                        if (!isNaN(attrY)) {\n                            borderPosY = attrY - (bb.width * correction.y) - pad;\n                        }\n                    }\n                }\n                this.focusBorder = this.renderer.rect(borderPosX, borderPosY, borderWidth, borderHeight, parseInt((attribs && attribs.r || 0).toString(), 10) / scaleBoth)\n                    .addClass('highcharts-focus-border')\n                    .attr({\n                    zIndex: 99\n                })\n                    .add(parent);\n                if (!this.renderer.styledMode) {\n                    this.focusBorder.attr({\n                        stroke: attribs && attribs.stroke,\n                        'stroke-width': (attribs && attribs.strokeWidth || 0) / scaleBoth\n                    });\n                }\n                avgElementAddUpdateFocusBorderHooks(this, margin, attribs);\n                svgElementAddDestroyFocusBorderHook(this);\n            }\n            /**\n             * Add hooks to update the focus border of an element when the element\n             * size/position is updated, unless already added.\n             * @private\n             * @param el Element to add update hooks to\n             * @param updateParams Parameters to pass through to addFocusBorder when updating.\n             */\n            function avgElementAddUpdateFocusBorderHooks(el, ...updateParams) {\n                if (el.focusBorderUpdateHooks) {\n                    return;\n                }\n                el.focusBorderUpdateHooks = {};\n                svgElementBorderUpdateTriggers.forEach((trigger) => {\n                    const setterKey = trigger + 'Setter';\n                    const origSetter = el[setterKey] || el._defaultSetter;\n                    el.focusBorderUpdateHooks[setterKey] = origSetter;\n                    el[setterKey] = function () {\n                        const ret = origSetter.apply(el, arguments);\n                        el.addFocusBorder.apply(el, updateParams);\n                        return ret;\n                    };\n                });\n            }\n            /**\n             * Remove hook from SVG element added by addDestroyFocusBorderHook, if\n             * existing.\n             * @private\n             * @param el Element to remove destroy hook from\n             */\n            function svgElementRemoveDestroyFocusBorderHook(el) {\n                if (!el.focusBorderDestroyHook) {\n                    return;\n                }\n                el.destroy = el.focusBorderDestroyHook;\n                delete el.focusBorderDestroyHook;\n            }\n            /**\n             * Add focus border functionality to SVGElements. Draws a new rect on top of\n             * element around its bounding box. This is used by multiple components.\n             * @private\n             * @function Highcharts.SVGElement#removeFocusBorder\n             */\n            function svgElementRemoveFocusBorder() {\n                svgElementRemoveUpdateFocusBorderHooks(this);\n                svgElementRemoveDestroyFocusBorderHook(this);\n                if (this.focusBorder) {\n                    this.focusBorder.destroy();\n                    delete this.focusBorder;\n                }\n            }\n            /**\n             * Remove hooks from SVG element added by addUpdateFocusBorderHooks, if\n             * existing.\n             * @private\n             * @param el Element to remove update hooks from\n             */\n            function svgElementRemoveUpdateFocusBorderHooks(el) {\n                if (!el.focusBorderUpdateHooks) {\n                    return;\n                }\n                Object.keys(el.focusBorderUpdateHooks).forEach((setterKey) => {\n                    const origSetter = el.focusBorderUpdateHooks[setterKey];\n                    if (origSetter === el._defaultSetter) {\n                        delete el[setterKey];\n                    }\n                    else {\n                        el[setterKey] = origSetter;\n                    }\n                });\n                delete el.focusBorderUpdateHooks;\n            }\n        })(FocusBorderComposition || (FocusBorderComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FocusBorderComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Utils/Announcer.js', [_modules['Core/Renderer/HTML/AST.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (AST, DOMElementProvider, H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Create announcer to speak messages to screen readers and other AT.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { addClass, visuallyHideElement } = HU;\n        const { attr } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class Announcer {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, type) {\n                this.chart = chart;\n                this.domElementProvider = new DOMElementProvider();\n                this.announceRegion = this.addAnnounceRegion(type);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            destroy() {\n                this.domElementProvider.destroyCreatedElements();\n            }\n            announce(message) {\n                AST.setElementHTML(this.announceRegion, message);\n                // Delete contents after a little while to avoid user finding the live\n                // region in the DOM.\n                if (this.clearAnnouncementRegionTimer) {\n                    clearTimeout(this.clearAnnouncementRegionTimer);\n                }\n                this.clearAnnouncementRegionTimer = setTimeout(() => {\n                    this.announceRegion.innerHTML = AST.emptyHTML;\n                    delete this.clearAnnouncementRegionTimer;\n                }, 3000);\n            }\n            addAnnounceRegion(type) {\n                const chartContainer = (this.chart.announcerContainer || this.createAnnouncerContainer()), div = this.domElementProvider.createElement('div');\n                attr(div, {\n                    'aria-hidden': false,\n                    'aria-live': type,\n                    'aria-atomic': true\n                });\n                if (this.chart.styledMode) {\n                    addClass(div, 'highcharts-visually-hidden');\n                }\n                else {\n                    visuallyHideElement(div);\n                }\n                chartContainer.appendChild(div);\n                return div;\n            }\n            createAnnouncerContainer() {\n                const chart = this.chart, container = doc.createElement('div');\n                attr(container, {\n                    'aria-hidden': false,\n                    'class': 'highcharts-announcer-container'\n                });\n                container.style.position = 'relative';\n                chart.renderTo.insertBefore(container, chart.renderTo.firstChild);\n                chart.announcerContainer = container;\n                return container;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Announcer;\n    });\n    _registerModule(_modules, 'Accessibility/Components/AnnotationsA11y.js', [_modules['Accessibility/Utils/HTMLUtilities.js']], function (HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Annotations accessibility code.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { escapeStringForHTML, stripHTMLTagsFromString } = HTMLUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get list of all annotation labels in the chart.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {Array<object>} The labels, or empty array if none.\n         */\n        function getChartAnnotationLabels(chart) {\n            const annotations = chart.annotations || [];\n            return annotations.reduce((acc, cur) => {\n                if (cur.options &&\n                    cur.options.visible !== false) {\n                    acc = acc.concat(cur.labels);\n                }\n                return acc;\n            }, []);\n        }\n        /**\n         * Get the text of an annotation label.\n         *\n         * @private\n         * @param {Object} label The annotation label object\n         * @return {string} The text in the label.\n         */\n        function getLabelText(label) {\n            return ((label.options &&\n                label.options.accessibility &&\n                label.options.accessibility.description) ||\n                (label.graphic &&\n                    label.graphic.text &&\n                    label.graphic.text.textStr) ||\n                '');\n        }\n        /**\n         * Describe an annotation label.\n         *\n         * @private\n         * @param {Object} label The annotation label object to describe\n         * @return {string} The description for the label.\n         */\n        function getAnnotationLabelDescription(label) {\n            const a11yDesc = (label.options &&\n                label.options.accessibility &&\n                label.options.accessibility.description);\n            if (a11yDesc) {\n                return a11yDesc;\n            }\n            const chart = label.chart;\n            const labelText = getLabelText(label);\n            const points = label.points;\n            const getAriaLabel = (point) => (point.graphic &&\n                point.graphic.element &&\n                point.graphic.element.getAttribute('aria-label') ||\n                '');\n            const getValueDesc = (point) => {\n                const valDesc = (point.accessibility &&\n                    point.accessibility.valueDescription ||\n                    getAriaLabel(point));\n                const seriesName = (point &&\n                    point.series.name ||\n                    '');\n                return (seriesName ? seriesName + ', ' : '') + 'data point ' + valDesc;\n            };\n            const pointValueDescriptions = points\n                .filter((p) => !!p.graphic) // Filter out mock points\n                .map(getValueDesc)\n                // Filter out points we can't describe\n                .filter((desc) => !!desc);\n            const numPoints = pointValueDescriptions.length;\n            const pointsSelector = numPoints > 1 ?\n                'MultiplePoints' : numPoints ?\n                'SinglePoint' : 'NoPoints';\n            const langFormatStr = ('accessibility.screenReaderSection.annotations.description' +\n                pointsSelector);\n            const context = {\n                annotationText: labelText,\n                annotation: label,\n                numPoints: numPoints,\n                annotationPoint: pointValueDescriptions[0],\n                additionalAnnotationPoints: pointValueDescriptions.slice(1)\n            };\n            return chart.langFormat(langFormatStr, context);\n        }\n        /**\n         * Return array of HTML strings for each annotation label in the chart.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {Array<string>} Array of strings with HTML content for each annotation label.\n         */\n        function getAnnotationListItems(chart) {\n            const labels = getChartAnnotationLabels(chart);\n            return labels.map((label) => {\n                const desc = escapeStringForHTML(stripHTMLTagsFromString(getAnnotationLabelDescription(label), chart.renderer.forExport));\n                return desc ? `<li>${desc}</li>` : '';\n            });\n        }\n        /**\n         * Return the annotation info for a chart as string.\n         *\n         * @private\n         * @param {Highcharts.Chart} chart The chart to get annotation info on.\n         * @return {string} String with HTML content or empty string if no annotations.\n         */\n        function getAnnotationsInfoHTML(chart) {\n            const annotations = chart.annotations;\n            if (!(annotations && annotations.length)) {\n                return '';\n            }\n            const annotationItems = getAnnotationListItems(chart);\n            return `<ul style=\"list-style-type: none\">${annotationItems.join(' ')}</ul>`;\n        }\n        /**\n         * Return the texts for the annotation(s) connected to a point, or empty array\n         * if none.\n         *\n         * @private\n         * @param {Highcharts.Point} point The data point to get the annotation info from.\n         * @return {Array<string>} Annotation texts\n         */\n        function getPointAnnotationTexts(point) {\n            const labels = getChartAnnotationLabels(point.series.chart);\n            const pointLabels = labels\n                .filter((label) => label.points.indexOf(point) > -1);\n            if (!pointLabels.length) {\n                return [];\n            }\n            return pointLabels.map((label) => `${getLabelText(label)}`);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const AnnotationsA11y = {\n            getAnnotationsInfoHTML,\n            getAnnotationLabelDescription,\n            getAnnotationListItems,\n            getPointAnnotationTexts\n        };\n\n        return AnnotationsA11y;\n    });\n    _registerModule(_modules, 'Accessibility/Components/InfoRegionsComponent.js', [_modules['Accessibility/A11yI18n.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Components/AnnotationsA11y.js'], _modules['Core/Renderer/HTML/AST.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (A11yI18n, AccessibilityComponent, Announcer, AnnotationsA11y, AST, CU, F, H, HU, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart info region and table.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getAnnotationsInfoHTML } = AnnotationsA11y;\n        const { getAxisDescription, getAxisRangeDescription, getChartTitle, unhideChartElementFromAT } = CU;\n        const { format } = F;\n        const { doc } = H;\n        const { addClass, getElement, getHeadingTagNameForElement, stripHTMLTagsFromString, visuallyHideElement } = HU;\n        const { attr, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function getTableSummary(chart) {\n            return chart.langFormat('accessibility.table.tableSummary', { chart: chart });\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForMapChart(chart, formatContext) {\n            return formatContext.mapTitle ?\n                chart.langFormat('accessibility.chartTypes.mapTypeDescription', formatContext) :\n                chart.langFormat('accessibility.chartTypes.unknownMap', formatContext);\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForCombinationChart(chart, formatContext) {\n            return chart.langFormat('accessibility.chartTypes.combinationChart', formatContext);\n        }\n        /**\n         * @private\n         */\n        function getTypeDescForEmptyChart(chart, formatContext) {\n            return chart.langFormat('accessibility.chartTypes.emptyChart', formatContext);\n        }\n        /**\n         * @private\n         */\n        function buildTypeDescriptionFromSeries(chart, types, context) {\n            const firstType = types[0], typeExplaination = chart.langFormat('accessibility.seriesTypeDescriptions.' + firstType, context), multi = chart.series && chart.series.length < 2 ? 'Single' : 'Multiple';\n            return (chart.langFormat('accessibility.chartTypes.' + firstType + multi, context) ||\n                chart.langFormat('accessibility.chartTypes.default' + multi, context)) + (typeExplaination ? ' ' + typeExplaination : '');\n        }\n        /**\n         * Return simplified explaination of chart type. Some types will not be\n         * familiar to most users, but in those cases we try to add an explaination\n         * of the type.\n         *\n         * @private\n         * @function Highcharts.Chart#getTypeDescription\n         * @param {Array<string>} types The series types in this chart.\n         * @return {string} The text description of the chart type.\n         */\n        function getTypeDescription(chart, types) {\n            const firstType = types[0], firstSeries = chart.series && chart.series[0] || {}, mapTitle = chart.mapView && chart.mapView.geoMap &&\n                chart.mapView.geoMap.title, formatContext = {\n                numSeries: chart.series.length,\n                numPoints: firstSeries.points && firstSeries.points.length,\n                chart,\n                mapTitle\n            };\n            if (!firstType) {\n                return getTypeDescForEmptyChart(chart, formatContext);\n            }\n            if (firstType === 'map' || firstType === 'tiledwebmap') {\n                return getTypeDescForMapChart(chart, formatContext);\n            }\n            if (chart.types.length > 1) {\n                return getTypeDescForCombinationChart(chart, formatContext);\n            }\n            return buildTypeDescriptionFromSeries(chart, types, formatContext);\n        }\n        /**\n         * @private\n         */\n        function stripEmptyHTMLTags(str) {\n            return str.replace(/<(\\w+)[^>]*?>\\s*<\\/\\1>/g, '');\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The InfoRegionsComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.InfoRegionsComponent\n         */\n        class InfoRegionsComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.screenReaderSections = {};\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                const component = this;\n                this.initRegionsDefinitions();\n                this.addEvent(chart, 'aftergetTableAST', function (e) {\n                    component.onDataTableCreated(e);\n                });\n                this.addEvent(chart, 'afterViewData', function (e) {\n                    if (e.wasHidden) {\n                        component.dataTableDiv = e.element;\n                        // Use a small delay to give browsers & AT time to\n                        // register the new table.\n                        setTimeout(function () {\n                            component.focusDataTable();\n                        }, 300);\n                    }\n                });\n                this.addEvent(chart, 'afterHideData', function () {\n                    if (component.viewDataTableButton) {\n                        component.viewDataTableButton\n                            .setAttribute('aria-expanded', 'false');\n                    }\n                });\n                this.announcer = new Announcer(chart, 'assertive');\n            }\n            /**\n             * @private\n             */\n            initRegionsDefinitions() {\n                const component = this, accessibilityOptions = this.chart.options.accessibility;\n                this.screenReaderSections = {\n                    before: {\n                        element: null,\n                        buildContent: function (chart) {\n                            const formatter = accessibilityOptions.screenReaderSection\n                                .beforeChartFormatter;\n                            return formatter ? formatter(chart) :\n                                component.defaultBeforeChartFormatter(chart);\n                        },\n                        insertIntoDOM: function (el, chart) {\n                            chart.renderTo.insertBefore(el, chart.renderTo.firstChild);\n                        },\n                        afterInserted: function () {\n                            if (typeof component.sonifyButtonId !== 'undefined') {\n                                component.initSonifyButton(component.sonifyButtonId);\n                            }\n                            if (typeof component.dataTableButtonId !== 'undefined') {\n                                component.initDataTableButton(component.dataTableButtonId);\n                            }\n                        }\n                    },\n                    after: {\n                        element: null,\n                        buildContent: function (chart) {\n                            const formatter = accessibilityOptions.screenReaderSection\n                                .afterChartFormatter;\n                            return formatter ? formatter(chart) :\n                                component.defaultAfterChartFormatter();\n                        },\n                        insertIntoDOM: function (el, chart) {\n                            chart.renderTo.insertBefore(el, chart.container.nextSibling);\n                        },\n                        afterInserted: function () {\n                            if (component.chart.accessibility &&\n                                accessibilityOptions.keyboardNavigation.enabled) {\n                                component.chart.accessibility\n                                    .keyboardNavigation.updateExitAnchor(); // #15986\n                            }\n                        }\n                    }\n                };\n            }\n            /**\n             * Called on chart render. Have to update the sections on render, in order\n             * to get a11y info from series.\n             */\n            onChartRender() {\n                const component = this;\n                this.linkedDescriptionElement = this.getLinkedDescriptionElement();\n                this.setLinkedDescriptionAttrs();\n                Object.keys(this.screenReaderSections).forEach(function (regionKey) {\n                    component.updateScreenReaderSection(regionKey);\n                });\n            }\n            /**\n             * @private\n             */\n            getLinkedDescriptionElement() {\n                const chartOptions = this.chart.options, linkedDescOption = chartOptions.accessibility.linkedDescription;\n                if (!linkedDescOption) {\n                    return;\n                }\n                if (typeof linkedDescOption !== 'string') {\n                    return linkedDescOption;\n                }\n                const query = format(linkedDescOption, this.chart), queryMatch = doc.querySelectorAll(query);\n                if (queryMatch.length === 1) {\n                    return queryMatch[0];\n                }\n            }\n            /**\n             * @private\n             */\n            setLinkedDescriptionAttrs() {\n                const el = this.linkedDescriptionElement;\n                if (el) {\n                    el.setAttribute('aria-hidden', 'true');\n                    addClass(el, 'highcharts-linked-description');\n                }\n            }\n            /**\n             * @private\n             * @param {string} regionKey\n             * The name/key of the region to update\n             */\n            updateScreenReaderSection(regionKey) {\n                const chart = this.chart;\n                const region = this.screenReaderSections[regionKey];\n                const content = region.buildContent(chart);\n                const sectionDiv = region.element = (region.element || this.createElement('div'));\n                const hiddenDiv = (sectionDiv.firstChild || this.createElement('div'));\n                if (content) {\n                    this.setScreenReaderSectionAttribs(sectionDiv, regionKey);\n                    AST.setElementHTML(hiddenDiv, content);\n                    sectionDiv.appendChild(hiddenDiv);\n                    region.insertIntoDOM(sectionDiv, chart);\n                    if (chart.styledMode) {\n                        addClass(hiddenDiv, 'highcharts-visually-hidden');\n                    }\n                    else {\n                        visuallyHideElement(hiddenDiv);\n                    }\n                    unhideChartElementFromAT(chart, hiddenDiv);\n                    if (region.afterInserted) {\n                        region.afterInserted();\n                    }\n                }\n                else {\n                    if (sectionDiv.parentNode) {\n                        sectionDiv.parentNode.removeChild(sectionDiv);\n                    }\n                    region.element = null;\n                }\n            }\n            /**\n             * Apply a11y attributes to a screen reader info section\n             * @private\n             * @param {Highcharts.HTMLDOMElement} sectionDiv The section element\n             * @param {string} regionKey Name/key of the region we are setting attrs for\n             */\n            setScreenReaderSectionAttribs(sectionDiv, regionKey) {\n                const chart = this.chart, labelText = chart.langFormat('accessibility.screenReaderSection.' + regionKey +\n                    'RegionLabel', { chart: chart, chartTitle: getChartTitle(chart) }), sectionId = `highcharts-screen-reader-region-${regionKey}-${chart.index}`;\n                attr(sectionDiv, {\n                    id: sectionId,\n                    'aria-label': labelText || void 0\n                });\n                // Sections are wrapped to be positioned relatively to chart in case\n                // elements inside are tabbed to.\n                sectionDiv.style.position = 'relative';\n                if (labelText) {\n                    sectionDiv.setAttribute('role', chart.options.accessibility.landmarkVerbosity === 'all' ?\n                        'region' : 'group');\n                }\n            }\n            /**\n             * @private\n             */\n            defaultBeforeChartFormatter() {\n                const chart = this.chart, format = chart.options.accessibility.screenReaderSection\n                    .beforeChartFormat;\n                if (!format) {\n                    return '';\n                }\n                const axesDesc = this.getAxesDescription(), shouldHaveSonifyBtn = (chart.sonify &&\n                    chart.options.sonification &&\n                    chart.options.sonification.enabled), sonifyButtonId = 'highcharts-a11y-sonify-data-btn-' +\n                    chart.index, dataTableButtonId = 'hc-linkto-highcharts-data-table-' +\n                    chart.index, annotationsList = getAnnotationsInfoHTML(chart), annotationsTitleStr = chart.langFormat('accessibility.screenReaderSection.annotations.heading', { chart: chart }), context = {\n                    headingTagName: getHeadingTagNameForElement(chart.renderTo),\n                    chartTitle: getChartTitle(chart),\n                    typeDescription: this.getTypeDescriptionText(),\n                    chartSubtitle: this.getSubtitleText(),\n                    chartLongdesc: this.getLongdescText(),\n                    xAxisDescription: axesDesc.xAxis,\n                    yAxisDescription: axesDesc.yAxis,\n                    playAsSoundButton: shouldHaveSonifyBtn ?\n                        this.getSonifyButtonText(sonifyButtonId) : '',\n                    viewTableButton: chart.getCSV ?\n                        this.getDataTableButtonText(dataTableButtonId) : '',\n                    annotationsTitle: annotationsList ? annotationsTitleStr : '',\n                    annotationsList: annotationsList\n                }, formattedString = A11yI18n.i18nFormat(format, context, chart);\n                this.dataTableButtonId = dataTableButtonId;\n                this.sonifyButtonId = sonifyButtonId;\n                return stripEmptyHTMLTags(formattedString);\n            }\n            /**\n             * @private\n             */\n            defaultAfterChartFormatter() {\n                const chart = this.chart;\n                const format = chart.options.accessibility.screenReaderSection\n                    .afterChartFormat;\n                if (!format) {\n                    return '';\n                }\n                const context = { endOfChartMarker: this.getEndOfChartMarkerText() };\n                const formattedString = A11yI18n.i18nFormat(format, context, chart);\n                return stripEmptyHTMLTags(formattedString);\n            }\n            /**\n             * @private\n             */\n            getLinkedDescription() {\n                const el = this.linkedDescriptionElement, content = el && el.innerHTML || '';\n                return stripHTMLTagsFromString(content, this.chart.renderer.forExport);\n            }\n            /**\n             * @private\n             */\n            getLongdescText() {\n                const chartOptions = this.chart.options, captionOptions = chartOptions.caption, captionText = captionOptions && captionOptions.text, linkedDescription = this.getLinkedDescription();\n                return (chartOptions.accessibility.description ||\n                    linkedDescription ||\n                    captionText ||\n                    '');\n            }\n            /**\n             * @private\n             */\n            getTypeDescriptionText() {\n                const chart = this.chart;\n                return chart.types ?\n                    chart.options.accessibility.typeDescription ||\n                        getTypeDescription(chart, chart.types) : '';\n            }\n            /**\n             * @private\n             */\n            getDataTableButtonText(buttonId) {\n                const chart = this.chart, buttonText = chart.langFormat('accessibility.table.viewAsDataTableButtonText', { chart: chart, chartTitle: getChartTitle(chart) });\n                return '<button id=\"' + buttonId + '\">' + buttonText + '</button>';\n            }\n            /**\n             * @private\n             */\n            getSonifyButtonText(buttonId) {\n                const chart = this.chart;\n                if (chart.options.sonification &&\n                    chart.options.sonification.enabled === false) {\n                    return '';\n                }\n                const buttonText = chart.langFormat('accessibility.sonification.playAsSoundButtonText', { chart: chart, chartTitle: getChartTitle(chart) });\n                return '<button id=\"' + buttonId + '\">' + buttonText + '</button>';\n            }\n            /**\n             * @private\n             */\n            getSubtitleText() {\n                const subtitle = (this.chart.options.subtitle);\n                return stripHTMLTagsFromString(subtitle && subtitle.text || '', this.chart.renderer.forExport);\n            }\n            /**\n             * @private\n             */\n            getEndOfChartMarkerText() {\n                const chart = this.chart, markerText = chart.langFormat('accessibility.screenReaderSection.endOfChartMarker', { chart: chart }), id = 'highcharts-end-of-chart-marker-' + chart.index;\n                return '<div id=\"' + id + '\">' + markerText + '</div>';\n            }\n            /**\n             * @private\n             * @param {Highcharts.Dictionary<string>} e\n             */\n            onDataTableCreated(e) {\n                const chart = this.chart;\n                if (chart.options.accessibility.enabled) {\n                    if (this.viewDataTableButton) {\n                        this.viewDataTableButton.setAttribute('aria-expanded', 'true');\n                    }\n                    const attributes = e.tree.attributes || {};\n                    attributes.tabindex = -1;\n                    attributes.summary = getTableSummary(chart);\n                    e.tree.attributes = attributes;\n                }\n            }\n            /**\n             * @private\n             */\n            focusDataTable() {\n                const tableDiv = this.dataTableDiv, table = tableDiv && tableDiv.getElementsByTagName('table')[0];\n                if (table && table.focus) {\n                    table.focus();\n                }\n            }\n            /**\n             * @private\n             * @param {string} sonifyButtonId\n             */\n            initSonifyButton(sonifyButtonId) {\n                const el = this.sonifyButton = getElement(sonifyButtonId);\n                const chart = this.chart;\n                const defaultHandler = (e) => {\n                    if (el) {\n                        el.setAttribute('aria-hidden', 'true');\n                        el.setAttribute('aria-label', '');\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                    const announceMsg = chart.langFormat('accessibility.sonification.playAsSoundClickAnnouncement', { chart: chart });\n                    this.announcer.announce(announceMsg);\n                    setTimeout(() => {\n                        if (el) {\n                            el.removeAttribute('aria-hidden');\n                            el.removeAttribute('aria-label');\n                        }\n                        if (chart.sonify) {\n                            chart.sonify();\n                        }\n                    }, 1000); // Delay to let screen reader speak the button press\n                };\n                if (el && chart) {\n                    el.setAttribute('tabindex', -1);\n                    el.onclick = function (e) {\n                        const onPlayAsSoundClick = (chart.options.accessibility &&\n                            chart.options.accessibility.screenReaderSection\n                                .onPlayAsSoundClick);\n                        (onPlayAsSoundClick || defaultHandler).call(this, e, chart);\n                    };\n                }\n            }\n            /**\n             * Set attribs and handlers for default viewAsDataTable button if exists.\n             * @private\n             * @param {string} tableButtonId\n             */\n            initDataTableButton(tableButtonId) {\n                const el = this.viewDataTableButton = getElement(tableButtonId), chart = this.chart, tableId = tableButtonId.replace('hc-linkto-', '');\n                if (el) {\n                    attr(el, {\n                        tabindex: -1,\n                        'aria-expanded': !!getElement(tableId)\n                    });\n                    el.onclick = chart.options.accessibility\n                        .screenReaderSection.onViewDataTableClick ||\n                        function () {\n                            chart.viewData();\n                        };\n                }\n            }\n            /**\n             * Return object with text description of each of the chart's axes.\n             * @private\n             */\n            getAxesDescription() {\n                const chart = this.chart, shouldDescribeColl = function (collectionKey, defaultCondition) {\n                    const axes = chart[collectionKey];\n                    return axes.length > 1 || axes[0] &&\n                        pick(axes[0].options.accessibility &&\n                            axes[0].options.accessibility.enabled, defaultCondition);\n                }, hasNoMap = !!chart.types &&\n                    chart.types.indexOf('map') < 0 &&\n                    chart.types.indexOf('treemap') < 0 &&\n                    chart.types.indexOf('tilemap') < 0, hasCartesian = !!chart.hasCartesianSeries, showXAxes = shouldDescribeColl('xAxis', !chart.angular && hasCartesian && hasNoMap), showYAxes = shouldDescribeColl('yAxis', hasCartesian && hasNoMap), desc = {};\n                if (showXAxes) {\n                    desc.xAxis = this.getAxisDescriptionText('xAxis');\n                }\n                if (showYAxes) {\n                    desc.yAxis = this.getAxisDescriptionText('yAxis');\n                }\n                return desc;\n            }\n            /**\n             * @private\n             */\n            getAxisDescriptionText(collectionKey) {\n                const chart = this.chart;\n                const axes = chart[collectionKey];\n                return chart.langFormat('accessibility.axis.' + collectionKey + 'Description' + (axes.length > 1 ? 'Plural' : 'Singular'), {\n                    chart: chart,\n                    names: axes.map(function (axis) {\n                        return getAxisDescription(axis);\n                    }),\n                    ranges: axes.map(function (axis) {\n                        return getAxisRangeDescription(axis);\n                    }),\n                    numAxes: axes.length\n                });\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return InfoRegionsComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/MenuComponent.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (Chart, H, U, AccessibilityComponent, KeyboardNavigationHandler, ChartUtilities, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for exporting menu.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { attr, pushUnique } = U;\n        const { getChartTitle, unhideChartElementFromAT } = ChartUtilities;\n        const { getFakeMouseEvent } = HTMLUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the wrapped export button element of a chart.\n         * @private\n         */\n        function getExportMenuButtonElement(chart) {\n            return chart.exportSVGElements && chart.exportSVGElements[0];\n        }\n        /**\n         * @private\n         */\n        function exportingShouldHaveA11y(chart) {\n            const exportingOpts = chart.options.exporting, exportButton = getExportMenuButtonElement(chart);\n            return !!(exportingOpts &&\n                exportingOpts.enabled !== false &&\n                exportingOpts.accessibility &&\n                exportingOpts.accessibility.enabled &&\n                exportButton &&\n                exportButton.element);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MenuComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.MenuComponent\n         */\n        class MenuComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             */\n            init() {\n                const chart = this.chart, component = this;\n                this.addEvent(chart, 'exportMenuShown', function () {\n                    component.onMenuShown();\n                });\n                this.addEvent(chart, 'exportMenuHidden', function () {\n                    component.onMenuHidden();\n                });\n                this.createProxyGroup();\n            }\n            /**\n             * @private\n             */\n            onMenuHidden() {\n                const menu = this.chart.exportContextMenu;\n                if (menu) {\n                    menu.setAttribute('aria-hidden', 'true');\n                }\n                this.setExportButtonExpandedState('false');\n            }\n            /**\n             * @private\n             */\n            onMenuShown() {\n                const chart = this.chart, menu = chart.exportContextMenu;\n                if (menu) {\n                    this.addAccessibleContextMenuAttribs();\n                    unhideChartElementFromAT(chart, menu);\n                }\n                this.setExportButtonExpandedState('true');\n            }\n            /**\n             * @private\n             * @param {string} stateStr\n             */\n            setExportButtonExpandedState(stateStr) {\n                if (this.exportButtonProxy) {\n                    this.exportButtonProxy.innerElement.setAttribute('aria-expanded', stateStr);\n                }\n            }\n            /**\n             * Called on each render of the chart. We need to update positioning of the\n             * proxy overlay.\n             */\n            onChartRender() {\n                const chart = this.chart, focusEl = chart.focusElement, a11y = chart.accessibility;\n                this.proxyProvider.clearGroup('chartMenu');\n                this.proxyMenuButton();\n                if (this.exportButtonProxy &&\n                    focusEl &&\n                    focusEl === chart.exportingGroup) {\n                    if (focusEl.focusBorder) {\n                        chart.setFocusToElement(focusEl, this.exportButtonProxy.innerElement);\n                    }\n                    else if (a11y) {\n                        a11y.keyboardNavigation.tabindexContainer.focus();\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            proxyMenuButton() {\n                const chart = this.chart;\n                const proxyProvider = this.proxyProvider;\n                const buttonEl = getExportMenuButtonElement(chart);\n                if (exportingShouldHaveA11y(chart) && buttonEl) {\n                    this.exportButtonProxy = proxyProvider.addProxyElement('chartMenu', { click: buttonEl }, 'button', {\n                        'aria-label': chart.langFormat('accessibility.exporting.menuButtonLabel', {\n                            chart: chart,\n                            chartTitle: getChartTitle(chart)\n                        }),\n                        'aria-expanded': false,\n                        title: chart.options.lang.contextButtonTitle || null\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            createProxyGroup() {\n                const chart = this.chart;\n                if (chart && this.proxyProvider) {\n                    this.proxyProvider.addGroup('chartMenu');\n                }\n            }\n            /**\n             * @private\n             */\n            addAccessibleContextMenuAttribs() {\n                const chart = this.chart, exportList = chart.exportDivElements;\n                if (exportList && exportList.length) {\n                    // Set tabindex on the menu items to allow focusing by script\n                    // Set role to give screen readers a chance to pick up the contents\n                    exportList.forEach((item) => {\n                        if (item) {\n                            if (item.tagName === 'LI' &&\n                                !(item.children && item.children.length)) {\n                                item.setAttribute('tabindex', -1);\n                            }\n                            else {\n                                item.setAttribute('aria-hidden', 'true');\n                            }\n                        }\n                    });\n                    // Set accessibility properties on parent div\n                    const parentDiv = (exportList[0] && exportList[0].parentNode);\n                    if (parentDiv) {\n                        attr(parentDiv, {\n                            'aria-hidden': void 0,\n                            'aria-label': chart.langFormat('accessibility.exporting.chartMenuLabel', { chart }),\n                            role: 'list' // Needed for webkit/VO\n                        });\n                    }\n                }\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                const keys = this.keyCodes, chart = this.chart, component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        // Arrow prev handler\n                        [\n                            [keys.left, keys.up],\n                            function () {\n                                return component.onKbdPrevious(this);\n                            }\n                        ],\n                        // Arrow next handler\n                        [\n                            [keys.right, keys.down],\n                            function () {\n                                return component.onKbdNext(this);\n                            }\n                        ],\n                        // Click handler\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onKbdClick(this);\n                            }\n                        ]\n                    ],\n                    // Only run exporting navigation if exporting support exists and is\n                    // enabled on chart\n                    validate: function () {\n                        return !!chart.exporting &&\n                            chart.options.exporting.enabled !== false &&\n                            chart.options.exporting.accessibility.enabled !==\n                                false;\n                    },\n                    // Focus export menu button\n                    init: function () {\n                        const proxy = component.exportButtonProxy;\n                        const svgEl = component.chart.exportingGroup;\n                        if (proxy && svgEl) {\n                            chart.setFocusToElement(svgEl, proxy.innerElement);\n                        }\n                    },\n                    // Hide the menu\n                    terminate: function () {\n                        chart.hideExportMenu();\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdPrevious(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const a11yOptions = chart.options.accessibility;\n                const response = keyboardNavigationHandler.response;\n                // Try to highlight prev item in list. Highlighting e.g.\n                // separators will fail.\n                let i = chart.highlightedExportItemIx || 0;\n                while (i--) {\n                    if (chart.highlightExportItem(i)) {\n                        return response.success;\n                    }\n                }\n                // We failed, so wrap around or move to prev module\n                if (a11yOptions.keyboardNavigation.wrapAround) {\n                    chart.highlightLastExportItem();\n                    return response.success;\n                }\n                return response.prev;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdNext(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const a11yOptions = chart.options.accessibility;\n                const response = keyboardNavigationHandler.response;\n                // Try to highlight next item in list. Highlighting e.g.\n                // separators will fail.\n                for (let i = (chart.highlightedExportItemIx || 0) + 1; i < chart.exportDivElements.length; ++i) {\n                    if (chart.highlightExportItem(i)) {\n                        return response.success;\n                    }\n                }\n                // We failed, so wrap around or move to next module\n                if (a11yOptions.keyboardNavigation.wrapAround) {\n                    chart.highlightExportItem(0);\n                    return response.success;\n                }\n                return response.next;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdClick(keyboardNavigationHandler) {\n                const chart = this.chart;\n                const curHighlightedItem = chart.exportDivElements[chart.highlightedExportItemIx];\n                const exportButtonElement = getExportMenuButtonElement(chart).element;\n                if (chart.openMenu) {\n                    this.fakeClickEvent(curHighlightedItem);\n                }\n                else {\n                    this.fakeClickEvent(exportButtonElement);\n                    chart.highlightExportItem(0);\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (MenuComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(ChartClass) {\n                if (pushUnique(composed, compose)) {\n                    const chartProto = Chart.prototype;\n                    chartProto.hideExportMenu = chartHideExportMenu;\n                    chartProto.highlightExportItem = chartHighlightExportItem;\n                    chartProto.highlightLastExportItem = chartHighlightLastExportItem;\n                    chartProto.showExportMenu = chartShowExportMenu;\n                }\n            }\n            MenuComponent.compose = compose;\n            /**\n             * Show the export menu and focus the first item (if exists).\n             *\n             * @private\n             * @function Highcharts.Chart#showExportMenu\n             */\n            function chartShowExportMenu() {\n                const exportButton = getExportMenuButtonElement(this);\n                if (exportButton) {\n                    const el = exportButton.element;\n                    if (el.onclick) {\n                        el.onclick(getFakeMouseEvent('click'));\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.Chart#hideExportMenu\n             */\n            function chartHideExportMenu() {\n                const chart = this, exportList = chart.exportDivElements;\n                if (exportList && chart.exportContextMenu && chart.openMenu) {\n                    // Reset hover states etc.\n                    exportList.forEach((el) => {\n                        if (el &&\n                            el.className === 'highcharts-menu-item' &&\n                            el.onmouseout) {\n                            el.onmouseout(getFakeMouseEvent('mouseout'));\n                        }\n                    });\n                    chart.highlightedExportItemIx = 0;\n                    // Hide the menu div\n                    chart.exportContextMenu.hideMenu();\n                    // Make sure the chart has focus and can capture keyboard events\n                    chart.container.focus();\n                }\n            }\n            /**\n             * Highlight export menu item by index.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightExportItem\n             */\n            function chartHighlightExportItem(ix) {\n                const listItem = this.exportDivElements && this.exportDivElements[ix];\n                const curHighlighted = this.exportDivElements &&\n                    this.exportDivElements[this.highlightedExportItemIx];\n                if (listItem &&\n                    listItem.tagName === 'LI' &&\n                    !(listItem.children && listItem.children.length)) {\n                    // Test if we have focus support for SVG elements\n                    const hasSVGFocusSupport = !!(this.renderTo.getElementsByTagName('g')[0] || {}).focus;\n                    // Only focus if we can set focus back to the elements after\n                    // destroying the menu (#7422)\n                    if (listItem.focus && hasSVGFocusSupport) {\n                        listItem.focus();\n                    }\n                    if (curHighlighted && curHighlighted.onmouseout) {\n                        curHighlighted.onmouseout(getFakeMouseEvent('mouseout'));\n                    }\n                    if (listItem.onmouseover) {\n                        listItem.onmouseover(getFakeMouseEvent('mouseover'));\n                    }\n                    this.highlightedExportItemIx = ix;\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * Try to highlight the last valid export menu item.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightLastExportItem\n             */\n            function chartHighlightLastExportItem() {\n                const chart = this;\n                if (chart.exportDivElements) {\n                    let i = chart.exportDivElements.length;\n                    while (i--) {\n                        if (chart.highlightExportItem(i)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n        })(MenuComponent || (MenuComponent = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MenuComponent;\n    });\n    _registerModule(_modules, 'Accessibility/KeyboardNavigation.js', [_modules['Core/Globals.js'], _modules['Accessibility/Components/MenuComponent.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, MenuComponent, U, EventProvider, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Main keyboard navigation handling.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed, doc, win } = H;\n        const { addEvent, fireEvent, pushUnique } = U;\n        const { getElement, simulatedEventTarget } = HTMLUtilities;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The KeyboardNavigation class, containing the overall keyboard navigation\n         * logic for the chart.\n         *\n         * @requires module:modules/accessibility\n         *\n         * @private\n         * @class\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         * @param {Object} components\n         *        Map of component names to AccessibilityComponent objects.\n         * @name Highcharts.KeyboardNavigation\n         */\n        class KeyboardNavigation {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, components) {\n                this.currentModuleIx = NaN;\n                this.modules = [];\n                this.init(chart, components);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the class\n             * @private\n             * @param {Highcharts.Chart} chart\n             *        Chart object\n             * @param {Object} components\n             *        Map of component names to AccessibilityComponent objects.\n             */\n            init(chart, components) {\n                const ep = this.eventProvider = new EventProvider();\n                this.chart = chart;\n                this.components = components;\n                this.modules = [];\n                this.currentModuleIx = 0;\n                this.update();\n                ep.addEvent(this.tabindexContainer, 'keydown', (e) => this.onKeydown(e));\n                ep.addEvent(this.tabindexContainer, 'focus', (e) => this.onFocus(e));\n                ['mouseup', 'touchend'].forEach((eventName) => ep.addEvent(doc, eventName, (e) => this.onMouseUp(e)));\n                ['mousedown', 'touchstart'].forEach((eventName) => ep.addEvent(chart.renderTo, eventName, () => {\n                    this.isClickingChart = true;\n                }));\n            }\n            /**\n             * Update the modules for the keyboard navigation.\n             * @param {Array<string>} [order]\n             *        Array specifying the tab order of the components.\n             */\n            update(order) {\n                const a11yOptions = this.chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, components = this.components;\n                this.updateContainerTabindex();\n                if (keyboardOptions &&\n                    keyboardOptions.enabled &&\n                    order &&\n                    order.length) {\n                    // We (still) have keyboard navigation. Update module list\n                    this.modules = order.reduce(function (modules, componentName) {\n                        const navModules = components[componentName]\n                            .getKeyboardNavigation();\n                        return modules.concat(navModules);\n                    }, []);\n                    this.updateExitAnchor();\n                }\n                else {\n                    this.modules = [];\n                    this.currentModuleIx = 0;\n                    this.removeExitAnchor();\n                }\n            }\n            /**\n             * We use an exit anchor to move focus out of chart whenever we want, by\n             * setting focus to this div and not preventing the default tab action. We\n             * also use this when users come back into the chart by tabbing back, in\n             * order to navigate from the end of the chart.\n             * @private\n             */\n            updateExitAnchor() {\n                const endMarkerId = `highcharts-end-of-chart-marker-${this.chart.index}`, endMarker = getElement(endMarkerId);\n                this.removeExitAnchor();\n                if (endMarker) {\n                    this.makeElementAnExitAnchor(endMarker);\n                    this.exitAnchor = endMarker;\n                }\n                else {\n                    this.createExitAnchor();\n                }\n            }\n            /**\n             * Move to prev/next module.\n             * @private\n             * @param {number} direction\n             * Direction to move. +1 for next, -1 for prev.\n             * @return {boolean}\n             * True if there was a valid module in direction.\n             */\n            move(direction) {\n                const curModule = this.modules && this.modules[this.currentModuleIx];\n                if (curModule && curModule.terminate) {\n                    curModule.terminate(direction);\n                }\n                // Remove existing focus border if any\n                if (this.chart.focusElement) {\n                    this.chart.focusElement.removeFocusBorder();\n                }\n                this.currentModuleIx += direction;\n                const newModule = this.modules && this.modules[this.currentModuleIx];\n                if (newModule) {\n                    if (newModule.validate && !newModule.validate()) {\n                        return this.move(direction); // Invalid module, recurse\n                    }\n                    if (newModule.init) {\n                        newModule.init(direction); // Valid module, init it\n                        return true;\n                    }\n                }\n                // No module\n                this.currentModuleIx = 0; // Reset counter\n                // Set focus to chart or exit anchor depending on direction\n                this.exiting = true;\n                if (direction > 0) {\n                    this.exitAnchor && this.exitAnchor.focus();\n                }\n                else {\n                    this.tabindexContainer.focus();\n                }\n                return false;\n            }\n            /**\n             * Function to run on container focus\n             * @private\n             * @param {global.FocusEvent} e Browser focus event.\n             */\n            onFocus(e) {\n                const chart = this.chart, focusComesFromChart = (e.relatedTarget &&\n                    chart.container.contains(e.relatedTarget)), a11yOptions = chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, enabled = keyboardOptions && keyboardOptions.enabled;\n                // Init keyboard nav if tabbing into chart\n                if (enabled &&\n                    !this.exiting &&\n                    !this.tabbingInBackwards &&\n                    !this.isClickingChart &&\n                    !focusComesFromChart) {\n                    const ix = this.getFirstValidModuleIx();\n                    if (ix !== null) {\n                        this.currentModuleIx = ix;\n                        this.modules[ix].init(1);\n                    }\n                }\n                this.keyboardReset = false;\n                this.exiting = false;\n            }\n            /**\n             * Reset chart navigation state if we mouse click and it's not already\n             * reset. Reset fully if outside the chart, otherwise just hide focus\n             * indicator.\n             * @private\n             */\n            onMouseUp(e) {\n                delete this.isClickingChart;\n                if (!this.keyboardReset &&\n                    e.relatedTarget !== simulatedEventTarget) {\n                    const chart = this.chart;\n                    if (!e.target ||\n                        !chart.container.contains(e.target)) {\n                        const curMod = this.modules &&\n                            this.modules[this.currentModuleIx || 0];\n                        if (curMod && curMod.terminate) {\n                            curMod.terminate();\n                        }\n                        this.currentModuleIx = 0;\n                    }\n                    if (chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                        delete chart.focusElement;\n                    }\n                    this.keyboardReset = true;\n                }\n            }\n            /**\n             * Function to run on keydown\n             * @private\n             * @param {global.KeyboardEvent} ev Browser keydown event.\n             */\n            onKeydown(ev) {\n                const e = ev || win.event, curNavModule = (this.modules &&\n                    this.modules.length &&\n                    this.modules[this.currentModuleIx]);\n                let preventDefault;\n                const target = e.target;\n                if (target &&\n                    target.nodeName === 'INPUT' &&\n                    !target.classList.contains('highcharts-a11y-proxy-element')) {\n                    return;\n                }\n                // Used for resetting nav state when clicking outside chart\n                this.keyboardReset = false;\n                // Used for sending focus out of the chart by the modules.\n                this.exiting = false;\n                // If there is a nav module for the current index, run it.\n                // Otherwise, we are outside of the chart in some direction.\n                if (curNavModule) {\n                    const response = curNavModule.run(e);\n                    if (response === curNavModule.response.success) {\n                        preventDefault = true;\n                    }\n                    else if (response === curNavModule.response.prev) {\n                        preventDefault = this.move(-1);\n                    }\n                    else if (response === curNavModule.response.next) {\n                        preventDefault = this.move(1);\n                    }\n                    if (preventDefault) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }\n            }\n            /**\n             * Chart container should have tabindex if navigation is enabled.\n             * @private\n             */\n            updateContainerTabindex() {\n                const a11yOptions = this.chart.options.accessibility, keyboardOptions = a11yOptions && a11yOptions.keyboardNavigation, shouldHaveTabindex = !(keyboardOptions && keyboardOptions.enabled === false), chart = this.chart, container = chart.container;\n                let tabindexContainer;\n                if (chart.renderTo.hasAttribute('tabindex')) {\n                    container.removeAttribute('tabindex');\n                    tabindexContainer = chart.renderTo;\n                }\n                else {\n                    tabindexContainer = container;\n                }\n                this.tabindexContainer = tabindexContainer;\n                const curTabindex = tabindexContainer.getAttribute('tabindex');\n                if (shouldHaveTabindex && !curTabindex) {\n                    tabindexContainer.setAttribute('tabindex', '0');\n                }\n                else if (!shouldHaveTabindex) {\n                    chart.container.removeAttribute('tabindex');\n                }\n            }\n            /**\n             * Add new exit anchor to the chart.\n             * @private\n             */\n            createExitAnchor() {\n                const chart = this.chart, exitAnchor = this.exitAnchor = doc.createElement('div');\n                chart.renderTo.appendChild(exitAnchor);\n                this.makeElementAnExitAnchor(exitAnchor);\n            }\n            /**\n             * Add attributes and events to an element to make it function as an\n             * exit anchor.\n             * @private\n             */\n            makeElementAnExitAnchor(el) {\n                const chartTabindex = this.tabindexContainer.getAttribute('tabindex') || 0;\n                el.setAttribute('class', 'highcharts-exit-anchor');\n                el.setAttribute('tabindex', chartTabindex);\n                el.setAttribute('aria-hidden', false);\n                // Handle focus\n                this.addExitAnchorEventsToEl(el);\n            }\n            /**\n             * Destroy the exit anchor and remove from DOM.\n             * @private\n             */\n            removeExitAnchor() {\n                if (this.exitAnchor && this.exitAnchor.parentNode) {\n                    this.exitAnchor.parentNode.removeChild(this.exitAnchor);\n                    delete this.exitAnchor;\n                }\n            }\n            /**\n             * Add focus handler to exit anchor element.\n             * @private\n             */\n            addExitAnchorEventsToEl(element) {\n                const chart = this.chart, keyboardNavigation = this;\n                this.eventProvider.addEvent(element, 'focus', function (ev) {\n                    const e = ev || win.event, focusComesFromChart = (e.relatedTarget &&\n                        chart.container.contains(e.relatedTarget)), comingInBackwards = !(focusComesFromChart || keyboardNavigation.exiting);\n                    if (chart.focusElement) {\n                        delete chart.focusElement;\n                    }\n                    if (comingInBackwards) {\n                        // Focus the container instead\n                        keyboardNavigation.tabbingInBackwards = true;\n                        keyboardNavigation.tabindexContainer.focus();\n                        delete keyboardNavigation.tabbingInBackwards;\n                        e.preventDefault();\n                        // Move to last valid keyboard nav module\n                        // Note the we don't run it, just set the index\n                        if (keyboardNavigation.modules &&\n                            keyboardNavigation.modules.length) {\n                            keyboardNavigation.currentModuleIx =\n                                keyboardNavigation.modules.length - 1;\n                            const curModule = keyboardNavigation.modules[keyboardNavigation.currentModuleIx];\n                            // Validate the module\n                            if (curModule &&\n                                curModule.validate && !curModule.validate()) {\n                                // Invalid. Try moving backwards to find next valid.\n                                keyboardNavigation.move(-1);\n                            }\n                            else if (curModule) {\n                                // We have a valid module, init it\n                                curModule.init(-1);\n                            }\n                        }\n                    }\n                    else {\n                        // Don't skip the next focus, we only skip once.\n                        keyboardNavigation.exiting = false;\n                    }\n                });\n            }\n            /**\n             * Get the ix of the first module that either does not require validation or\n             * validates positively.\n             * @private\n             */\n            getFirstValidModuleIx() {\n                const len = this.modules.length;\n                for (let i = 0; i < len; ++i) {\n                    const mod = this.modules[i];\n                    if (!mod.validate || mod.validate()) {\n                        return i;\n                    }\n                }\n                return null;\n            }\n            /**\n             * Remove all traces of keyboard navigation.\n             * @private\n             */\n            destroy() {\n                this.removeExitAnchor();\n                this.eventProvider.removeAddedEvents();\n                this.chart.container.removeAttribute('tabindex');\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (KeyboardNavigation) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Composition function.\n             * @private\n             */\n            function compose(ChartClass) {\n                MenuComponent.compose(ChartClass);\n                if (pushUnique(composed, compose)) {\n                    const chartProto = ChartClass.prototype;\n                    chartProto.dismissPopupContent = chartDismissPopupContent;\n                    addEvent(doc, 'keydown', documentOnKeydown);\n                }\n                return ChartClass;\n            }\n            KeyboardNavigation.compose = compose;\n            /**\n             * Dismiss popup content in chart, including export menu and tooltip.\n             * @private\n             */\n            function chartDismissPopupContent() {\n                const chart = this;\n                fireEvent(this, 'dismissPopupContent', {}, function () {\n                    if (chart.tooltip) {\n                        chart.tooltip.hide(0);\n                    }\n                    chart.hideExportMenu();\n                });\n            }\n            /**\n             * Add event listener to document to detect ESC key press and dismiss\n             * hover/popup content.\n             * @private\n             */\n            function documentOnKeydown(e) {\n                const keycode = e.which || e.keyCode;\n                const esc = 27;\n                if (keycode === esc && H.charts) {\n                    H.charts.forEach((chart) => {\n                        if (chart && chart.dismissPopupContent) {\n                            chart.dismissPopupContent();\n                        }\n                    });\n                }\n            }\n        })(KeyboardNavigation || (KeyboardNavigation = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return KeyboardNavigation;\n    });\n    _registerModule(_modules, 'Accessibility/Components/LegendComponent.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Core/Legend/Legend.js'], _modules['Core/Utilities.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (A, H, Legend, U, AccessibilityComponent, KeyboardNavigationHandler, CU, HU) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart legend.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { composed, doc } = H;\n        const { addEvent, fireEvent, isNumber, pick, pushUnique, syncTimeout } = U;\n        const { getChartTitle } = CU;\n        const { stripHTMLTagsFromString: stripHTMLTags, addClass, removeClass } = HU;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function scrollLegendToItem(legend, itemIx) {\n            const itemPage = (legend.allItems[itemIx].legendItem || {}).pageIx, curPage = legend.currentPage;\n            if (typeof itemPage !== 'undefined' && itemPage + 1 !== curPage) {\n                legend.scroll(1 + itemPage - curPage);\n            }\n        }\n        /**\n         * @private\n         */\n        function shouldDoLegendA11y(chart) {\n            const items = chart.legend && chart.legend.allItems, legendA11yOptions = (chart.options.legend.accessibility || {}), unsupportedColorAxis = chart.colorAxis && chart.colorAxis.some((c) => !c.dataClasses || !c.dataClasses.length);\n            return !!(items && items.length &&\n                !unsupportedColorAxis &&\n                legendA11yOptions.enabled !== false);\n        }\n        /**\n         * @private\n         */\n        function setLegendItemHoverState(hoverActive, item) {\n            const legendItem = item.legendItem || {};\n            item.setState(hoverActive ? 'hover' : '', true);\n            for (const key of ['group', 'label', 'symbol']) {\n                const svgElement = legendItem[key];\n                const element = svgElement && svgElement.element || svgElement;\n                if (element) {\n                    fireEvent(element, hoverActive ? 'mouseover' : 'mouseout');\n                }\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The LegendComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.LegendComponent\n         */\n        class LegendComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.highlightedLegendItemIx = NaN;\n                this.proxyGroup = null;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const component = this;\n                this.recreateProxies();\n                // Note: Chart could create legend dynamically, so events cannot be\n                // tied to the component's chart's current legend.\n                // @todo 1. attach component to created legends\n                // @todo 2. move listeners to composition and access `this.component`\n                this.addEvent(Legend, 'afterScroll', function () {\n                    if (this.chart === component.chart) {\n                        component.proxyProvider.updateGroupProxyElementPositions('legend');\n                        component.updateLegendItemProxyVisibility();\n                        if (component.highlightedLegendItemIx > -1) {\n                            this.chart.highlightLegendItem(component.highlightedLegendItemIx);\n                        }\n                    }\n                });\n                this.addEvent(Legend, 'afterPositionItem', function (e) {\n                    if (this.chart === component.chart && this.chart.renderer) {\n                        component.updateProxyPositionForItem(e.item);\n                    }\n                });\n                this.addEvent(Legend, 'afterRender', function () {\n                    if (this.chart === component.chart &&\n                        this.chart.renderer &&\n                        component.recreateProxies()) {\n                        syncTimeout(() => component.proxyProvider\n                            .updateGroupProxyElementPositions('legend'), animObject(pick(this.chart.renderer.globalAnimation, true)).duration);\n                    }\n                });\n            }\n            /**\n             * Update visibility of legend items when using paged legend\n             * @private\n             */\n            updateLegendItemProxyVisibility() {\n                const chart = this.chart;\n                const legend = chart.legend;\n                const items = legend.allItems || [];\n                const curPage = legend.currentPage || 1;\n                const clipHeight = legend.clipHeight || 0;\n                let legendItem;\n                items.forEach((item) => {\n                    if (item.a11yProxyElement) {\n                        const hasPages = legend.pages && legend.pages.length;\n                        const proxyEl = item.a11yProxyElement.element;\n                        let hide = false;\n                        legendItem = item.legendItem || {};\n                        if (hasPages) {\n                            const itemPage = legendItem.pageIx || 0;\n                            const y = legendItem.y || 0;\n                            const h = legendItem.label ?\n                                Math.round(legendItem.label.getBBox().height) :\n                                0;\n                            hide = y + h - legend.pages[itemPage] > clipHeight ||\n                                itemPage !== curPage - 1;\n                        }\n                        if (hide) {\n                            if (chart.styledMode) {\n                                addClass(proxyEl, 'highcharts-a11y-invisible');\n                            }\n                            else {\n                                proxyEl.style.visibility = 'hidden';\n                            }\n                        }\n                        else {\n                            removeClass(proxyEl, 'highcharts-a11y-invisible');\n                            proxyEl.style.visibility = '';\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            onChartRender() {\n                if (!shouldDoLegendA11y(this.chart)) {\n                    this.removeProxies();\n                }\n            }\n            /**\n             * @private\n             */\n            highlightAdjacentLegendPage(direction) {\n                const chart = this.chart;\n                const legend = chart.legend;\n                const curPageIx = legend.currentPage || 1;\n                const newPageIx = curPageIx + direction;\n                const pages = legend.pages || [];\n                if (newPageIx > 0 && newPageIx <= pages.length) {\n                    let i = 0, res;\n                    for (const item of legend.allItems) {\n                        if (((item.legendItem || {}).pageIx || 0) + 1 === newPageIx) {\n                            res = chart.highlightLegendItem(i);\n                            if (res) {\n                                this.highlightedLegendItemIx = i;\n                            }\n                        }\n                        ++i;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            updateProxyPositionForItem(item) {\n                if (item.a11yProxyElement) {\n                    item.a11yProxyElement.refreshPosition();\n                }\n            }\n            /**\n             * Returns false if legend a11y is disabled and proxies were not created,\n             * true otherwise.\n             * @private\n             */\n            recreateProxies() {\n                const focusedElement = doc.activeElement;\n                const proxyGroup = this.proxyGroup;\n                const shouldRestoreFocus = focusedElement && proxyGroup &&\n                    proxyGroup.contains(focusedElement);\n                this.removeProxies();\n                if (shouldDoLegendA11y(this.chart)) {\n                    this.addLegendProxyGroup();\n                    this.proxyLegendItems();\n                    this.updateLegendItemProxyVisibility();\n                    this.updateLegendTitle();\n                    if (shouldRestoreFocus) {\n                        this.chart.highlightLegendItem(this.highlightedLegendItemIx);\n                    }\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * @private\n             */\n            removeProxies() {\n                this.proxyProvider.removeGroup('legend');\n            }\n            /**\n             * @private\n             */\n            updateLegendTitle() {\n                const chart = this.chart;\n                const legendTitle = stripHTMLTags((chart.legend &&\n                    chart.legend.options.title &&\n                    chart.legend.options.title.text ||\n                    '').replace(/<br ?\\/?>/g, ' '), chart.renderer.forExport);\n                const legendLabel = chart.langFormat('accessibility.legend.legendLabel' + (legendTitle ? '' : 'NoTitle'), {\n                    chart,\n                    legendTitle,\n                    chartTitle: getChartTitle(chart)\n                });\n                this.proxyProvider.updateGroupAttrs('legend', {\n                    'aria-label': legendLabel\n                });\n            }\n            /**\n             * @private\n             */\n            addLegendProxyGroup() {\n                const a11yOptions = this.chart.options.accessibility;\n                const groupRole = a11yOptions.landmarkVerbosity === 'all' ?\n                    'region' : null;\n                this.proxyGroup = this.proxyProvider.addGroup('legend', 'ul', {\n                    // Filled by updateLegendTitle, to keep up to date without\n                    // recreating group\n                    'aria-label': '_placeholder_',\n                    role: groupRole\n                });\n            }\n            /**\n             * @private\n             */\n            proxyLegendItems() {\n                const component = this, items = (this.chart.legend || {}).allItems || [];\n                let legendItem;\n                items.forEach((item) => {\n                    legendItem = item.legendItem || {};\n                    if (legendItem.label && legendItem.label.element) {\n                        component.proxyLegendItem(item);\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.BubbleLegendItem|Point|Highcharts.Series} item\n             */\n            proxyLegendItem(item) {\n                const legendItem = item.legendItem || {};\n                if (!legendItem.label || !legendItem.group) {\n                    return;\n                }\n                const itemLabel = this.chart.langFormat('accessibility.legend.legendItem', {\n                    chart: this.chart,\n                    itemName: stripHTMLTags(item.name, this.chart.renderer.forExport),\n                    item\n                });\n                const attribs = {\n                    tabindex: -1,\n                    'aria-pressed': item.visible,\n                    'aria-label': itemLabel\n                };\n                // Considers useHTML\n                const proxyPositioningElement = legendItem.group.div ?\n                    legendItem.label :\n                    legendItem.group;\n                item.a11yProxyElement = this.proxyProvider.addProxyElement('legend', {\n                    click: legendItem.label,\n                    visual: proxyPositioningElement.element\n                }, 'button', attribs);\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                const keys = this.keyCodes, component = this, chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                return component.onKbdArrowKey(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onKbdClick(this);\n                            }\n                        ],\n                        [\n                            [keys.pageDown, keys.pageUp],\n                            function (keyCode) {\n                                const direction = keyCode === keys.pageDown ? 1 : -1;\n                                component.highlightAdjacentLegendPage(direction);\n                                return this.response.success;\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return component.shouldHaveLegendNavigation();\n                    },\n                    init: function () {\n                        chart.highlightLegendItem(0);\n                        component.highlightedLegendItemIx = 0;\n                    },\n                    terminate: function () {\n                        component.highlightedLegendItemIx = -1;\n                        chart.legend.allItems.forEach((item) => setLegendItemHoverState(false, item));\n                    }\n                });\n            }\n            /**\n             * Arrow key navigation\n             * @private\n             */\n            onKbdArrowKey(keyboardNavigationHandler, key) {\n                const { keyCodes: { left, up }, highlightedLegendItemIx, chart } = this, numItems = chart.legend.allItems.length, wrapAround = chart.options.accessibility\n                    .keyboardNavigation.wrapAround, direction = (key === left || key === up) ? -1 : 1, res = chart.highlightLegendItem(highlightedLegendItemIx + direction);\n                if (res) {\n                    this.highlightedLegendItemIx += direction;\n                }\n                else if (wrapAround && numItems > 1) {\n                    this.highlightedLegendItemIx = direction > 0 ?\n                        0 : numItems - 1;\n                    chart.highlightLegendItem(this.highlightedLegendItemIx);\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @return {number} Response code\n             */\n            onKbdClick(keyboardNavigationHandler) {\n                const legendItem = this.chart.legend.allItems[this.highlightedLegendItemIx];\n                if (legendItem && legendItem.a11yProxyElement) {\n                    legendItem.a11yProxyElement.click();\n                }\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             */\n            shouldHaveLegendNavigation() {\n                if (!shouldDoLegendA11y(this.chart)) {\n                    return false;\n                }\n                const chart = this.chart, legendOptions = chart.options.legend || {}, legendA11yOptions = (legendOptions.accessibility || {});\n                return !!(chart.legend.display &&\n                    legendA11yOptions.keyboardNavigation &&\n                    legendA11yOptions.keyboardNavigation.enabled);\n            }\n            /**\n             * Clean up\n             * @private\n             */\n            destroy() {\n                this.removeProxies();\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (LegendComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Highlight legend item by index.\n             * @private\n             */\n            function chartHighlightLegendItem(ix) {\n                const items = this.legend.allItems;\n                const oldIx = this.accessibility &&\n                    this.accessibility.components.legend.highlightedLegendItemIx;\n                const itemToHighlight = items[ix], legendItem = itemToHighlight?.legendItem || {};\n                if (itemToHighlight) {\n                    if (isNumber(oldIx) && items[oldIx]) {\n                        setLegendItemHoverState(false, items[oldIx]);\n                    }\n                    scrollLegendToItem(this.legend, ix);\n                    const legendItemProp = legendItem.label;\n                    const proxyBtn = itemToHighlight.a11yProxyElement &&\n                        itemToHighlight.a11yProxyElement.element;\n                    if (legendItemProp && legendItemProp.element && proxyBtn) {\n                        this.setFocusToElement(legendItemProp, proxyBtn);\n                    }\n                    setLegendItemHoverState(true, itemToHighlight);\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, LegendClass) {\n                if (pushUnique(composed, compose)) {\n                    const chartProto = ChartClass.prototype;\n                    chartProto.highlightLegendItem = chartHighlightLegendItem;\n                    addEvent(LegendClass, 'afterColorizeItem', legendOnAfterColorizeItem);\n                }\n            }\n            LegendComponent.compose = compose;\n            /**\n             * Keep track of pressed state for legend items.\n             * @private\n             */\n            function legendOnAfterColorizeItem(e) {\n                const chart = this.chart, a11yOptions = chart.options.accessibility, legendItem = e.item;\n                if (a11yOptions.enabled && legendItem && legendItem.a11yProxyElement) {\n                    legendItem.a11yProxyElement.innerElement.setAttribute('aria-pressed', e.visible ? 'true' : 'false');\n                }\n            }\n        })(LegendComponent || (LegendComponent = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return LegendComponent;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed, isTouchDevice } = H;\n        const { addEvent, correctFloat, defined, isNumber, pick, pushUnique } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            const axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisZoom(e) {\n            const axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            if (axis.isXAxis && ((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y') {\n                    e.zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom\n                    // selection, then when the reset button is pressed, revert to\n                    // this state. This should apply only if the chart is\n                    // initialized with a range (#6612), otherwise zoom all the way\n                    // out.\n                }\n                else if (((!isTouchDevice && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    const previousZoom = navigatorAxis.previousZoom;\n                    if (defined(e.newMin)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                    }\n                    else if (previousZoom) {\n                        e.newMin = previousZoom[0];\n                        e.newMax = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof e.zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        class NavigatorAxisAdditions {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            static compose(AxisClass) {\n                if (pushUnique(composed, this.compose)) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'zoom', onAxisZoom);\n                }\n            }\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            constructor(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            destroy() {\n                this.axis = void 0;\n            }\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            toFixedRange(pxMin, pxMax, fixedMin, fixedMax) {\n                const axis = this.axis, chart = axis.chart;\n                let newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                const fixedRange = chart && chart.fixedRange, halfPointRange = (axis.pointRange || 0) / 2;\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                // Make sure panning to the edges does not decrease the zoomed range\n                if (fixedRange && axis.dataMin && axis.dataMax) {\n                    if (newMax >= axis.dataMax) {\n                        newMin = correctFloat(axis.dataMax - fixedRange);\n                    }\n                    if (newMin <= axis.dataMin) {\n                        newMax = correctFloat(axis.dataMin + fixedRange);\n                    }\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { seriesTypes } = SeriesRegistry;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        const NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null,\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * xAxis.maxPadding, but value is set in milliseconds.\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @since   6.0.0\n                 */\n                overscroll: 0,\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options = {}) {\n            const halfWidth = options.width ? options.width / 2 : width, markerPosition = Math.round(halfWidth / 3) + 0.5;\n            height = options.height || height;\n            return [\n                ['M', -halfWidth - 1, 0.5],\n                ['L', halfWidth, 0.5],\n                ['L', halfWidth, height + 0.5],\n                ['L', -halfWidth - 1, height + 0.5],\n                ['L', -halfWidth - 1, 0.5],\n                ['M', -markerPosition, 4],\n                ['L', -markerPosition, height - 3],\n                ['M', markerPosition - 1, 4],\n                ['L', markerPosition - 1, height - 3]\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions, setOptions } = D;\n        const { composed, isTouchDevice } = H;\n        const { getRendererType } = RendererRegistry;\n        const { addEvent, extend, merge, pick, pushUnique } = U;\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        let NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, NavigatorClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            NavigatorConstructor = NavigatorClass;\n            if (pushUnique(composed, compose)) {\n                const chartProto = ChartClass.prototype;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n                extend(defaultOptions, { navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            const legend = this.legend, navigator = this.navigator;\n            let legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                const { scrollbarHeight, scrollButtonSize } = navigator;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (this.scrollbar?.options.margin || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // false if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            const options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            const chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            const navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                const extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            const navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const NavigatorComposition = {\n            compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, defined, pick, pushUnique } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            let Scrollbar;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composed, compose)) {\n                    Scrollbar = ScrollbarClass;\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                const axisMin = pick(axis.options && axis.options.min, axis.min);\n                const axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin,\n                    axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                const axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                const axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        const { axisMin, axisMax, scrollMin: unitedMin, scrollMax: unitedMax } = getExtremes(axis), range = unitedMax - unitedMin;\n                        let to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            const animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                const axis = this, { scrollMin, scrollMax } = getExtremes(axis), scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                let offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        let xPosition;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { isTouchDevice } = H;\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can  also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        const ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)',\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { addEvent, correctFloat, defined, destroyObjectProperties, fireEvent, merge, pick, removeEvent } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        class Scrollbar {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static compose(AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            }\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            static swapXY(path, vertical) {\n                if (vertical) {\n                    path.forEach((seg) => {\n                        const len = seg.length;\n                        let temp;\n                        for (let i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            }\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            constructor(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.scrollbarButtons = [];\n                this.scrollbarLeft = 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.trackBorderWidth = 1;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            addEvents() {\n                const buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                // Mouse events\n                const _events = [\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler]\n                ];\n                // Touch events\n                if (H.hasTouch) {\n                    _events.push([bar, 'touchstart', mouseDownHandler], [bar.ownerDocument, 'touchmove', mouseMoveHandler], [bar.ownerDocument, 'touchend', mouseUpHandler]);\n                }\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            }\n            buttonToMaxClick(e) {\n                const scroller = this;\n                const range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            buttonToMinClick(e) {\n                const scroller = this;\n                const range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            cursorToScrollbarPosition(normalizedEvent) {\n                const scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // minWidth distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            }\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            destroy() {\n                const scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            }\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            drawScrollbarButton(index) {\n                const scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    const rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        // +1 to compensate for crispifying in rect method\n                        width: size + 1,\n                        height: size + 1,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    const arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            init(renderer, options, chart) {\n                const scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            }\n            mouseDownHandler(e) {\n                const scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            }\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            mouseMoveHandler(e) {\n                const scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                let scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            }\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            mouseUpHandler(e) {\n                const scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            }\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scorllbar\n             */\n            position(x, y, width, height) {\n                const scroller = this, options = scroller.options, { buttonsEnabled, margin = 0, vertical } = options, method = scroller.rendered ? 'animate' : 'attr';\n                let xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            }\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            removeEvents() {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            }\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            render() {\n                const scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                const trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -trackBorderWidth % 2 / 2,\n                    y: -trackBorderWidth % 2 / 2\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-scroller.scrollbarStrokeWidth % 2 / 2, -scroller.scrollbarStrokeWidth % 2 / 2);\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            }\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            setRange(from, to) {\n                const scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                const toPX = fullWidth * Math.min(to, 1);\n                let fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                const newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                const newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            }\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            shouldUpdateExtremes(eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            }\n            trackClick(e) {\n                const scroller = this;\n                const normalizedEvent = scroller.chart.pointer.normalize(e), range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            }\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            update(options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            }\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            updatePosition(from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        Scrollbar.defaultOptions = ScrollbarDefaults;\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Utilities.js']], function (Axis, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { hasTouch, isTouchDevice } = H;\n        const { addEvent, clamp, correctFloat, defined, destroyObjectProperties, erase, extend, find, fireEvent, isArray, isNumber, merge, pick, removeEvent, splat } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme, ...args) {\n            const numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        class Navigator {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static compose(AxisClass, ChartClass, SeriesClass) {\n                NavigatorComposition.compose(AxisClass, ChartClass, Navigator, SeriesClass);\n            }\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.scrollbarHeight = 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            drawHandle(x, index, inverted, verb) {\n                const navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            }\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            drawOutline(zoomedMin, zoomedMax, inverted, verb) {\n                const navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                let left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin],\n                        ['M', left, zoomedMax],\n                        ['L', left + height, zoomedMax],\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // left\n                        ['M', left, lineTop],\n                        // upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            navigatorTop + halfOutline\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            }\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            drawMasks(zoomedMin, zoomedMax, inverted, verb) {\n                const navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                let height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach((shade, i) => {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            }\n            /**\n             * Generate DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            renderElements() {\n                const navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add();\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach((hasMask, index) => {\n                    const shade = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup);\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ?\n                                navigatorOptions.maskFill :\n                                'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                    navigator.shades[index] = shade;\n                });\n                // Create the outline:\n                navigator.outline = renderer.path()\n                    .addClass('highcharts-navigator-outline')\n                    .add(navigatorGroup);\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles && navigatorOptions.handles.enabled) {\n                    const handlesOptions = navigatorOptions.handles, { height, width } = handlesOptions;\n                    [0, 1].forEach((index) => {\n                        navigator.handles[index] = renderer.symbol(handlesOptions.symbols[index], -width / 2 - 1, 0, width, height, handlesOptions);\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width / 2),\n                                rotationOriginY: (height + width) / 2\n                            });\n                        }\n                        // zIndex = 6 for right handle, 7 for left.\n                        // Can't be 10, because of the tooltip in inverted chart #2908\n                        navigator.handles[index].attr({ zIndex: 7 - index })\n                            .addClass('highcharts-navigator-handle ' +\n                            'highcharts-navigator-handle-' +\n                            ['left', 'right'][index]).add(navigatorGroup);\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions.backgroundColor,\n                                stroke: handlesOptions.borderColor,\n                                'stroke-width': handlesOptions.lineWidth\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            }\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            update(options) {\n                // Remove references to old navigator series in base series\n                (this.series || []).forEach((series) => {\n                    if (series.baseSeries) {\n                        delete series.baseSeries.navigatorSeries;\n                    }\n                });\n                // Destroy and rebuild navigator\n                this.destroy();\n                const chartOptions = this.chart.options;\n                merge(true, chartOptions.navigator, options);\n                this.init(this.chart);\n            }\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            render(min, max, pxMin, pxMax) {\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                let navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // in case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                let zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                const newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                const zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                fireEvent(this, 'afterRender');\n            }\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            addMouseEvents() {\n                const navigator = this, chart = navigator.chart, container = chart.container;\n                let eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                // Add mouse move and mouseup events. These are bind to doc/container,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                eventsToUnbind.push(addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler));\n                // Touch events\n                if (hasTouch) {\n                    eventsToUnbind.push(addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                    eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                }\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            }\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            getPartsEvents(eventName) {\n                const navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            }\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            shadesMousedown(e, index) {\n                e = this.chart.pointer.normalize(e);\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                let navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // it has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, null, // auto animation\n                            { trigger: 'navigator' });\n                        }\n                    }\n                }\n            }\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            handlesMousedown(e, index) {\n                e = this.chart.pointer.normalize(e);\n                const navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.fixedRange = null;\n            }\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            onMouseMove(e) {\n                const navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                let left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = chart.pointer.normalize(e);\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // outside left\n                            chartX = dragOffset;\n                            // outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            }\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            onMouseUp(e) {\n                const navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                let zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, \n                        // Run animation when clicking buttons, scrollbar track etc,\n                        // but not when dragging handles or scrollbar\n                        navigator.hasDragged ? false : null, {\n                            trigger: 'navigator',\n                            triggerOp: 'navigator-drag',\n                            DOMEvent: DOMEvent // #1838\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            }\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            removeEvents() {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            }\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            removeBaseSeriesEvents() {\n                const baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            }\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            init(chart) {\n                const chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n                const navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    // an x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // inherit base xAxis' break and ordinal options\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal\n                    }, navigatorOptions.xAxis, {\n                        id: 'navigator-x-axis',\n                        yAxis: 'navigator-y-axis',\n                        type: 'datetime',\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true,\n                        startOnTick: false,\n                        endOnTick: false,\n                        minPadding: 0,\n                        maxPadding: 0,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: [scrollButtonSize, 0, -scrollButtonSize, 0],\n                        width: height\n                    } : {\n                        offsets: [0, -scrollButtonSize, 0, scrollButtonSize],\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        id: 'navigator-y-axis',\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false),\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // in case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            const axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // from pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // from value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    const options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        const range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            }\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            getUnionExtremes(returnFalseOnNoBaseSeries) {\n                const baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                let ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            }\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            setBaseSeries(baseSeriesOptions, redraw) {\n                const chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, (s) => (!s.options.isInternal)).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach((series, i) => {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            }\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            updateNavigatorSeries(addEvents, redraw) {\n                const navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null,\n                    linkedTo: null,\n                    group: 'nav',\n                    padXAxis: false,\n                    xAxis: 'navigator-x-axis',\n                    yAxis: 'navigator-y-axis',\n                    showInLegend: false,\n                    stacking: void 0,\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter((navSeries) => {\n                        const base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                let baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach((base) => {\n                        const linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        const navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach((userSeriesOptions, i) => {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            }\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            addBaseSeriesEvents() {\n                const navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach((base) => {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitily\n                    // not adapting to data changes.\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            }\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            getBaseSeriesMin(currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            }\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            modifyNavigatorAxisExtremes() {\n                const xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    const unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            }\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            modifyBaseAxisExtremes() {\n                const baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick(baseXAxis.options.overscroll, 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                let newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            }\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            updatedDataHandler() {\n                const navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            }\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            shouldStickToMin(baseSeries, navigator) {\n                const xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                let stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            }\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            addChartEvents() {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    const navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    let chart = this, navigator = chart.navigator, marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }));\n            }\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            destroy() {\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach((s) => {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach((prop) => {\n                    if (this[prop] && this[prop].destroy) {\n                        this[prop].destroy();\n                    }\n                    this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach((coll) => {\n                    destroyObjectProperties(coll);\n                });\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Accessibility/Components/NavigatorComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Templating.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/Utils/ChartUtilities.js']], function (AccessibilityComponent, Announcer, KeyboardNavigationHandler, Navigator, A, T, U, HU, CU) {\n        /* *\n         *\n         *  (c) 2009-2024 Highsoft AS\n         *\n         *  Accessibility component for the navigator.\n         *\n         *  Author: Ã˜ystein Moseng\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        const { animObject } = A;\n        const { format } = T;\n        const { clamp, pick, syncTimeout } = U;\n        const { getFakeMouseEvent } = HU;\n        const { getAxisRangeDescription, fireEventOnWrappedOrUnwrappedElement } = CU;\n        /**\n         * The NavigatorComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.NavigatorComponent\n         */\n        class NavigatorComponent extends AccessibilityComponent {\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart, component = this;\n                this.announcer = new Announcer(chart, 'polite');\n                // Update positions after render\n                this.addEvent(Navigator, 'afterRender', function () {\n                    if (this.chart === component.chart &&\n                        this.chart.renderer) {\n                        syncTimeout(() => {\n                            component.proxyProvider\n                                .updateGroupProxyElementPositions('navigator');\n                            component.updateHandleValues();\n                        }, animObject(pick(this.chart.renderer.globalAnimation, true)).duration);\n                    }\n                });\n            }\n            /**\n             * Called on updates\n             * @private\n             */\n            onChartUpdate() {\n                const chart = this.chart, options = chart.options;\n                if (options.navigator.accessibility?.enabled) {\n                    const verbosity = options.accessibility.landmarkVerbosity, groupFormatStr = options.lang\n                        .accessibility?.navigator.groupLabel;\n                    // We just recreate the group for simplicity. Could consider\n                    // updating the existing group if the verbosity has not changed.\n                    this.proxyProvider.removeGroup('navigator');\n                    this.proxyProvider.addGroup('navigator', 'div', {\n                        role: verbosity === 'all' ? 'region' : 'group',\n                        'aria-label': format(groupFormatStr, { chart }, chart)\n                    });\n                    const handleFormatStr = options.lang\n                        .accessibility?.navigator.handleLabel;\n                    [0, 1].forEach((n) => {\n                        const handle = this.getHandleByIx(n);\n                        if (handle) {\n                            const proxyEl = this.proxyProvider.addProxyElement('navigator', {\n                                click: handle\n                            }, 'input', {\n                                type: 'range',\n                                'aria-label': format(handleFormatStr, { handleIx: n, chart }, chart)\n                            });\n                            this[n ? 'maxHandleProxy' : 'minHandleProxy'] =\n                                proxyEl.innerElement;\n                            proxyEl.innerElement.style.pointerEvents = 'none';\n                            proxyEl.innerElement.oninput =\n                                () => this.updateNavigator();\n                        }\n                    });\n                    this.updateHandleValues();\n                }\n                else {\n                    this.proxyProvider.removeGroup('navigator');\n                }\n            }\n            /**\n             * Get navigation for a navigator handle.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object.\n             */\n            getNavigatorHandleNavigation(handleIx) {\n                const component = this, chart = this.chart, proxyEl = handleIx ? this.maxHandleProxy : this.minHandleProxy, keys = this.keyCodes;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [[\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                if (proxyEl) {\n                                    const delta = keyCode === keys.left ||\n                                        keyCode === keys.up ? -1 : 1;\n                                    proxyEl.value = '' + clamp(parseFloat(proxyEl.value) + delta, 0, 100);\n                                    component.updateNavigator(() => {\n                                        const handle = component.getHandleByIx(handleIx);\n                                        if (handle) {\n                                            chart.setFocusToElement(handle, proxyEl);\n                                        }\n                                    });\n                                }\n                                return this.response.success;\n                            }\n                        ]],\n                    init: () => {\n                        chart.setFocusToElement(this.getHandleByIx(handleIx), proxyEl);\n                    },\n                    validate: () => !!(this.getHandleByIx(handleIx) && proxyEl &&\n                        chart.options.navigator.accessibility?.enabled)\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects.\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.getNavigatorHandleNavigation(0),\n                    this.getNavigatorHandleNavigation(1)\n                ];\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.updateNavigatorThrottleTimer) {\n                    clearTimeout(this.updateNavigatorThrottleTimer);\n                }\n                this.proxyProvider.removeGroup('navigator');\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n            /**\n             * Update the value of the handles to match current navigator pos.\n             * @private\n             */\n            updateHandleValues() {\n                const navigator = this.chart.navigator;\n                if (navigator && this.minHandleProxy && this.maxHandleProxy) {\n                    const length = navigator.size;\n                    this.minHandleProxy.value =\n                        '' + Math.round(navigator.zoomedMin / length * 100);\n                    this.maxHandleProxy.value =\n                        '' + Math.round(navigator.zoomedMax / length * 100);\n                }\n            }\n            /**\n             * Get a navigator handle by its index\n             * @private\n             */\n            getHandleByIx(ix) {\n                const navigator = this.chart.navigator;\n                return navigator && navigator.handles &&\n                    navigator.handles[ix];\n            }\n            /**\n             * Update navigator to match changed proxy values.\n             * @private\n             */\n            updateNavigator(beforeAnnounce) {\n                const performUpdate = (beforeAnnounce) => {\n                    const chart = this.chart, navigator = chart.navigator;\n                    if (navigator && this.minHandleProxy && this.maxHandleProxy) {\n                        const chartPos = chart.pointer.getChartPosition(), minNewX = parseFloat(this.minHandleProxy.value) /\n                            100 * navigator.size, maxNewX = parseFloat(this.maxHandleProxy.value) /\n                            100 * navigator.size;\n                        // Fire fake events in order for each handle.\n                        [\n                            [0, 'mousedown', navigator.zoomedMin],\n                            [0, 'mousemove', minNewX],\n                            [0, 'mouseup', minNewX],\n                            [1, 'mousedown', navigator.zoomedMax],\n                            [1, 'mousemove', maxNewX],\n                            [1, 'mouseup', maxNewX]\n                        ].forEach(([handleIx, type, x]) => {\n                            const handle = this.getHandleByIx(handleIx)?.element;\n                            if (handle) {\n                                fireEventOnWrappedOrUnwrappedElement(handle, getFakeMouseEvent(type, {\n                                    x: chartPos.left + navigator.left + x,\n                                    y: chartPos.top + navigator.top\n                                }, handle));\n                            }\n                        });\n                        if (beforeAnnounce) {\n                            beforeAnnounce();\n                        }\n                        // Announce the update\n                        const announceFormatStr = chart.options.lang\n                            .accessibility?.navigator.changeAnnouncement, axisRangeDescription = getAxisRangeDescription(chart.xAxis[0]);\n                        this.announcer.announce(format(announceFormatStr, { axisRangeDescription, chart }, chart));\n                    }\n                };\n                // Throttle updates so as not to reduce performance with\n                // continuous keypress.\n                if (this.updateNavigatorThrottleTimer) {\n                    clearTimeout(this.updateNavigatorThrottleTimer);\n                }\n                this.updateNavigatorThrottleTimer = setTimeout(performUpdate.bind(this, beforeAnnounce), 20);\n            }\n        }\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return NavigatorComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesDescriber.js', [_modules['Accessibility/Components/AnnotationsA11y.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Templating.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Core/Utilities.js']], function (AnnotationsA11y, ChartUtilities, F, HTMLUtilities, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Place desriptions on a series and its points.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { getPointAnnotationTexts } = AnnotationsA11y;\n        const { getAxisDescription, getSeriesFirstPointElement, getSeriesA11yElement, unhideChartElementFromAT } = ChartUtilities;\n        const { format, numberFormat } = F;\n        const { reverseChildNodes, stripHTMLTagsFromString: stripHTMLTags } = HTMLUtilities;\n        const { find, isNumber, isString, pick, defined } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function findFirstPointWithGraphic(point) {\n            const sourcePointIndex = point.index;\n            if (!point.series || !point.series.data || !defined(sourcePointIndex)) {\n                return null;\n            }\n            return find(point.series.data, function (p) {\n                return !!(p &&\n                    typeof p.index !== 'undefined' &&\n                    p.index > sourcePointIndex &&\n                    p.graphic &&\n                    p.graphic.element);\n            }) || null;\n        }\n        /**\n         * Whether or not we should add a mock point element in\n         * order to describe a point that has no graphic.\n         * @private\n         */\n        function shouldAddMockPoint(point) {\n            // Note: Sunburst series use isNull for hidden points on drilldown.\n            // Ignore these.\n            const series = point.series, chart = series && series.chart, isSunburst = series && series.is('sunburst'), isNull = point.isNull, shouldDescribeNull = chart &&\n                chart\n                    .options.accessibility.point.describeNull;\n            return isNull && !isSunburst && shouldDescribeNull;\n        }\n        /**\n         * @private\n         */\n        function makeMockElement(point, pos) {\n            const renderer = point.series.chart.renderer, mock = renderer.rect(pos.x, pos.y, 1, 1);\n            mock.attr({\n                'class': 'highcharts-a11y-mock-point',\n                fill: 'none',\n                opacity: 0,\n                'fill-opacity': 0,\n                'stroke-opacity': 0\n            });\n            return mock;\n        }\n        /**\n         * @private\n         */\n        function addMockPointElement(point) {\n            const series = point.series, firstPointWithGraphic = findFirstPointWithGraphic(point), firstGraphic = firstPointWithGraphic && firstPointWithGraphic.graphic, parentGroup = firstGraphic ?\n                firstGraphic.parentGroup :\n                series.graph || series.group, mockPos = firstPointWithGraphic ? {\n                x: pick(point.plotX, firstPointWithGraphic.plotX, 0),\n                y: pick(point.plotY, firstPointWithGraphic.plotY, 0)\n            } : {\n                x: pick(point.plotX, 0),\n                y: pick(point.plotY, 0)\n            }, mockElement = makeMockElement(point, mockPos);\n            if (parentGroup && parentGroup.element) {\n                point.graphic = mockElement;\n                point.hasMockGraphic = true;\n                mockElement.add(parentGroup);\n                // Move to correct pos in DOM\n                parentGroup.element.insertBefore(mockElement.element, firstGraphic ? firstGraphic.element : null);\n                return mockElement.element;\n            }\n        }\n        /**\n         * @private\n         */\n        function hasMorePointsThanDescriptionThreshold(series) {\n            const chartA11yOptions = series.chart.options.accessibility, threshold = (chartA11yOptions.series.pointDescriptionEnabledThreshold);\n            return !!(threshold !== false &&\n                series.points &&\n                series.points.length >= +threshold);\n        }\n        /**\n         * @private\n         */\n        function shouldSetScreenReaderPropsOnPoints(series) {\n            const seriesA11yOptions = series.options.accessibility || {};\n            return !hasMorePointsThanDescriptionThreshold(series) &&\n                !seriesA11yOptions.exposeAsGroupOnly;\n        }\n        /**\n         * @private\n         */\n        function shouldSetKeyboardNavPropsOnPoints(series) {\n            const chartA11yOptions = series.chart.options.accessibility, seriesNavOptions = chartA11yOptions.keyboardNavigation.seriesNavigation;\n            return !!(series.points && (series.points.length <\n                +seriesNavOptions.pointNavigationEnabledThreshold ||\n                seriesNavOptions.pointNavigationEnabledThreshold === false));\n        }\n        /**\n         * @private\n         */\n        function shouldDescribeSeriesElement(series) {\n            const chart = series.chart, chartOptions = chart.options.chart, chartHas3d = chartOptions.options3d && chartOptions.options3d.enabled, hasMultipleSeries = chart.series.length > 1, describeSingleSeriesOption = chart.options.accessibility.series.describeSingleSeries, exposeAsGroupOnlyOption = (series.options.accessibility || {}).exposeAsGroupOnly, noDescribe3D = chartHas3d && hasMultipleSeries;\n            return !noDescribe3D && (hasMultipleSeries || describeSingleSeriesOption ||\n                exposeAsGroupOnlyOption || hasMorePointsThanDescriptionThreshold(series));\n        }\n        /**\n         * @private\n         */\n        function pointNumberToString(point, value) {\n            const series = point.series, chart = series.chart, a11yPointOptions = chart.options.accessibility.point || {}, seriesA11yPointOptions = series.options.accessibility &&\n                series.options.accessibility.point || {}, tooltipOptions = series.tooltipOptions || {}, lang = chart.options.lang;\n            if (isNumber(value)) {\n                return numberFormat(value, seriesA11yPointOptions.valueDecimals ||\n                    a11yPointOptions.valueDecimals ||\n                    tooltipOptions.valueDecimals ||\n                    -1, lang.decimalPoint, lang.accessibility.thousandsSep || lang.thousandsSep);\n            }\n            return value;\n        }\n        /**\n         * @private\n         */\n        function getSeriesDescriptionText(series) {\n            const seriesA11yOptions = series.options.accessibility || {}, descOpt = seriesA11yOptions.description;\n            return descOpt && series.chart.langFormat('accessibility.series.description', {\n                description: descOpt,\n                series: series\n            }) || '';\n        }\n        /**\n         * @private\n         */\n        function getSeriesAxisDescriptionText(series, axisCollection) {\n            const axis = series[axisCollection];\n            return series.chart.langFormat('accessibility.series.' + axisCollection + 'Description', {\n                name: getAxisDescription(axis),\n                series: series\n            });\n        }\n        /**\n         * Get accessible time description for a point on a datetime axis.\n         *\n         * @private\n         */\n        function getPointA11yTimeDescription(point) {\n            const series = point.series, chart = series.chart, seriesA11yOptions = series.options.accessibility &&\n                series.options.accessibility.point || {}, a11yOptions = chart.options.accessibility.point || {}, dateXAxis = series.xAxis && series.xAxis.dateTime;\n            if (dateXAxis) {\n                const tooltipDateFormat = dateXAxis.getXDateFormat(point.x || 0, chart.options.tooltip.dateTimeLabelFormats), dateFormat = seriesA11yOptions.dateFormatter &&\n                    seriesA11yOptions.dateFormatter(point) ||\n                    a11yOptions.dateFormatter && a11yOptions.dateFormatter(point) ||\n                    seriesA11yOptions.dateFormat ||\n                    a11yOptions.dateFormat ||\n                    tooltipDateFormat;\n                return chart.time.dateFormat(dateFormat, point.x || 0, void 0);\n            }\n        }\n        /**\n         * @private\n         */\n        function getPointXDescription(point) {\n            const timeDesc = getPointA11yTimeDescription(point), xAxis = point.series.xAxis || {}, pointCategory = xAxis.categories && defined(point.category) &&\n                ('' + point.category).replace('<br/>', ' '), canUseId = defined(point.id) &&\n                ('' + point.id).indexOf('highcharts-') < 0, fallback = 'x, ' + point.x;\n            return point.name || timeDesc || pointCategory ||\n                (canUseId ? point.id : fallback);\n        }\n        /**\n         * @private\n         */\n        function getPointArrayMapValueDescription(point, prefix, suffix) {\n            const pre = prefix || '', suf = suffix || '', keyToValStr = function (key) {\n                const num = pointNumberToString(point, pick(point[key], point.options[key]));\n                return num !== void 0 ?\n                    key + ': ' + pre + num + suf :\n                    num;\n            }, pointArrayMap = point.series.pointArrayMap;\n            return pointArrayMap.reduce(function (desc, key) {\n                const propDesc = keyToValStr(key);\n                return propDesc ?\n                    (desc + (desc.length ? ', ' : '') + propDesc) :\n                    desc;\n            }, '');\n        }\n        /**\n         * @private\n         */\n        function getPointValue(point) {\n            const series = point.series, a11yPointOpts = series.chart.options.accessibility.point || {}, seriesA11yPointOpts = series.chart.options.accessibility &&\n                series.chart.options.accessibility.point || {}, tooltipOptions = series.tooltipOptions || {}, valuePrefix = seriesA11yPointOpts.valuePrefix ||\n                a11yPointOpts.valuePrefix ||\n                tooltipOptions.valuePrefix ||\n                '', valueSuffix = seriesA11yPointOpts.valueSuffix ||\n                a11yPointOpts.valueSuffix ||\n                tooltipOptions.valueSuffix ||\n                '', fallbackKey = (typeof point.value !==\n                'undefined' ?\n                'value' : 'y'), fallbackDesc = pointNumberToString(point, point[fallbackKey]);\n            if (point.isNull) {\n                return series.chart.langFormat('accessibility.series.nullPointValue', {\n                    point: point\n                });\n            }\n            if (series.pointArrayMap) {\n                return getPointArrayMapValueDescription(point, valuePrefix, valueSuffix);\n            }\n            return valuePrefix + fallbackDesc + valueSuffix;\n        }\n        /**\n         * Return the description for the annotation(s) connected to a point, or\n         * empty string if none.\n         *\n         * @private\n         * @param {Highcharts.Point} point\n         * The data point to get the annotation info from.\n         * @return {string}\n         * Annotation description\n         */\n        function getPointAnnotationDescription(point) {\n            const chart = point.series.chart;\n            const langKey = 'accessibility.series.pointAnnotationsDescription';\n            const annotations = getPointAnnotationTexts(point);\n            const context = { point, annotations };\n            return annotations.length ? chart.langFormat(langKey, context) : '';\n        }\n        /**\n         * Return string with information about point.\n         * @private\n         */\n        function getPointValueDescription(point) {\n            const series = point.series, chart = series.chart, seriesA11yOptions = series.options.accessibility, seriesValueDescFormat = seriesA11yOptions && seriesA11yOptions.point &&\n                seriesA11yOptions.point.valueDescriptionFormat, pointValueDescriptionFormat = seriesValueDescFormat ||\n                chart.options.accessibility.point.valueDescriptionFormat, showXDescription = pick(series.xAxis &&\n                series.xAxis.options.accessibility &&\n                series.xAxis.options.accessibility.enabled, !chart.angular && series.type !== 'flowmap'), xDesc = showXDescription ? getPointXDescription(point) : '', context = {\n                point: point,\n                index: defined(point.index) ? (point.index + 1) : '',\n                xDescription: xDesc,\n                value: getPointValue(point),\n                separator: showXDescription ? ', ' : ''\n            };\n            return format(pointValueDescriptionFormat, context, chart);\n        }\n        /**\n         * Return string with information about point.\n         * @private\n         */\n        function defaultPointDescriptionFormatter(point) {\n            const series = point.series, shouldExposeSeriesName = series.chart.series.length > 1 ||\n                series.options.name, valText = getPointValueDescription(point), description = point.options && point.options.accessibility &&\n                point.options.accessibility.description, userDescText = description ? ' ' + description : '', seriesNameText = shouldExposeSeriesName ? ' ' + series.name + '.' : '', annotationsDesc = getPointAnnotationDescription(point), pointAnnotationsText = annotationsDesc ? ' ' + annotationsDesc : '';\n            point.accessibility = point.accessibility || {};\n            point.accessibility.valueDescription = valText;\n            return valText + userDescText + seriesNameText + pointAnnotationsText;\n        }\n        /**\n         * Set a11y props on a point element\n         * @private\n         * @param {Highcharts.Point} point\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} pointElement\n         */\n        function setPointScreenReaderAttribs(point, pointElement) {\n            const series = point.series, seriesPointA11yOptions = series.options.accessibility?.point || {}, a11yPointOptions = series.chart.options.accessibility.point || {}, label = stripHTMLTags((isString(seriesPointA11yOptions.descriptionFormat) &&\n                format(seriesPointA11yOptions.descriptionFormat, point, series.chart)) ||\n                seriesPointA11yOptions.descriptionFormatter?.(point) ||\n                (isString(a11yPointOptions.descriptionFormat) &&\n                    format(a11yPointOptions.descriptionFormat, point, series.chart)) ||\n                a11yPointOptions.descriptionFormatter?.(point) ||\n                defaultPointDescriptionFormatter(point), series.chart.renderer.forExport);\n            pointElement.setAttribute('role', 'img');\n            pointElement.setAttribute('aria-label', label);\n        }\n        /**\n         * Add accessible info to individual point elements of a series\n         * @private\n         * @param {Highcharts.Series} series\n         */\n        function describePointsInSeries(series) {\n            const setScreenReaderProps = shouldSetScreenReaderPropsOnPoints(series), setKeyboardProps = shouldSetKeyboardNavPropsOnPoints(series), shouldDescribeNullPoints = series.chart.options.accessibility\n                .point.describeNull;\n            if (setScreenReaderProps || setKeyboardProps) {\n                series.points.forEach((point) => {\n                    const pointEl = point.graphic && point.graphic.element ||\n                        shouldAddMockPoint(point) && addMockPointElement(point), pointA11yDisabled = (point.options &&\n                        point.options.accessibility &&\n                        point.options.accessibility.enabled === false);\n                    if (pointEl) {\n                        if (point.isNull && !shouldDescribeNullPoints) {\n                            pointEl.setAttribute('aria-hidden', true);\n                            return;\n                        }\n                        // We always set tabindex, as long as we are setting props.\n                        // When setting tabindex, also remove default outline to\n                        // avoid ugly border on click.\n                        pointEl.setAttribute('tabindex', '-1');\n                        if (!series.chart.styledMode) {\n                            pointEl.style.outline = 'none';\n                        }\n                        if (setScreenReaderProps && !pointA11yDisabled) {\n                            setPointScreenReaderAttribs(point, pointEl);\n                        }\n                        else {\n                            pointEl.setAttribute('aria-hidden', true);\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * Return string with information about series.\n         * @private\n         */\n        function defaultSeriesDescriptionFormatter(series) {\n            const chart = series.chart, chartTypes = chart.types || [], description = getSeriesDescriptionText(series), shouldDescribeAxis = function (coll) {\n                return chart[coll] && chart[coll].length > 1 && series[coll];\n            }, seriesNumber = series.index + 1, xAxisInfo = getSeriesAxisDescriptionText(series, 'xAxis'), yAxisInfo = getSeriesAxisDescriptionText(series, 'yAxis'), summaryContext = {\n                seriesNumber,\n                series,\n                chart\n            }, combinationSuffix = chartTypes.length > 1 ? 'Combination' : '', summary = chart.langFormat('accessibility.series.summary.' + series.type + combinationSuffix, summaryContext) || chart.langFormat('accessibility.series.summary.default' + combinationSuffix, summaryContext), axisDescription = (shouldDescribeAxis('yAxis') ? ' ' + yAxisInfo + '.' : '') + (shouldDescribeAxis('xAxis') ? ' ' + xAxisInfo + '.' : ''), formatStr = pick(series.options.accessibility &&\n                series.options.accessibility.descriptionFormat, chart.options.accessibility.series.descriptionFormat, '');\n            return format(formatStr, {\n                seriesDescription: summary,\n                authorDescription: (description ? ' ' + description : ''),\n                axisDescription,\n                series,\n                chart,\n                seriesNumber\n            }, void 0);\n        }\n        /**\n         * Set a11y props on a series element\n         * @private\n         * @param {Highcharts.Series} series\n         * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} seriesElement\n         */\n        function describeSeriesElement(series, seriesElement) {\n            const seriesA11yOptions = series.options.accessibility || {}, a11yOptions = series.chart.options.accessibility, landmarkVerbosity = a11yOptions.landmarkVerbosity;\n            // Handle role attribute\n            if (seriesA11yOptions.exposeAsGroupOnly) {\n                seriesElement.setAttribute('role', 'img');\n            }\n            else if (landmarkVerbosity === 'all') {\n                seriesElement.setAttribute('role', 'region');\n            }\n            else {\n                seriesElement.setAttribute('role', 'group');\n            }\n            seriesElement.setAttribute('tabindex', '-1');\n            if (!series.chart.styledMode) {\n                // Don't show browser outline on click, despite tabindex\n                seriesElement.style.outline = 'none';\n            }\n            seriesElement.setAttribute('aria-label', stripHTMLTags(a11yOptions.series.descriptionFormatter &&\n                a11yOptions.series.descriptionFormatter(series) ||\n                defaultSeriesDescriptionFormatter(series), series.chart.renderer.forExport));\n        }\n        /**\n         * Put accessible info on series and points of a series.\n         * @param {Highcharts.Series} series The series to add info on.\n         */\n        function describeSeries(series) {\n            const chart = series.chart, firstPointEl = getSeriesFirstPointElement(series), seriesEl = getSeriesA11yElement(series), is3d = chart.is3d && chart.is3d();\n            if (seriesEl) {\n                // For some series types the order of elements do not match the\n                // order of points in series. In that case we have to reverse them\n                // in order for AT to read them out in an understandable order.\n                // Due to z-index issues we cannot do this for 3D charts.\n                if (seriesEl.lastChild === firstPointEl && !is3d) {\n                    reverseChildNodes(seriesEl);\n                }\n                describePointsInSeries(series);\n                unhideChartElementFromAT(chart, seriesEl);\n                if (shouldDescribeSeriesElement(series)) {\n                    describeSeriesElement(series, seriesEl);\n                }\n                else {\n                    seriesEl.removeAttribute('aria-label');\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const SeriesDescriber = {\n            defaultPointDescriptionFormatter,\n            defaultSeriesDescriptionFormatter,\n            describeSeries\n        };\n\n        return SeriesDescriber;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/NewDataAnnouncer.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js']], function (H, U, Announcer, ChartUtilities, EventProvider, SeriesDescriber) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle announcing new data for a chart.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, defined, pushUnique } = U;\n        const { getChartTitle } = ChartUtilities;\n        const { defaultPointDescriptionFormatter, defaultSeriesDescriptionFormatter } = SeriesDescriber;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function chartHasAnnounceEnabled(chart) {\n            return !!chart.options.accessibility.announceNewData.enabled;\n        }\n        /**\n         * @private\n         */\n        function findPointInDataArray(point) {\n            const candidates = point.series.data.filter((candidate) => (point.x === candidate.x && point.y === candidate.y));\n            return candidates.length === 1 ? candidates[0] : point;\n        }\n        /**\n         * Get array of unique series from two arrays\n         * @private\n         */\n        function getUniqueSeries(arrayA, arrayB) {\n            const uniqueSeries = (arrayA || []).concat(arrayB || []).reduce((acc, cur) => {\n                acc[cur.name + cur.index] = cur;\n                return acc;\n            }, {});\n            return Object\n                .keys(uniqueSeries)\n                .map((ix) => uniqueSeries[ix]);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        class NewDataAnnouncer {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.dirty = {\n                    allSeries: {}\n                };\n                this.lastAnnouncementTime = 0;\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Initialize the new data announcer.\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                const announceOptions = (chart.options.accessibility.announceNewData);\n                const announceType = announceOptions.interruptUser ?\n                    'assertive' : 'polite';\n                this.lastAnnouncementTime = 0;\n                this.dirty = {\n                    allSeries: {}\n                };\n                this.eventProvider = new EventProvider();\n                this.announcer = new Announcer(chart, announceType);\n                this.addEventListeners();\n            }\n            /**\n             * Remove traces of announcer.\n             * @private\n             */\n            destroy() {\n                this.eventProvider.removeAddedEvents();\n                this.announcer.destroy();\n            }\n            /**\n             * Add event listeners for the announcer\n             * @private\n             */\n            addEventListeners() {\n                const announcer = this, chart = this.chart, e = this.eventProvider;\n                e.addEvent(chart, 'afterApplyDrilldown', function () {\n                    announcer.lastAnnouncementTime = 0;\n                });\n                e.addEvent(chart, 'afterAddSeries', function (e) {\n                    announcer.onSeriesAdded(e.series);\n                });\n                e.addEvent(chart, 'redraw', function () {\n                    announcer.announceDirtyData();\n                });\n            }\n            /**\n             * On new data series added, update dirty list.\n             * @private\n             * @param {Highcharts.Series} series\n             */\n            onSeriesAdded(series) {\n                if (chartHasAnnounceEnabled(this.chart)) {\n                    this.dirty.hasDirty = true;\n                    this.dirty.allSeries[series.name + series.index] = series;\n                    // Add it to newSeries storage unless we already have one\n                    this.dirty.newSeries = defined(this.dirty.newSeries) ?\n                        void 0 : series;\n                }\n            }\n            /**\n             * Gather what we know and announce the data to user.\n             * @private\n             */\n            announceDirtyData() {\n                const chart = this.chart, announcer = this;\n                if (chart.options.accessibility.announceNewData &&\n                    this.dirty.hasDirty) {\n                    let newPoint = this.dirty.newPoint;\n                    // If we have a single new point, see if we can find it in the\n                    // data array. Otherwise we can only pass through options to\n                    // the description builder, and it is a bit sparse in info.\n                    if (newPoint) {\n                        newPoint = findPointInDataArray(newPoint);\n                    }\n                    this.queueAnnouncement(Object\n                        .keys(this.dirty.allSeries)\n                        .map((ix) => announcer.dirty.allSeries[ix]), this.dirty.newSeries, newPoint);\n                    // Reset\n                    this.dirty = {\n                        allSeries: {}\n                    };\n                }\n            }\n            /**\n             * Announce to user that there is new data.\n             * @private\n             * @param {Array<Highcharts.Series>} dirtySeries\n             *          Array of series with new data.\n             * @param {Highcharts.Series} [newSeries]\n             *          If a single new series was added, a reference to this series.\n             * @param {Highcharts.Point} [newPoint]\n             *          If a single point was added, a reference to this point.\n             */\n            queueAnnouncement(dirtySeries, newSeries, newPoint) {\n                const chart = this.chart;\n                const annOptions = chart.options.accessibility.announceNewData;\n                if (annOptions.enabled) {\n                    const now = +new Date();\n                    const dTime = now - this.lastAnnouncementTime;\n                    const time = Math.max(0, annOptions.minAnnounceInterval - dTime);\n                    // Add series from previously queued announcement.\n                    const allSeries = getUniqueSeries(this.queuedAnnouncement && this.queuedAnnouncement.series, dirtySeries);\n                    // Build message and announce\n                    const message = this.buildAnnouncementMessage(allSeries, newSeries, newPoint);\n                    if (message) {\n                        // Is there already one queued?\n                        if (this.queuedAnnouncement) {\n                            clearTimeout(this.queuedAnnouncementTimer);\n                        }\n                        // Build the announcement\n                        this.queuedAnnouncement = {\n                            time: now,\n                            message: message,\n                            series: allSeries\n                        };\n                        // Queue the announcement\n                        this.queuedAnnouncementTimer = setTimeout(() => {\n                            if (this && this.announcer) {\n                                this.lastAnnouncementTime = +new Date();\n                                this.announcer.announce(this.queuedAnnouncement.message);\n                                delete this.queuedAnnouncement;\n                                delete this.queuedAnnouncementTimer;\n                            }\n                        }, time);\n                    }\n                }\n            }\n            /**\n             * Get announcement message for new data.\n             * @private\n             * @param {Array<Highcharts.Series>} dirtySeries\n             *          Array of series with new data.\n             * @param {Highcharts.Series} [newSeries]\n             *          If a single new series was added, a reference to this series.\n             * @param {Highcharts.Point} [newPoint]\n             *          If a single point was added, a reference to this point.\n             *\n             * @return {string|null}\n             * The announcement message to give to user.\n             */\n            buildAnnouncementMessage(dirtySeries, newSeries, newPoint) {\n                const chart = this.chart, annOptions = chart.options.accessibility.announceNewData;\n                // User supplied formatter?\n                if (annOptions.announcementFormatter) {\n                    const formatterRes = annOptions.announcementFormatter(dirtySeries, newSeries, newPoint);\n                    if (formatterRes !== false) {\n                        return formatterRes.length ? formatterRes : null;\n                    }\n                }\n                // Default formatter - use lang options\n                const multiple = H.charts && H.charts.length > 1 ?\n                    'Multiple' : 'Single', langKey = newSeries ? 'newSeriesAnnounce' + multiple :\n                    newPoint ? 'newPointAnnounce' + multiple : 'newDataAnnounce', chartTitle = getChartTitle(chart);\n                return chart.langFormat('accessibility.announceNewData.' + langKey, {\n                    chartTitle: chartTitle,\n                    seriesDesc: newSeries ?\n                        defaultSeriesDescriptionFormatter(newSeries) :\n                        null,\n                    pointDesc: newPoint ?\n                        defaultPointDescriptionFormatter(newPoint) :\n                        null,\n                    point: newPoint,\n                    series: newSeries\n                });\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (NewDataAnnouncer) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, compose)) {\n                    addEvent(SeriesClass, 'addPoint', seriesOnAddPoint);\n                    addEvent(SeriesClass, 'updatedData', seriesOnUpdatedData);\n                }\n            }\n            NewDataAnnouncer.compose = compose;\n            /**\n             * On new point added, update dirty list.\n             * @private\n             * @param {Highcharts.Point} point\n             */\n            function seriesOnAddPoint(e) {\n                const chart = this.chart, newDataAnnouncer = this.newDataAnnouncer;\n                if (newDataAnnouncer &&\n                    newDataAnnouncer.chart === chart &&\n                    chartHasAnnounceEnabled(chart)) {\n                    // Add it to newPoint storage unless we already have one\n                    newDataAnnouncer.dirty.newPoint = (defined(newDataAnnouncer.dirty.newPoint) ?\n                        void 0 :\n                        e.point);\n                }\n            }\n            /**\n             * On new data in the series, make sure we add it to the dirty list.\n             * @private\n             * @param {Highcharts.Series} series\n             */\n            function seriesOnUpdatedData() {\n                const chart = this.chart, newDataAnnouncer = this.newDataAnnouncer;\n                if (newDataAnnouncer &&\n                    newDataAnnouncer.chart === chart &&\n                    chartHasAnnounceEnabled(chart)) {\n                    newDataAnnouncer.dirty.hasDirty = true;\n                    newDataAnnouncer.dirty.allSeries[this.name + this.index] = this;\n                }\n            }\n        })(NewDataAnnouncer || (NewDataAnnouncer = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NewDataAnnouncer;\n    });\n    _registerModule(_modules, 'Accessibility/ProxyElement.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js']], function (H, U, EventProvider, ChartUtilities, HTMLUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Proxy elements are used to shadow SVG elements in HTML for assistive\n         *  technology, such as screen readers or voice input software.\n         *\n         *  The ProxyElement class represents such an element, and deals with\n         *  overlay positioning and mirroring events for the target.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { attr, css, merge } = U;\n        const { fireEventOnWrappedOrUnwrappedElement } = ChartUtilities;\n        const { cloneMouseEvent, cloneTouchEvent, getFakeMouseEvent, removeElement } = HTMLUtilities;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Represents a proxy element that overlays a target and relays events\n         * to its target.\n         *\n         * @private\n         * @class\n         */\n        class ProxyElement {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, target, proxyElementType = 'button', wrapperElementType, attributes) {\n                this.chart = chart;\n                this.target = target;\n                this.eventProvider = new EventProvider();\n                const innerEl = this.innerElement =\n                    doc.createElement(proxyElementType), wrapperEl = this.element = wrapperElementType ?\n                    doc.createElement(wrapperElementType) : innerEl;\n                if (!chart.styledMode) {\n                    this.hideElementVisually(innerEl);\n                }\n                if (wrapperElementType) {\n                    if (wrapperElementType === 'li' && !chart.styledMode) {\n                        wrapperEl.style.listStyle = 'none';\n                    }\n                    wrapperEl.appendChild(innerEl);\n                    this.element = wrapperEl;\n                }\n                this.updateTarget(target, attributes);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Fake a click event on the target.\n             */\n            click() {\n                const pos = this.getTargetPosition();\n                pos.x += pos.width / 2;\n                pos.y += pos.height / 2;\n                const fakeEventObject = getFakeMouseEvent('click', pos);\n                fireEventOnWrappedOrUnwrappedElement(this.target.click, fakeEventObject);\n            }\n            /**\n             * Update the target to be proxied. The position and events are updated to\n             * match the new target.\n             * @param target The new target definition\n             * @param attributes New HTML attributes to apply to the proxy. Set an\n             * attribute to null to remove.\n             */\n            updateTarget(target, attributes) {\n                this.target = target;\n                this.updateCSSClassName();\n                const attrs = attributes || {};\n                Object.keys(attrs).forEach((a) => {\n                    if (attrs[a] === null) {\n                        delete attrs[a];\n                    }\n                });\n                const targetAriaLabel = this.getTargetAttr(target.click, 'aria-label');\n                attr(this.innerElement, merge(targetAriaLabel ? {\n                    'aria-label': targetAriaLabel\n                } : {}, attrs));\n                this.eventProvider.removeAddedEvents();\n                this.addProxyEventsToElement(this.innerElement, target.click);\n                this.refreshPosition();\n            }\n            /**\n             * Refresh the position of the proxy element to match the current target\n             */\n            refreshPosition() {\n                const bBox = this.getTargetPosition();\n                css(this.innerElement, {\n                    width: (bBox.width || 1) + 'px',\n                    height: (bBox.height || 1) + 'px',\n                    left: (Math.round(bBox.x) || 0) + 'px',\n                    top: (Math.round(bBox.y) || 0) + 'px'\n                });\n            }\n            /**\n             * Remove button from DOM, and clear events.\n             */\n            remove() {\n                this.eventProvider.removeAddedEvents();\n                removeElement(this.element);\n            }\n            // -------------------------- private ------------------------------------\n            /**\n             * Update the CSS class name to match target\n             */\n            updateCSSClassName() {\n                const stringHasNoTooltip = (s) => (s.indexOf('highcharts-no-tooltip') > -1);\n                const legend = this.chart.legend;\n                const groupDiv = legend.group && legend.group.div;\n                const noTooltipOnGroup = stringHasNoTooltip(groupDiv && groupDiv.className || '');\n                const targetClassName = this.getTargetAttr(this.target.click, 'class') || '';\n                const noTooltipOnTarget = stringHasNoTooltip(targetClassName);\n                this.innerElement.className = noTooltipOnGroup || noTooltipOnTarget ?\n                    'highcharts-a11y-proxy-element highcharts-no-tooltip' :\n                    'highcharts-a11y-proxy-element';\n            }\n            /**\n             * Mirror events for a proxy element to a target\n             */\n            addProxyEventsToElement(element, target) {\n                [\n                    'click', 'touchstart', 'touchend', 'touchcancel', 'touchmove',\n                    'mouseover', 'mouseenter', 'mouseleave', 'mouseout'\n                ].forEach((evtType) => {\n                    const isTouchEvent = evtType.indexOf('touch') === 0;\n                    this.eventProvider.addEvent(element, evtType, (e) => {\n                        const clonedEvent = isTouchEvent ?\n                            cloneTouchEvent(e) :\n                            cloneMouseEvent(e);\n                        if (target) {\n                            fireEventOnWrappedOrUnwrappedElement(target, clonedEvent);\n                        }\n                        e.stopPropagation();\n                        // #9682, #15318: Touch scrolling didnt work when touching\n                        // proxy\n                        if (!isTouchEvent) {\n                            e.preventDefault();\n                        }\n                    }, { passive: false });\n                });\n            }\n            /**\n             * Set visually hidden style on a proxy element\n             */\n            hideElementVisually(el) {\n                css(el, {\n                    borderWidth: 0,\n                    backgroundColor: 'transparent',\n                    cursor: 'pointer',\n                    outline: 'none',\n                    opacity: 0.001,\n                    filter: 'alpha(opacity=1)',\n                    zIndex: 999,\n                    overflow: 'hidden',\n                    padding: 0,\n                    margin: 0,\n                    display: 'block',\n                    position: 'absolute',\n                    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=1)'\n                });\n            }\n            /**\n             * Get the position relative to chart container for the target\n             */\n            getTargetPosition() {\n                const clickTarget = this.target.click;\n                // We accept both DOM elements and wrapped elements as click targets.\n                const clickTargetElement = clickTarget.element ?\n                    clickTarget.element :\n                    clickTarget;\n                const posElement = this.target.visual || clickTargetElement;\n                const chartDiv = this.chart.renderTo;\n                if (chartDiv && posElement && posElement.getBoundingClientRect) {\n                    const rectEl = posElement.getBoundingClientRect(), chartPos = this.chart.pointer.getChartPosition();\n                    return {\n                        x: (rectEl.left - chartPos.left) / chartPos.scaleX,\n                        y: (rectEl.top - chartPos.top) / chartPos.scaleY,\n                        width: rectEl.right / chartPos.scaleX -\n                            rectEl.left / chartPos.scaleX,\n                        height: rectEl.bottom / chartPos.scaleY -\n                            rectEl.top / chartPos.scaleY\n                    };\n                }\n                return { x: 0, y: 0, width: 1, height: 1 };\n            }\n            /**\n             * Get an attribute value of a target\n             */\n            getTargetAttr(target, key) {\n                if (target.element) {\n                    return target.element.getAttribute(key);\n                }\n                return target.getAttribute(key);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ProxyElement;\n    });\n    _registerModule(_modules, 'Accessibility/ProxyProvider.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/DOMElementProvider.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/ProxyElement.js']], function (H, U, CU, DOMElementProvider, HU, ProxyElement) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Proxy elements are used to shadow SVG elements in HTML for assistive\n         *  technology, such as screen readers or voice input software.\n         *\n         *  The ProxyProvider keeps track of all proxy elements of the a11y module,\n         *  and updating their order and positioning.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc } = H;\n        const { attr, css } = U;\n        const { unhideChartElementFromAT } = CU;\n        const { removeElement, removeChildNodes } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Keeps track of all proxy elements and proxy groups.\n         *\n         * @private\n         * @class\n         */\n        class ProxyProvider {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.chart = chart;\n                this.domElementProvider = new DOMElementProvider();\n                this.groups = {};\n                this.groupOrder = [];\n                this.beforeChartProxyPosContainer = this.createProxyPosContainer('before');\n                this.afterChartProxyPosContainer = this.createProxyPosContainer('after');\n                this.update();\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable */\n            /**\n             * Add a new proxy element to a group, proxying a target control.\n             */\n            addProxyElement(groupKey, target, proxyElementType = 'button', attributes) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.addProxyElement: Invalid group key ' + groupKey);\n                }\n                const wrapperElementType = group.type === 'ul' || group.type === 'ol' ?\n                    'li' : void 0, proxy = new ProxyElement(this.chart, target, proxyElementType, wrapperElementType, attributes);\n                group.proxyContainerElement.appendChild(proxy.element);\n                group.proxyElements.push(proxy);\n                return proxy;\n            }\n            /**\n             * Create a group that will contain proxy elements. The group order is\n             * automatically updated according to the last group order keys.\n             *\n             * Returns the added group.\n             */\n            addGroup(groupKey, groupElementType = 'div', attributes) {\n                const existingGroup = this.groups[groupKey];\n                if (existingGroup) {\n                    return existingGroup.groupElement;\n                }\n                const proxyContainer = this.domElementProvider\n                    .createElement(groupElementType);\n                // If we want to add a role to the group, and still use e.g.\n                // a list group, we need a wrapper div around the proxyContainer.\n                // Used for setting region role on legend.\n                let groupElement;\n                if (attributes && attributes.role && groupElementType !== 'div') {\n                    groupElement = this.domElementProvider.createElement('div');\n                    groupElement.appendChild(proxyContainer);\n                }\n                else {\n                    groupElement = proxyContainer;\n                }\n                groupElement.className = 'highcharts-a11y-proxy-group highcharts-a11y-proxy-group-' +\n                    groupKey.replace(/\\W/g, '-');\n                this.groups[groupKey] = {\n                    proxyContainerElement: proxyContainer,\n                    groupElement,\n                    type: groupElementType,\n                    proxyElements: []\n                };\n                attr(groupElement, attributes || {});\n                if (groupElementType === 'ul') {\n                    proxyContainer.setAttribute('role', 'list'); // Needed for webkit\n                }\n                // Add the group to the end by default, and perhaps then we\n                // won't have to reorder the whole set of groups.\n                this.afterChartProxyPosContainer.appendChild(groupElement);\n                this.updateGroupOrder(this.groupOrder);\n                return groupElement;\n            }\n            /**\n             * Update HTML attributes of a group.\n             */\n            updateGroupAttrs(groupKey, attributes) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.updateGroupAttrs: Invalid group key ' + groupKey);\n                }\n                attr(group.groupElement, attributes);\n            }\n            /**\n             * Reorder the proxy groups.\n             *\n             * The group key \"series\" refers to the chart's data points / <svg> element.\n             * This is so that the keyboardNavigation.order option can be used to\n             * determine the proxy group order.\n             */\n            updateGroupOrder(groupKeys) {\n                // Store so that we can update order when a new group is created\n                this.groupOrder = groupKeys.slice();\n                // Don't unnecessarily reorder, because keyboard focus is lost\n                if (this.isDOMOrderGroupOrder()) {\n                    return;\n                }\n                const seriesIx = groupKeys.indexOf('series');\n                const beforeKeys = seriesIx > -1 ? groupKeys.slice(0, seriesIx) : groupKeys;\n                const afterKeys = seriesIx > -1 ? groupKeys.slice(seriesIx + 1) : [];\n                // Store focused element since it will be lost when reordering\n                const activeElement = doc.activeElement;\n                // Add groups to correct container\n                ['before', 'after'].forEach((pos) => {\n                    const posContainer = this[pos === 'before' ?\n                        'beforeChartProxyPosContainer' :\n                        'afterChartProxyPosContainer'];\n                    const keys = pos === 'before' ? beforeKeys : afterKeys;\n                    removeChildNodes(posContainer);\n                    keys.forEach((groupKey) => {\n                        const group = this.groups[groupKey];\n                        if (group) {\n                            posContainer.appendChild(group.groupElement);\n                        }\n                    });\n                });\n                // Attempt to restore focus after reordering, but note that this may\n                // cause screen readers re-announcing the button.\n                if ((this.beforeChartProxyPosContainer.contains(activeElement) ||\n                    this.afterChartProxyPosContainer.contains(activeElement)) &&\n                    activeElement && activeElement.focus) {\n                    activeElement.focus();\n                }\n            }\n            /**\n             * Remove all proxy elements in a group\n             */\n            clearGroup(groupKey) {\n                const group = this.groups[groupKey];\n                if (!group) {\n                    throw new Error('ProxyProvider.clearGroup: Invalid group key ' + groupKey);\n                }\n                removeChildNodes(group.proxyContainerElement);\n            }\n            /**\n             * Remove a group from the DOM and from the proxy provider's group list.\n             * All child elements are removed.\n             * If the group does not exist, nothing happens.\n             */\n            removeGroup(groupKey) {\n                const group = this.groups[groupKey];\n                if (group) {\n                    removeElement(group.groupElement);\n                    delete this.groups[groupKey];\n                }\n            }\n            /**\n             * Update the position and order of all proxy groups and elements\n             */\n            update() {\n                this.updatePosContainerPositions();\n                this.updateGroupOrder(this.groupOrder);\n                this.updateProxyElementPositions();\n            }\n            /**\n             * Update all proxy element positions\n             */\n            updateProxyElementPositions() {\n                Object.keys(this.groups).forEach(this.updateGroupProxyElementPositions.bind(this));\n            }\n            /**\n             * Update a group's proxy elements' positions.\n             * If the group does not exist, nothing happens.\n             */\n            updateGroupProxyElementPositions(groupKey) {\n                const group = this.groups[groupKey];\n                if (group) {\n                    group.proxyElements.forEach((el) => el.refreshPosition());\n                }\n            }\n            /**\n             * Remove all added elements\n             */\n            destroy() {\n                this.domElementProvider.destroyCreatedElements();\n            }\n            // -------------------------- private ------------------------------------\n            /**\n             * Create and return a pos container element (the overall containers for\n             * the proxy groups).\n             */\n            createProxyPosContainer(classNamePostfix) {\n                const el = this.domElementProvider.createElement('div');\n                el.setAttribute('aria-hidden', 'false');\n                el.className = 'highcharts-a11y-proxy-container' + (classNamePostfix ? '-' + classNamePostfix : '');\n                css(el, {\n                    top: '0',\n                    left: '0'\n                });\n                if (!this.chart.styledMode) {\n                    el.style.whiteSpace = 'nowrap';\n                    el.style.position = 'absolute';\n                }\n                return el;\n            }\n            /**\n             * Get an array of group keys that corresponds to the current group order\n             * in the DOM.\n             */\n            getCurrentGroupOrderInDOM() {\n                const getGroupKeyFromElement = (el) => {\n                    const allGroups = Object.keys(this.groups);\n                    let i = allGroups.length;\n                    while (i--) {\n                        const groupKey = allGroups[i];\n                        const group = this.groups[groupKey];\n                        if (group && el === group.groupElement) {\n                            return groupKey;\n                        }\n                    }\n                };\n                const getChildrenGroupOrder = (el) => {\n                    const childrenOrder = [];\n                    const children = el.children;\n                    for (let i = 0; i < children.length; ++i) {\n                        const groupKey = getGroupKeyFromElement(children[i]);\n                        if (groupKey) {\n                            childrenOrder.push(groupKey);\n                        }\n                    }\n                    return childrenOrder;\n                };\n                const before = getChildrenGroupOrder(this.beforeChartProxyPosContainer);\n                const after = getChildrenGroupOrder(this.afterChartProxyPosContainer);\n                before.push('series');\n                return before.concat(after);\n            }\n            /**\n             * Check if the current DOM order matches the current group order, so that\n             * a reordering/update is unnecessary.\n             */\n            isDOMOrderGroupOrder() {\n                const domOrder = this.getCurrentGroupOrderInDOM();\n                const groupOrderWithGroups = this.groupOrder.filter((x) => x === 'series' || !!this.groups[x]);\n                let i = domOrder.length;\n                if (i !== groupOrderWithGroups.length) {\n                    return false;\n                }\n                while (i--) {\n                    if (domOrder[i] !== groupOrderWithGroups[i]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            /**\n             * Update the DOM positions of the before/after proxy\n             * positioning containers for the groups.\n             */\n            updatePosContainerPositions() {\n                const chart = this.chart;\n                // If exporting, don't add these containers to the DOM.\n                if (chart.renderer.forExport) {\n                    return;\n                }\n                const rendererSVGEl = chart.renderer.box;\n                chart.container.insertBefore(this.afterChartProxyPosContainer, rendererSVGEl.nextSibling);\n                chart.container.insertBefore(this.beforeChartProxyPosContainer, rendererSVGEl);\n                unhideChartElementFromAT(this.chart, this.afterChartProxyPosContainer);\n                unhideChartElementFromAT(this.chart, this.beforeChartProxyPosContainer);\n            }\n        }\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return ProxyProvider;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'FÃ©vrier', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'AoÃ»t',\n         *             'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        const lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: 'â†’'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        const rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected. If the selected range\n             * exceeds the total data range and the 'all' option is available,\n             * the 'all' option, showing the full range, is automatically selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const RangeSelectorDefaults = {\n            lang,\n            rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, H, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { composed } = H;\n        const { addEvent, defined, extend, find, isNumber, merge, pick, pushUnique } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const chartDestroyEvents = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        let RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            const rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                const timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                const date = new time.Date(base);\n                const basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            let min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.fixedRange = max - min;\n                }\n            }\n            const dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (pushUnique(composed, compose)) {\n                const chartProto = ChartClass.prototype;\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'render', onChartRender);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                chartProto.callbacks.push(onChartCallback);\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            const chart = this, axes = chart.axes, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                axes.forEach((axis) => {\n                    axis.updateNames();\n                    axis.setScale();\n                });\n                chart.getAxisMargins();\n                rangeSelector.render();\n                const verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            let extremes, legend, alignTo, verticalAlign;\n            const rangeSelector = chart.rangeSelector, redraw = () => {\n                if (rangeSelector) {\n                    extremes = chart.xAxis[0].getExtremes();\n                    legend = chart.legend;\n                    verticalAlign = (rangeSelector &&\n                        rangeSelector.options.verticalAlign);\n                    if (isNumber(extremes.min)) {\n                        rangeSelector.render(extremes.min, extremes.max);\n                    }\n                    // Re-align the legend so that it's below the rangeselector\n                    if (legend.display &&\n                        verticalAlign === 'top' &&\n                        verticalAlign === legend.options.verticalAlign) {\n                        // Create a new alignment box for the legend.\n                        alignTo = merge(chart.spacingBox);\n                        if (legend.options.layout === 'vertical') {\n                            alignTo.y = chart.plotTop;\n                        }\n                        else {\n                            alignTo.y += rangeSelector.getHeight();\n                        }\n                        legend.group.placed = false; // Don't animate the alignment.\n                        legend.align(alignTo);\n                    }\n                }\n            };\n            if (rangeSelector) {\n                const events = find(chartDestroyEvents, (e) => e[0] === chart);\n                if (!events) {\n                    chartDestroyEvents.push([chart, [\n                            // redraw the scroller on setExtremes\n                            addEvent(chart.xAxis[0], 'afterSetExtremes', function (e) {\n                                if (rangeSelector) {\n                                    rangeSelector.render(e.min, e.max);\n                                }\n                            }),\n                            // redraw the scroller chart resize\n                            addEvent(chart, 'redraw', redraw)\n                        ]]);\n                }\n                // do it now\n                redraw();\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (let i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                const events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach((unbind) => unbind());\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        function onChartGetMargins() {\n            const rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                const rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            const chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector && !rangeSelector.options.floating) {\n                rangeSelector.render();\n                const verticalAlign = rangeSelector.options.verticalAlign;\n                if (verticalAlign === 'bottom') {\n                    this.extraBottomMargin = true;\n                }\n                else if (verticalAlign !== 'middle') {\n                    this.extraTopMargin = true;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            const chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            let rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                onChartCallback(this);\n                const verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const RangeSelectorComposition = {\n            compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { addEvent, createElement, css, defined, destroyObjectProperties, discardElement, extend, fireEvent, isNumber, merge, objectEach, pad, pick, pInt, splat } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            const ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            const date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some((char) => format.indexOf('%' + char) !== -1);\n            const time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some((char) => format.indexOf('%' + char) !== -1);\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        class RangeSelector {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            static compose(AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            }\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.chart = chart;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            clickButton(i, redraw) {\n                const rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                let dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, minSetting, rangeSetting, ctx, ytdExtremes, addOffsetMin = true;\n                // chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                // Set the fixed range before range is altered\n                chart.fixedRange = range;\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach((series) => {\n                                // reassign it to the last item\n                                const xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instanciated. Temporarily set min and range\n                    // options and remove them on chart load (#4317).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    rangeSetting = baseXAxisOptions.range;\n                    baseXAxisOptions.range = range;\n                    minSetting = baseXAxisOptions.min;\n                    baseXAxisOptions.min = rangeMin;\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        baseXAxisOptions.range = rangeSetting;\n                        baseXAxisOptions.min = minSetting;\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                }\n                fireEvent(this, 'afterBtnClick');\n            }\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            setSelected(selected) {\n                this.selected = this.options.selected = selected;\n            }\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            init(chart) {\n                const rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    const minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (this.max - this.min !==\n                                chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n            }\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            updateButtonStates() {\n                const rangeSelector = this, chart = this.chart, dropdown = this.dropdown, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttons = rangeSelector.buttons;\n                let selectedExists = isNumber(selected), isSelectedTooGreat = false;\n                rangeSelector.buttonOptions.forEach((rangeOptions, i) => {\n                    const range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, button = buttons[i], offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed in\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    let state = 0, \n                    // Do not select the YTD button if not explicitly told so\n                    isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isAllButAlreadyShowingAll = false, isSameRange = range === actualRange;\n                    if (isSelected && isTooGreatRange) {\n                        isSelectedTooGreat = true;\n                    }\n                    // Months and years have a variable range so we check the extremes\n                    if ((type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                        isAllButAlreadyShowingAll = (!isSelected &&\n                            selectedExists &&\n                            isSameRange);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    const disable = (!allButtonsEnabled &&\n                        !(isSelectedTooGreat && type === 'all') &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            isAllButAlreadyShowingAll ||\n                            hasNoData));\n                    const select = ((isSelectedTooGreat && type === 'all') ||\n                        (isSelected && isSameRange) ||\n                        (isSameRange && !selectedExists && !isYTDButNotSelected) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        state = 3;\n                    }\n                    else if (select) {\n                        selectedExists = true; // Only one button can be selected\n                        state = 2;\n                    }\n                    // If state has changed, update the button\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = disable;\n                            if (state === 2) {\n                                dropdown.selectedIndex = i + 1;\n                            }\n                        }\n                        // Reset (#9209)\n                        if (state === 0 && selected === i) {\n                            rangeSelector.setSelected();\n                        }\n                        else if ((state === 2 && !defined(selected)) ||\n                            isSelectedTooGreat) {\n                            rangeSelector.setSelected(i);\n                        }\n                    }\n                });\n            }\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            computeButtonRange(rangeOptions) {\n                const type = rangeOptions.type, count = rangeOptions.count || 1, \n                // these time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            }\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            getInputValue(name) {\n                const input = name === 'min' ? this.minInput : this.maxInput;\n                const options = this.chart.options\n                    .rangeSelector;\n                const time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            }\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            setInputValue(name, inputTime) {\n                const options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    const hcTimeAttr = input.getAttribute('data-hc-time');\n                    let updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        const previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            }\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            setInputExtremes(name, min, max) {\n                const input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    const format = this.inputTypeFormats[input.type];\n                    const time = this.chart.time;\n                    if (format) {\n                        const newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        const newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            showInput(name) {\n                const dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    const isTextInput = input.type === 'text', { translateX = 0, translateY = 0 } = this.inputGroup, { x = 0, width = 0, height = 0 } = dateBox, { inputBoxWidth } = this.options;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            hideInput(name) {\n                const input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            defaultInputDateParser(inputDate, useUTC, time) {\n                const hasTimezone = (str) => str.length > 6 &&\n                    (str.lastIndexOf('-') === str.length - 6 ||\n                        str.lastIndexOf('+') === str.length - 6);\n                let input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    const offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? `+${pad(-offset)}:00` : `-${pad(offset)}:00`;\n                }\n                let date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    const parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            }\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            drawInput(name) {\n                const { chart, div, inputGroup } = this;\n                const rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes() {\n                    const { maxInput, minInput } = rangeSelector, chartAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax;\n                    let value = rangeSelector.getInputValue(name);\n                    if (value !== Number(input.getAttribute('data-hc-time-previous')) &&\n                        isNumber(value)) {\n                        input.setAttribute('data-hc-time-previous', value);\n                        // Validate the extremes. If it goes beyound the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                const text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                const label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and and records\n                // click events that bring in the HTML input.\n                const dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                const input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = () => {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = () => {\n                    // update extermes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes();\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                let keyDown = false;\n                // handle changes in the input boxes\n                input.onchange = () => {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes();\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = (event) => {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeydown = (event) => {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.keyCode === 38 || event.keyCode === 40) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeyup = () => {\n                    keyDown = false;\n                };\n                return { dateBox, input, label };\n            }\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            getPosition() {\n                const chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // set offset only for varticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            }\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            getYTDExtremes(dataMax, dataMin, useUTC) {\n                const time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min\n                };\n            }\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            render(min, max) {\n                const chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputsZIndex = pick(chartOptions.chart.style &&\n                    chartOptions.chart.style.zIndex, 0) + 1, inputEnabled = options.inputEnabled, rendered = this.rendered;\n                if (options.enabled === false) {\n                    return;\n                }\n                // create the elements\n                if (!rendered) {\n                    this.group = renderer.g('range-selector-group')\n                        .attr({\n                        zIndex: 7\n                    })\n                        .add();\n                    this.div = createElement('div', void 0, {\n                        position: 'relative',\n                        height: 0,\n                        zIndex: inputsZIndex\n                    });\n                    if (this.buttonOptions.length) {\n                        this.renderButtons();\n                    }\n                    // First create a wrapper outside the container in order to make\n                    // the inputs work and make export correct\n                    if (container.parentNode) {\n                        container.parentNode.insertBefore(this.div, container);\n                    }\n                    if (inputEnabled) {\n                        // Create the group to keep the inputs\n                        this.inputGroup = renderer.g('input-group').add(this.group);\n                        const minElems = this.drawInput('min');\n                        this.minDateBox = minElems.dateBox;\n                        this.minLabel = minElems.label;\n                        this.minInput = minElems.input;\n                        const maxElems = this.drawInput('max');\n                        this.maxDateBox = maxElems.dateBox;\n                        this.maxLabel = maxElems.label;\n                        this.maxInput = maxElems.input;\n                    }\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    const unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        const minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        let x = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach((label) => {\n                            if (label) {\n                                const { width } = label.getBBox();\n                                if (width) {\n                                    label.attr({ x });\n                                    x += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.rendered = true;\n            }\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            renderButtons() {\n                const { buttons, chart, options } = this;\n                const lang = defaultOptions.lang;\n                const renderer = chart.renderer;\n                const buttonTheme = merge(options.buttonTheme);\n                const states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                const width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                const dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    padding: 0,\n                    border: 0,\n                    top: '-9999em',\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', () => {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                [\n                    [H.isMS ? 'mouseover' : 'mouseenter'],\n                    [H.isMS ? 'mouseout' : 'mouseleave'],\n                    ['change', 'click']\n                ].forEach(([from, to]) => {\n                    addEvent(dropdown, from, () => {\n                        const button = buttons[this.currentButtonIndex()];\n                        if (button) {\n                            fireEvent(button.element, to || from);\n                        }\n                    });\n                });\n                this.zoomText = renderer\n                    .label((lang && lang.rangeSelectorZoom) || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach((rangeOptions, i) => {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, (e) => {\n                        // extract events from button object and call\n                        const buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        let callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            this.clickButton(i);\n                        }\n                        this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width\n                    })\n                        .add(this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            }\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            alignElements() {\n                const { buttonGroup, buttons, chart, group, inputGroup, options, zoomText } = this;\n                const chartOptions = chart.options;\n                const navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                const { buttonPosition, inputPosition, verticalAlign } = options;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is is used both by the buttonGroup and the inputGroup.\n                const getXOffsetForExportButton = (group, position) => {\n                    if (navButtonOptions &&\n                        this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                let plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    let translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            let width = 0;\n                            if (zoomText) {\n                                width += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach((button, i) => {\n                                width += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        this.updateButtonStates();\n                        // Detect collision between button group and exporting\n                        const xOffsetForExportButton = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton);\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    let xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign\n                    }, true, chart.spacingBox);\n                    const alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    let groupHeight = group.getBBox().height + 20; // # 20 padding\n                    let translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        const legendOptions = chart.legend && chart.legend.options;\n                        const legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    const { minInput, maxInput, dropdown } = this;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            }\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            alignButtonGroup(xOffsetForExportButton, width) {\n                const { chart, options, buttonGroup, buttons } = this;\n                const { buttonPosition } = options;\n                const plotLeft = chart.plotLeft - chart.spacing[3];\n                let translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            positionButtons() {\n                const { buttons, chart, options, zoomText } = this;\n                const verb = chart.hasLoaded ? 'animate' : 'attr';\n                const { buttonPosition } = options;\n                const plotLeft = chart.plotLeft;\n                let buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (let i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            }\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            handleCollision(xOffsetForExportButton) {\n                const { chart, buttonGroup, inputGroup } = this;\n                const { buttonPosition, dropdown, inputPosition } = this.options;\n                const maxButtonWidth = () => {\n                    let buttonWidth = 0;\n                    this.buttons.forEach((button) => {\n                        const bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                const groupsOverlap = (buttonGroupWidth) => {\n                    if (inputGroup && buttonGroup) {\n                        const inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // getBBox for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        const inputGroupWidth = inputGroup.alignOptions.width;\n                        const buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                const moveInputsDown = () => {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons(xOffsetForExportButton);\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons(xOffsetForExportButton);\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons(xOffsetForExportButton);\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            }\n            /**\n             * Collapse the buttons and put the select element on top.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            collapseButtons(xOffsetForExportButton) {\n                const { buttons, buttonOptions, chart, dropdown, options, zoomText } = this;\n                // If the buttons are already collapsed do nothing.\n                if (this.isCollapsed === true) {\n                    return;\n                }\n                this.isCollapsed = true;\n                const userButtonTheme = (chart.userOptions.rangeSelector &&\n                    chart.userOptions.rangeSelector.buttonTheme) || {};\n                const getAttribs = (text) => ({\n                    text: text ? `${text} â–¾` : 'â–¾',\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme.padding, 8)\n                });\n                if (zoomText) {\n                    zoomText.hide();\n                }\n                let hasActiveButton = false;\n                buttonOptions.forEach((rangeOptions, i) => {\n                    const button = buttons[i];\n                    if (button.state !== 2) {\n                        button.hide();\n                    }\n                    else {\n                        button.show();\n                        button.attr(getAttribs(rangeOptions.text));\n                        hasActiveButton = true;\n                    }\n                });\n                if (!hasActiveButton) {\n                    if (dropdown) {\n                        dropdown.selectedIndex = 0;\n                    }\n                    buttons[0].show();\n                    buttons[0].attr(getAttribs(this.zoomText && this.zoomText.textStr));\n                }\n                const { align } = options.buttonPosition;\n                this.positionButtons();\n                if (align === 'right' || align === 'center') {\n                    this.alignButtonGroup(xOffsetForExportButton, buttons[this.currentButtonIndex()].getBBox().width);\n                }\n                this.showDropdown();\n            }\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            expandButtons() {\n                const { buttons, buttonOptions, options, zoomText } = this;\n                this.hideDropdown();\n                // If buttons are already not collapsed, do nothing.\n                if (this.isCollapsed === false) {\n                    return;\n                }\n                this.isCollapsed = false;\n                if (zoomText) {\n                    zoomText.show();\n                }\n                buttonOptions.forEach((rangeOptions, i) => {\n                    const button = buttons[i];\n                    button.show();\n                    button.attr({\n                        text: rangeOptions.text,\n                        width: options.buttonTheme.width || 28,\n                        paddingLeft: pick(options.buttonTheme.paddingLeft, 'unset'),\n                        paddingRight: pick(options.buttonTheme.paddingRight, 'unset')\n                    });\n                    if (button.state < 2) {\n                        button.setState(0);\n                    }\n                });\n                this.positionButtons();\n            }\n            /**\n             * Get the index of the visible button when the buttons are collapsed.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#currentButtonIndex\n             */\n            currentButtonIndex() {\n                const { dropdown } = this;\n                if (dropdown && dropdown.selectedIndex > 0) {\n                    return dropdown.selectedIndex - 1;\n                }\n                return 0;\n            }\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            showDropdown() {\n                const { buttonGroup, buttons, chart, dropdown } = this;\n                if (buttonGroup && dropdown) {\n                    const { translateX = 0, translateY = 0 } = buttonGroup, bBox = buttons[this.currentButtonIndex()].getBBox();\n                    css(dropdown, {\n                        left: (chart.plotLeft + translateX) + 'px',\n                        top: (translateY + 0.5) + 'px',\n                        width: bBox.width + 'px',\n                        height: bBox.height + 'px'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            }\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            hideDropdown() {\n                const { dropdown } = this;\n                if (dropdown) {\n                    css(dropdown, {\n                        top: '-9999em',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            }\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            getHeight() {\n                const rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                let rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                const minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            }\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            titleCollision(chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            }\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            update(options) {\n                const chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                this.render();\n            }\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            destroy() {\n                const rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach((unbind) => unbind());\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            }\n        }\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Accessibility/Components/RangeSelectorComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/Announcer.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Core/Globals.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Core/Utilities.js']], function (AccessibilityComponent, Announcer, ChartUtilities, H, KeyboardNavigationHandler, RangeSelector, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for the range selector.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT, getAxisRangeDescription } = ChartUtilities;\n        const { composed } = H;\n        const { addEvent, attr, pushUnique } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Do we want date input navigation\n         * @private\n         */\n        function shouldRunInputNavigation(chart) {\n            return Boolean(chart.rangeSelector &&\n                chart.rangeSelector.inputGroup &&\n                chart.rangeSelector.inputGroup.element.style.visibility !== 'hidden' &&\n                chart.options.rangeSelector.inputEnabled !== false &&\n                chart.rangeSelector.minInput &&\n                chart.rangeSelector.maxInput);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The RangeSelectorComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelectorComponent\n         */\n        class RangeSelectorComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the component\n             * @private\n             */\n            init() {\n                const chart = this.chart;\n                this.announcer = new Announcer(chart, 'polite');\n            }\n            /**\n             * Called on first render/updates to the chart, including options changes.\n             */\n            onChartUpdate() {\n                const chart = this.chart, component = this, rangeSelector = chart.rangeSelector;\n                if (!rangeSelector) {\n                    return;\n                }\n                this.updateSelectorVisibility();\n                this.setDropdownAttrs();\n                if (rangeSelector.buttons &&\n                    rangeSelector.buttons.length) {\n                    rangeSelector.buttons.forEach((button) => {\n                        component.setRangeButtonAttrs(button);\n                    });\n                }\n                // Make sure input boxes are accessible and focusable\n                if (rangeSelector.maxInput && rangeSelector.minInput) {\n                    ['minInput', 'maxInput'].forEach(function (key, i) {\n                        const input = rangeSelector[key];\n                        if (input) {\n                            unhideChartElementFromAT(chart, input);\n                            component.setRangeInputAttrs(input, 'accessibility.rangeSelector.' + (i ? 'max' : 'min') +\n                                'InputLabel');\n                        }\n                    });\n                }\n            }\n            /**\n             * Hide buttons from AT when showing dropdown, and vice versa.\n             * @private\n             */\n            updateSelectorVisibility() {\n                const chart = this.chart;\n                const rangeSelector = chart.rangeSelector;\n                const dropdown = (rangeSelector &&\n                    rangeSelector.dropdown);\n                const buttons = (rangeSelector &&\n                    rangeSelector.buttons ||\n                    []);\n                const hideFromAT = (el) => el.setAttribute('aria-hidden', true);\n                if (rangeSelector &&\n                    rangeSelector.hasVisibleDropdown &&\n                    dropdown) {\n                    unhideChartElementFromAT(chart, dropdown);\n                    buttons.forEach((btn) => hideFromAT(btn.element));\n                }\n                else {\n                    if (dropdown) {\n                        hideFromAT(dropdown);\n                    }\n                    buttons.forEach((btn) => unhideChartElementFromAT(chart, btn.element));\n                }\n            }\n            /**\n             * Set accessibility related attributes on dropdown element.\n             * @private\n             */\n            setDropdownAttrs() {\n                const chart = this.chart;\n                const dropdown = (chart.rangeSelector &&\n                    chart.rangeSelector.dropdown);\n                if (dropdown) {\n                    const label = chart.langFormat('accessibility.rangeSelector.dropdownLabel', { rangeTitle: chart.options.lang.rangeSelectorZoom });\n                    dropdown.setAttribute('aria-label', label);\n                    dropdown.setAttribute('tabindex', -1);\n                }\n            }\n            /**\n             * Set attrs for a range button\n             * @private\n             */\n            setRangeButtonAttrs(button) {\n                attr(button.element, {\n                    tabindex: -1,\n                    role: 'button'\n                });\n            }\n            /**\n             * Set attrs for a date input\n             * @private\n             */\n            setRangeInputAttrs(input, langKey) {\n                const chart = this.chart;\n                attr(input, {\n                    tabindex: -1,\n                    'aria-label': chart.langFormat(langKey, { chart: chart })\n                });\n            }\n            /**\n             * Handle arrow key nav\n             * @private\n             */\n            onButtonNavKbdArrowKey(keyboardNavigationHandler, keyCode) {\n                const response = keyboardNavigationHandler.response, keys = this.keyCodes, chart = this.chart, wrapAround = chart.options.accessibility\n                    .keyboardNavigation.wrapAround, direction = (keyCode === keys.left || keyCode === keys.up) ? -1 : 1, didHighlight = chart.highlightRangeSelectorButton(chart.highlightedRangeSelectorItemIx + direction);\n                if (!didHighlight) {\n                    if (wrapAround) {\n                        keyboardNavigationHandler.init(direction);\n                        return response.success;\n                    }\n                    return response[direction > 0 ? 'next' : 'prev'];\n                }\n                return response.success;\n            }\n            /**\n             * Handle keyboard click\n             * @private\n             */\n            onButtonNavKbdClick(keyboardNavigationHandler) {\n                const response = keyboardNavigationHandler.response, chart = this.chart, wasDisabled = chart.oldRangeSelectorItemState === 3;\n                if (!wasDisabled) {\n                    this.fakeClickEvent(chart.rangeSelector.buttons[chart.highlightedRangeSelectorItemIx].element);\n                }\n                return response.success;\n            }\n            /**\n             * Called whenever a range selector button has been clicked, either by\n             * mouse, touch, or kbd/voice/other.\n             * @private\n             */\n            onAfterBtnClick() {\n                const chart = this.chart;\n                const axisRangeDescription = getAxisRangeDescription(chart.xAxis[0]);\n                const announcement = chart.langFormat('accessibility.rangeSelector.clickButtonAnnouncement', { chart, axisRangeDescription });\n                if (announcement) {\n                    this.announcer.announce(announcement);\n                }\n            }\n            /**\n             * Handle move between input elements with Tab key\n             * @private\n             */\n            onInputKbdMove(direction) {\n                const chart = this.chart;\n                const rangeSel = chart.rangeSelector;\n                const newIx = chart.highlightedInputRangeIx = (chart.highlightedInputRangeIx || 0) + direction;\n                const newIxOutOfRange = newIx > 1 || newIx < 0;\n                if (newIxOutOfRange) {\n                    if (chart.accessibility) {\n                        // Ignore focus\n                        chart.accessibility.keyboardNavigation.exiting = true;\n                        chart.accessibility.keyboardNavigation.tabindexContainer\n                            .focus();\n                        return chart.accessibility.keyboardNavigation.move(direction);\n                    }\n                }\n                else if (rangeSel) {\n                    const svgEl = rangeSel[newIx ? 'maxDateBox' : 'minDateBox'];\n                    const inputEl = rangeSel[newIx ? 'maxInput' : 'minInput'];\n                    if (svgEl && inputEl) {\n                        chart.setFocusToElement(svgEl, inputEl);\n                    }\n                }\n                return true;\n            }\n            /**\n             * Init date input navigation\n             * @private\n             */\n            onInputNavInit(direction) {\n                const component = this;\n                const chart = this.chart;\n                const buttonIxToHighlight = direction > 0 ? 0 : 1;\n                const rangeSel = chart.rangeSelector;\n                const svgEl = (rangeSel &&\n                    rangeSel[buttonIxToHighlight ? 'maxDateBox' : 'minDateBox']);\n                const minInput = (rangeSel && rangeSel.minInput);\n                const maxInput = (rangeSel && rangeSel.maxInput);\n                const inputEl = buttonIxToHighlight ? maxInput : minInput;\n                chart.highlightedInputRangeIx = buttonIxToHighlight;\n                if (svgEl && minInput && maxInput) {\n                    chart.setFocusToElement(svgEl, inputEl);\n                    // Tab-press with the input focused does not propagate to chart\n                    // automatically, so we manually catch and handle it when relevant.\n                    if (this.removeInputKeydownHandler) {\n                        this.removeInputKeydownHandler();\n                    }\n                    const keydownHandler = (e) => {\n                        const isTab = (e.which || e.keyCode) === this.keyCodes.tab;\n                        if (isTab &&\n                            component.onInputKbdMove(e.shiftKey ? -1 : 1)) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    };\n                    const minRemover = addEvent(minInput, 'keydown', keydownHandler);\n                    const maxRemover = addEvent(maxInput, 'keydown', keydownHandler);\n                    this.removeInputKeydownHandler = () => {\n                        minRemover();\n                        maxRemover();\n                    };\n                }\n            }\n            /**\n             * Terminate date input nav\n             * @private\n             */\n            onInputNavTerminate() {\n                const rangeSel = (this.chart.rangeSelector || {});\n                if (rangeSel.maxInput) {\n                    rangeSel.hideInput('max');\n                }\n                if (rangeSel.minInput) {\n                    rangeSel.hideInput('min');\n                }\n                if (this.removeInputKeydownHandler) {\n                    this.removeInputKeydownHandler();\n                    delete this.removeInputKeydownHandler;\n                }\n            }\n            /**\n             * Init range selector dropdown nav\n             * @private\n             */\n            initDropdownNav() {\n                const chart = this.chart;\n                const rangeSelector = chart.rangeSelector;\n                const dropdown = (rangeSelector && rangeSelector.dropdown);\n                if (rangeSelector && dropdown) {\n                    chart.setFocusToElement(rangeSelector.buttonGroup, dropdown);\n                    if (this.removeDropdownKeydownHandler) {\n                        this.removeDropdownKeydownHandler();\n                    }\n                    // Tab-press with dropdown focused does not propagate to chart\n                    // automatically, so we manually catch and handle it when relevant.\n                    this.removeDropdownKeydownHandler = addEvent(dropdown, 'keydown', (e) => {\n                        const isTab = (e.which || e.keyCode) === this.keyCodes.tab, a11y = chart.accessibility;\n                        if (isTab) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            if (a11y) {\n                                a11y.keyboardNavigation.tabindexContainer.focus();\n                                a11y.keyboardNavigation.move(e.shiftKey ? -1 : 1);\n                            }\n                        }\n                    });\n                }\n            }\n            /**\n             * Get navigation for the range selector buttons.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object.\n             */\n            getRangeSelectorButtonNavigation() {\n                const chart = this.chart;\n                const keys = this.keyCodes;\n                const component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.left, keys.right, keys.up, keys.down],\n                            function (keyCode) {\n                                return component.onButtonNavKbdArrowKey(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.enter, keys.space],\n                            function () {\n                                return component.onButtonNavKbdClick(this);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return !!(chart.rangeSelector &&\n                            chart.rangeSelector.buttons &&\n                            chart.rangeSelector.buttons.length);\n                    },\n                    init: function (direction) {\n                        const rangeSelector = chart.rangeSelector;\n                        if (rangeSelector && rangeSelector.hasVisibleDropdown) {\n                            component.initDropdownNav();\n                        }\n                        else if (rangeSelector) {\n                            const lastButtonIx = rangeSelector.buttons.length - 1;\n                            chart.highlightRangeSelectorButton(direction > 0 ? 0 : lastButtonIx);\n                        }\n                    },\n                    terminate: function () {\n                        if (component.removeDropdownKeydownHandler) {\n                            component.removeDropdownKeydownHandler();\n                            delete component.removeDropdownKeydownHandler;\n                        }\n                    }\n                });\n            }\n            /**\n             * Get navigation for the range selector input boxes.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler}\n             *         The module object.\n             */\n            getRangeSelectorInputNavigation() {\n                const chart = this.chart;\n                const component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [],\n                    validate: function () {\n                        return shouldRunInputNavigation(chart);\n                    },\n                    init: function (direction) {\n                        component.onInputNavInit(direction);\n                    },\n                    terminate: function () {\n                        component.onInputNavTerminate();\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects.\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.getRangeSelectorButtonNavigation(),\n                    this.getRangeSelectorInputNavigation()\n                ];\n            }\n            /**\n             * Remove component traces\n             */\n            destroy() {\n                if (this.removeDropdownKeydownHandler) {\n                    this.removeDropdownKeydownHandler();\n                }\n                if (this.removeInputKeydownHandler) {\n                    this.removeInputKeydownHandler();\n                }\n                if (this.announcer) {\n                    this.announcer.destroy();\n                }\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (RangeSelectorComponent) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Highlight range selector button by index.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightRangeSelectorButton\n             */\n            function chartHighlightRangeSelectorButton(ix) {\n                const buttons = (this.rangeSelector &&\n                    this.rangeSelector.buttons ||\n                    []);\n                const curHighlightedIx = this.highlightedRangeSelectorItemIx;\n                const curSelectedIx = (this.rangeSelector &&\n                    this.rangeSelector.selected);\n                // Deselect old\n                if (typeof curHighlightedIx !== 'undefined' &&\n                    buttons[curHighlightedIx] &&\n                    curHighlightedIx !== curSelectedIx) {\n                    buttons[curHighlightedIx].setState(this.oldRangeSelectorItemState || 0);\n                }\n                // Select new\n                this.highlightedRangeSelectorItemIx = ix;\n                if (buttons[ix]) {\n                    this.setFocusToElement(buttons[ix].box, buttons[ix].element);\n                    if (ix !== curSelectedIx) {\n                        this.oldRangeSelectorItemState = buttons[ix].state;\n                        buttons[ix].setState(1);\n                    }\n                    return true;\n                }\n                return false;\n            }\n            /**\n             * Build compositions\n             * @private\n             */\n            function compose(ChartClass, RangeSelectorClass) {\n                if (pushUnique(composed, compose)) {\n                    const chartProto = ChartClass.prototype;\n                    chartProto.highlightRangeSelectorButton = (chartHighlightRangeSelectorButton);\n                    addEvent(RangeSelector, 'afterBtnClick', rangeSelectorAfterBtnClick);\n                }\n            }\n            RangeSelectorComponent.compose = compose;\n            /**\n             * Range selector does not have destroy-setup for class instance events - so\n             * we set it on the class and call the component from here.\n             * @private\n             */\n            function rangeSelectorAfterBtnClick() {\n                const a11y = this.chart.accessibility;\n                if (a11y && a11y.components.rangeSelector) {\n                    return a11y.components.rangeSelector.onAfterBtnClick();\n                }\n            }\n        })(RangeSelectorComponent || (RangeSelectorComponent = {}));\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n\n        return RangeSelectorComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/ForcedMarkers.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle forcing series markers.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { composed } = H;\n        const { addEvent, merge, pushUnique } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ForcedMarkersComposition;\n        (function (ForcedMarkersComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (pushUnique(composed, compose)) {\n                    addEvent(SeriesClass, 'afterSetOptions', seriesOnAfterSetOptions);\n                    addEvent(SeriesClass, 'render', seriesOnRender);\n                    addEvent(SeriesClass, 'afterRender', seriesOnAfterRender);\n                }\n            }\n            ForcedMarkersComposition.compose = compose;\n            /**\n             * @private\n             */\n            function forceZeroOpacityMarkerOptions(options) {\n                merge(true, options, {\n                    marker: {\n                        enabled: true,\n                        states: {\n                            normal: {\n                                opacity: 0\n                            }\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            function getPointMarkerOpacity(pointOptions) {\n                return pointOptions.marker.states &&\n                    pointOptions.marker.states.normal &&\n                    pointOptions.marker.states.normal.opacity;\n            }\n            /**\n             * @private\n             */\n            function handleForcePointMarkers(series) {\n                let i = series.points.length;\n                while (i--) {\n                    const point = series.points[i];\n                    const pointOptions = point.options;\n                    const hadForcedMarker = point.hasForcedA11yMarker;\n                    delete point.hasForcedA11yMarker;\n                    if (pointOptions.marker) {\n                        const isStillForcedMarker = hadForcedMarker &&\n                            getPointMarkerOpacity(pointOptions) === 0;\n                        if (pointOptions.marker.enabled && !isStillForcedMarker) {\n                            unforcePointMarkerOptions(pointOptions);\n                            point.hasForcedA11yMarker = false;\n                        }\n                        else if (pointOptions.marker.enabled === false) {\n                            forceZeroOpacityMarkerOptions(pointOptions);\n                            point.hasForcedA11yMarker = true;\n                        }\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function hasIndividualPointMarkerOptions(series) {\n                return !!(series._hasPointMarkers &&\n                    series.points &&\n                    series.points.length);\n            }\n            /**\n             * @private\n             */\n            function isWithinDescriptionThreshold(series) {\n                const a11yOptions = series.chart.options.accessibility;\n                return series.points.length <\n                    a11yOptions.series.pointDescriptionEnabledThreshold ||\n                    a11yOptions.series\n                        .pointDescriptionEnabledThreshold === false;\n            }\n            /**\n             * Process marker graphics after render\n             * @private\n             */\n            function seriesOnAfterRender() {\n                const series = this;\n                // For styled mode the rendered graphic does not reflect the style\n                // options, and we need to add/remove classes to achieve the same.\n                if (series.chart.styledMode) {\n                    if (series.markerGroup) {\n                        series.markerGroup[series.a11yMarkersForced ? 'addClass' : 'removeClass']('highcharts-a11y-markers-hidden');\n                    }\n                    // Do we need to handle individual points?\n                    if (hasIndividualPointMarkerOptions(series)) {\n                        series.points.forEach((point) => {\n                            if (point.graphic) {\n                                point.graphic[point.hasForcedA11yMarker ?\n                                    'addClass' : 'removeClass']('highcharts-a11y-marker-hidden');\n                                point.graphic[point.hasForcedA11yMarker === false ?\n                                    'addClass' :\n                                    'removeClass']('highcharts-a11y-marker-visible');\n                            }\n                        });\n                    }\n                }\n            }\n            /**\n             * Keep track of options to reset markers to if no longer forced.\n             * @private\n             */\n            function seriesOnAfterSetOptions(e) {\n                this.resetA11yMarkerOptions = merge(e.options.marker || {}, this.userOptions.marker || {});\n            }\n            /**\n             * Keep track of forcing markers.\n             * @private\n             */\n            function seriesOnRender() {\n                const series = this, options = series.options;\n                if (shouldForceMarkers(series)) {\n                    if (options.marker && options.marker.enabled === false) {\n                        series.a11yMarkersForced = true;\n                        forceZeroOpacityMarkerOptions(series.options);\n                    }\n                    if (hasIndividualPointMarkerOptions(series)) {\n                        handleForcePointMarkers(series);\n                    }\n                }\n                else if (series.a11yMarkersForced) {\n                    delete series.a11yMarkersForced;\n                    unforceSeriesMarkerOptions(series);\n                    delete series.resetA11yMarkerOptions;\n                }\n            }\n            /**\n             * @private\n             */\n            function shouldForceMarkers(series) {\n                const chart = series.chart, chartA11yEnabled = chart.options.accessibility.enabled, seriesA11yEnabled = (series.options.accessibility &&\n                    series.options.accessibility.enabled) !== false;\n                return (chartA11yEnabled &&\n                    seriesA11yEnabled &&\n                    isWithinDescriptionThreshold(series));\n            }\n            /**\n             * @private\n             */\n            function unforcePointMarkerOptions(pointOptions) {\n                merge(true, pointOptions.marker, {\n                    states: {\n                        normal: {\n                            opacity: getPointMarkerOpacity(pointOptions) || 1\n                        }\n                    }\n                });\n            }\n            /**\n             * Reset markers to normal\n             * @private\n             */\n            function unforceSeriesMarkerOptions(series) {\n                const resetMarkerOptions = series.resetA11yMarkerOptions;\n                if (resetMarkerOptions) {\n                    const originalOpactiy = resetMarkerOptions.states &&\n                        resetMarkerOptions.states.normal &&\n                        resetMarkerOptions.states.normal.opacity;\n                    // Temporarily set the old marker options to enabled in order to\n                    // trigger destruction of the markers in Series.update.\n                    if (series.userOptions && series.userOptions.marker) {\n                        series.userOptions.marker.enabled = true;\n                    }\n                    series.update({\n                        marker: {\n                            enabled: resetMarkerOptions.enabled,\n                            states: {\n                                normal: { opacity: originalOpactiy }\n                            }\n                        }\n                    });\n                }\n            }\n        })(ForcedMarkersComposition || (ForcedMarkersComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ForcedMarkersComposition;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesKeyboardNavigation.js', [_modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Utils/EventProvider.js'], _modules['Accessibility/Utils/ChartUtilities.js']], function (Point, Series, SeriesRegistry, H, U, KeyboardNavigationHandler, EventProvider, ChartUtilities) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handle keyboard navigation for series.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { seriesTypes } = SeriesRegistry;\n        const { composed, doc } = H;\n        const { defined, fireEvent, pushUnique } = U;\n        const { getPointFromXY, getSeriesFromName, scrollAxisToPoint } = ChartUtilities;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Get the index of a point in a series. This is needed when using e.g. data\n         * grouping.\n         *\n         * @private\n         * @function getPointIndex\n         * @param {Highcharts.AccessibilityPoint} point\n         * The point to find index of.\n         * @return {number|undefined}\n         * The index in the series.points array of the point.\n         */\n        function getPointIndex(point) {\n            const index = point.index, points = point.series.points;\n            let i = points.length;\n            if (points[index] !== point) {\n                while (i--) {\n                    if (points[i] === point) {\n                        return i;\n                    }\n                }\n            }\n            else {\n                return index;\n            }\n        }\n        /**\n         * Determine if series navigation should be skipped\n         * @private\n         */\n        function isSkipSeries(series) {\n            const a11yOptions = series.chart.options.accessibility, seriesNavOptions = a11yOptions.keyboardNavigation.seriesNavigation, seriesA11yOptions = series.options.accessibility || {}, seriesKbdNavOptions = seriesA11yOptions.keyboardNavigation;\n            return seriesKbdNavOptions && seriesKbdNavOptions.enabled === false ||\n                seriesA11yOptions.enabled === false ||\n                series.options.enableMouseTracking === false || // #8440\n                !series.visible ||\n                // Skip all points in a series where pointNavigationEnabledThreshold is\n                // reached\n                (seriesNavOptions.pointNavigationEnabledThreshold &&\n                    +seriesNavOptions.pointNavigationEnabledThreshold <=\n                        series.points.length);\n        }\n        /**\n         * Determine if navigation for a point should be skipped\n         * @private\n         */\n        function isSkipPoint(point) {\n            const a11yOptions = point.series.chart.options.accessibility;\n            const pointA11yDisabled = (point.options.accessibility &&\n                point.options.accessibility.enabled === false);\n            return point.isNull &&\n                a11yOptions.keyboardNavigation.seriesNavigation.skipNullPoints ||\n                point.visible === false ||\n                point.isInside === false ||\n                pointA11yDisabled ||\n                isSkipSeries(point.series);\n        }\n        /**\n         * Get the first point that is not a skip point in this series.\n         * @private\n         */\n        function getFirstValidPointInSeries(series) {\n            const points = series.points || [], len = points.length;\n            for (let i = 0; i < len; ++i) {\n                if (!isSkipPoint(points[i])) {\n                    return points[i];\n                }\n            }\n            return null;\n        }\n        /**\n         * Get the first point that is not a skip point in this chart.\n         * @private\n         */\n        function getFirstValidPointInChart(chart) {\n            const series = chart.series || [], len = series.length;\n            for (let i = 0; i < len; ++i) {\n                if (!isSkipSeries(series[i])) {\n                    const point = getFirstValidPointInSeries(series[i]);\n                    if (point) {\n                        return point;\n                    }\n                }\n            }\n            return null;\n        }\n        /**\n         * @private\n         */\n        function highlightLastValidPointInChart(chart) {\n            const numSeries = chart.series.length;\n            let i = numSeries, res = false;\n            while (i--) {\n                chart.highlightedPoint = chart.series[i].points[chart.series[i].points.length - 1];\n                // Highlight first valid point in the series will also\n                // look backwards. It always starts from currently\n                // highlighted point.\n                res = chart.series[i].highlightNextValidPoint();\n                if (res) {\n                    break;\n                }\n            }\n            return res;\n        }\n        /**\n         * After drilling down/up, we need to set focus to the first point for\n         * screen readers and keyboard nav.\n         * @private\n         */\n        function updateChartFocusAfterDrilling(chart) {\n            const point = getFirstValidPointInChart(chart);\n            if (point) {\n                point.highlight(false); // Do not visually highlight\n            }\n        }\n        /**\n         * Highlight the first point in chart that is not a skip point\n         * @private\n         */\n        function highlightFirstValidPointInChart(chart) {\n            delete chart.highlightedPoint;\n            const point = getFirstValidPointInChart(chart);\n            return point ? point.highlight() : false;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.SeriesKeyboardNavigation\n         */\n        class SeriesKeyboardNavigation {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart, keyCodes) {\n                this.keyCodes = keyCodes;\n                this.chart = chart;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Init the keyboard navigation\n             */\n            init() {\n                const keyboardNavigation = this, chart = this.chart, e = this.eventProvider = new EventProvider();\n                e.addEvent(Series, 'destroy', function () {\n                    return keyboardNavigation.onSeriesDestroy(this);\n                });\n                e.addEvent(chart, 'afterApplyDrilldown', function () {\n                    updateChartFocusAfterDrilling(this);\n                });\n                e.addEvent(chart, 'drilldown', function (e) {\n                    const point = e.point, series = point.series;\n                    keyboardNavigation.lastDrilledDownPoint = {\n                        x: point.x,\n                        y: point.y,\n                        seriesName: series ? series.name : ''\n                    };\n                });\n                e.addEvent(chart, 'drillupall', function () {\n                    setTimeout(function () {\n                        keyboardNavigation.onDrillupAll();\n                    }, 10);\n                });\n                // Heatmaps et al. alter z-index in setState, causing elements\n                // to lose focus\n                e.addEvent(Point, 'afterSetState', function () {\n                    const point = this;\n                    const pointEl = point.graphic && point.graphic.element;\n                    const focusedElement = doc.activeElement;\n                    // VO brings focus with it to container, causing series nav to run.\n                    // If then navigating with virtual cursor, it is possible to leave\n                    // keyboard nav module state on the data points and still activate\n                    // proxy buttons.\n                    const focusedElClassName = (focusedElement && focusedElement.getAttribute('class'));\n                    const isProxyFocused = focusedElClassName &&\n                        focusedElClassName.indexOf('highcharts-a11y-proxy-element') > -1;\n                    if (chart.highlightedPoint === point &&\n                        focusedElement !== pointEl &&\n                        !isProxyFocused &&\n                        pointEl &&\n                        pointEl.focus) {\n                        pointEl.focus();\n                    }\n                });\n            }\n            /**\n             * After drillup we want to find the point that was drilled down to and\n             * highlight it.\n             * @private\n             */\n            onDrillupAll() {\n                const last = this.lastDrilledDownPoint, chart = this.chart, series = last && getSeriesFromName(chart, last.seriesName);\n                let point;\n                if (last && series && defined(last.x) && defined(last.y)) {\n                    point = getPointFromXY(series, last.x, last.y);\n                }\n                point = point || getFirstValidPointInChart(chart);\n                // Container focus can be lost on drillup due to deleted elements.\n                if (chart.container) {\n                    chart.container.focus();\n                }\n                if (point && point.highlight) {\n                    point.highlight(false); // Do not visually highlight\n                }\n            }\n            /**\n             * @private\n             */\n            getKeyboardNavigationHandler() {\n                const keyboardNavigation = this, keys = this.keyCodes, chart = this.chart, inverted = chart.inverted;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [inverted ? [keys.up, keys.down] : [keys.left, keys.right],\n                            function (keyCode) {\n                                return keyboardNavigation.onKbdSideways(this, keyCode);\n                            }],\n                        [inverted ? [keys.left, keys.right] : [keys.up, keys.down],\n                            function (keyCode) {\n                                return keyboardNavigation.onKbdVertical(this, keyCode);\n                            }],\n                        [[keys.enter, keys.space],\n                            function (keyCode, event) {\n                                const point = chart.highlightedPoint;\n                                if (point) {\n                                    event.point = point;\n                                    fireEvent(point.series, 'click', event);\n                                    point.firePointEvent('click');\n                                }\n                                return this.response.success;\n                            }],\n                        [[keys.home],\n                            function () {\n                                highlightFirstValidPointInChart(chart);\n                                return this.response.success;\n                            }],\n                        [[keys.end],\n                            function () {\n                                highlightLastValidPointInChart(chart);\n                                return this.response.success;\n                            }],\n                        [[keys.pageDown, keys.pageUp],\n                            function (keyCode) {\n                                chart.highlightAdjacentSeries(keyCode === keys.pageDown);\n                                return this.response.success;\n                            }]\n                    ],\n                    init: function () {\n                        return keyboardNavigation.onHandlerInit(this);\n                    },\n                    validate: function () {\n                        return !!getFirstValidPointInChart(chart);\n                    },\n                    terminate: function () {\n                        return keyboardNavigation.onHandlerTerminate();\n                    }\n                });\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler\n             * @param {number} keyCode\n             * @return {number}\n             * response\n             */\n            onKbdSideways(handler, keyCode) {\n                const keys = this.keyCodes, isNext = keyCode === keys.right || keyCode === keys.down;\n                return this.attemptHighlightAdjacentPoint(handler, isNext);\n            }\n            /**\n             * When keyboard navigation inits.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler The handler object\n             * @return {number}\n             * response\n             */\n            onHandlerInit(handler) {\n                const chart = this.chart, kbdNavOptions = chart.options.accessibility.keyboardNavigation;\n                if (kbdNavOptions.seriesNavigation.rememberPointFocus &&\n                    chart.highlightedPoint) {\n                    chart.highlightedPoint.highlight();\n                }\n                else {\n                    highlightFirstValidPointInChart(chart);\n                }\n                return handler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} handler\n             * @param {number} keyCode\n             * @return {number}\n             * response\n             */\n            onKbdVertical(handler, keyCode) {\n                const chart = this.chart, keys = this.keyCodes, isNext = keyCode === keys.down || keyCode === keys.right, navOptions = chart.options.accessibility.keyboardNavigation\n                    .seriesNavigation;\n                // Handle serialized mode, act like left/right\n                if (navOptions.mode && navOptions.mode === 'serialize') {\n                    return this.attemptHighlightAdjacentPoint(handler, isNext);\n                }\n                // Normal mode, move between series\n                const highlightMethod = (chart.highlightedPoint &&\n                    chart.highlightedPoint.series.keyboardMoveVertical) ?\n                    'highlightAdjacentPointVertical' :\n                    'highlightAdjacentSeries';\n                chart[highlightMethod](isNext);\n                return handler.response.success;\n            }\n            /**\n             * @private\n             */\n            onHandlerTerminate() {\n                const chart = this.chart, kbdNavOptions = chart.options.accessibility.keyboardNavigation;\n                if (chart.tooltip) {\n                    chart.tooltip.hide(0);\n                }\n                const hoverSeries = (chart.highlightedPoint && chart.highlightedPoint.series);\n                if (hoverSeries && hoverSeries.onMouseOut) {\n                    hoverSeries.onMouseOut();\n                }\n                if (chart.highlightedPoint && chart.highlightedPoint.onMouseOut) {\n                    chart.highlightedPoint.onMouseOut();\n                }\n                if (!kbdNavOptions.seriesNavigation.rememberPointFocus) {\n                    delete chart.highlightedPoint;\n                }\n            }\n            /**\n             * Function that attempts to highlight next/prev point. Handles wrap around.\n             * @private\n             */\n            attemptHighlightAdjacentPoint(handler, directionIsNext) {\n                const chart = this.chart, wrapAround = chart.options.accessibility.keyboardNavigation\n                    .wrapAround, highlightSuccessful = chart.highlightAdjacentPoint(directionIsNext);\n                if (!highlightSuccessful) {\n                    if (wrapAround && (directionIsNext ?\n                        highlightFirstValidPointInChart(chart) :\n                        highlightLastValidPointInChart(chart))) {\n                        return handler.response.success;\n                    }\n                    return handler.response[directionIsNext ? 'next' : 'prev'];\n                }\n                return handler.response.success;\n            }\n            /**\n             * @private\n             */\n            onSeriesDestroy(series) {\n                const chart = this.chart, currentHighlightedPointDestroyed = chart.highlightedPoint &&\n                    chart.highlightedPoint.series === series;\n                if (currentHighlightedPointDestroyed) {\n                    delete chart.highlightedPoint;\n                    if (chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            destroy() {\n                this.eventProvider.removeAddedEvents();\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (SeriesKeyboardNavigation) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Function to highlight next/previous point in chart.\n             *\n             * @private\n             * @function Highcharts.Chart#highlightAdjacentPoint\n             *\n             * @param {boolean} next\n             * Flag for the direction.\n             *\n             * @return {Highcharts.Point|boolean}\n             * Returns highlighted point on success, false on failure (no adjacent point\n             * to highlight in chosen direction).\n             */\n            function chartHighlightAdjacentPoint(next) {\n                const chart = this, series = chart.series, curPoint = chart.highlightedPoint, curPointIndex = curPoint && getPointIndex(curPoint) || 0, curPoints = curPoint && curPoint.series.points || [], lastSeries = chart.series && chart.series[chart.series.length - 1], lastPoint = lastSeries &&\n                    lastSeries.points &&\n                    lastSeries.points[lastSeries.points.length - 1];\n                let newSeries, newPoint;\n                // If no points, return false\n                if (!series[0] || !series[0].points) {\n                    return false;\n                }\n                if (!curPoint) {\n                    // No point is highlighted yet. Try first/last point depending on\n                    // move direction\n                    newPoint = next ? series[0].points[0] : lastPoint;\n                }\n                else {\n                    // We have a highlighted point. Grab next/prev point & series.\n                    newSeries = series[curPoint.series.index + (next ? 1 : -1)];\n                    newPoint = curPoints[curPointIndex + (next ? 1 : -1)];\n                    if (!newPoint && newSeries) {\n                        // Done with this series, try next one\n                        newPoint = newSeries.points[next ? 0 : newSeries.points.length - 1];\n                    }\n                    // If there is no adjacent point, we return false\n                    if (!newPoint) {\n                        return false;\n                    }\n                }\n                // Recursively skip points\n                if (isSkipPoint(newPoint)) {\n                    // If we skip this whole series, move to the end of the series\n                    // before we recurse, just to optimize\n                    newSeries = newPoint.series;\n                    if (isSkipSeries(newSeries)) {\n                        chart.highlightedPoint = next ?\n                            newSeries.points[newSeries.points.length - 1] :\n                            newSeries.points[0];\n                    }\n                    else {\n                        // Otherwise, just move one point\n                        chart.highlightedPoint = newPoint;\n                    }\n                    // Retry\n                    return chart.highlightAdjacentPoint(next);\n                }\n                // There is an adjacent point, highlight it\n                return newPoint.highlight();\n            }\n            /**\n             * Highlight the closest point vertically.\n             * @private\n             */\n            function chartHighlightAdjacentPointVertical(down) {\n                const curPoint = this.highlightedPoint;\n                let minDistance = Infinity, bestPoint;\n                if (!defined(curPoint.plotX) || !defined(curPoint.plotY)) {\n                    return false;\n                }\n                this.series.forEach((series) => {\n                    if (isSkipSeries(series)) {\n                        return;\n                    }\n                    series.points.forEach((point) => {\n                        if (!defined(point.plotY) || !defined(point.plotX) ||\n                            point === curPoint) {\n                            return;\n                        }\n                        let yDistance = point.plotY - curPoint.plotY;\n                        const width = Math.abs(point.plotX - curPoint.plotX), distance = Math.abs(yDistance) * Math.abs(yDistance) +\n                            width * width * 4; // Weigh horizontal distance highly\n                        // Reverse distance number if axis is reversed\n                        if (series.yAxis && series.yAxis.reversed) {\n                            yDistance *= -1;\n                        }\n                        if (yDistance <= 0 && down || yDistance >= 0 && !down ||\n                            distance < 5 || // Points in same spot => infinite loop\n                            isSkipPoint(point)) {\n                            return;\n                        }\n                        if (distance < minDistance) {\n                            minDistance = distance;\n                            bestPoint = point;\n                        }\n                    });\n                });\n                return bestPoint ? bestPoint.highlight() : false;\n            }\n            /**\n             * Highlight next/previous series in chart. Returns false if no adjacent\n             * series in the direction, otherwise returns new highlighted point.\n             * @private\n             */\n            function chartHighlightAdjacentSeries(down) {\n                const chart = this, curPoint = chart.highlightedPoint, lastSeries = chart.series && chart.series[chart.series.length - 1], lastPoint = lastSeries && lastSeries.points &&\n                    lastSeries.points[lastSeries.points.length - 1];\n                let newSeries, newPoint, adjacentNewPoint;\n                // If no point is highlighted, highlight the first/last point\n                if (!chart.highlightedPoint) {\n                    newSeries = down ? (chart.series && chart.series[0]) : lastSeries;\n                    newPoint = down ?\n                        (newSeries && newSeries.points && newSeries.points[0]) :\n                        lastPoint;\n                    return newPoint ? newPoint.highlight() : false;\n                }\n                newSeries = (chart.series[curPoint.series.index + (down ? -1 : 1)]);\n                if (!newSeries) {\n                    return false;\n                }\n                // We have a new series in this direction, find the right point\n                // Weigh xDistance as counting much higher than Y distance\n                newPoint = getClosestPoint(curPoint, newSeries, 4);\n                if (!newPoint) {\n                    return false;\n                }\n                // New series and point exists, but we might want to skip it\n                if (isSkipSeries(newSeries)) {\n                    // Skip the series\n                    newPoint.highlight();\n                    // Try recurse\n                    adjacentNewPoint = chart.highlightAdjacentSeries(down);\n                    if (!adjacentNewPoint) {\n                        // Recurse failed\n                        curPoint.highlight();\n                        return false;\n                    }\n                    // Recurse succeeded\n                    return adjacentNewPoint;\n                }\n                // Highlight the new point or any first valid point back or forwards\n                // from it\n                newPoint.highlight();\n                return newPoint.series.highlightNextValidPoint();\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, PointClass, SeriesClass) {\n                if (pushUnique(composed, compose)) {\n                    const chartProto = ChartClass.prototype, pointProto = PointClass.prototype, seriesProto = SeriesClass.prototype;\n                    chartProto.highlightAdjacentPoint = chartHighlightAdjacentPoint;\n                    chartProto.highlightAdjacentPointVertical = (chartHighlightAdjacentPointVertical);\n                    chartProto.highlightAdjacentSeries = chartHighlightAdjacentSeries;\n                    pointProto.highlight = pointHighlight;\n                    /**\n                     * Set for which series types it makes sense to move to the closest\n                     * point with up/down arrows, and which series types should just\n                     * move to next series.\n                     * @private\n                     */\n                    seriesProto.keyboardMoveVertical = true;\n                    [\n                        'column',\n                        'gantt',\n                        'pie'\n                    ].forEach((type) => {\n                        if (seriesTypes[type]) {\n                            seriesTypes[type].prototype.keyboardMoveVertical = false;\n                        }\n                    });\n                    seriesProto.highlightNextValidPoint = (seriesHighlightNextValidPoint);\n                }\n            }\n            SeriesKeyboardNavigation.compose = compose;\n            /**\n             * Get the point in a series that is closest (in pixel distance) to a\n             * reference point. Optionally supply weight factors for x and y directions.\n             * @private\n             */\n            function getClosestPoint(point, series, xWeight, yWeight) {\n                let minDistance = Infinity, dPoint, minIx, distance, i = series.points.length;\n                const hasUndefinedPosition = (point) => (!(defined(point.plotX) && defined(point.plotY)));\n                if (hasUndefinedPosition(point)) {\n                    return;\n                }\n                while (i--) {\n                    dPoint = series.points[i];\n                    if (hasUndefinedPosition(dPoint)) {\n                        continue;\n                    }\n                    distance = (point.plotX - dPoint.plotX) *\n                        (point.plotX - dPoint.plotX) *\n                        (xWeight || 1) +\n                        (point.plotY - dPoint.plotY) *\n                            (point.plotY - dPoint.plotY) *\n                            (yWeight || 1);\n                    if (distance < minDistance) {\n                        minDistance = distance;\n                        minIx = i;\n                    }\n                }\n                return defined(minIx) ? series.points[minIx] : void 0;\n            }\n            /**\n             * Highlights a point (show tooltip, display hover state, focus element).\n             *\n             * @private\n             * @function Highcharts.Point#highlight\n             *\n             * @return {Highcharts.Point}\n             *         This highlighted point.\n             */\n            function pointHighlight(highlightVisually = true) {\n                const chart = this.series.chart, tooltipElement = chart.tooltip?.label?.element;\n                if (!this.isNull && highlightVisually) {\n                    this.onMouseOver(); // Show the hover marker and tooltip\n                }\n                else {\n                    if (chart.tooltip) {\n                        chart.tooltip.hide(0);\n                    }\n                    // Do not call blur on the element, as it messes up the focus of the\n                    // div element of the chart\n                }\n                scrollAxisToPoint(this);\n                // We focus only after calling onMouseOver because the state change can\n                // change z-index and mess up the element.\n                if (this.graphic) {\n                    chart.setFocusToElement(this.graphic);\n                    if (!highlightVisually && chart.focusElement) {\n                        chart.focusElement.removeFocusBorder();\n                    }\n                }\n                chart.highlightedPoint = this;\n                // Get position of the tooltip.\n                const tooltipTop = tooltipElement?.getBoundingClientRect().top;\n                if (tooltipElement && tooltipTop && tooltipTop < 0) {\n                    // Calculate scroll position.\n                    const scrollTop = window.scrollY, newScrollTop = scrollTop + tooltipTop;\n                    // Scroll window to new position.\n                    window.scrollTo({\n                        behavior: 'smooth',\n                        top: newScrollTop\n                    });\n                }\n                return this;\n            }\n            /**\n             * Highlight first valid point in a series. Returns the point if\n             * successfully highlighted, otherwise false. If there is a highlighted\n             * point in the series, use that as starting point.\n             *\n             * @private\n             * @function Highcharts.Series#highlightNextValidPoint\n             */\n            function seriesHighlightNextValidPoint() {\n                const curPoint = this.chart.highlightedPoint, start = (curPoint && curPoint.series) === this ?\n                    getPointIndex(curPoint) :\n                    0, points = this.points, len = points.length;\n                if (points && len) {\n                    for (let i = start; i < len; ++i) {\n                        if (!isSkipPoint(points[i])) {\n                            return points[i].highlight();\n                        }\n                    }\n                    for (let j = start; j >= 0; --j) {\n                        if (!isSkipPoint(points[j])) {\n                            return points[j].highlight();\n                        }\n                    }\n                }\n                return false;\n            }\n        })(SeriesKeyboardNavigation || (SeriesKeyboardNavigation = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SeriesKeyboardNavigation;\n    });\n    _registerModule(_modules, 'Accessibility/Components/SeriesComponent/SeriesComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Components/SeriesComponent/ForcedMarkers.js'], _modules['Accessibility/Components/SeriesComponent/NewDataAnnouncer.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js'], _modules['Accessibility/Components/SeriesComponent/SeriesKeyboardNavigation.js']], function (AccessibilityComponent, ChartUtilities, ForcedMarkers, NewDataAnnouncer, SeriesDescriber, SeriesKeyboardNavigation) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for series and points.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { hideSeriesFromAT } = ChartUtilities;\n        const { describeSeries } = SeriesDescriber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SeriesComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.SeriesComponent\n         */\n        class SeriesComponent extends AccessibilityComponent {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            static compose(ChartClass, PointClass, SeriesClass) {\n                NewDataAnnouncer.compose(SeriesClass);\n                ForcedMarkers.compose(SeriesClass);\n                SeriesKeyboardNavigation.compose(ChartClass, PointClass, SeriesClass);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Init the component.\n             */\n            init() {\n                this.newDataAnnouncer = new NewDataAnnouncer(this.chart);\n                this.newDataAnnouncer.init();\n                this.keyboardNavigation = new SeriesKeyboardNavigation(this.chart, this.keyCodes);\n                this.keyboardNavigation.init();\n                this.hideTooltipFromATWhenShown();\n                this.hideSeriesLabelsFromATWhenShown();\n            }\n            /**\n             * @private\n             */\n            hideTooltipFromATWhenShown() {\n                const component = this;\n                if (this.chart.tooltip) {\n                    this.addEvent(this.chart.tooltip.constructor, 'refresh', function () {\n                        if (this.chart === component.chart &&\n                            this.label &&\n                            this.label.element) {\n                            this.label.element.setAttribute('aria-hidden', true);\n                        }\n                    });\n                }\n            }\n            /**\n             * @private\n             */\n            hideSeriesLabelsFromATWhenShown() {\n                this.addEvent(this.chart, 'afterDrawSeriesLabels', function () {\n                    this.series.forEach(function (series) {\n                        if (series.labelBySeries) {\n                            series.labelBySeries.attr('aria-hidden', true);\n                        }\n                    });\n                });\n            }\n            /**\n             * Called on chart render. It is necessary to do this for render in case\n             * markers change on zoom/pixel density.\n             */\n            onChartRender() {\n                const chart = this.chart;\n                chart.series.forEach(function (series) {\n                    const shouldDescribeSeries = (series.options.accessibility &&\n                        series.options.accessibility.enabled) !== false &&\n                        series.visible && series.data.length !== 0;\n                    if (shouldDescribeSeries) {\n                        describeSeries(series);\n                    }\n                    else {\n                        hideSeriesFromAT(series);\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handler for this component.\n             * @private\n             */\n            getKeyboardNavigation() {\n                return this.keyboardNavigation.getKeyboardNavigationHandler();\n            }\n            /**\n             * Remove traces\n             * @private\n             */\n            destroy() {\n                this.newDataAnnouncer.destroy();\n                this.keyboardNavigation.destroy();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return SeriesComponent;\n    });\n    _registerModule(_modules, 'Accessibility/Components/ZoomComponent.js', [_modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Core/Utilities.js']], function (AccessibilityComponent, CU, HU, KeyboardNavigationHandler, U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility component for chart zoom.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { unhideChartElementFromAT } = CU;\n        const { getFakeMouseEvent } = HU;\n        const { attr, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function chartHasMapZoom(chart) {\n            return !!((chart.mapView) &&\n                chart.mapNavigation &&\n                chart.mapNavigation.navButtons.length);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ZoomComponent class\n         *\n         * @private\n         * @class\n         * @name Highcharts.ZoomComponent\n         */\n        class ZoomComponent extends AccessibilityComponent {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.focusedMapNavButtonIx = -1;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the component\n             */\n            init() {\n                const component = this, chart = this.chart;\n                this.proxyProvider.addGroup('zoom', 'div');\n                [\n                    'afterShowResetZoom', 'afterApplyDrilldown', 'drillupall'\n                ].forEach((eventType) => {\n                    component.addEvent(chart, eventType, function () {\n                        component.updateProxyOverlays();\n                    });\n                });\n            }\n            /**\n             * Called when chart is updated\n             */\n            onChartUpdate() {\n                const chart = this.chart, component = this;\n                // Make map zoom buttons accessible\n                if (chart.mapNavigation) {\n                    chart.mapNavigation.navButtons.forEach((button, i) => {\n                        unhideChartElementFromAT(chart, button.element);\n                        component.setMapNavButtonAttrs(button.element, 'accessibility.zoom.mapZoom' + (i ? 'Out' : 'In'));\n                    });\n                }\n            }\n            /**\n             * @private\n             * @param {Highcharts.HTMLDOMElement|Highcharts.SVGDOMElement} button\n             * @param {string} labelFormatKey\n             */\n            setMapNavButtonAttrs(button, labelFormatKey) {\n                const chart = this.chart, label = chart.langFormat(labelFormatKey, { chart: chart });\n                attr(button, {\n                    tabindex: -1,\n                    role: 'button',\n                    'aria-label': label\n                });\n            }\n            /**\n             * Update the proxy overlays on every new render to ensure positions are\n             * correct.\n             */\n            onChartRender() {\n                this.updateProxyOverlays();\n            }\n            /**\n             * Update proxy overlays, recreating the buttons.\n             */\n            updateProxyOverlays() {\n                const chart = this.chart;\n                // Always start with a clean slate\n                this.proxyProvider.clearGroup('zoom');\n                if (chart.resetZoomButton) {\n                    this.createZoomProxyButton(chart.resetZoomButton, 'resetZoomProxyButton', chart.langFormat('accessibility.zoom.resetZoomButton', { chart: chart }));\n                }\n                if (chart.drillUpButton &&\n                    chart.breadcrumbs &&\n                    chart.breadcrumbs.list) {\n                    const lastBreadcrumb = chart.breadcrumbs.list[chart.breadcrumbs.list.length - 1];\n                    this.createZoomProxyButton(chart.drillUpButton, 'drillUpProxyButton', chart.langFormat('accessibility.drillUpButton', {\n                        chart: chart,\n                        buttonText: chart.breadcrumbs.getButtonText(lastBreadcrumb)\n                    }));\n                }\n            }\n            /**\n             * @private\n             * @param {Highcharts.SVGElement} buttonEl\n             * @param {string} buttonProp\n             * @param {string} label\n             */\n            createZoomProxyButton(buttonEl, buttonProp, label) {\n                this[buttonProp] = this.proxyProvider.addProxyElement('zoom', {\n                    click: buttonEl\n                }, 'button', {\n                    'aria-label': label,\n                    tabindex: -1\n                });\n            }\n            /**\n             * Get keyboard navigation handler for map zoom.\n             * @private\n             * @return {Highcharts.KeyboardNavigationHandler} The module object\n             */\n            getMapZoomNavigation() {\n                const keys = this.keyCodes, chart = this.chart, component = this;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.up, keys.down, keys.left, keys.right],\n                            function (keyCode) {\n                                return component.onMapKbdArrow(this, keyCode);\n                            }\n                        ],\n                        [\n                            [keys.tab],\n                            function (_keyCode, e) {\n                                return component.onMapKbdTab(this, e);\n                            }\n                        ],\n                        [\n                            [keys.space, keys.enter],\n                            function () {\n                                return component.onMapKbdClick(this);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        return chartHasMapZoom(chart);\n                    },\n                    init: function (direction) {\n                        return component.onMapNavInit(direction);\n                    }\n                });\n            }\n            /**\n             * Arrow key panning for maps.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler The handler context.\n             * @param {number} keyCode Key pressed.\n             * @return {number} Response code\n             */\n            onMapKbdArrow(keyboardNavigationHandler, keyCode) {\n                const chart = this.chart, keys = this.keyCodes, target = chart.container, isY = keyCode === keys.up || keyCode === keys.down, stepDirection = (keyCode === keys.left || keyCode === keys.up) ?\n                    1 : -1, granularity = 10, diff = (isY ? chart.plotHeight : chart.plotWidth) /\n                    granularity * stepDirection, \n                // Randomize since same mousedown coords twice is ignored in MapView\n                r = Math.random() * 10, startPos = {\n                    x: target.offsetLeft + chart.plotLeft + chart.plotWidth / 2 + r,\n                    y: target.offsetTop + chart.plotTop + chart.plotHeight / 2 + r\n                }, endPos = isY ? { x: startPos.x, y: startPos.y + diff } :\n                    { x: startPos.x + diff, y: startPos.y };\n                [\n                    getFakeMouseEvent('mousedown', startPos),\n                    getFakeMouseEvent('mousemove', endPos),\n                    getFakeMouseEvent('mouseup', endPos)\n                ].forEach((e) => target.dispatchEvent(e));\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler\n             * @param {global.KeyboardEvent} event\n             * @return {number} Response code\n             */\n            onMapKbdTab(keyboardNavigationHandler, event) {\n                const chart = this.chart;\n                const response = keyboardNavigationHandler.response;\n                const isBackwards = event.shiftKey;\n                const isMoveOutOfRange = isBackwards && !this.focusedMapNavButtonIx ||\n                    !isBackwards && this.focusedMapNavButtonIx;\n                // Deselect old\n                chart.mapNavigation.navButtons[this.focusedMapNavButtonIx].setState(0);\n                if (isMoveOutOfRange) {\n                    if (chart.mapView) {\n                        chart.mapView.zoomBy(); // Reset zoom\n                    }\n                    return response[isBackwards ? 'prev' : 'next'];\n                }\n                // Select other button\n                this.focusedMapNavButtonIx += isBackwards ? -1 : 1;\n                const button = chart.mapNavigation.navButtons[this.focusedMapNavButtonIx];\n                chart.setFocusToElement(button.box, button.element);\n                button.setState(2);\n                return response.success;\n            }\n            /**\n             * Called on map button click.\n             * @private\n             * @param {Highcharts.KeyboardNavigationHandler} keyboardNavigationHandler The handler context object\n             * @return {number} Response code\n             */\n            onMapKbdClick(keyboardNavigationHandler) {\n                const el = this.chart.mapNavigation.navButtons[this.focusedMapNavButtonIx].element;\n                this.fakeClickEvent(el);\n                return keyboardNavigationHandler.response.success;\n            }\n            /**\n             * @private\n             * @param {number} direction\n             */\n            onMapNavInit(direction) {\n                const chart = this.chart, zoomIn = chart.mapNavigation.navButtons[0], zoomOut = chart.mapNavigation.navButtons[1], initialButton = direction > 0 ? zoomIn : zoomOut;\n                chart.setFocusToElement(initialButton.box, initialButton.element);\n                initialButton.setState(2);\n                this.focusedMapNavButtonIx = direction > 0 ? 0 : 1;\n            }\n            /**\n             * Get keyboard navigation handler for a simple chart button. Provide the\n             * button reference for the chart, and a function to call on click.\n             *\n             * @private\n             * @param {string} buttonProp The property on chart referencing the button.\n             * @return {Highcharts.KeyboardNavigationHandler} The module object\n             */\n            simpleButtonNavigation(buttonProp, proxyProp, onClick) {\n                const keys = this.keyCodes, component = this, chart = this.chart;\n                return new KeyboardNavigationHandler(chart, {\n                    keyCodeMap: [\n                        [\n                            [keys.tab, keys.up, keys.down, keys.left, keys.right],\n                            function (keyCode, e) {\n                                const isBackwards = (keyCode === keys.tab && e.shiftKey ||\n                                    keyCode === keys.left ||\n                                    keyCode === keys.up);\n                                // Arrow/tab => just move\n                                return this.response[isBackwards ? 'prev' : 'next'];\n                            }\n                        ],\n                        [\n                            [keys.space, keys.enter],\n                            function () {\n                                const res = onClick(this, chart);\n                                return pick(res, this.response.success);\n                            }\n                        ]\n                    ],\n                    validate: function () {\n                        const hasButton = (chart[buttonProp] &&\n                            chart[buttonProp].box &&\n                            component[proxyProp].innerElement);\n                        return hasButton;\n                    },\n                    init: function () {\n                        chart.setFocusToElement(chart[buttonProp].box, component[proxyProp].innerElement);\n                    }\n                });\n            }\n            /**\n             * Get keyboard navigation handlers for this component.\n             * @return {Array<Highcharts.KeyboardNavigationHandler>}\n             *         List of module objects\n             */\n            getKeyboardNavigation() {\n                return [\n                    this.simpleButtonNavigation('resetZoomButton', 'resetZoomProxyButton', function (_handler, chart) {\n                        chart.zoomOut();\n                    }),\n                    this.simpleButtonNavigation('drillUpButton', 'drillUpProxyButton', function (handler, chart) {\n                        chart.drillUp();\n                        return handler.response.prev;\n                    }),\n                    this.getMapZoomNavigation()\n                ];\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ZoomComponent;\n    });\n    _registerModule(_modules, 'Accessibility/HighContrastMode.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Handling for Windows High Contrast Mode.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { doc, isMS, win } = H;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Detect WHCM in the browser.\n         *\n         * @function Highcharts#isHighContrastModeActive\n         * @private\n         * @return {boolean} Returns true if the browser is in High Contrast mode.\n         */\n        function isHighContrastModeActive() {\n            // Use media query on Edge, but not on IE\n            const isEdge = /(Edg)/.test(win.navigator.userAgent);\n            if (win.matchMedia && isEdge) {\n                return win.matchMedia('(-ms-high-contrast: active)').matches;\n            }\n            // Test BG image for IE\n            if (isMS && win.getComputedStyle) {\n                const testDiv = doc.createElement('div');\n                const imageSrc = 'data:image/gif;base64,' +\n                    'R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==';\n                testDiv.style.backgroundImage = `url(${imageSrc})`; // #13071\n                doc.body.appendChild(testDiv);\n                const bi = (testDiv.currentStyle ||\n                    win.getComputedStyle(testDiv)).backgroundImage;\n                doc.body.removeChild(testDiv);\n                return bi === 'none';\n            }\n            // Other browsers use the forced-colors standard\n            return win.matchMedia && win.matchMedia('(forced-colors: active)').matches;\n        }\n        /**\n         * Force high contrast theme for the chart. The default theme is defined in\n         * a separate file.\n         *\n         * @function Highcharts#setHighContrastTheme\n         * @private\n         * @param {Highcharts.AccessibilityChart} chart The chart to set the theme of.\n         * @return {void}\n         */\n        function setHighContrastTheme(chart) {\n            // We might want to add additional functionality here in the future for\n            // storing the old state so that we can reset the theme if HC mode is\n            // disabled. For now, the user will have to reload the page.\n            chart.highContrastModeActive = true;\n            // Apply theme to chart\n            const theme = (chart.options.accessibility.highContrastTheme);\n            chart.update(theme, false);\n            // Force series colors (plotOptions is not enough)\n            chart.series.forEach(function (s) {\n                const plotOpts = theme.plotOptions[s.type] || {};\n                s.update({\n                    color: plotOpts.color || 'windowText',\n                    colors: [plotOpts.color || 'windowText'],\n                    borderColor: plotOpts.borderColor || 'window'\n                });\n                // Force point colors if existing\n                s.points.forEach(function (p) {\n                    if (p.options && p.options.color) {\n                        p.update({\n                            color: plotOpts.color || 'windowText',\n                            borderColor: plotOpts.borderColor || 'window'\n                        }, false);\n                    }\n                });\n            });\n            // The redraw for each series and after is required for 3D pie\n            // (workaround)\n            chart.redraw();\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const whcm = {\n            isHighContrastModeActive,\n            setHighContrastTheme\n        };\n\n        return whcm;\n    });\n    _registerModule(_modules, 'Accessibility/HighContrastTheme.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default theme for Windows High Contrast Mode.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Theme\n         *\n         * */\n        const theme = {\n            chart: {\n                backgroundColor: 'window'\n            },\n            title: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            subtitle: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            colorAxis: {\n                minColor: 'windowText',\n                maxColor: 'windowText',\n                stops: []\n            },\n            colors: ['windowText'],\n            xAxis: {\n                gridLineColor: 'windowText',\n                labels: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                lineColor: 'windowText',\n                minorGridLineColor: 'windowText',\n                tickColor: 'windowText',\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            yAxis: {\n                gridLineColor: 'windowText',\n                labels: {\n                    style: {\n                        color: 'windowText'\n                    }\n                },\n                lineColor: 'windowText',\n                minorGridLineColor: 'windowText',\n                tickColor: 'windowText',\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            tooltip: {\n                backgroundColor: 'window',\n                borderColor: 'windowText',\n                style: {\n                    color: 'windowText'\n                }\n            },\n            plotOptions: {\n                series: {\n                    lineColor: 'windowText',\n                    fillColor: 'window',\n                    borderColor: 'windowText',\n                    edgeColor: 'windowText',\n                    borderWidth: 1,\n                    dataLabels: {\n                        connectorColor: 'windowText',\n                        color: 'windowText',\n                        style: {\n                            color: 'windowText',\n                            textOutline: 'none'\n                        }\n                    },\n                    marker: {\n                        lineColor: 'windowText',\n                        fillColor: 'windowText'\n                    }\n                },\n                pie: {\n                    color: 'window',\n                    colors: ['window'],\n                    borderColor: 'windowText',\n                    borderWidth: 1\n                },\n                boxplot: {\n                    fillColor: 'window'\n                },\n                candlestick: {\n                    lineColor: 'windowText',\n                    fillColor: 'window'\n                },\n                errorbar: {\n                    fillColor: 'window'\n                }\n            },\n            legend: {\n                backgroundColor: 'window',\n                itemStyle: {\n                    color: 'windowText'\n                },\n                itemHoverStyle: {\n                    color: 'windowText'\n                },\n                itemHiddenStyle: {\n                    color: '#555'\n                },\n                title: {\n                    style: {\n                        color: 'windowText'\n                    }\n                }\n            },\n            credits: {\n                style: {\n                    color: 'windowText'\n                }\n            },\n            drilldown: {\n                activeAxisLabelStyle: {\n                    color: 'windowText'\n                },\n                activeDataLabelStyle: {\n                    color: 'windowText'\n                }\n            },\n            navigation: {\n                buttonOptions: {\n                    symbolStroke: 'windowText',\n                    theme: {\n                        fill: 'window'\n                    }\n                }\n            },\n            rangeSelector: {\n                buttonTheme: {\n                    fill: 'window',\n                    stroke: 'windowText',\n                    style: {\n                        color: 'windowText'\n                    },\n                    states: {\n                        hover: {\n                            fill: 'window',\n                            stroke: 'windowText',\n                            style: {\n                                color: 'windowText'\n                            }\n                        },\n                        select: {\n                            fill: '#444',\n                            stroke: 'windowText',\n                            style: {\n                                color: 'windowText'\n                            }\n                        }\n                    }\n                },\n                inputBoxBorderColor: 'windowText',\n                inputStyle: {\n                    backgroundColor: 'window',\n                    color: 'windowText'\n                },\n                labelStyle: {\n                    color: 'windowText'\n                }\n            },\n            navigator: {\n                handles: {\n                    backgroundColor: 'window',\n                    borderColor: 'windowText'\n                },\n                outlineColor: 'windowText',\n                maskFill: 'transparent',\n                series: {\n                    color: 'windowText',\n                    lineColor: 'windowText'\n                },\n                xAxis: {\n                    gridLineColor: 'windowText'\n                }\n            },\n            scrollbar: {\n                barBackgroundColor: '#444',\n                barBorderColor: 'windowText',\n                buttonArrowColor: 'windowText',\n                buttonBackgroundColor: 'window',\n                buttonBorderColor: 'windowText',\n                rifleColor: 'windowText',\n                trackBackgroundColor: 'window',\n                trackBorderColor: 'windowText'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return theme;\n    });\n    _registerModule(_modules, 'Accessibility/Options/A11yDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Formatter callback for the accessibility announcement.\n         *\n         * @callback Highcharts.AccessibilityAnnouncementFormatter\n         *\n         * @param {Array<Highcharts.Series>} updatedSeries\n         * Array of all series that received updates. If an announcement is already\n         * queued, the series that received updates for that announcement are also\n         * included in this array.\n         *\n         * @param {Highcharts.Series} [addedSeries]\n         * This is provided if {@link Highcharts.Chart#addSeries} was called, and there\n         * is a new series. In that case, this argument is a reference to the new\n         * series.\n         *\n         * @param {Highcharts.Point} [addedPoint]\n         * This is provided if {@link Highcharts.Series#addPoint} was called, and there\n         * is a new point. In that case, this argument is a reference to the new point.\n         *\n         * @return {false|string}\n         * The function should return a string with the text to announce to the user.\n         * Return empty string to not announce anything. Return `false` to use the\n         * default announcement format.\n         */\n        /**\n         * @interface Highcharts.PointAccessibilityOptionsObject\n         */ /**\n        * Provide a description of the data point, announced to screen readers.\n        * @name Highcharts.PointAccessibilityOptionsObject#description\n        * @type {string|undefined}\n        * @requires modules/accessibility\n        * @since 7.1.0\n        */ /**\n        * Enable or disable exposing the point to assistive technology\n        * @name Highcharts.PointAccessibilityOptionsObject#enabled\n        * @type {boolean|undefined}\n        * @requires modules/accessibility\n        * @since 9.0.1\n        */\n        /* *\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * @name Highcharts.PointOptionsObject#accessibility\n        * @type {Highcharts.PointAccessibilityOptionsObject|undefined}\n        * @requires modules/accessibility\n        * @since 7.1.0\n        */\n        /**\n         * @callback Highcharts.ScreenReaderClickCallbackFunction\n         *\n         * @param {global.MouseEvent} evt\n         *        Mouse click event\n         *\n         * @return {void}\n         */\n        /**\n         * Creates a formatted string for the screen reader module.\n         *\n         * @callback Highcharts.ScreenReaderFormatterCallbackFunction<T>\n         *\n         * @param {T} context\n         *        Context to format\n         *\n         * @return {string}\n         *         Formatted string for the screen reader module.\n         */\n        const Options = {\n            /**\n             * Options for configuring accessibility for the chart. Requires the\n             * [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n             * to be loaded. For a description of the module and information\n             * on its features, see\n             * [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n             *\n             * @since        5.0.0\n             * @requires     modules/accessibility\n             * @optionparent accessibility\n             */\n            accessibility: {\n                /**\n                 * Enable accessibility functionality for the chart. For more\n                 * information on how to include these features, and why this is\n                 * recommended, see [Highcharts Accessibility](https://www.highcharts.com/docs/accessibility/accessibility-module).\n                 *\n                 * Highcharts will by default emit a warning to the console if\n                 * the [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n                 * is not loaded. Setting this option to `false` will override\n                 * and silence the warning.\n                 *\n                 * Once the module is loaded, setting this option to `false`\n                 * will disable the module for this chart.\n                 *\n                 * @since 5.0.0\n                 */\n                enabled: true,\n                /**\n                 * Accessibility options for the screen reader information sections\n                 * added before and after the chart.\n                 *\n                 * @since 8.0.0\n                 */\n                screenReaderSection: {\n                    /**\n                     * Function to run upon clicking the \"View as Data Table\" link in\n                     * the screen reader region.\n                     *\n                     * By default Highcharts will insert and set focus to a data table\n                     * representation of the chart.\n                     *\n                     * @type      {Highcharts.ScreenReaderClickCallbackFunction}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.onViewDataTableClick\n                     */\n                    /**\n                     * Function to run upon clicking the \"Play as sound\" button in\n                     * the screen reader region.\n                     *\n                     * By default Highcharts will call the `chart.sonify` function.\n                     *\n                     * @type      {Highcharts.ScreenReaderClickCallbackFunction}\n                     * @since 8.0.1\n                     * @apioption accessibility.screenReaderSection.onPlayAsSoundClick\n                     */\n                    /**\n                     * A formatter function to create the HTML contents of the hidden\n                     * screen reader information region before the chart. Receives one\n                     * argument, `chart`, referring to the chart object. Should return a\n                     * string with the HTML content of the region. By default this\n                     * returns an automatic description of the chart based on\n                     * [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Chart>}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.beforeChartFormatter\n                     */\n                    /**\n                     * Format for the screen reader information region before the chart.\n                     * Supported HTML tags are `<h1-6>`, `<p>`, `<div>`, `<a>`, `<ul>`,\n                     * `<ol>`, `<li>`, and `<button>`. Attributes are not supported,\n                     * except for id on `<div>`, `<a>`, and `<button>`. Id is required\n                     * on `<a>` and `<button>` in the format `<tag id=\"abcd\">`. Numbers,\n                     * lower- and uppercase letters, \"-\" and \"#\" are valid characters in\n                     * IDs.\n                     *\n                     * The headingTagName is an auto-detected heading (h1-h6) that\n                     * corresponds to the heading level below the previous heading in\n                     * the DOM.\n                     *\n                     * Set to empty string to remove the region altogether.\n                     *\n                     * @since 8.0.0\n                     */\n                    beforeChartFormat: '<{headingTagName}>{chartTitle}</{headingTagName}>' +\n                        '<div>{typeDescription}</div>' +\n                        '<div>{chartSubtitle}</div>' +\n                        '<div>{chartLongdesc}</div>' +\n                        '<div>{playAsSoundButton}</div>' +\n                        '<div>{viewTableButton}</div>' +\n                        '<div>{xAxisDescription}</div>' +\n                        '<div>{yAxisDescription}</div>' +\n                        '<div>{annotationsTitle}{annotationsList}</div>',\n                    /**\n                     * A formatter function to create the HTML contents of the hidden\n                     * screen reader information region after the chart. Analogous to\n                     * [beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Chart>}\n                     * @since 8.0.0\n                     * @apioption accessibility.screenReaderSection.afterChartFormatter\n                     */\n                    /**\n                     * Format for the screen reader information region after the chart.\n                     * Analogous to [beforeChartFormat](#accessibility.screenReaderSection.beforeChartFormat).\n                     *\n                     * @since 8.0.0\n                     */\n                    afterChartFormat: '{endOfChartMarker}',\n                    /**\n                     * Date format to use to describe range of datetime axes.\n                     *\n                     * For an overview of the replacement codes, see\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [point.dateFormat](#accessibility.point.dateFormat)\n                     *\n                     * @since 8.0.0\n                     */\n                    axisRangeDateFormat: '%Y-%m-%d %H:%M:%S'\n                },\n                /**\n                 * Accessibility options global to all data series. Individual series\n                 * can also have specific [accessibility options](#plotOptions.series.accessibility)\n                 * set.\n                 *\n                 * @since 8.0.0\n                 */\n                series: {\n                    /**\n                     * Formatter function to use instead of the default for series\n                     * descriptions. Receives one argument, `series`, referring to the\n                     * series to describe. Should return a string with the description\n                     * of the series for a screen reader user. If `false` is returned,\n                     * the default formatter will be used for that series.\n                     *\n                     * @see [series.descriptionFormat](#accessibility.series.descriptionFormat)\n                     * @see [series.description](#plotOptions.series.description)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Series>}\n                     * @since 8.0.0\n                     * @apioption accessibility.series.descriptionFormatter\n                     */\n                    /**\n                     * Format to use for describing the data series group to assistive\n                     * technology - including screen readers.\n                     *\n                     * The series context and its subproperties are available under the\n                     * variable `{series}`, for example `{series.name}` for the series\n                     * name, and `{series.points.length}` for the number of data points.\n                     *\n                     * The chart context and its subproperties are available under the\n                     * variable `{chart}`, for example `{chart.series.length}` for the\n                     * number of series in the chart.\n                     *\n                     * `{seriesDescription}` refers to the automatic description of the\n                     * series type and number of points added by Highcharts by default.\n                     * `{authorDescription}` refers to the description added in\n                     * [series.description](#plotOptions.series.description) if one is\n                     * present. `{axisDescription}` refers to the description added if\n                     * the chart has multiple X or Y axes.\n                     *\n                     * Note that if [series.descriptionFormatter](#accessibility.series.descriptionFormatter)\n                     * is declared it will take precedence, and this option will be\n                     * overridden.\n                     *\n                     * @sample highcharts/accessibility/advanced-accessible\n                     *  Accessible low-medium-high chart\n                     *\n                     * @type      {string}\n                     * @since 10.1.0\n                     */\n                    descriptionFormat: '{seriesDescription}{authorDescription}{axisDescription}',\n                    /**\n                     * Whether or not to add series descriptions to charts with a single\n                     * series.\n                     *\n                     * @since 8.0.0\n                     */\n                    describeSingleSeries: false,\n                    /**\n                     * When a series contains more points than this, we no longer expose\n                     * information about individual points to screen readers.\n                     *\n                     * Set to `false` to disable.\n                     *\n                     * @type  {boolean|number}\n                     * @since 8.0.0\n                     */\n                    pointDescriptionEnabledThreshold: 200\n                },\n                /**\n                 * Options for descriptions of individual data points.\n                 *\n                 * @since 8.0.0\n                 */\n                point: {\n                    /**\n                     * Date format to use for points on datetime axes when describing\n                     * them to screen reader users.\n                     *\n                     * Defaults to the same format as in tooltip.\n                     *\n                     * For an overview of the replacement codes, see\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [dateFormatter](#accessibility.point.dateFormatter)\n                     *\n                     * @type      {string}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.dateFormat\n                     */\n                    /**\n                     * Formatter function to determine the date/time format used with\n                     * points on datetime axes when describing them to screen reader\n                     * users. Receives one argument, `point`, referring to the point\n                     * to describe. Should return a date format string compatible with\n                     * [dateFormat](/class-reference/Highcharts.Time#dateFormat).\n                     *\n                     * @see [dateFormat](#accessibility.point.dateFormat)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.dateFormatter\n                     */\n                    /**\n                     * Prefix to add to the values in the point descriptions. Uses\n                     * [tooltip.valuePrefix](#tooltip.valuePrefix) if not defined.\n                     *\n                     * @type        {string}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valuePrefix\n                     */\n                    /**\n                     * Suffix to add to the values in the point descriptions. Uses\n                     * [tooltip.valueSuffix](#tooltip.valueSuffix) if not defined.\n                     *\n                     * @type        {string}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valueSuffix\n                     */\n                    /**\n                     * Decimals to use for the values in the point descriptions. Uses\n                     * [tooltip.valueDecimals](#tooltip.valueDecimals) if not defined.\n                     *\n                     * @type        {number}\n                     * @since 8.0.0\n                     * @apioption   accessibility.point.valueDecimals\n                     */\n                    /**\n                     * A [format string](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\n                     * to use instead of the default for point descriptions.\n                     *\n                     * The context of the format string is the point instance.\n                     *\n                     * As opposed to [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat),\n                     * this option replaces the whole description.\n                     *\n                     * @type      {string}\n                     * @since 11.1.0\n                     * @sample highcharts/demo/advanced-accessible\n                     *      Description format\n                     * @apioption accessibility.point.descriptionFormat\n                     */\n                    /**\n                     * Formatter function to use instead of the default for point\n                     * descriptions.\n                     *\n                     * Receives one argument, `point`, referring to the point to\n                     * describe. Should return a string with the description of the\n                     * point for a screen reader user. If `false` is returned, the\n                     * default formatter will be used for that point.\n                     *\n                     * Note: Prefer using [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\n                     * instead if possible, as default functionality such as describing\n                     * annotations will be preserved.\n                     *\n                     * @see [accessibility.point.valueDescriptionFormat](#accessibility.point.valueDescriptionFormat)\n                     * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                     *\n                     * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n                     * @since 8.0.0\n                     * @apioption accessibility.point.descriptionFormatter\n                     */\n                    /**\n                     * Format to use for describing the values of data points\n                     * to assistive technology - including screen readers.\n                     * The point context is available as `{point}`.\n                     *\n                     * Other available context variables include `{index}`, `{value}`, and `{xDescription}`.\n                     *\n                     * Additionally, the series name, annotation info, and\n                     * description added in `point.accessibility.description`\n                     * is added by default if relevant. To override this, use the\n                     * [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                     * option.\n                     *\n                     * @see [point.accessibility.description](#series.line.data.accessibility.description)\n                     * @see [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n                     *\n                     * @type      {string}\n                     * @since 8.0.1\n                     */\n                    valueDescriptionFormat: '{xDescription}{separator}{value}.',\n                    /**\n                     * Whether or not to describe points with the value `null` to\n                     * assistive technology, such as screen readers.\n                     *\n                     * @sample {highmaps} maps/demo/all-areas-as-null\n                     *         Accessible map with null points\n                     *\n                     * @type      {boolean}\n                     * @since 10.1.0\n                     */\n                    describeNull: true\n                },\n                /**\n                 * Amount of landmarks/regions to create for screen reader users. More\n                 * landmarks can make navigation with screen readers easier, but can\n                 * be distracting if there are lots of charts on the page. Three modes\n                 * are available:\n                 *  - `all`: Adds regions for all series, legend, information\n                 *      region.\n                 *  - `one`: Adds a single landmark per chart.\n                 *  - `disabled`: No landmarks are added.\n                 *\n                 * @since 7.1.0\n                 * @validvalue [\"all\", \"one\", \"disabled\"]\n                 */\n                landmarkVerbosity: 'all',\n                /**\n                 * Link the chart to an HTML element describing the contents of the\n                 * chart.\n                 *\n                 * It is always recommended to describe charts using visible text, to\n                 * improve SEO as well as accessibility for users with disabilities.\n                 * This option lets an HTML element with a description be linked to the\n                 * chart, so that screen reader users can connect the two.\n                 *\n                 * By setting this option to a string, Highcharts runs the string as an\n                 * HTML selector query on the entire document. If there is only a single\n                 * match, this element is linked to the chart. The content of the linked\n                 * element will be included in the chart description for screen reader\n                 * users.\n                 *\n                 * By default, the chart looks for an adjacent sibling element with the\n                 * `highcharts-description` class.\n                 *\n                 * The feature can be disabled by setting the option to an empty string,\n                 * or overridden by providing the\n                 * [accessibility.description](#accessibility.description) option.\n                 * Alternatively, the HTML element to link can be passed in directly as\n                 * an HTML node.\n                 *\n                 * If you need the description to be part of the exported image,\n                 * consider using the [caption](#caption) feature.\n                 *\n                 * If you need the description to be hidden visually, use the\n                 * [accessibility.description](#accessibility.description) option.\n                 *\n                 * @see [caption](#caption)\n                 * @see [description](#accessibility.description)\n                 * @see [typeDescription](#accessibility.typeDescription)\n                 *\n                 * @sample highcharts/accessibility/accessible-line\n                 *         Accessible line chart\n                 *\n                 * @type  {string|Highcharts.HTMLDOMElement}\n                 * @since 8.0.0\n                 */\n                linkedDescription: '*[data-highcharts-chart=\"{index}\"] + .highcharts-description',\n                /**\n                 * A hook for adding custom components to the accessibility module.\n                 * Should be an object mapping component names to instances of classes\n                 * inheriting from the Highcharts.AccessibilityComponent base class.\n                 * Remember to add the component to the\n                 * [keyboardNavigation.order](#accessibility.keyboardNavigation.order)\n                 * for the keyboard navigation to be usable.\n                 *\n                 * @sample highcharts/accessibility/custom-component\n                 *         Custom accessibility component\n                 *\n                 * @type      {*}\n                 * @since     7.1.0\n                 * @apioption accessibility.customComponents\n                 */\n                /**\n                 * Theme to apply to the chart when Windows High Contrast Mode is\n                 * detected. By default, a high contrast theme matching the high\n                 * contrast system system colors is used.\n                 *\n                 * @type      {*}\n                 * @since     7.1.3\n                 * @apioption accessibility.highContrastTheme\n                 */\n                /**\n                 * A text description of the chart.\n                 *\n                 * **Note: Prefer using [linkedDescription](#accessibility.linkedDescription)\n                 * or [caption](#caption.text) instead.**\n                 *\n                 * If the Accessibility module is loaded, this option is included by\n                 * default as a long description of the chart in the hidden screen\n                 * reader information region.\n                 *\n                 * Note: Since Highcharts now supports captions and linked descriptions,\n                 * it is preferred to define the description using those methods, as a\n                 * visible caption/description benefits all users. If the\n                 * `accessibility.description` option is defined, the linked description\n                 * is ignored, and the caption is hidden from screen reader users.\n                 *\n                 * @see [linkedDescription](#accessibility.linkedDescription)\n                 * @see [caption](#caption)\n                 * @see [typeDescription](#accessibility.typeDescription)\n                 *\n                 * @type      {string}\n                 * @since     5.0.0\n                 * @apioption accessibility.description\n                 */\n                /**\n                 * A text description of the chart type.\n                 *\n                 * If the Accessibility module is loaded, this will be included in the\n                 * description of the chart in the screen reader information region.\n                 *\n                 * Highcharts will by default attempt to guess the chart type, but for\n                 * more complex charts it is recommended to specify this property for\n                 * clarity.\n                 *\n                 * @type      {string}\n                 * @since     5.0.0\n                 * @apioption accessibility.typeDescription\n                 */\n                /**\n                 * Options for keyboard navigation.\n                 *\n                 * @declare Highcharts.KeyboardNavigationOptionsObject\n                 * @since   5.0.0\n                 */\n                keyboardNavigation: {\n                    /**\n                     * Enable keyboard navigation for the chart.\n                     *\n                     * @since 5.0.0\n                     */\n                    enabled: true,\n                    /**\n                     * Options for the focus border drawn around elements while\n                     * navigating through them.\n                     *\n                     * @sample highcharts/accessibility/custom-focus\n                     *         Custom focus ring\n                     *\n                     * @declare Highcharts.KeyboardNavigationFocusBorderOptionsObject\n                     * @since   6.0.3\n                     */\n                    focusBorder: {\n                        /**\n                         * Enable/disable focus border for chart.\n                         *\n                         * @since 6.0.3\n                         */\n                        enabled: true,\n                        /**\n                         * Hide the browser's default focus indicator.\n                         *\n                         * @since 6.0.4\n                         */\n                        hideBrowserFocusOutline: true,\n                        /**\n                         * Style options for the focus border drawn around elements\n                         * while navigating through them. Note that some browsers in\n                         * addition draw their own borders for focused elements. These\n                         * automatic borders cannot be styled by Highcharts.\n                         *\n                         * In styled mode, the border is given the\n                         * `.highcharts-focus-border` class.\n                         *\n                         * @type    {Highcharts.CSSObject}\n                         * @since   6.0.3\n                         */\n                        style: {\n                            /** @internal */\n                            color: \"#334eff\" /* Palette.highlightColor80 */,\n                            /** @internal */\n                            lineWidth: 2,\n                            /** @internal */\n                            borderRadius: 3\n                        },\n                        /**\n                         * Focus border margin around the elements.\n                         *\n                         * @since 6.0.3\n                         */\n                        margin: 2\n                    },\n                    /**\n                     * Order of tab navigation in the chart. Determines which elements\n                     * are tabbed to first. Available elements are: `series`, `zoom`,\n                     * `rangeSelector`, `navigator`, `chartMenu`, `legend` and `container`.\n                     * In addition, any custom components can be added here. Adding\n                     * `container` first in order will make the keyboard focus stop on\n                     * the chart container first, requiring the user to tab again to\n                     * enter the chart.\n                     *\n                     * @type  {Array<string>}\n                     * @since 7.1.0\n                     */\n                    order: [\n                        'series', 'zoom', 'rangeSelector',\n                        'navigator', 'legend', 'chartMenu'\n                    ],\n                    /**\n                     * Whether or not to wrap around when reaching the end of arrow-key\n                     * navigation for an element in the chart.\n                     * @since 7.1.0\n                     */\n                    wrapAround: true,\n                    /**\n                     * Options for the keyboard navigation of data points and series.\n                     *\n                     * @declare Highcharts.KeyboardNavigationSeriesNavigationOptionsObject\n                     * @since 8.0.0\n                     */\n                    seriesNavigation: {\n                        /**\n                         * Set the keyboard navigation mode for the chart. Can be\n                         * \"normal\" or \"serialize\". In normal mode, left/right arrow\n                         * keys move between points in a series, while up/down arrow\n                         * keys move between series. Up/down navigation acts\n                         * intelligently to figure out which series makes sense to move\n                         * to from any given point.\n                         *\n                         * In \"serialize\" mode, points are instead navigated as a single\n                         * list. Left/right behaves as in \"normal\" mode. Up/down arrow\n                         * keys will behave like left/right. This can be useful for\n                         * unifying navigation behavior with/without screen readers\n                         * enabled.\n                         *\n                         * @type       {string}\n                         * @default    normal\n                         * @since 8.0.0\n                         * @validvalue [\"normal\", \"serialize\"]\n                         * @apioption  accessibility.keyboardNavigation.seriesNavigation.mode\n                         */\n                        /**\n                         * Skip null points when navigating through points with the\n                         * keyboard.\n                         *\n                         * @since 8.0.0\n                         */\n                        skipNullPoints: true,\n                        /**\n                         * When a series contains more points than this, we no longer\n                         * allow keyboard navigation for it.\n                         *\n                         * Set to `false` to disable.\n                         *\n                         * @type  {boolean|number}\n                         * @since 8.0.0\n                         */\n                        pointNavigationEnabledThreshold: false,\n                        /**\n                         * Remember which point was focused even after navigating away\n                         * from the series, so that when navigating back to the series\n                         * you start at the last focused point.\n                         *\n                         * @type  {boolean}\n                         * @since 10.1.0\n                         */\n                        rememberPointFocus: false\n                    }\n                },\n                /**\n                 * Options for announcing new data to screen reader users. Useful\n                 * for dynamic data applications and drilldown.\n                 *\n                 * Keep in mind that frequent announcements will not be useful to\n                 * users, as they won't have time to explore the new data. For these\n                 * applications, consider making snapshots of the data accessible, and\n                 * do the announcements in batches.\n                 *\n                 * @declare Highcharts.AccessibilityAnnounceNewDataOptionsObject\n                 * @since   7.1.0\n                 */\n                announceNewData: {\n                    /**\n                     * Optional formatter callback for the announcement. Receives\n                     * up to three arguments. The first argument is always an array\n                     * of all series that received updates. If an announcement is\n                     * already queued, the series that received updates for that\n                     * announcement are also included in this array. The second\n                     * argument is provided if `chart.addSeries` was called, and\n                     * there is a new series. In that case, this argument is a\n                     * reference to the new series. The third argument, similarly,\n                     * is provided if `series.addPoint` was called, and there is a\n                     * new point. In that case, this argument is a reference to the\n                     * new point.\n                     *\n                     * The function should return a string with the text to announce\n                     * to the user. Return empty string to not announce anything.\n                     * Return `false` to use the default announcement format.\n                     *\n                     * @sample highcharts/accessibility/custom-dynamic\n                     *         High priority live alerts\n                     *\n                     * @type      {Highcharts.AccessibilityAnnouncementFormatter}\n                     * @apioption accessibility.announceNewData.announcementFormatter\n                     */\n                    /**\n                     * Enable announcing new data to screen reader users\n                     * @sample highcharts/accessibility/accessible-dynamic\n                     *         Dynamic data accessible\n                     */\n                    enabled: false,\n                    /**\n                     * Minimum interval between announcements in milliseconds. If\n                     * new data arrives before this amount of time has passed, it is\n                     * queued for announcement. If another new data event happens\n                     * while an announcement is queued, the queued announcement is\n                     * dropped, and the latest announcement is queued instead. Set\n                     * to 0 to allow all announcements, but be warned that frequent\n                     * announcements are disturbing to users.\n                     */\n                    minAnnounceInterval: 5000,\n                    /**\n                     * Choose whether or not the announcements should interrupt the\n                     * screen reader. If not enabled, the user will be notified once\n                     * idle. It is recommended not to enable this setting unless\n                     * there is a specific reason to do so.\n                     */\n                    interruptUser: false\n                }\n            },\n            /**\n             * Accessibility options for a data point.\n             *\n             * @declare   Highcharts.PointAccessibilityOptionsObject\n             * @since     7.1.0\n             * @apioption series.line.data.accessibility\n             */\n            /**\n             * Provide a description of the data point, announced to screen readers.\n             *\n             * @type      {string}\n             * @since     7.1.0\n             * @apioption series.line.data.accessibility.description\n             */\n            /**\n             * Set to false to disable accessibility functionality for a specific point.\n             * The point will not be included in keyboard navigation, and will not be\n             * exposed to assistive technology.\n             *\n             * @type      {boolean}\n             * @since 9.0.1\n             * @apioption series.line.data.accessibility.enabled\n             */\n            /**\n             * Accessibility options for a series.\n             *\n             * @declare    Highcharts.SeriesAccessibilityOptionsObject\n             * @since      7.1.0\n             * @requires   modules/accessibility\n             * @apioption  plotOptions.series.accessibility\n             */\n            /**\n             * Enable/disable accessibility functionality for a specific series.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.enabled\n             */\n            /**\n             * Provide a description of the series, announced to screen readers.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.description\n             */\n            /**\n             * Format to use for describing the data series group to assistive\n             * technology - including screen readers.\n             *\n             * @see [series.descriptionFormat](#accessibility.series.descriptionFormat)\n             * @type       {string}\n             * @since 11.0.0\n             * @apioption  plotOptions.series.accessibility.descriptionFormat\n             */\n            /**\n             * Expose only the series element to screen readers, not its points.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.exposeAsGroupOnly\n             */\n            /**\n             * Point accessibility options for a series.\n             *\n             * @extends    accessibility.point\n             * @since 9.3.0\n             * @requires   modules/accessibility\n             * @apioption  plotOptions.series.accessibility.point\n             */\n            /**\n             * Formatter function to use instead of the default for point\n             * descriptions. Same as `accessibility.point.descriptionFormatter`, but\n             * applies to a series instead of the whole chart.\n             *\n             * Note: Prefer using [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\n             * instead if possible, as default functionality such as describing\n             * annotations will be preserved.\n             *\n             * @see [accessibility.point.valueDescriptionFormat](#plotOptions.series.accessibility.point.valueDescriptionFormat)\n             * @see [point.accessibility.description](#series.line.data.accessibility.description)\n             * @see [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter)\n             *\n             * @type      {Highcharts.ScreenReaderFormatterCallbackFunction<Highcharts.Point>}\n             * @since 9.3.0\n             * @apioption plotOptions.series.accessibility.point.descriptionFormatter\n             */\n            /**\n             * Keyboard navigation for a series\n             *\n             * @declare    Highcharts.SeriesAccessibilityKeyboardNavigationOptionsObject\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.keyboardNavigation\n             */\n            /**\n             * Enable/disable keyboard navigation support for a specific series.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  plotOptions.series.accessibility.keyboardNavigation.enabled\n             */\n            /**\n             * Accessibility options for an annotation label.\n             *\n             * @declare    Highcharts.AnnotationLabelAccessibilityOptionsObject\n             * @since 8.0.1\n             * @requires   modules/accessibility\n             * @apioption  annotations.labelOptions.accessibility\n             */\n            /**\n             * Description of an annotation label for screen readers and other assistive\n             * technology.\n             *\n             * @type       {string}\n             * @since 8.0.1\n             * @apioption  annotations.labelOptions.accessibility.description\n             */\n            /**\n             * Accessibility options for an axis. Requires the accessibility module.\n             *\n             * @declare    Highcharts.AxisAccessibilityOptionsObject\n             * @since      7.1.0\n             * @requires   modules/accessibility\n             * @apioption  xAxis.accessibility\n             */\n            /**\n             * Enable axis accessibility features, including axis information in the\n             * screen reader information region. If this is disabled on the xAxis, the\n             * x values are not exposed to screen readers for the individual data points\n             * by default.\n             *\n             * @type       {boolean}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.enabled\n             */\n            /**\n             * Description for an axis to expose to screen reader users.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.description\n             */\n            /**\n             * Range description for an axis. Overrides the default range description.\n             * Set to empty to disable range description for this axis.\n             *\n             * @type       {string}\n             * @since      7.1.0\n             * @apioption  xAxis.accessibility.rangeDescription\n             */\n            /**\n             * @optionparent legend\n             */\n            legend: {\n                /**\n                 * Accessibility options for the legend. Requires the Accessibility\n                 * module.\n                 *\n                 * @since     7.1.0\n                 * @requires  modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the legend.\n                     *\n                     * @since  7.1.0\n                     */\n                    enabled: true,\n                    /**\n                     * Options for keyboard navigation for the legend.\n                     *\n                     * @since     7.1.0\n                     * @requires  modules/accessibility\n                     */\n                    keyboardNavigation: {\n                        /**\n                         * Enable keyboard navigation for the legend.\n                         *\n                         * @see [accessibility.keyboardNavigation](#accessibility.keyboardNavigation.enabled)\n                         *\n                         * @since  7.1.0\n                         */\n                        enabled: true\n                    }\n                }\n            },\n            /**\n             * @optionparent exporting\n             */\n            exporting: {\n                /**\n                 * Accessibility options for the exporting menu. Requires the\n                 * Accessibility module.\n                 *\n                 * @since    7.1.0\n                 * @requires modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the export menu.\n                     *\n                     * @since 7.1.0\n                     */\n                    enabled: true\n                }\n            },\n            /**\n             * @optionparent navigator\n             */\n            navigator: {\n                /**\n                 * Accessibility options for the navigator. Requires the\n                 * Accessibility module.\n                 *\n                 * @since 11.2.0\n                 * @requires modules/accessibility\n                 */\n                accessibility: {\n                    /**\n                     * Enable accessibility support for the navigator.\n                     *\n                     * @since 11.2.0\n                     */\n                    enabled: true\n                }\n            }\n        };\n\n        return Options;\n    });\n    _registerModule(_modules, 'Accessibility/Options/LangDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default lang/i18n options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        const langOptions = {\n            /**\n             * Configure the accessibility strings in the chart. Requires the\n             * [accessibility module](https://code.highcharts.com/modules/accessibility.js)\n             * to be loaded. For a description of the module and information on its\n             * features, see\n             * [Highcharts Accessibility](https://www.highcharts.com/docs/chart-concepts/accessibility).\n             *\n             * The lang options use [Format Strings](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#format-strings)\n             * with variables that are replaced at run time. These variables should be\n             * used when available, to avoid duplicating text that is defined elsewhere.\n             *\n             * For more dynamic control over the accessibility functionality, see\n             * [accessibility.point.descriptionFormatter](#accessibility.point.descriptionFormatter),\n             * [accessibility.series.descriptionFormatter](#accessibility.series.descriptionFormatter),\n             * and\n             * [accessibility.screenReaderSection.beforeChartFormatter](#accessibility.screenReaderSection.beforeChartFormatter).\n             *\n             * @since        6.0.6\n             * @optionparent lang.accessibility\n             */\n            accessibility: {\n                /**\n                 * @deprecated 10.2.1\n                 * @type       {string}\n                 * @apioption  lang.accessibility.resetZoomButton\n                 */\n                /**\n                 * Default title of the chart for assistive technology, for charts\n                 * without a chart title.\n                 */\n                defaultChartTitle: 'Chart',\n                /**\n                 * Accessible label for the chart container HTML element.\n                 * `{title}` refers to the chart title.\n                 */\n                chartContainerLabel: '{title}. Highcharts interactive chart.',\n                /**\n                 * Accessible label for the chart SVG element.\n                 * `{chartTitle}` refers to the chart title.\n                 */\n                svgContainerLabel: 'Interactive chart',\n                /**\n                 * Accessible label for the drill-up button.\n                 * `{buttonText}` refers to the visual text on the button.\n                 */\n                drillUpButton: '{buttonText}',\n                /**\n                 * Accessible label for the chart credits.\n                 * `{creditsStr}` refers to the visual text in the credits.\n                 */\n                credits: 'Chart credits: {creditsStr}',\n                /**\n                 * Thousands separator to use when formatting numbers for screen\n                 * readers. Note that many screen readers will not handle space as a\n                 * thousands separator, and will consider \"11 700\" as two numbers.\n                 *\n                 * Set to `null` to use the separator defined in\n                 * [lang.thousandsSep](lang.thousandsSep).\n                 *\n                 * @since 7.1.0\n                 */\n                thousandsSep: ',',\n                /**\n                 * Title element text for the chart SVG element. Leave this\n                 * empty to disable adding the title element. Browsers will display\n                 * this content when hovering over elements in the chart. Assistive\n                 * technology may use this element to label the chart.\n                 *\n                 * @since 6.0.8\n                 */\n                svgContainerTitle: '',\n                /**\n                 * Set a label on the container wrapping the SVG.\n                 *\n                 * @see [chartContainerLabel](#lang.accessibility.chartContainerLabel)\n                 *\n                 * @since 8.0.0\n                 */\n                graphicContainerLabel: '',\n                /**\n                 * Language options for the screen reader information sections added\n                 * before and after the charts.\n                 *\n                 * @since 8.0.0\n                 */\n                screenReaderSection: {\n                    beforeRegionLabel: '',\n                    afterRegionLabel: '',\n                    /**\n                     * Language options for annotation descriptions.\n                     *\n                     * @since 8.0.1\n                     */\n                    annotations: {\n                        heading: 'Chart annotations summary',\n                        descriptionSinglePoint: ('{annotationText}. Related to {annotationPoint}'),\n                        descriptionMultiplePoints: ('{annotationText}. Related to {annotationPoint}' +\n                            '{#each additionalAnnotationPoints}' +\n                            ', also related to {this}' +\n                            '{/each}'),\n                        descriptionNoPoints: '{annotationText}'\n                    },\n                    /**\n                     * Label for the end of the chart. Announced by screen readers.\n                     *\n                     * @since 8.0.0\n                     */\n                    endOfChartMarker: 'End of interactive chart.'\n                },\n                /**\n                 * Language options for sonification.\n                 *\n                 * @since 8.0.1\n                 */\n                sonification: {\n                    playAsSoundButtonText: 'Play as sound, {chartTitle}',\n                    playAsSoundClickAnnouncement: 'Play'\n                },\n                /**\n                 * Language options for accessibility of the legend.\n                 *\n                 * @since 8.0.0\n                 */\n                legend: {\n                    /**\n                     * Accessible label for the legend, for charts where there is no\n                     * legend title defined.\n                     */\n                    legendLabelNoTitle: 'Toggle series visibility, {chartTitle}',\n                    /**\n                     * Accessible label for the legend, for charts where there is a\n                     * legend title defined. `{legendTitle}` refers to the visual text\n                     * in the legend title.\n                     */\n                    legendLabel: 'Chart legend: {legendTitle}',\n                    /**\n                     * Accessible label for individual legend items. `{itemName}` refers\n                     * to the visual text in the legend for that item.\n                     */\n                    legendItem: 'Show {itemName}'\n                },\n                /**\n                 * Chart and map zoom accessibility language options.\n                 *\n                 * @since 8.0.0\n                 */\n                zoom: {\n                    mapZoomIn: 'Zoom chart',\n                    mapZoomOut: 'Zoom out chart',\n                    resetZoomButton: 'Reset zoom'\n                },\n                /**\n                 * Range selector language options for accessibility.\n                 *\n                 * @since 8.0.0\n                 */\n                rangeSelector: {\n                    dropdownLabel: '{rangeTitle}',\n                    minInputLabel: 'Select start date.',\n                    maxInputLabel: 'Select end date.',\n                    clickButtonAnnouncement: 'Viewing {axisRangeDescription}'\n                },\n                /**\n                 * Navigator language options for accessibility.\n                 *\n                 * @since 11.2.0\n                 */\n                navigator: {\n                    /**\n                     * Label for the navigator handles.\n                     *\n                     * Receives `handleIx` and `chart` as context.\n                     * `handleIx` refers to the index of the navigator handle.\n                     */\n                    handleLabel: '{#eq handleIx 0}Start, percent{else}End, percent{/eq}',\n                    /**\n                     * Label for the navigator region.\n                     *\n                     * Receives `chart` as context.\n                     */\n                    groupLabel: 'Axis zoom',\n                    /**\n                     * Announcement for assistive technology when navigator values\n                     * are changed.\n                     *\n                     * Receives `axisRangeDescription` and `chart` as context.\n                     * `axisRangeDescription` corresponds to the range description\n                     * defined in [lang.accessibility.axis](#lang.accessibility.axis)\n                     */\n                    changeAnnouncement: '{axisRangeDescription}'\n                },\n                /**\n                 * Accessibility language options for the data table.\n                 *\n                 * @since 8.0.0\n                 */\n                table: {\n                    viewAsDataTableButtonText: 'View as data table, {chartTitle}',\n                    tableSummary: 'Table representation of chart.'\n                },\n                /**\n                 * Default announcement for new data in charts. If addPoint or\n                 * addSeries is used, and only one series/point is added, the\n                 * `newPointAnnounce` and `newSeriesAnnounce` strings are used.\n                 * The `...Single` versions will be used if there is only one chart\n                 * on the page, and the `...Multiple` versions will be used if there\n                 * are multiple charts on the page. For all other new data events,\n                 * the `newDataAnnounce` string will be used.\n                 *\n                 * @since 7.1.0\n                 */\n                announceNewData: {\n                    newDataAnnounce: 'Updated data for chart {chartTitle}',\n                    newSeriesAnnounceSingle: 'New data series: {seriesDesc}',\n                    newPointAnnounceSingle: 'New data point: {pointDesc}',\n                    newSeriesAnnounceMultiple: 'New data series in chart {chartTitle}: {seriesDesc}',\n                    newPointAnnounceMultiple: 'New data point in chart {chartTitle}: {pointDesc}'\n                },\n                /**\n                 * Descriptions of lesser known series types. The relevant\n                 * description is added to the screen reader information region\n                 * when these series types are used.\n                 *\n                 * @since 6.0.6\n                 */\n                seriesTypeDescriptions: {\n                    boxplot: 'Box plot charts are typically used to display ' +\n                        'groups of statistical data. Each data point in the ' +\n                        'chart can have up to 5 values: minimum, lower quartile, ' +\n                        'median, upper quartile, and maximum.',\n                    arearange: 'Arearange charts are line charts displaying a ' +\n                        'range between a lower and higher value for each point.',\n                    areasplinerange: 'These charts are line charts displaying a ' +\n                        'range between a lower and higher value for each point.',\n                    bubble: 'Bubble charts are scatter charts where each data ' +\n                        'point also has a size value.',\n                    columnrange: 'Columnrange charts are column charts ' +\n                        'displaying a range between a lower and higher value for ' +\n                        'each point.',\n                    errorbar: 'Errorbar series are used to display the ' +\n                        'variability of the data.',\n                    funnel: 'Funnel charts are used to display reduction of data ' +\n                        'in stages.',\n                    pyramid: 'Pyramid charts consist of a single pyramid with ' +\n                        'item heights corresponding to each point value.',\n                    waterfall: 'A waterfall chart is a column chart where each ' +\n                        'column contributes towards a total end value.'\n                },\n                /**\n                 * Chart type description strings. This is added to the chart\n                 * information region.\n                 *\n                 * If there is only a single series type used in the chart, we use\n                 * the format string for the series type, or default if missing.\n                 * There is one format string for cases where there is only a single\n                 * series in the chart, and one for multiple series of the same\n                 * type.\n                 *\n                 * @since 6.0.6\n                 */\n                chartTypes: {\n                    /* eslint-disable max-len */\n                    emptyChart: 'Empty chart',\n                    mapTypeDescription: 'Map of {mapTitle} with {numSeries} data series.',\n                    unknownMap: 'Map of unspecified region with {numSeries} data series.',\n                    combinationChart: 'Combination chart with {numSeries} data series.',\n                    defaultSingle: 'Chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    defaultMultiple: 'Chart with {numSeries} data series.',\n                    splineSingle: 'Line chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    splineMultiple: 'Line chart with {numSeries} lines.',\n                    lineSingle: 'Line chart with {numPoints} data ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    lineMultiple: 'Line chart with {numSeries} lines.',\n                    columnSingle: 'Bar chart with {numPoints} ' +\n                        '{#eq numPoints 1}bar{else}bars{/eq}.',\n                    columnMultiple: 'Bar chart with {numSeries} data series.',\n                    barSingle: 'Bar chart with {numPoints} ' +\n                        '{#eq numPoints 1}bar{else}bars{/eq}.',\n                    barMultiple: 'Bar chart with {numSeries} data series.',\n                    pieSingle: 'Pie chart with {numPoints} ' +\n                        '{#eq numPoints 1}slice{else}slices{/eq}.',\n                    pieMultiple: 'Pie chart with {numSeries} pies.',\n                    scatterSingle: 'Scatter chart with {numPoints} ' +\n                        '{#eq numPoints 1}point{else}points{/eq}.',\n                    scatterMultiple: 'Scatter chart with {numSeries} data series.',\n                    boxplotSingle: 'Boxplot with {numPoints} ' +\n                        '{#eq numPoints 1}box{else}boxes{/eq}.',\n                    boxplotMultiple: 'Boxplot with {numSeries} data series.',\n                    bubbleSingle: 'Bubble chart with {numPoints} ' +\n                        '{#eq numPoints 1}bubbles{else}bubble{/eq}.',\n                    bubbleMultiple: 'Bubble chart with {numSeries} data series.'\n                },\n                /**\n                 * Axis description format strings.\n                 *\n                 * @since 6.0.6\n                 */\n                axis: {\n                    /* eslint-disable max-len */\n                    xAxisDescriptionSingular: 'The chart has 1 X axis displaying {names[0]}. {ranges[0]}',\n                    xAxisDescriptionPlural: 'The chart has {numAxes} X axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}.',\n                    yAxisDescriptionSingular: 'The chart has 1 Y axis displaying {names[0]}. {ranges[0]}',\n                    yAxisDescriptionPlural: 'The chart has {numAxes} Y axes displaying {#each names}{#unless @first},{/unless}{#if @last} and{/if} {this}{/each}.',\n                    timeRangeDays: 'Data range: {range} days.',\n                    timeRangeHours: 'Data range: {range} hours.',\n                    timeRangeMinutes: 'Data range: {range} minutes.',\n                    timeRangeSeconds: 'Data range: {range} seconds.',\n                    rangeFromTo: 'Data ranges from {rangeFrom} to {rangeTo}.',\n                    rangeCategories: 'Data range: {numCategories} categories.'\n                },\n                /**\n                 * Exporting menu format strings for accessibility module.\n                 *\n                 * @since 6.0.6\n                 */\n                exporting: {\n                    chartMenuLabel: 'Chart menu',\n                    menuButtonLabel: 'View chart menu, {chartTitle}'\n                },\n                /**\n                 * Lang configuration for different series types. For more dynamic\n                 * control over the series element descriptions, see\n                 * [accessibility.seriesDescriptionFormatter](#accessibility.seriesDescriptionFormatter).\n                 *\n                 * @since 6.0.6\n                 */\n                series: {\n                    /**\n                     * Lang configuration for the series main summary. Each series\n                     * type has two modes:\n                     *\n                     * 1. This series type is the only series type used in the\n                     *    chart\n                     *\n                     * 2. This is a combination chart with multiple series types\n                     *\n                     * If a definition does not exist for the specific series type\n                     * and mode, the 'default' lang definitions are used.\n                     *\n                     * Chart and its subproperties can be accessed with the `{chart}` variable.\n                     * The series and its subproperties can be accessed with the `{series}` variable.\n                     *\n                     * The series index (starting from 1) can be accessed with the `{seriesNumber}` variable.\n                     *\n                     * @since 6.0.6\n                     */\n                    summary: {\n                        /* eslint-disable max-len */\n                        'default': '{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        defaultCombination: '{series.name}, series {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        line: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        lineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        spline: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        splineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        column: '{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        columnCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        bar: '{series.name}, bar series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        barCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bar series with {series.points.length} {#eq series.points.length 1}bar{else}bars{/eq}.',\n                        pie: '{series.name}, pie {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}.',\n                        pieCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Pie with {series.points.length} {#eq series.points.length 1}slice{else}slices{/eq}.',\n                        scatter: '{series.name}, scatter plot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}.',\n                        scatterCombination: '{series.name}, series {seriesNumber} of {chart.series.length}, scatter plot with {series.points.length} {#eq series.points.length 1}point{else}points{/eq}.',\n                        boxplot: '{series.name}, boxplot {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}.',\n                        boxplotCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Boxplot with {series.points.length} {#eq series.points.length 1}box{else}boxes{/eq}.',\n                        bubble: '{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        bubbleCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        map: '{series.name}, map {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}.',\n                        mapCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Map with {series.points.length} {#eq series.points.length 1}area{else}areas{/eq}.',\n                        mapline: '{series.name}, line {seriesNumber} of {chart.series.length} with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        maplineCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Line with {series.points.length} data {#eq series.points.length 1}point{else}points{/eq}.',\n                        mapbubble: '{series.name}, bubble series {seriesNumber} of {chart.series.length} with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.',\n                        mapbubbleCombination: '{series.name}, series {seriesNumber} of {chart.series.length}. Bubble series with {series.points.length} {#eq series.points.length 1}bubble{else}bubbles{/eq}.'\n                    },\n                    /**\n                     * User supplied description text. This is added in the point\n                     * comment description by default if present.\n                     *\n                     * `{description}` refers to the value given in\n                     * [point.accessibility.description](#series.line.data.accessibility.description).\n                     *\n                     * @since 6.0.6\n                     */\n                    description: '{description}',\n                    /**\n                     * xAxis description for series if there are multiple xAxes in\n                     * the chart.\n                     *\n                     * @since 6.0.6\n                     */\n                    xAxisDescription: 'X axis, {name}',\n                    /**\n                     * yAxis description for series if there are multiple yAxes in\n                     * the chart.\n                     *\n                     * @since 6.0.6\n                     */\n                    yAxisDescription: 'Y axis, {name}',\n                    /**\n                     * Description for the value of null points.\n                     *\n                     * @since 8.0.0\n                     */\n                    nullPointValue: 'No value',\n                    /**\n                     * Description for annotations on a point, as it is made available\n                     * to assistive technology.\n                     *\n                     * @since 8.0.1\n                     */\n                    pointAnnotationsDescription: '{#each annotations}' +\n                        'Annotation: {this}{/each}'\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return langOptions;\n    });\n    _registerModule(_modules, 'Accessibility/Options/DeprecatedOptions.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Default options for accessibility.\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* eslint-disable max-len */\n        /*\n         *  List of deprecated options:\n         *\n         *  chart.description -> accessibility.description\n         *  chart.typeDescription -> accessibility.typeDescription\n         *  series.description -> series.accessibility.description\n         *  series.exposeElementToA11y -> series.accessibility.exposeAsGroupOnly\n         *  series.pointDescriptionFormatter ->\n         *      series.accessibility.pointDescriptionFormatter\n         *  series.accessibility.pointDescriptionFormatter ->\n         *      series.accessibility.point.descriptionFormatter\n         *  series.skipKeyboardNavigation ->\n         *      series.accessibility.keyboardNavigation.enabled\n         *  point.description -> point.accessibility.description !!!! WARNING: No longer deprecated and handled, removed for HC8.\n         *  axis.description -> axis.accessibility.description\n         *\n         *  accessibility.pointDateFormat -> accessibility.point.dateFormat\n         *  accessibility.addTableShortcut -> Handled by screenReaderSection.beforeChartFormat\n         *  accessibility.pointDateFormatter -> accessibility.point.dateFormatter\n         *  accessibility.pointDescriptionFormatter -> accessibility.point.descriptionFormatter\n         *  accessibility.pointDescriptionThreshold -> accessibility.series.pointDescriptionEnabledThreshold\n         *  accessibility.pointNavigationThreshold -> accessibility.keyboardNavigation.seriesNavigation.pointNavigationEnabledThreshold\n         *  accessibility.pointValueDecimals -> accessibility.point.valueDecimals\n         *  accessibility.pointValuePrefix -> accessibility.point.valuePrefix\n         *  accessibility.pointValueSuffix -> accessibility.point.valueSuffix\n         *  accessibility.screenReaderSectionFormatter -> accessibility.screenReaderSection.beforeChartFormatter\n         *  accessibility.describeSingleSeries -> accessibility.series.describeSingleSeries\n         *  accessibility.seriesDescriptionFormatter -> accessibility.series.descriptionFormatter\n         *  accessibility.onTableAnchorClick -> accessibility.screenReaderSection.onViewDataTableClick\n         *  accessibility.axisRangeDateFormat -> accessibility.screenReaderSection.axisRangeDateFormat\n         *  accessibility.keyboardNavigation.skipNullPoints -> accessibility.keyboardNavigation.seriesNavigation.skipNullPoints\n         *  accessibility.keyboardNavigation.mode -> accessibility.keyboardNavigation.seriesNavigation.mode\n         *\n         *  lang.accessibility.chartHeading -> no longer used, remove\n         *  lang.accessibility.legendItem -> lang.accessibility.legend.legendItem\n         *  lang.accessibility.legendLabel -> lang.accessibility.legend.legendLabel\n         *  lang.accessibility.mapZoomIn -> lang.accessibility.zoom.mapZoomIn\n         *  lang.accessibility.mapZoomOut -> lang.accessibility.zoom.mapZoomOut\n         *  lang.accessibility.resetZoomButton -> lang.accessibility.zoom.resetZoomButton\n         *  lang.accessibility.screenReaderRegionLabel -> lang.accessibility.screenReaderSection.beforeRegionLabel\n         *  lang.accessibility.rangeSelectorButton -> lang.accessibility.rangeSelector.buttonText\n         *  lang.accessibility.rangeSelectorMaxInput -> lang.accessibility.rangeSelector.maxInputLabel\n         *  lang.accessibility.rangeSelectorMinInput -> lang.accessibility.rangeSelector.minInputLabel\n         *  lang.accessibility.svgContainerEnd -> lang.accessibility.screenReaderSection.endOfChartMarker\n         *  lang.accessibility.viewAsDataTable -> lang.accessibility.table.viewAsDataTableButtonText\n         *  lang.accessibility.tableSummary -> lang.accessibility.table.tableSummary\n         *\n         */\n        /* eslint-enable max-len */\n        const { error, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * Set a new option on a root prop, where the option is defined as an array of\n         * suboptions.\n         * @private\n         * @param root\n         * @param {Array<string>} optionAsArray\n         * @param {*} val\n         * @return {void}\n         */\n        function traverseSetOption(root, optionAsArray, val) {\n            let opt = root, prop, i = 0;\n            for (; i < optionAsArray.length - 1; ++i) {\n                prop = optionAsArray[i];\n                opt = opt[prop] = pick(opt[prop], {});\n            }\n            opt[optionAsArray[optionAsArray.length - 1]] = val;\n        }\n        /**\n         * If we have a clear root option node for old and new options and a mapping\n         * between, we can use this generic function for the copy and warn logic.\n         */\n        function deprecateFromOptionsMap(chart, rootOldAsArray, rootNewAsArray, mapToNewOptions) {\n            /**\n             * @private\n             */\n            function getChildProp(root, propAsArray) {\n                return propAsArray.reduce(function (acc, cur) {\n                    return acc[cur];\n                }, root);\n            }\n            const rootOld = getChildProp(chart.options, rootOldAsArray), rootNew = getChildProp(chart.options, rootNewAsArray);\n            Object.keys(mapToNewOptions).forEach(function (oldOptionKey) {\n                const val = rootOld[oldOptionKey];\n                if (typeof val !== 'undefined') {\n                    traverseSetOption(rootNew, mapToNewOptions[oldOptionKey], val);\n                    error(32, false, chart, {\n                        [rootOldAsArray.join('.') + '.' + oldOptionKey]: (rootNewAsArray.join('.') + '.' +\n                            mapToNewOptions[oldOptionKey].join('.'))\n                    });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedChartOptions(chart) {\n            const chartOptions = chart.options.chart, a11yOptions = chart.options.accessibility || {};\n            ['description', 'typeDescription'].forEach(function (prop) {\n                if (chartOptions[prop]) {\n                    a11yOptions[prop] = chartOptions[prop];\n                    error(32, false, chart, { [`chart.${prop}`]: `use accessibility.${prop}` });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedAxisOptions(chart) {\n            chart.axes.forEach(function (axis) {\n                const opts = axis.options;\n                if (opts && opts.description) {\n                    opts.accessibility = opts.accessibility || {};\n                    opts.accessibility.description = opts.description;\n                    error(32, false, chart, {\n                        'axis.description': 'use axis.accessibility.description'\n                    });\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedSeriesOptions(chart) {\n            // Map of deprecated series options. New options are defined as\n            // arrays of paths under series.options.\n            const oldToNewSeriesOptions = {\n                description: ['accessibility', 'description'],\n                exposeElementToA11y: ['accessibility', 'exposeAsGroupOnly'],\n                pointDescriptionFormatter: [\n                    'accessibility', 'point', 'descriptionFormatter'\n                ],\n                skipKeyboardNavigation: [\n                    'accessibility', 'keyboardNavigation', 'enabled'\n                ],\n                'accessibility.pointDescriptionFormatter': [\n                    'accessibility', 'point', 'descriptionFormatter'\n                ]\n            };\n            chart.series.forEach(function (series) {\n                // Handle series wide options\n                Object.keys(oldToNewSeriesOptions).forEach(function (oldOption) {\n                    let optionVal = series.options[oldOption];\n                    // Special case\n                    if (oldOption === 'accessibility.pointDescriptionFormatter') {\n                        optionVal = (series.options.accessibility &&\n                            series.options.accessibility\n                                .pointDescriptionFormatter);\n                    }\n                    if (typeof optionVal !== 'undefined') {\n                        // Set the new option\n                        traverseSetOption(series.options, oldToNewSeriesOptions[oldOption], \n                        // Note that skipKeyboardNavigation has inverted option\n                        // value, since we set enabled rather than disabled\n                        oldOption === 'skipKeyboardNavigation' ?\n                            !optionVal : optionVal);\n                        error(32, false, chart, {\n                            [`series.${oldOption}`]: ('series.' +\n                                oldToNewSeriesOptions[oldOption].join('.'))\n                        });\n                    }\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedTopLevelAccessibilityOptions(chart) {\n            deprecateFromOptionsMap(chart, ['accessibility'], ['accessibility'], {\n                pointDateFormat: ['point', 'dateFormat'],\n                pointDateFormatter: ['point', 'dateFormatter'],\n                pointDescriptionFormatter: ['point', 'descriptionFormatter'],\n                pointDescriptionThreshold: ['series',\n                    'pointDescriptionEnabledThreshold'],\n                pointNavigationThreshold: ['keyboardNavigation', 'seriesNavigation',\n                    'pointNavigationEnabledThreshold'],\n                pointValueDecimals: ['point', 'valueDecimals'],\n                pointValuePrefix: ['point', 'valuePrefix'],\n                pointValueSuffix: ['point', 'valueSuffix'],\n                screenReaderSectionFormatter: ['screenReaderSection',\n                    'beforeChartFormatter'],\n                describeSingleSeries: ['series', 'describeSingleSeries'],\n                seriesDescriptionFormatter: ['series', 'descriptionFormatter'],\n                onTableAnchorClick: ['screenReaderSection', 'onViewDataTableClick'],\n                axisRangeDateFormat: ['screenReaderSection', 'axisRangeDateFormat']\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedKeyboardNavigationOptions(chart) {\n            deprecateFromOptionsMap(chart, ['accessibility', 'keyboardNavigation'], ['accessibility', 'keyboardNavigation', 'seriesNavigation'], {\n                skipNullPoints: ['skipNullPoints'],\n                mode: ['mode']\n            });\n        }\n        /**\n         * @private\n         */\n        function copyDeprecatedLangOptions(chart) {\n            deprecateFromOptionsMap(chart, ['lang', 'accessibility'], ['lang', 'accessibility'], {\n                legendItem: ['legend', 'legendItem'],\n                legendLabel: ['legend', 'legendLabel'],\n                mapZoomIn: ['zoom', 'mapZoomIn'],\n                mapZoomOut: ['zoom', 'mapZoomOut'],\n                resetZoomButton: ['zoom', 'resetZoomButton'],\n                screenReaderRegionLabel: ['screenReaderSection',\n                    'beforeRegionLabel'],\n                rangeSelectorButton: ['rangeSelector', 'buttonText'],\n                rangeSelectorMaxInput: ['rangeSelector', 'maxInputLabel'],\n                rangeSelectorMinInput: ['rangeSelector', 'minInputLabel'],\n                svgContainerEnd: ['screenReaderSection', 'endOfChartMarker'],\n                viewAsDataTable: ['table', 'viewAsDataTableButtonText'],\n                tableSummary: ['table', 'tableSummary']\n            });\n        }\n        /**\n         * Copy options that are deprecated over to new options. Logs warnings to\n         * console if deprecated options are used.\n         *\n         * @private\n         */\n        function copyDeprecatedOptions(chart) {\n            copyDeprecatedChartOptions(chart);\n            copyDeprecatedAxisOptions(chart);\n            if (chart.series) {\n                copyDeprecatedSeriesOptions(chart);\n            }\n            copyDeprecatedTopLevelAccessibilityOptions(chart);\n            copyDeprecatedKeyboardNavigationOptions(chart);\n            copyDeprecatedLangOptions(chart);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return copyDeprecatedOptions;\n    });\n    _registerModule(_modules, 'Accessibility/Accessibility.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/A11yI18n.js'], _modules['Accessibility/Components/ContainerComponent.js'], _modules['Accessibility/FocusBorder.js'], _modules['Accessibility/Components/InfoRegionsComponent.js'], _modules['Accessibility/KeyboardNavigation.js'], _modules['Accessibility/Components/LegendComponent.js'], _modules['Accessibility/Components/MenuComponent.js'], _modules['Accessibility/Components/NavigatorComponent.js'], _modules['Accessibility/Components/SeriesComponent/NewDataAnnouncer.js'], _modules['Accessibility/ProxyProvider.js'], _modules['Accessibility/Components/RangeSelectorComponent.js'], _modules['Accessibility/Components/SeriesComponent/SeriesComponent.js'], _modules['Accessibility/Components/ZoomComponent.js'], _modules['Accessibility/HighContrastMode.js'], _modules['Accessibility/HighContrastTheme.js'], _modules['Accessibility/Options/A11yDefaults.js'], _modules['Accessibility/Options/LangDefaults.js'], _modules['Accessibility/Options/DeprecatedOptions.js']], function (D, H, U, HU, A11yI18n, ContainerComponent, FocusBorderComposition, InfoRegionsComponent, KeyboardNavigation, LegendComponent, MenuComponent, NavigatorComponent, NewDataAnnouncer, ProxyProvider, RangeSelectorComponent, SeriesComponent, ZoomComponent, whcm, highContrastTheme, defaultOptionsA11Y, defaultLangOptions, copyDeprecatedOptions) {\n        /* *\n         *\n         *  (c) 2009-2024 Ã˜ystein Moseng\n         *\n         *  Accessibility module for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { defaultOptions } = D;\n        const { composed, doc } = H;\n        const { addEvent, extend, fireEvent, merge, pushUnique } = U;\n        const { removeElement } = HU;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Accessibility class\n         *\n         * @private\n         * @requires module:modules/accessibility\n         *\n         * @class\n         * @name Highcharts.Accessibility\n         *\n         * @param {Highcharts.Chart} chart\n         * Chart object\n         */\n        class Accessibility {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            constructor(chart) {\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the accessibility class\n             * @private\n             * @param {Highcharts.Chart} chart\n             *        Chart object\n             */\n            init(chart) {\n                this.chart = chart;\n                // Abort on old browsers\n                if (!doc.addEventListener) {\n                    this.zombie = true;\n                    this.components = {};\n                    chart.renderTo.setAttribute('aria-hidden', true);\n                    return;\n                }\n                // Copy over any deprecated options that are used. We could do this on\n                // every update, but it is probably not needed.\n                copyDeprecatedOptions(chart);\n                this.proxyProvider = new ProxyProvider(this.chart);\n                this.initComponents();\n                this.keyboardNavigation = new KeyboardNavigation(chart, this.components);\n            }\n            /**\n             * @private\n             */\n            initComponents() {\n                const chart = this.chart;\n                const proxyProvider = this.proxyProvider;\n                const a11yOptions = chart.options.accessibility;\n                this.components = {\n                    container: new ContainerComponent(),\n                    infoRegions: new InfoRegionsComponent(),\n                    legend: new LegendComponent(),\n                    chartMenu: new MenuComponent(),\n                    rangeSelector: new RangeSelectorComponent(),\n                    series: new SeriesComponent(),\n                    zoom: new ZoomComponent(),\n                    navigator: new NavigatorComponent()\n                };\n                if (a11yOptions.customComponents) {\n                    extend(this.components, a11yOptions.customComponents);\n                }\n                const components = this.components;\n                this.getComponentOrder().forEach(function (componentName) {\n                    components[componentName].initBase(chart, proxyProvider);\n                    components[componentName].init();\n                });\n            }\n            /**\n             * Get order to update components in.\n             * @private\n             */\n            getComponentOrder() {\n                if (!this.components) {\n                    return []; // For zombie accessibility object on old browsers\n                }\n                if (!this.components.series) {\n                    return Object.keys(this.components);\n                }\n                const componentsExceptSeries = Object.keys(this.components)\n                    .filter((c) => c !== 'series');\n                // Update series first, so that other components can read accessibility\n                // info on points.\n                return ['series'].concat(componentsExceptSeries);\n            }\n            /**\n             * Update all components.\n             */\n            update() {\n                const components = this.components, chart = this.chart, a11yOptions = chart.options.accessibility;\n                fireEvent(chart, 'beforeA11yUpdate');\n                // Update the chart type list as this is used by multiple modules\n                chart.types = this.getChartTypes();\n                // Update proxies. We don't update proxy positions since most likely we\n                // need to recreate the proxies on update.\n                const kbdNavOrder = a11yOptions.keyboardNavigation.order;\n                this.proxyProvider.updateGroupOrder(kbdNavOrder);\n                // Update markup\n                this.getComponentOrder().forEach(function (componentName) {\n                    components[componentName].onChartUpdate();\n                    fireEvent(chart, 'afterA11yComponentUpdate', {\n                        name: componentName,\n                        component: components[componentName]\n                    });\n                });\n                // Update keyboard navigation\n                this.keyboardNavigation.update(kbdNavOrder);\n                // Handle high contrast mode\n                if (!chart.highContrastModeActive && // Only do this once\n                    whcm.isHighContrastModeActive()) {\n                    whcm.setHighContrastTheme(chart);\n                }\n                fireEvent(chart, 'afterA11yUpdate', {\n                    accessibility: this\n                });\n            }\n            /**\n             * Destroy all elements.\n             */\n            destroy() {\n                const chart = this.chart || {};\n                // Destroy components\n                const components = this.components;\n                Object.keys(components).forEach(function (componentName) {\n                    components[componentName].destroy();\n                    components[componentName].destroyBase();\n                });\n                // Destroy proxy provider\n                if (this.proxyProvider) {\n                    this.proxyProvider.destroy();\n                }\n                // Remove announcer container\n                if (chart.announcerContainer) {\n                    removeElement(chart.announcerContainer);\n                }\n                // Kill keyboard nav\n                if (this.keyboardNavigation) {\n                    this.keyboardNavigation.destroy();\n                }\n                // Hide container from screen readers if it exists\n                if (chart.renderTo) {\n                    chart.renderTo.setAttribute('aria-hidden', true);\n                }\n                // Remove focus border if it exists\n                if (chart.focusElement) {\n                    chart.focusElement.removeFocusBorder();\n                }\n            }\n            /**\n             * Return a list of the types of series we have in the chart.\n             * @private\n             */\n            getChartTypes() {\n                const types = {};\n                this.chart.series.forEach(function (series) {\n                    types[series.type] = 1;\n                });\n                return Object.keys(types);\n            }\n        }\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (Accessibility) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            Accessibility.i18nFormat = A11yI18n.i18nFormat;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Destroy with chart.\n             * @private\n             */\n            function chartOnDestroy() {\n                if (this.accessibility) {\n                    this.accessibility.destroy();\n                }\n            }\n            /**\n             * Handle updates to the module and send render updates to components.\n             * @private\n             */\n            function chartOnRender() {\n                // Update/destroy\n                if (this.a11yDirty && this.renderTo) {\n                    delete this.a11yDirty;\n                    this.updateA11yEnabled();\n                }\n                const a11y = this.accessibility;\n                if (a11y && !a11y.zombie) {\n                    a11y.proxyProvider.updateProxyElementPositions();\n                    a11y.getComponentOrder().forEach(function (componentName) {\n                        a11y.components[componentName].onChartRender();\n                    });\n                }\n            }\n            /**\n             * Update with chart/series/point updates.\n             * @private\n             */\n            function chartOnUpdate(e) {\n                // Merge new options\n                const newOptions = e.options.accessibility;\n                if (newOptions) {\n                    // Handle custom component updating specifically\n                    if (newOptions.customComponents) {\n                        this.options.accessibility.customComponents =\n                            newOptions.customComponents;\n                        delete newOptions.customComponents;\n                    }\n                    merge(true, this.options.accessibility, newOptions);\n                    // Recreate from scratch\n                    if (this.accessibility && this.accessibility.destroy) {\n                        this.accessibility.destroy();\n                        delete this.accessibility;\n                    }\n                }\n                // Mark dirty for update\n                this.a11yDirty = true;\n            }\n            /**\n             * @private\n             */\n            function chartUpdateA11yEnabled() {\n                let a11y = this.accessibility;\n                const accessibilityOptions = this.options.accessibility;\n                if (accessibilityOptions && accessibilityOptions.enabled) {\n                    if (a11y && !a11y.zombie) {\n                        a11y.update();\n                    }\n                    else {\n                        this.accessibility = a11y = new Accessibility(this);\n                        if (a11y && !a11y.zombie) {\n                            a11y.update();\n                        }\n                    }\n                }\n                else if (a11y) {\n                    // Destroy if after update we have a11y and it is disabled\n                    if (a11y.destroy) {\n                        a11y.destroy();\n                    }\n                    delete this.accessibility;\n                }\n                else {\n                    // Just hide container\n                    this.renderTo.setAttribute('aria-hidden', true);\n                }\n            }\n            /**\n             * @private\n             */\n            function compose(ChartClass, LegendClass, PointClass, SeriesClass, SVGElementClass, RangeSelectorClass) {\n                // Ordered:\n                KeyboardNavigation.compose(ChartClass);\n                NewDataAnnouncer.compose(SeriesClass);\n                LegendComponent.compose(ChartClass, LegendClass);\n                MenuComponent.compose(ChartClass);\n                SeriesComponent.compose(ChartClass, PointClass, SeriesClass);\n                A11yI18n.compose(ChartClass);\n                FocusBorderComposition.compose(ChartClass, SVGElementClass);\n                // RangeSelector\n                if (RangeSelectorClass) {\n                    RangeSelectorComponent.compose(ChartClass, RangeSelectorClass);\n                }\n                if (pushUnique(composed, compose)) {\n                    const chartProto = ChartClass.prototype;\n                    chartProto.updateA11yEnabled = chartUpdateA11yEnabled;\n                    addEvent(ChartClass, 'destroy', chartOnDestroy);\n                    addEvent(ChartClass, 'render', chartOnRender);\n                    addEvent(ChartClass, 'update', chartOnUpdate);\n                    // Mark dirty for update\n                    ['addSeries', 'init'].forEach((event) => {\n                        addEvent(ChartClass, event, function () {\n                            this.a11yDirty = true;\n                        });\n                    });\n                    // Direct updates (events happen after render)\n                    ['afterApplyDrilldown', 'drillupall'].forEach((event) => {\n                        addEvent(ChartClass, event, function chartOnAfterDrilldown() {\n                            const a11y = this.accessibility;\n                            if (a11y && !a11y.zombie) {\n                                a11y.update();\n                            }\n                        });\n                    });\n                    addEvent(PointClass, 'update', pointOnUpdate);\n                    // Mark dirty for update\n                    ['update', 'updatedData', 'remove'].forEach((event) => {\n                        addEvent(SeriesClass, event, function () {\n                            if (this.chart.accessibility) {\n                                this.chart.a11yDirty = true;\n                            }\n                        });\n                    });\n                }\n            }\n            Accessibility.compose = compose;\n            /**\n             * Mark dirty for update.\n             * @private\n             */\n            function pointOnUpdate() {\n                if (this.series.chart.accessibility) {\n                    this.series.chart.a11yDirty = true;\n                }\n            }\n        })(Accessibility || (Accessibility = {}));\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // Add default options\n        merge(true, defaultOptions, defaultOptionsA11Y, {\n            accessibility: {\n                highContrastTheme: highContrastTheme\n            },\n            lang: defaultLangOptions\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Accessibility;\n    });\n    _registerModule(_modules, 'masters/modules/accessibility.src.js', [_modules['Core/Globals.js'], _modules['Accessibility/Accessibility.js'], _modules['Accessibility/AccessibilityComponent.js'], _modules['Accessibility/Utils/ChartUtilities.js'], _modules['Accessibility/Utils/HTMLUtilities.js'], _modules['Accessibility/KeyboardNavigationHandler.js'], _modules['Accessibility/Components/SeriesComponent/SeriesDescriber.js']], function (Highcharts, Accessibility, AccessibilityComponent, ChartUtilities, HTMLUtilities, KeyboardNavigationHandler, SeriesDescriber) {\n\n        const G = Highcharts;\n        G.i18nFormat = Accessibility.i18nFormat;\n        G.A11yChartUtilities = ChartUtilities;\n        G.A11yHTMLUtilities = HTMLUtilities;\n        G.AccessibilityComponent = AccessibilityComponent;\n        G.KeyboardNavigationHandler = KeyboardNavigationHandler;\n        G.SeriesAccessibilityDescriber = SeriesDescriber;\n        Accessibility.compose(G.Chart, G.Legend, G.Point, G.Series, G.SVGElement, G.RangeSelector);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","H","U","doc","win","css","simulatedEventTarget","EventTarget","cloneMouseEvent","e","MouseEvent","type","createEvent","evt","initMouseEvent","bubbles","cancelable","view","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","getFakeMouseEvent","position","pos","x","y","composed","buttons","addClass","el","className","classList","add","indexOf","cloneTouchEvent","touchListToTouchArray","l","touchArray","i","length","item","push","TouchEvent","newEvent","touches","targetTouches","changedTouches","defaultPrevented","preventDefault","fakeEvt","escapeStringForHTML","str","replace","getElement","id","getElementById","getHeadingTagNameForElement","element","getIncreasedHeadingLevel","tagName","headingLevel","parseInt","slice","Math","min","isHeading","test","getPreviousSiblingsHeading","sibling","previousSibling","getHeadingRecursive","prevSiblingsHeading","parent","parentElement","parentTagName","removeChildNodes","lastChild","removeChild","removeClass","remove","RegExp","removeElement","parentNode","reverseChildNodes","node","childNodes","appendChild","stripHTMLTagsFromString","isForExport","visuallyHideElement","width","height","overflow","whiteSpace","clip","marginTop","filter","opacity","F","A11yI18nComposition","format","getNestedProperty","pick","pushUnique","i18nFormat","formatString","context","chart","getFirstBracketStatement","sourceStr","offset","startBracket","endBracket","statement","substring","begin","end","tokens","bracketRes","constRes","cursor","value","forEach","token","formatExtendedStatement","ctx","arr","result","eachStart","pluralStart","indexStart","indexEnd","eachEnd","preEach","postEach","eachStatement","eachArguments","split","lenArg","Number","len","isNaN","pluralEnd","pluralStatement","pluralArguments","num","trim","val","arrayName","ix","reduce","acc","cur","langFormat","langKey","keys","options","lang","compose","ChartClass","chartProto","prototype","HU","stripHTMLTags","defined","find","fireEvent","getSeriesFirstPointElement","series","points","firstPointWithGraphic","p","graphic","getSeriesA11yElement","firstPointEl","graph","group","fireEventOnWrappedOrUnwrappedElement","eventObject","hcEvents","getChartTitle","title","text","renderer","forExport","getAxisDescription","axis","accessibility","description","axisTitle","textStr","categories","dateTime","getAxisRangeDescription","axisOptions","rangeDescription","getCategoryAxisRangeDesc","dataMax","dataMin","numCategories","getAxisTimeLengthDesc","range","max","rangeUnit","Seconds","Minutes","Hours","Days","unit","rangeValue","toFixed","getAxisFromToDescription","dateRangeFormat","screenReaderSection","axisRangeDateFormat","extremes","key","time","dateFormat","toString","rangeFrom","rangeTo","getPointFromXY","res","getSeriesFromName","name","s","unhideChartElementFromAT","setAttribute","renderTo","body","Array","call","hasAttribute","hideSeriesFromAT","seriesEl","scrollAxisToPoint","point","xAxis","yAxis","scrollbar","to","from","getRelativePointAxisPosition","axisStart","toPixels","axisEnd","positionProp","coll","pointPos","updatePosition","trigger","DOMEvent","constructor","elements","createElement","arguments","destroyCreatedElements","addEvent","eventRemovers","remover","removeAddedEvents","CU","DOMElementProvider","EventProvider","extend","AccessibilityComponent","initBase","proxyProvider","eventProvider","domElementProvider","keyCodes","left","right","up","down","enter","space","esc","tab","pageUp","pageDown","home","fakeClickEvent","fakeEvent","destroyBase","init","getKeyboardNavigation","onChartUpdate","onChartRender","destroy","keyCodeMap","validate","terminate","response","success","prev","next","noHandler","fail","run","keyCode","which","handlerCodeSet","codeSet","KeyboardNavigationHandler","handleSVGTitleElement","setSVGContainerLabel","setGraphicContainerAttrs","setRenderToAttrs","makeCreditsAccessible","titleId","index","titleContents","chartTitle","titleElement","svgTitleElement","createElementNS","textContent","insertBefore","firstChild","svgContainerLabel","box","label","container","shouldHaveLandmark","landmarkVerbosity","containerLabel","credits","creditsStr","a11y","keyboardNavigation","tabindexContainer","focus","FocusBorderComposition","svgElementBorderUpdateTriggers","chartRenderFocusBorder","focusElement","focusBorderOptions","focusBorder","removeFocusBorder","enabled","addFocusBorder","margin","stroke","style","color","strokeWidth","lineWidth","r","borderRadius","chartSetFocusToElement","svgElement","browserFocusElement","focusin","hideBrowserFocusOutline","outline","renderFocusBorder","svgElementAddFocusBorder","attribs","bb","getBBox","pad","parentGroup","scaleX","scaleY","oneDefined","scaleBoth","abs","translateX","translateY","borderPosX","borderPosY","borderWidth","borderHeight","isLabel","nodeName","posXCorrection","posYCorrection","isRotated","rotation","correction","attr","attrX","attrY","temp","rect","zIndex","styledMode","avgElementAddUpdateFocusBorderHooks","updateParams","focusBorderUpdateHooks","setterKey","origSetter","_defaultSetter","ret","svgElementAddDestroyFocusBorderHook","focusBorderDestroyHook","origDestroy","svgElementRemoveFocusBorder","Object","SVGElementClass","svgElementProto","setFocusToElement","AST","announceRegion","addAnnounceRegion","announce","message","setElementHTML","clearAnnouncementRegionTimer","clearTimeout","setTimeout","innerHTML","emptyHTML","chartContainer","announcerContainer","createAnnouncerContainer","div","HTMLUtilities","getChartAnnotationLabels","annotations","visible","concat","labels","getLabelText","getAnnotationLabelDescription","a11yDesc","labelText","getAriaLabel","getAttribute","pointValueDescriptions","map","valDesc","valueDescription","seriesName","desc","numPoints","pointsSelector","annotationText","annotation","annotationPoint","additionalAnnotationPoints","getAnnotationListItems","getAnnotationsInfoHTML","annotationItems","join","getPointAnnotationTexts","pointLabels","A11yI18n","Announcer","AnnotationsA11y","stripEmptyHTMLTags","screenReaderSections","component","initRegionsDefinitions","onDataTableCreated","wasHidden","dataTableDiv","focusDataTable","viewDataTableButton","announcer","accessibilityOptions","before","buildContent","formatter","beforeChartFormatter","defaultBeforeChartFormatter","insertIntoDOM","afterInserted","sonifyButtonId","initSonifyButton","dataTableButtonId","initDataTableButton","after","afterChartFormatter","defaultAfterChartFormatter","nextSibling","updateExitAnchor","linkedDescriptionElement","getLinkedDescriptionElement","setLinkedDescriptionAttrs","regionKey","updateScreenReaderSection","chartOptions","linkedDescOption","linkedDescription","query","queryMatch","querySelectorAll","region","content","sectionDiv","hiddenDiv","setScreenReaderSectionAttribs","sectionId","beforeChartFormat","axesDesc","getAxesDescription","shouldHaveSonifyBtn","sonify","sonification","annotationsList","annotationsTitleStr","headingTagName","typeDescription","getTypeDescriptionText","chartSubtitle","getSubtitleText","chartLongdesc","getLongdescText","xAxisDescription","yAxisDescription","playAsSoundButton","getSonifyButtonText","viewTableButton","getCSV","getDataTableButtonText","annotationsTitle","formattedString","afterChartFormat","endOfChartMarker","getEndOfChartMarkerText","getLinkedDescription","captionOptions","caption","captionText","types","getTypeDescription","firstType","firstSeries","mapTitle","mapView","geoMap","formatContext","numSeries","buildTypeDescriptionFromSeries","typeExplaination","multi","buttonId","buttonText","subtitle","markerText","attributes","tree","tabindex","summary","tableDiv","table","getElementsByTagName","sonifyButton","defaultHandler","stopPropagation","announceMsg","removeAttribute","onclick","onPlayAsSoundClick","tableButtonId","tableId","onViewDataTableClick","viewData","shouldDescribeColl","collectionKey","defaultCondition","axes","hasNoMap","hasCartesian","hasCartesianSeries","showXAxes","angular","showYAxes","getAxisDescriptionText","names","ranges","numAxes","Chart","ChartUtilities","getExportMenuButtonElement","exportSVGElements","MenuComponent","onMenuShown","onMenuHidden","createProxyGroup","menu","exportContextMenu","setExportButtonExpandedState","addAccessibleContextMenuAttribs","stateStr","exportButtonProxy","innerElement","focusEl","clearGroup","proxyMenuButton","exportingGroup","buttonEl","exportingShouldHaveA11y","exportingOpts","exporting","exportButton","addProxyElement","click","contextButtonTitle","addGroup","exportList","exportDivElements","children","parentDiv","role","onKbdPrevious","onKbdNext","onKbdClick","proxy","svgEl","hideExportMenu","keyboardNavigationHandler","a11yOptions","highlightedExportItemIx","highlightExportItem","wrapAround","highlightLastExportItem","curHighlightedItem","exportButtonElement","openMenu","chartShowExportMenu","chartHideExportMenu","onmouseout","hideMenu","chartHighlightExportItem","listItem","curHighlighted","hasSVGFocusSupport","onmouseover","chartHighlightLastExportItem","showExportMenu","KeyboardNavigation","components","currentModuleIx","NaN","modules","ep","update","onKeydown","onFocus","eventName","onMouseUp","isClickingChart","order","keyboardOptions","updateContainerTabindex","componentName","navModules","removeExitAnchor","endMarkerId","endMarker","makeElementAnExitAnchor","exitAnchor","createExitAnchor","move","direction","curModule","newModule","exiting","focusComesFromChart","contains","tabbingInBackwards","getFirstValidModuleIx","keyboardReset","target","curMod","ev","event","curNavModule","shouldHaveTabindex","curTabindex","chartTabindex","addExitAnchorEventsToEl","comingInBackwards","mod","chartDismissPopupContent","tooltip","hide","documentOnKeydown","keycode","charts","dismissPopupContent","A","Legend","animObject","isNumber","syncTimeout","shouldDoLegendA11y","items","legend","allItems","legendA11yOptions","unsupportedColorAxis","colorAxis","some","c","dataClasses","setLegendItemHoverState","hoverActive","legendItem","setState","LegendComponent","highlightedLegendItemIx","proxyGroup","recreateProxies","updateGroupProxyElementPositions","updateLegendItemProxyVisibility","highlightLegendItem","updateProxyPositionForItem","globalAnimation","duration","curPage","currentPage","clipHeight","a11yProxyElement","hasPages","pages","proxyEl","itemPage","pageIx","h","round","visibility","removeProxies","highlightAdjacentLegendPage","curPageIx","newPageIx","refreshPosition","focusedElement","activeElement","shouldRestoreFocus","addLegendProxyGroup","proxyLegendItems","updateLegendTitle","removeGroup","legendTitle","legendLabel","updateGroupAttrs","groupRole","proxyLegendItem","itemLabel","itemName","proxyPositioningElement","visual","onKbdArrowKey","shouldHaveLegendNavigation","numItems","legendOptions","display","chartHighlightLegendItem","oldIx","itemToHighlight","scrollLegendToItem","itemIx","scroll","legendItemProp","proxyBtn","legendOnAfterColorizeItem","LegendClass","isTouchDevice","correctFloat","onAxisInit","navigatorAxis","NavigatorAxisAdditions","onAxisZoom","navigator","pinchType","zooming","rangeSelector","zoomType","isXAxis","zoomed","previousZoom","newMin","newMax","AxisClass","keepProps","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","translate","horiz","fixedRange","halfPointRange","pointRange","Color","SeriesRegistry","parse","seriesTypes","NavigatorDefaults","maskInside","handles","symbols","backgroundColor","borderColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","compare","dataGrouping","approximation","groupPixelWidth","firstAnchor","anchor","lastAnchor","units","dataLabels","lineColor","marker","threshold","overscroll","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","align","fontSize","textOutline","crosshair","startOnTick","endOnTick","minPadding","maxPadding","tickWidth","_x","_y","halfWidth","markerPosition","D","NavigatorSymbols","RendererRegistry","NavigatorConstructor","defaultOptions","setOptions","getRendererType","merge","onChartAfterAddSeries","setBaseSeries","onChartAfterSetChartSize","scrollbarHeight","scrollButtonSize","inverted","opposite","chartWidth","spacing","top","plotTop","plotLeft","navigatorOptions","chartHeight","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","scroller","redraw","animation","onChartBeforeRender","onChartBeforeShowResetZoom","onChartCallback","getExtremes","render","scrollbarOptions","onSeriesAfterUpdate","isInternal","NavigatorClass","SeriesClass","callbacks","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","animate","setExtremes","setRange","onAxisAfterRender","offsetsIndex","axisTitleMargin","axisMargin","xPosition","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","destroyObjectProperties","removeEvent","swapXY","seg","_events","chartX","chartY","scrollbarButtons","scrollbarLeft","scrollbarStrokeWidth","scrollbarTop","addEvents","buttonsOrder","bar","scrollbarGroup","track","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","hasTouch","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","g","fill","crisp","arrow","userOptions","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","chartPosition","hasDragged","method","rendered","show","scrollbarRifles","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","Axis","NavigatorComposition","clamp","erase","isArray","splat","numExt","extreme","numbers","Navigator","drawHandle","verb","drawOutline","zoomedMin","zoomedMax","halfOutline","outlineCorrection","navigatorSize","navigatorTop","lineTop","lineBtm","verticalMin","d","drawMasks","navigatorHeight","shades","shade","renderElements","mouseCursor","navigatorGroup","hasMask","handlesOptions","symbol","rotationOriginX","rotationOriginY","baseSeries","navigatorSeries","scrollbarXAxis","fake","navigatorEnabled","minRange","maxRange","navigatorWidth","plotWidth","plotHeight","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","eventsToUnbind","onMouseMove","getPartsEvents","modifyNavigatorAxisExtremes","events","navigatorItem","shadesMousedown","navigatorPosition","ext","dragOffset","reversedExtremes","getUnionExtremes","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","unionExtremes","triggerOp","unbind","removeBaseSeriesEvents","adaptToUpdatedData","updatedDataHandler","modifyBaseAxisExtremes","scrollbarEnabled","Boolean","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","keepOrdinalPadding","zoomEnabled","offsets","alignTicks","data","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","returnFalseOnNoBaseSeries","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","showInNavigator","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navSeries","base","baseOptions","mergedNavSeriesOptions","chartNavigatorSeriesOptions","baseNavigatorOptions","linkedNavSeries","userNavOptions","plotOptions","navigatorSeriesData","hasNavigatorData","initSeries","userSeriesOptions","colors","setVisible","getBaseSeriesMin","currentSeriesMin","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","hasSetExtremes","unmutable","eventArgs","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","T","updateHandleValues","verbosity","groupFormatStr","groupLabel","handleFormatStr","handleLabel","n","handle","getHandleByIx","handleIx","pointerEvents","oninput","updateNavigator","getNavigatorHandleNavigation","maxHandleProxy","minHandleProxy","delta","parseFloat","updateNavigatorThrottleTimer","beforeAnnounce","performUpdate","chartPos","getChartPosition","minNewX","maxNewX","announceFormatStr","changeAnnouncement","axisRangeDescription","numberFormat","isString","hasMorePointsThanDescriptionThreshold","chartA11yOptions","pointDescriptionEnabledThreshold","pointNumberToString","a11yPointOptions","seriesA11yPointOptions","tooltipOptions","valueDecimals","decimalPoint","thousandsSep","getSeriesAxisDescriptionText","axisCollection","defaultPointDescriptionFormatter","shouldExposeSeriesName","valText","getPointValueDescription","seriesA11yOptions","seriesValueDescFormat","valueDescriptionFormat","pointValueDescriptionFormat","showXDescription","xDesc","getPointXDescription","timeDesc","getPointA11yTimeDescription","dateXAxis","tooltipDateFormat","getXDateFormat","dateTimeLabelFormats","dateFormatter","pointCategory","category","canUseId","fallback","xDescription","getPointValue","a11yPointOpts","seriesA11yPointOpts","valuePrefix","valueSuffix","fallbackKey","fallbackDesc","isNull","pointArrayMap","getPointArrayMapValueDescription","prefix","suffix","pre","suf","keyToValStr","propDesc","separator","seriesNameText","annotationsDesc","getPointAnnotationDescription","defaultSeriesDescriptionFormatter","chartTypes","getSeriesDescriptionText","descOpt","shouldDescribeAxis","seriesNumber","xAxisInfo","yAxisInfo","summaryContext","combinationSuffix","axisDescription","formatStr","descriptionFormat","seriesDescription","authorDescription","describeSeries","is3d","describePointsInSeries","setScreenReaderProps","shouldSetScreenReaderPropsOnPoints","exposeAsGroupOnly","setKeyboardProps","shouldSetKeyboardNavPropsOnPoints","seriesNavOptions","seriesNavigation","pointNavigationEnabledThreshold","shouldDescribeNullPoints","describeNull","pointEl","shouldAddMockPoint","isSunburst","is","shouldDescribeNull","addMockPointElement","findFirstPointWithGraphic","sourcePointIndex","firstGraphic","mockPos","plotX","plotY","mockElement","makeMockElement","mock","hasMockGraphic","pointA11yDisabled","setPointScreenReaderAttribs","pointElement","seriesPointA11yOptions","descriptionFormatter","shouldDescribeSeriesElement","chartHas3d","options3d","hasMultipleSeries","describeSingleSeriesOption","describeSingleSeries","exposeAsGroupOnlyOption","describeSeriesElement","seriesElement","SeriesDescriber","chartHasAnnounceEnabled","announceNewData","NewDataAnnouncer","dirty","allSeries","lastAnnouncementTime","announceOptions","announceType","interruptUser","addEventListeners","onSeriesAdded","announceDirtyData","hasDirty","newSeries","newPoint","findPointInDataArray","candidates","candidate","queueAnnouncement","dirtySeries","annOptions","now","Date","dTime","minAnnounceInterval","getUniqueSeries","arrayA","arrayB","uniqueSeries","queuedAnnouncement","buildAnnouncementMessage","queuedAnnouncementTimer","announcementFormatter","formatterRes","multiple","seriesDesc","pointDesc","seriesOnAddPoint","newDataAnnouncer","seriesOnUpdatedData","proxyElementType","wrapperElementType","innerEl","wrapperEl","hideElementVisually","listStyle","updateTarget","getTargetPosition","fakeEventObject","updateCSSClassName","attrs","a","targetAriaLabel","getTargetAttr","addProxyEventsToElement","bBox","stringHasNoTooltip","groupDiv","noTooltipOnGroup","targetClassName","noTooltipOnTarget","evtType","isTouchEvent","clonedEvent","passive","padding","clickTarget","clickTargetElement","posElement","chartDiv","getBoundingClientRect","rectEl","bottom","ProxyElement","groups","groupOrder","beforeChartProxyPosContainer","createProxyPosContainer","afterChartProxyPosContainer","groupKey","Error","proxyContainerElement","proxyElements","groupElementType","groupElement","existingGroup","proxyContainer","updateGroupOrder","groupKeys","isDOMOrderGroupOrder","seriesIx","beforeKeys","afterKeys","posContainer","updatePosContainerPositions","updateProxyElementPositions","classNamePostfix","getCurrentGroupOrderInDOM","getGroupKeyFromElement","allGroups","getChildrenGroupOrder","childrenOrder","domOrder","groupOrderWithGroups","rendererSVGEl","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","count","timeName","date","basePeriod","set","getTime","MIN_VALUE","_offsetMin","onChartAfterGetContainer","deferredYTDClick","clickButton","updateNames","setScale","getAxisMargins","extraTopMargin","alignTo","spacingBox","placed","onChartDestroy","iEnd","splice","onChartGetMargins","rangeSelectorHeight","marginBottom","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","RangeSelectorComposition","SVGElement","discardElement","objectEach","pInt","RangeSelector","buttonOptions","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","_range","rangeMin","minSetting","rangeSetting","ytdExtremes","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","updateButtonStates","actualRange","hasNoData","hasVisibleSeries","day","ytdMin","ytdMax","selectedExists","isSelectedTooGreat","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","state","isYTDButNotSelected","isAllButAlreadyShowingAll","isSameRange","month","year","disable","select","disabled","fixedTimes","millisecond","second","minute","hour","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","updatedTime","previousTime","inputTypeFormats","setInputExtremes","showInput","inputGroup","isTextInput","border","offsetWidth","offsetHeight","hideInput","inputDate","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","chartStyle","isMin","updateExtremes","chartAxis","on","preferredInputType","ms","char","boxShadow","textAlign","fontFamily","onfocus","onblur","keyDown","onchange","onkeypress","onkeydown","onkeyup","getPosition","buttonTop","inputTop","startOfYear","ts","inputsZIndex","renderButtons","minElems","minLabel","maxElems","maxLabel","alignElements","buttonGroup","isMS","currentButtonIndex","zoomText","paddingLeft","paddingRight","callDefaultEvent","buttonEvents","isActive","hover","navButtonOptions","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton","alignButtonGroup","hasLoaded","handleCollision","alignTranslateY","alignAttr","groupHeight","buttonLeft","maxButtonWidth","buttonWidth","groupsOverlap","buttonGroupWidth","inputGroupX","alignOptions","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","isCollapsed","userButtonTheme","getAttribs","hasActiveButton","showDropdown","hideDropdown","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","rSelector","HTMLElement","RangeSelectorComponent","updateSelectorVisibility","setDropdownAttrs","setRangeButtonAttrs","setRangeInputAttrs","hideFromAT","btn","rangeTitle","onButtonNavKbdArrowKey","didHighlight","highlightRangeSelectorButton","highlightedRangeSelectorItemIx","onButtonNavKbdClick","wasDisabled","oldRangeSelectorItemState","onAfterBtnClick","announcement","onInputKbdMove","rangeSel","newIx","highlightedInputRangeIx","inputEl","onInputNavInit","buttonIxToHighlight","removeInputKeydownHandler","keydownHandler","isTab","minRemover","maxRemover","onInputNavTerminate","initDropdownNav","removeDropdownKeydownHandler","getRangeSelectorButtonNavigation","lastButtonIx","getRangeSelectorInputNavigation","chartHighlightRangeSelectorButton","curHighlightedIx","curSelectedIx","rangeSelectorAfterBtnClick","ForcedMarkersComposition","forceZeroOpacityMarkerOptions","normal","getPointMarkerOpacity","pointOptions","hasIndividualPointMarkerOptions","_hasPointMarkers","seriesOnAfterRender","markerGroup","a11yMarkersForced","hasForcedA11yMarker","seriesOnAfterSetOptions","resetA11yMarkerOptions","seriesOnRender","shouldForceMarkers","chartA11yEnabled","seriesA11yEnabled","isWithinDescriptionThreshold","handleForcePointMarkers","hadForcedMarker","isStillForcedMarker","unforceSeriesMarkerOptions","resetMarkerOptions","originalOpactiy","Point","Series","getPointIndex","isSkipSeries","seriesKbdNavOptions","isSkipPoint","skipNullPoints","isInside","getFirstValidPointInChart","getFirstValidPointInSeries","highlightLastValidPointInChart","highlightedPoint","highlightNextValidPoint","highlightFirstValidPointInChart","highlight","SeriesKeyboardNavigation","onSeriesDestroy","updateChartFocusAfterDrilling","lastDrilledDownPoint","onDrillupAll","focusedElClassName","isProxyFocused","last","getKeyboardNavigationHandler","onKbdSideways","onKbdVertical","firePointEvent","highlightAdjacentSeries","onHandlerInit","onHandlerTerminate","handler","isNext","attemptHighlightAdjacentPoint","kbdNavOptions","rememberPointFocus","navOptions","mode","highlightMethod","keyboardMoveVertical","hoverSeries","onMouseOut","directionIsNext","highlightSuccessful","highlightAdjacentPoint","currentHighlightedPointDestroyed","chartHighlightAdjacentPoint","curPoint","curPointIndex","curPoints","lastSeries","lastPoint","chartHighlightAdjacentPointVertical","minDistance","bestPoint","yDistance","distance","chartHighlightAdjacentSeries","adjacentNewPoint","getClosestPoint","xWeight","yWeight","dPoint","minIx","hasUndefinedPosition","pointHighlight","highlightVisually","tooltipElement","onMouseOver","tooltipTop","scrollTop","scrollY","scrollTo","behavior","seriesHighlightNextValidPoint","start","j","PointClass","pointProto","seriesProto","highlightAdjacentPointVertical","ForcedMarkers","hideTooltipFromATWhenShown","hideSeriesLabelsFromATWhenShown","labelBySeries","shouldDescribeSeries","focusedMapNavButtonIx","updateProxyOverlays","mapNavigation","navButtons","setMapNavButtonAttrs","labelFormatKey","resetZoomButton","createZoomProxyButton","drillUpButton","breadcrumbs","list","lastBreadcrumb","getButtonText","buttonProp","getMapZoomNavigation","onMapKbdArrow","_keyCode","onMapKbdTab","onMapKbdClick","onMapNavInit","isY","stepDirection","diff","random","startPos","offsetLeft","offsetTop","endPos","isBackwards","isMoveOutOfRange","zoomBy","zoomIn","zoomOut","initialButton","simpleButtonNavigation","proxyProp","onClick","hasButton","_handler","drillUp","isHighContrastModeActive","isEdge","userAgent","matchMedia","matches","getComputedStyle","testDiv","backgroundImage","bi","currentStyle","setHighContrastTheme","highContrastModeActive","theme","highContrastTheme","plotOpts","minColor","maxColor","stops","minorGridLineColor","tickColor","fillColor","edgeColor","connectorColor","pie","boxplot","candlestick","errorbar","itemStyle","itemHoverStyle","itemHiddenStyle","drilldown","activeAxisLabelStyle","activeDataLabelStyle","symbolStroke","defaultChartTitle","chartContainerLabel","svgContainerTitle","graphicContainerLabel","beforeRegionLabel","afterRegionLabel","heading","descriptionSinglePoint","descriptionMultiplePoints","descriptionNoPoints","playAsSoundButtonText","playAsSoundClickAnnouncement","legendLabelNoTitle","zoom","mapZoomIn","mapZoomOut","dropdownLabel","minInputLabel","maxInputLabel","clickButtonAnnouncement","viewAsDataTableButtonText","tableSummary","newDataAnnounce","newSeriesAnnounceSingle","newPointAnnounceSingle","newSeriesAnnounceMultiple","newPointAnnounceMultiple","seriesTypeDescriptions","arearange","areasplinerange","bubble","columnrange","funnel","pyramid","waterfall","emptyChart","mapTypeDescription","unknownMap","combinationChart","defaultSingle","defaultMultiple","splineSingle","splineMultiple","lineSingle","lineMultiple","columnSingle","columnMultiple","barSingle","barMultiple","pieSingle","pieMultiple","scatterSingle","scatterMultiple","boxplotSingle","boxplotMultiple","bubbleSingle","bubbleMultiple","xAxisDescriptionSingular","xAxisDescriptionPlural","yAxisDescriptionSingular","yAxisDescriptionPlural","timeRangeDays","timeRangeHours","timeRangeMinutes","timeRangeSeconds","rangeFromTo","rangeCategories","chartMenuLabel","menuButtonLabel","defaultCombination","line","lineCombination","spline","splineCombination","column","columnCombination","barCombination","pieCombination","scatter","scatterCombination","boxplotCombination","bubbleCombination","mapCombination","mapline","maplineCombination","mapbubble","mapbubbleCombination","nullPointValue","pointAnnotationsDescription","error","traverseSetOption","root","optionAsArray","opt","deprecateFromOptionsMap","rootOldAsArray","rootNewAsArray","mapToNewOptions","getChildProp","propAsArray","rootOld","rootNew","oldOptionKey","copyDeprecatedChartOptions","copyDeprecatedAxisOptions","opts","copyDeprecatedSeriesOptions","oldToNewSeriesOptions","exposeElementToA11y","pointDescriptionFormatter","skipKeyboardNavigation","oldOption","optionVal","pointDateFormat","pointDateFormatter","pointDescriptionThreshold","pointNavigationThreshold","pointValueDecimals","pointValuePrefix","pointValueSuffix","screenReaderSectionFormatter","seriesDescriptionFormatter","onTableAnchorClick","screenReaderRegionLabel","rangeSelectorMaxInput","rangeSelectorMinInput","svgContainerEnd","viewAsDataTable","ContainerComponent","InfoRegionsComponent","NavigatorComponent","ProxyProvider","SeriesComponent","ZoomComponent","whcm","defaultOptionsA11Y","defaultLangOptions","copyDeprecatedOptions","Accessibility","addEventListener","zombie","initComponents","infoRegions","chartMenu","customComponents","getComponentOrder","componentsExceptSeries","getChartTypes","kbdNavOrder","chartOnDestroy","chartOnRender","a11yDirty","updateA11yEnabled","chartOnUpdate","newOptions","chartUpdateA11yEnabled","pointOnUpdate","G","A11yChartUtilities","A11yHTMLUtilities","SeriesAccessibilityDescriber"],"mappings":"AAAA;;;;;;;;;CASC,GACA,SAAUA,CAAO,EACV,AAAkB,UAAlB,OAAOC,QAAuBA,OAAOC,OAAO,EAC5CF,EAAQ,OAAU,CAAGA,EACrBC,OAAOC,OAAO,CAAGF,GACV,AAAkB,YAAlB,OAAOG,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,mCAAoC,CAAC,aAAa,CAAE,SAAUE,CAAU,EAG3E,OAFAL,EAAQK,GACRL,EAAQK,UAAU,CAAGA,EACdL,CACX,GAEAA,EAAQ,AAAsB,aAAtB,OAAOK,WAA6BA,WAAaC,KAAAA,EAEjE,EAAE,SAAUD,CAAU,EAClB,aACA,IAAIE,EAAWF,EAAaA,EAAWE,QAAQ,CAAG,CAAC,EACnD,SAASC,EAAgBC,CAAG,CAAEC,CAAI,CAAEC,CAAI,CAAEC,CAAE,EACnCH,EAAII,cAAc,CAACH,KACpBD,CAAG,CAACC,EAAK,CAAGE,EAAGE,KAAK,CAAC,KAAMH,GAEA,YAAvB,OAAOI,aACPC,OAAOC,aAAa,CAAC,IAAIF,YACrB,yBACA,CAAEG,OAAQ,CAAER,KAAMA,EAAMT,OAAQQ,CAAG,CAACC,EAAK,AAAC,CAAE,IAI5D,CACAF,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAY1I,GAAM,CAAEC,IAAAA,CAAG,CAAEC,IAAAA,CAAG,CAAE,CAAGH,EACf,CAAEI,IAAAA,CAAG,CAAE,CAAGH,EAMVI,EAAuBF,EAAIG,WAAW,EAAI,IAAIH,EAAIG,WAAW,EAAM,OA4CzE,SAASC,EAAgBC,CAAC,EACtB,GAAI,AAA0B,YAA1B,OAAOL,EAAIM,UAAU,CACrB,OAAO,IAAIN,EAAIM,UAAU,CAACD,EAAEE,IAAI,CAAEF,GAGtC,GAAIN,EAAIS,WAAW,CAAE,CACjB,IAAMC,EAAMV,EAAIS,WAAW,CAAC,cAC5B,GAAIC,EAAIC,cAAc,CAGlB,OAFAD,EAAIC,cAAc,CAACL,EAAEE,IAAI,CAAEF,EAAEM,OAAO,CACpCN,EAAEO,UAAU,CAAEP,EAAEQ,IAAI,EAAIb,EAAKK,EAAET,MAAM,CAAES,EAAES,OAAO,CAAET,EAAEU,OAAO,CAAEV,EAAEW,OAAO,CAAEX,EAAEY,OAAO,CAAEZ,EAAEa,OAAO,CAAEb,EAAEc,MAAM,CAAEd,EAAEe,QAAQ,CAAEf,EAAEgB,OAAO,CAAEhB,EAAEiB,MAAM,CAAEjB,EAAEkB,aAAa,EACjJd,CAEf,CACA,OAAOe,EAAkBnB,EAAEE,IAAI,CACnC,CAmEA,SAASiB,EAAkBjB,CAAI,CAAEkB,CAAQ,CAAEF,CAAa,EACpD,IAAMG,EAAMD,GAAY,CACpBE,EAAG,EACHC,EAAG,CACP,EACA,GAAI,AAA0B,YAA1B,OAAO5B,EAAIM,UAAU,CACrB,OAAO,IAAIN,EAAIM,UAAU,CAACC,EAAM,CAC5BI,QAAS,CAAA,EACTC,WAAY,CAAA,EACZiB,SAAU,CAAA,EACVP,OAAQ,EACRQ,QAAS,EACTP,cAAeA,GAAiBrB,EAChCW,KAAMb,EACNJ,OAAQW,AAAS,UAATA,EAAmB,EAAI,EAC/BO,QAASY,EAAIC,CAAC,CACdZ,QAASW,EAAIE,CAAC,CACdZ,QAASU,EAAIC,CAAC,CACdV,QAASS,EAAIE,CAAC,AAClB,GAGJ,GAAI7B,EAAIS,WAAW,CAAE,CACjB,IAAMC,EAAMV,EAAIS,WAAW,CAAC,cAC5B,GAAIC,EAAIC,cAAc,CAWlB,OAVAD,EAAIC,cAAc,CAACH,EAAM,CAAA,EACzB,CAAA,EACAP,EACAO,AAAS,UAATA,EAAmB,EAAI,EAEvBmB,EAAIC,CAAC,CAAED,EAAIE,CAAC,CAAEF,EAAIC,CAAC,CAAED,EAAIE,CAAC,CAE1B,CAAA,EAAO,CAAA,EAAO,CAAA,EAAO,CAAA,EAAO,EAC5B,MAEOnB,CAEf,CACA,MAAO,CAAEF,KAAMA,CAAK,CACxB,CAsIA,MAjBsB,CAClBwB,SA7QJ,SAAkBC,CAAE,CAAEC,CAAS,EACvBD,EAAGE,SAAS,CACZF,EAAGE,SAAS,CAACC,GAAG,CAACF,GAEsB,EAAlCD,EAAGC,SAAS,CAACG,OAAO,CAACH,IAI1BD,CAAAA,EAAGC,SAAS,EAAI,IAAMA,CAAQ,CAEtC,EAoQI7B,gBAAAA,EACAiC,gBA7NJ,SAAyBhC,CAAC,EACtB,IAAMiC,EAAwB,AAACC,IAC3B,IAAMC,EAAa,EAAE,CACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAEG,MAAM,CAAE,EAAED,EAAG,CAC/B,IAAME,EAAOJ,EAAEI,IAAI,CAACF,GAChBE,GACAH,EAAWI,IAAI,CAACD,EAExB,CACA,OAAOH,CACX,EACA,GAAI,AAA0B,YAA1B,OAAOxC,EAAI6C,UAAU,CAAiB,CACtC,IAAMC,EAAW,IAAI9C,EAAI6C,UAAU,CAACxC,EAAEE,IAAI,CAAE,CACxCwC,QAAST,EAAsBjC,EAAE0C,OAAO,EACxCC,cAAeV,EAAsBjC,EAAE2C,aAAa,EACpDC,eAAgBX,EAAsBjC,EAAE4C,cAAc,EACtD/B,QAASb,EAAEa,OAAO,CAClBE,SAAUf,EAAEe,QAAQ,CACpBD,OAAQd,EAAEc,MAAM,CAChBE,QAAShB,EAAEgB,OAAO,CAClBV,QAASN,EAAEM,OAAO,CAClBC,WAAYP,EAAEO,UAAU,CACxBiB,SAAUxB,EAAEwB,QAAQ,CACpBjC,OAAQS,EAAET,MAAM,CAChBiB,KAAMR,EAAEQ,IAAI,AAChB,GAIA,OAHIR,EAAE6C,gBAAgB,EAClBJ,EAASK,cAAc,GAEpBL,CACX,CACA,IAAMM,EAAUhD,EAAgBC,GAIhC,OAHA+C,EAAQL,OAAO,CAAG1C,EAAE0C,OAAO,CAC3BK,EAAQH,cAAc,CAAG5C,EAAE4C,cAAc,CACzCG,EAAQJ,aAAa,CAAG3C,EAAE2C,aAAa,CAChCI,CACX,EA0LIC,oBAtLJ,SAA6BC,CAAG,EAC5B,OAAOA,EACFC,OAAO,CAAC,KAAM,SACdA,OAAO,CAAC,KAAM,QACdA,OAAO,CAAC,KAAM,QACdA,OAAO,CAAC,KAAM,UACdA,OAAO,CAAC,KAAM,UACdA,OAAO,CAAC,MAAO,SACxB,EA+KIC,WA1KJ,SAAoBC,CAAE,EAClB,OAAO1D,EAAI2D,cAAc,CAACD,EAC9B,EAyKIjC,kBAAAA,EACAmC,4BA5GJ,SAAqCC,CAAO,EACxC,IAAMC,EAA2B,AAACC,IAC9B,IAAMC,EAAeC,SAASF,EAAQG,KAAK,CAAC,GAAI,IAChD,MAAO,IADyDC,KAAKC,GAAG,CAAC,EAAGJ,EAAe,EAE/F,EACMK,EAAY,AAACN,GAAY,SAASO,IAAI,CAACP,GACvCQ,EAA6B,AAACtC,IAChC,IAAIuC,EAAUvC,EACd,KAAOuC,EAAUA,EAAQC,eAAe,EAAE,CACtC,IAAMV,EAAUS,EAAQT,OAAO,EAAI,GACnC,GAAIM,EAAUN,GACV,OAAOA,CAEf,CACA,MAAO,EACX,EACMW,EAAsB,AAACzC,IACzB,IAAM0C,EAAsBJ,EAA2BtC,GACvD,GAAI0C,EACA,OAAOb,EAAyBa,GAGpC,IAAMC,EAAS3C,EAAG4C,aAAa,CAC/B,GAAI,CAACD,EACD,MAAO,IAEX,IAAME,EAAgBF,EAAOb,OAAO,QACpC,AAAIM,EAAUS,GACHhB,EAAyBgB,GAE7BJ,EAAoBE,EAC/B,EACA,OAAOF,EAAoBb,EAC/B,EA4EIkB,iBA1DJ,SAA0BlB,CAAO,EAC7B,KAAOA,EAAQmB,SAAS,EACpBnB,EAAQoB,WAAW,CAACpB,EAAQmB,SAAS,CAE7C,EAuDIE,YApQJ,SAAqBjD,CAAE,CAAEC,CAAS,EAC1BD,EAAGE,SAAS,CACZF,EAAGE,SAAS,CAACgD,MAAM,CAACjD,GAKpBD,EAAGC,SAAS,CAAGD,EAAGC,SAAS,CAACsB,OAAO,CAAC,AAAI4B,OAAOlD,EAAW,KAAM,GAExE,EA4PImD,cAvEJ,SAAuBxB,CAAO,EACtBA,GAAWA,EAAQyB,UAAU,EAC7BzB,EAAQyB,UAAU,CAACL,WAAW,CAACpB,EAEvC,EAoEI0B,kBApDJ,SAA2BC,CAAI,EAC3B,IAAI9C,EAAI8C,EAAKC,UAAU,CAAC9C,MAAM,CAC9B,KAAOD,KACH8C,EAAKE,WAAW,CAACF,EAAKC,UAAU,CAAC/C,EAAE,CAE3C,EAgDIvC,qBAAAA,EACAwF,wBA3CJ,SAAiCpC,CAAG,CAAEqC,EAAc,CAAA,CAAK,EACrD,MAAO,AAAC,AAAe,UAAf,OAAOrC,EACVqC,EACGrC,EAAIC,OAAO,CAAC,kBAAmB,IAC/BD,EAAIC,OAAO,CAAC,wBAAyB,IAAOD,CACxD,EAuCIsC,oBAjCJ,SAA6BhC,CAAO,EAChC3D,EAAI2D,EAAS,CACTnC,SAAU,WACVoE,MAAO,MACPC,OAAQ,MACRC,SAAU,SACVC,WAAY,SACZC,KAAM,2BACNC,UAAW,OACX,aAAc,qDACdC,OAAQ,mBACRC,QAAS,GACb,EACJ,CAqBA,CAGJ,GACAlH,EAAgBD,EAAU,4BAA6B,CAACA,CAAQ,CAAC,qBAAqB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUoH,CAAC,CAAExG,CAAC,CAAEC,CAAC,MAqB9JwG,EARJ,GAAM,CAAEC,OAAAA,CAAM,CAAE,CAAGF,EACb,CAAExE,SAAAA,CAAQ,CAAE,CAAGhC,EACf,CAAE2G,kBAAAA,CAAiB,CAAEC,KAAAA,CAAI,CAAEC,WAAAA,CAAU,CAAE,CAAG5G,EAkRhD,OA3QA,AAAC,SAAUwG,CAAmB,EAgL1B,SAASK,EAAWC,CAAY,CAAEC,CAAO,CAAEC,CAAK,EAC5C,IAAMC,EAA2B,CAACC,EAAWC,KACzC,IAAM3D,EAAM0D,EAAU/C,KAAK,CAACgD,GAAU,GAAIC,EAAe5D,EAAIlB,OAAO,CAAC,KAAM+E,EAAa7D,EAAIlB,OAAO,CAAC,KACpG,GAAI8E,EAAe,IAAMC,EAAaD,EAClC,MAAO,CACHE,UAAW9D,EAAI+D,SAAS,CAACH,EAAe,EAAGC,GAC3CG,MAAOL,EAASC,EAAe,EAC/BK,IAAKN,EAASE,CAClB,CAER,EAAGK,EAAS,EAAE,CACVC,EAAYC,EAAUC,EAAS,EAEnC,GACIF,EAAaV,EAAyBH,EAAce,GAGhDD,AAFJA,CAAAA,EAAWd,EAAaS,SAAS,CAACM,EAAQF,GAAcA,EAAWH,KAAK,CAAG,EAAC,EAE/D5E,MAAM,EACf8E,EAAO5E,IAAI,CAAC,CACRgF,MAAOF,EACPnH,KAAM,UACV,GAGAkH,GACAD,EAAO5E,IAAI,CAAC,CACRgF,MAAOH,EAAWL,SAAS,CAC3B7G,KAAM,WACV,GAEJoH,EAASF,EAAaA,EAAWF,GAAG,CAAG,EAAII,EAAS,QAC/CF,EAAY,CAWrB,OAPAD,EAAOK,OAAO,CAAC,AAACC,IACO,cAAfA,EAAMvH,IAAI,EACVuH,CAAAA,EAAMF,KAAK,CAAGG,AApL1B,SAAiCX,CAAS,CAAEY,CAAG,MAEvCC,EAAKC,EADT,IAAMC,EAAYf,EAAUhF,OAAO,CAAC,UAAWgG,EAAchB,EAAUhF,OAAO,CAAC,YAAaiG,EAAajB,EAAUhF,OAAO,CAAC,KAAMkG,EAAWlB,EAAUhF,OAAO,CAAC,KAG9J,GAAI+F,EAAY,GAAI,CAChB,IAAMI,EAAUnB,EAAUnD,KAAK,CAACkE,GAAW/F,OAAO,CAAC,KAAO+F,EAAWK,EAAUpB,EAAUC,SAAS,CAAC,EAAGc,GAAYM,EAAWrB,EAAUC,SAAS,CAACkB,EAAU,GAAIG,EAAgBtB,EAAUC,SAAS,CAACc,EAAY,EAAGI,GAAUI,EAAgBD,EAAcE,KAAK,CAAC,KAC5PC,EAASC,OAAOH,CAAa,CAAC,EAAE,EAAGI,EAGvC,GAFAb,EAAS,GACTD,EAAMzB,EAAkBmC,CAAa,CAAC,EAAE,CAAEX,GACjC,CAELe,EAAMF,AADNA,CAAAA,EAASG,MAAMH,GAAUZ,EAAIvF,MAAM,CAAGmG,CAAK,EAC5B,EACXZ,EAAIvF,MAAM,CAAGmG,EACb3E,KAAKC,GAAG,CAAC0E,EAAQZ,EAAIvF,MAAM,EAE/B,IAAK,IAAID,EAAI,EAAGA,EAAIsG,EAAK,EAAEtG,EACvByF,GAAUM,EAAUP,CAAG,CAACxF,EAAE,CAAGgG,CAErC,CACA,OAAOP,EAAOxF,MAAM,CAAGwF,EAAS,EACpC,CAEA,GAAIE,EAAc,GAAI,KA0MN9E,EAzMZ,IAAM2F,EAAa7B,EAAUnD,KAAK,CAACmE,GAAahG,OAAO,CAAC,KAAOgG,EAAcc,EAAkB9B,EAAUC,SAAS,CAACe,EAAc,EAAGa,GAAYE,EAAkBD,EAAgBN,KAAK,CAAC,KAAMQ,EAAMN,OAAOtC,EAAkB2C,CAAe,CAAC,EAAE,CAAEnB,IACjP,OAAQoB,GACJ,KAAK,EACDlB,EAASzB,EAAK0C,CAAe,CAAC,EAAE,CAAEA,CAAe,CAAC,EAAE,EACpD,KACJ,MAAK,EACDjB,EAASzB,EAAK0C,CAAe,CAAC,EAAE,CAAEA,CAAe,CAAC,EAAE,EACpD,KACJ,MAAK,EACDjB,EAASzB,EAAK0C,CAAe,CAAC,EAAE,CAAEA,CAAe,CAAC,EAAE,EACpD,KACJ,SACIjB,EAASiB,CAAe,CAAC,EAAE,AACnC,CACA,OAAOjB,EA4LJ5E,CADSA,EA3Le4E,GA4LpBmB,IAAI,EAAI/F,EAAI+F,IAAI,IAAM/F,EAAIC,OAAO,CAAC,aAAc,IA5LlB,EACzC,CAEA,GAAI8E,EAAa,GAAI,KAEbiB,EADJ,IAAMC,EAAYnC,EAAUC,SAAS,CAAC,EAAGgB,GAAamB,EAAKV,OAAO1B,EAAUC,SAAS,CAACgB,EAAa,EAAGC,IAmBtG,OAjBAL,EAAMzB,EAAkB+C,EAAWvB,GAC/B,CAACgB,MAAMQ,IAAOvB,IACVuB,EAAK,EAGc,KAAA,IAFnBF,CAAAA,EAAMrB,CAAG,CAACA,EAAIvF,MAAM,CAAG8G,EAAG,AAAD,GAGrBF,CAAAA,EAAMrB,CAAG,CAAC,EAAE,AAAD,EAMI,KAAA,IAFnBqB,CAAAA,EAAMrB,CAAG,CAACuB,EAAG,AAAD,GAGRF,CAAAA,EAAMrB,CAAG,CAACA,EAAIvF,MAAM,CAAG,EAAE,AAAD,GAI7B,AAAe,KAAA,IAAR4G,EAAsBA,EAAM,EAC9C,CAEA,MAAO,IAAMlC,EAAY,GAC7B,EAoHkDU,EAAMF,KAAK,CAAEf,EAAO,CAElE,GAGON,EAAOiB,EAAOiC,MAAM,CAAC,CAACC,EAAKC,IAAQD,EAAMC,EAAI/B,KAAK,CAAE,IAAKf,EAASC,EAC7E,CAmBA,SAAS8C,EAAWC,CAAO,CAAEhD,CAAO,EAChC,IAAMiD,EAAOD,EAAQjB,KAAK,CAAC,KACvBhC,EAAe,IAAI,CAACmD,OAAO,CAACC,IAAI,CAAEvH,EAAI,EAC1C,KAAOA,EAAIqH,EAAKpH,MAAM,CAAE,EAAED,EACtBmE,EAAeA,GAAgBA,CAAY,CAACkD,CAAI,CAACrH,EAAE,CAAC,CAExD,MAAO,AAAwB,UAAxB,OAAOmE,EACVD,EAAWC,EAAcC,EAAS,IAAI,EAAI,EAClD,CAlOAP,EAAoB2D,OAAO,CAN3B,SAASA,EAAQC,CAAU,EACvB,GAAIxD,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,AACvCD,CAAAA,EAAWP,UAAU,CAAGA,CAC5B,CACJ,EAyMAtD,EAAoBK,UAAU,CAAGA,CAwCrC,EAAGL,GAAwBA,CAAAA,EAAsB,CAAC,CAAA,GAO3CA,CACX,GACApH,EAAgBD,EAAU,wCAAyC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEwK,CAAE,CAAEvK,CAAC,EAYjM,GAAM,CAAEC,IAAAA,CAAG,CAAE,CAAGF,EACV,CAAE6F,wBAAyB4E,CAAa,CAAE,CAAGD,EAC7C,CAAEE,QAAAA,CAAO,CAAEC,KAAAA,CAAI,CAAEC,UAAAA,CAAS,CAAE,CAAG3K,EAqJrC,SAAS4K,EAA2BC,CAAM,EACtC,GAAIA,EAAOC,MAAM,EAAID,EAAOC,MAAM,CAAClI,MAAM,CAAE,CACvC,IAAMmI,EAAwBL,EAAKG,EAAOC,MAAM,CAAE,AAACE,GAAM,CAAC,CAACA,EAAEC,OAAO,EACpE,OAAQF,GACJA,EAAsBE,OAAO,EAC7BF,EAAsBE,OAAO,CAACnH,OAAO,AAC7C,CACJ,CASA,SAASoH,EAAqBL,CAAM,EAChC,IAAMM,EAAeP,EAA2BC,GAChD,OAAQM,GACJA,EAAa5F,UAAU,EAAIsF,EAAOO,KAAK,EACvCP,EAAOO,KAAK,CAACtH,OAAO,EAAI+G,EAAOQ,KAAK,EACpCR,EAAOQ,KAAK,CAACvH,OAAO,AAC5B,CA8GA,MAduB,CACnBwH,qCAhQJ,SAASA,EAAqCpJ,CAAE,CAAEqJ,CAAW,EACzD,IAAM9K,EAAO8K,EAAY9K,IAAI,CACvB+K,EAAWtJ,EAAGsJ,QAAQ,AACxB,AAAEvL,CAAAA,EAAIS,WAAW,EAChBwB,CAAAA,EAAGrC,aAAa,EAAIqC,EAAGyI,SAAS,AAAD,EAC5BzI,EAAGrC,aAAa,CAChBqC,EAAGrC,aAAa,CAAC0L,GAGjBrJ,EAAGyI,SAAS,CAAClK,EAAM8K,GAGlBC,GAAYA,CAAQ,CAAC/K,EAAK,CAC/BkK,EAAUzI,EAAIzB,EAAM8K,GAEfrJ,EAAG4B,OAAO,EACfwH,EAAqCpJ,EAAG4B,OAAO,CAAEyH,EAEzD,EA+OIE,cA3OJ,SAAuBzE,CAAK,EACxB,OAAOwD,EAAcxD,EAAMiD,OAAO,CAACyB,KAAK,CAACC,IAAI,EACzC3E,EAAM8C,UAAU,CAAC,kCAAmC,CAAE9C,MAAOA,CAAM,GAAIA,EAAM4E,QAAQ,CAACC,SAAS,CACvG,EAyOIC,mBApOJ,SAA4BC,CAAI,EAC5B,OAAOA,GAASA,CAAAA,EAAK9B,OAAO,CAAC+B,aAAa,EAAEC,aACxCF,EAAKG,SAAS,EAAEC,SAChBJ,EAAK9B,OAAO,CAACtG,EAAE,EACfoI,EAAKK,UAAU,EAAI,cACnBL,EAAKM,QAAQ,EAAI,QACjB,QAAO,CACf,EA8NIC,wBArNJ,SAAiCP,CAAI,EACjC,IAAMQ,EAAcR,EAAK9B,OAAO,EAAI,CAAC,SAErC,AAAIsC,EAAYP,aAAa,EACzB,AAAsD,KAAA,IAA/CO,EAAYP,aAAa,CAACQ,gBAAgB,CAC1CD,EAAYP,aAAa,CAACQ,gBAAgB,CAGjDT,EAAKK,UAAU,CACRK,AAcf,SAAkCV,CAAI,EAClC,IAAM/E,EAAQ+E,EAAK/E,KAAK,QACxB,AAAI+E,EAAKW,OAAO,EAAIX,EAAKY,OAAO,CACrB3F,EAAM8C,UAAU,CAAC,qCAAsC,CAC1D9C,MAAOA,EACP+E,KAAMA,EACNa,cAAeb,EAAKW,OAAO,CAAGX,EAAKY,OAAO,CAAG,CACjD,GAEG,EACX,EAxBwCZ,GAGhCA,EAAKM,QAAQ,EAAKN,CAAAA,AAAa,IAAbA,EAAK1H,GAAG,EAAU0H,AAAiB,IAAjBA,EAAKY,OAAO,AAAK,EAC9CE,AAyBf,SAA+Bd,CAAI,EAC/B,IAAM/E,EAAQ+E,EAAK/E,KAAK,CAAE8F,EAAQ,CAAC,EAAGzI,EAAM0H,EAAKY,OAAO,EAAIZ,EAAK1H,GAAG,EAAI,EAAG0I,EAAMhB,EAAKW,OAAO,EAAIX,EAAKgB,GAAG,EAAI,EACzGC,EAAY,SAChBF,CAAAA,EAAMG,OAAO,CAAG,AAACF,CAAAA,EAAM1I,CAAE,EAAK,IAC9ByI,EAAMI,OAAO,CAAGJ,EAAMG,OAAO,CAAG,GAChCH,EAAMK,KAAK,CAAGL,EAAMI,OAAO,CAAG,GAC9BJ,EAAMM,IAAI,CAAGN,EAAMK,KAAK,CAAG,GAC3B,CAAC,UAAW,QAAS,OAAO,CAACpF,OAAO,CAAC,SAAUsF,CAAI,EAC3CP,CAAK,CAACO,EAAK,CAAG,GACdL,CAAAA,EAAYK,CAAG,CAEvB,GACA,IAAMC,EAAaR,CAAK,CAACE,EAAU,CAACO,OAAO,CAACP,AAAc,YAAdA,GACxCA,AAAc,YAAdA,EAA0B,EAAI,GAGlC,OAAOhG,EAAM8C,UAAU,CAAC,+BAAiCkD,EAAW,CAChEhG,MAAOA,EACP+E,KAAMA,EACNe,MAAOQ,EAAW7J,OAAO,CAAC,KAAM,GACpC,EACJ,EA9CqCsI,GAI1ByB,AA+CX,SAAkCzB,CAAI,EAClC,IAAM/E,EAAQ+E,EAAK/E,KAAK,CAAEiD,EAAUjD,EAAMiD,OAAO,CAAEwD,EAAmBxD,GAClEA,EAAQ+B,aAAa,EACrB/B,EAAQ+B,aAAa,CAAC0B,mBAAmB,CAACC,mBAAmB,EAC7D,GAAKC,EAAW,CAChBvJ,IAAK0H,EAAKY,OAAO,EAAIZ,EAAK1H,GAAG,EAAI,EACjC0I,IAAKhB,EAAKW,OAAO,EAAIX,EAAKgB,GAAG,EAAI,CACrC,EAAGtG,EAAS,SAAUoH,CAAG,EACrB,OAAO9B,EAAKM,QAAQ,CAChBrF,EAAM8G,IAAI,CAACC,UAAU,CAACN,EAAiBG,CAAQ,CAACC,EAAI,EACpDD,CAAQ,CAACC,EAAI,CAACG,QAAQ,EAC9B,EACA,OAAOhH,EAAM8C,UAAU,CAAC,iCAAkC,CACtD9C,MAAOA,EACP+E,KAAMA,EACNkC,UAAWxH,EAAO,OAClByH,QAASzH,EAAO,MACpB,EACJ,EAjEoCsF,EACpC,EAoMIoC,eApDJ,SAAwBtD,CAAM,CAAEhJ,CAAC,CAAEC,CAAC,EAChC,IAAIa,EAAIkI,EAAOjI,MAAM,CAAEwL,EACvB,KAAOzL,KAIH,GAHAyL,EAAM1D,EAAKG,CAAM,CAAClI,EAAE,CAACmI,MAAM,EAAI,EAAE,CAAE,SAAUE,CAAC,EAC1C,OAAOA,EAAEnJ,CAAC,GAAKA,GAAKmJ,EAAElJ,CAAC,GAAKA,CAChC,GAEI,OAAOsM,CAGnB,EA2CIxD,2BAAAA,EACAyD,kBAlEJ,SAA2BrH,CAAK,CAAEsH,CAAI,SAClC,AAAKA,EAGE,AAACtH,CAAAA,EAAM6D,MAAM,EAAI,EAAE,AAAD,EAAGxE,MAAM,CAAC,SAAUkI,CAAC,EAC1C,OAAOA,EAAED,IAAI,GAAKA,CACtB,GAJWtH,EAAM6D,MAAM,AAK3B,EA4DIK,qBAAAA,EACAsD,yBAnGJ,SAASA,EAAyBxH,CAAK,CAAElD,CAAO,EAC5CA,EAAQ2K,YAAY,CAAC,cAAe,CAAA,GAChC3K,IAAYkD,EAAM0H,QAAQ,EACzB5K,EAAQyB,UAAU,EACnBzB,EAAQyB,UAAU,GAAKtF,EAAI0O,IAAI,GAKnCC,MAAMtE,SAAS,CAACvC,OAAO,CAAC8G,IAAI,CAAC/K,EAAQyB,UAAU,CAACG,UAAU,CAAE,SAAUD,CAAI,EACjEA,EAAKqJ,YAAY,CAAC,gBACnBrJ,EAAKgJ,YAAY,CAAC,cAAe,CAAA,EAEzC,GAEAD,EAAyBxH,EAAOlD,EAAQyB,UAAU,EACtD,EAoFIwJ,iBA/EJ,SAA0BlE,CAAM,EAC5B,IAAMmE,EAAW9D,EAAqBL,GAClCmE,GACAA,EAASP,YAAY,CAAC,cAAe,CAAA,EAE7C,EA2EIQ,kBA9BJ,SAA2BC,CAAK,EAC5B,IAAMC,EAAQD,EAAMrE,MAAM,CAACsE,KAAK,CAAEC,EAAQF,EAAMrE,MAAM,CAACuE,KAAK,CAAErD,EAAQoD,GAASA,EAAME,SAAS,CAAGF,EAAQC,EAAQC,EAAatD,GAAQA,EAAKsD,SAAS,CACpJ,GAAIA,GAAa5E,EAAQ4E,EAAUC,EAAE,GAAK7E,EAAQ4E,EAAUE,IAAI,EAAG,CAC/D,IAAMzC,EAAQuC,EAAUC,EAAE,CAAGD,EAAUE,IAAI,CACrC3N,EAAM4N,AAjBpB,SAAsCzD,CAAI,CAAEmD,CAAK,EAC7C,GAAI,CAACzE,EAAQsB,EAAKY,OAAO,GAAK,CAAClC,EAAQsB,EAAKW,OAAO,EAC/C,OAAO,EAEX,IAAM+C,EAAY1D,EAAK2D,QAAQ,CAAC3D,EAAKY,OAAO,EAAGgD,EAAU5D,EAAK2D,QAAQ,CAAC3D,EAAKW,OAAO,EAEnFkD,EAAe7D,AAAc,UAAdA,EAAK8D,IAAI,CAAe,IAAM,IAAKC,EAAW/D,EAAK2D,QAAQ,CAACR,CAAK,CAACU,EAAa,EAAI,GAClG,MAAO,AAACE,CAAAA,EAAWL,CAAQ,EAAME,CAAAA,EAAUF,CAAQ,CACvD,EASiD1D,EAAMmD,GAC/CG,EAAUU,cAAc,CAACnO,EAAMkL,EAAQ,EAAGlL,EAAMkL,EAAQ,GACxDnC,EAAU0E,EAAW,UAAW,CAC5BE,KAAMF,EAAUE,IAAI,CACpBD,GAAID,EAAUC,EAAE,CAChBU,QAAS,YACTC,SAAU,IACd,EACJ,CACJ,CAkBA,CAGJ,GACA7Q,EAAgBD,EAAU,4CAA6C,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,uCAAuC,CAAC,CAAE,SAAUY,CAAC,CAAEwK,CAAE,EAanK,GAAM,CAAEtK,IAAAA,CAAG,CAAE,CAAGF,EACV,CAAEuF,cAAAA,CAAa,CAAE,CAAGiF,EA6C1B,OApCA,MAMI2F,aAAc,CACV,IAAI,CAACC,QAAQ,CAAG,EAAE,AACtB,CAMAC,eAAgB,CACZ,IAAMlO,EAAKjC,EAAImQ,aAAa,CAAC1Q,KAAK,CAACO,EAAKoQ,WAExC,OADA,IAAI,CAACF,QAAQ,CAACrN,IAAI,CAACZ,GACZA,CACX,CAKAoO,wBAAyB,CACrB,IAAI,CAACH,QAAQ,CAACpI,OAAO,CAAC,SAAUjE,CAAO,EACnCwB,EAAcxB,EAClB,GACA,IAAI,CAACqM,QAAQ,CAAG,EAAE,AACtB,CACJ,CAQJ,GACA/Q,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAY1I,GAAM,CAAEuQ,SAAAA,CAAQ,CAAE,CAAGvQ,EA2CrB,OAlCA,MAMIkQ,aAAc,CACV,IAAI,CAACM,aAAa,CAAG,EAAE,AAC3B,CAMAD,UAAW,CACP,IAAME,EAAUF,EAAS7Q,KAAK,CAACK,EAAGsQ,WAElC,OADA,IAAI,CAACG,aAAa,CAAC1N,IAAI,CAAC2N,GACjBA,CACX,CAKAC,mBAAoB,CAChB,IAAI,CAACF,aAAa,CAACzI,OAAO,CAAC,AAAC0I,GAAYA,KACxC,IAAI,CAACD,aAAa,CAAG,EAAE,AAC3B,CACJ,CAQJ,GACApR,EAAgBD,EAAU,0CAA2C,CAACA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,4CAA4C,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUwR,CAAE,CAAEC,CAAkB,CAAEC,CAAa,CAAEtG,CAAE,CAAEvK,CAAC,EAYtW,GAAM,CAAEsL,qCAAAA,CAAoC,CAAE,CAAGqF,EAC3C,CAAEjP,kBAAAA,CAAiB,CAAE,CAAG6I,EACxB,CAAEuG,OAAAA,CAAM,CAAE,CAAG9Q,CAsBnB,OAAM+Q,EAYFC,SAAShK,CAAK,CAAEiK,CAAa,CAAE,CAC3B,IAAI,CAACjK,KAAK,CAAGA,EACb,IAAI,CAACkK,aAAa,CAAG,IAAIL,EACzB,IAAI,CAACM,kBAAkB,CAAG,IAAIP,EAC9B,IAAI,CAACK,aAAa,CAAGA,EAErB,IAAI,CAACG,QAAQ,CAAG,CACZC,KAAM,GACNC,MAAO,GACPC,GAAI,GACJC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,IAAK,GACLC,IAAK,EACLC,OAAQ,GACRC,SAAU,GACVrK,IAAK,GACLsK,KAAM,EACV,CACJ,CAMAxB,SAASrO,CAAE,CAAEzB,CAAI,CAAEjB,CAAE,CAAEyK,CAAO,CAAE,CAC5B,OAAO,IAAI,CAACiH,aAAa,CAACX,QAAQ,CAACrO,EAAIzB,EAAMjB,EAAIyK,EACrD,CAMAmG,cAAcpM,CAAO,CAAEiG,CAAO,CAAE,CAC5B,OAAO,IAAI,CAACkH,kBAAkB,CAACf,aAAa,CAACpM,EAASiG,EAC1D,CAKA+H,eAAe9P,CAAE,CAAE,CACf,IAAM+P,EAAYvQ,EAAkB,SACpC4J,EAAqCpJ,EAAI+P,EAC7C,CAKAC,aAAc,CACV,IAAI,CAACf,kBAAkB,CAACb,sBAAsB,GAC9C,IAAI,CAACY,aAAa,CAACR,iBAAiB,EACxC,CACJ,CAiCA,OAhCAI,EAAOC,EAAuBzG,SAAS,CAEvC,CAII6H,OAAS,EAKTC,sBAAuB,WAAc,EAKrCC,gBAAkB,EAIlBC,gBAAkB,EAIlBC,UAAY,CAChB,GAOOxB,CACX,GACA3R,EAAgBD,EAAU,6CAA8C,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUa,CAAC,EAYhH,GAAM,CAAE0K,KAAAA,CAAI,CAAE,CAAG1K,EAiHjB,OAvFA,MAMIkQ,YAAYlJ,CAAK,CAAEiD,CAAO,CAAE,CACxB,IAAI,CAACjD,KAAK,CAAGA,EACb,IAAI,CAACwL,UAAU,CAAGvI,EAAQuI,UAAU,EAAI,EAAE,CAC1C,IAAI,CAACC,QAAQ,CAAGxI,EAAQwI,QAAQ,CAChC,IAAI,CAACN,IAAI,CAAGlI,EAAQkI,IAAI,CACxB,IAAI,CAACO,SAAS,CAAGzI,EAAQyI,SAAS,CAElC,IAAI,CAACC,QAAQ,CAAG,CACZC,QAAS,EACTC,KAAM,EACNC,KAAM,EACNC,UAAW,EACXC,KAAM,CACV,CACJ,CAcAC,IAAI1S,CAAC,CAAE,CACH,IAAM2S,EAAU3S,EAAE4S,KAAK,EAAI5S,EAAE2S,OAAO,CAChCP,EAAW,IAAI,CAACA,QAAQ,CAACI,SAAS,CAChCK,EAAiB1I,EAAK,IAAI,CAAC8H,UAAU,CAAE,SAAUa,CAAO,EAC1D,OAAOA,CAAO,CAAC,EAAE,CAAC/Q,OAAO,CAAC4Q,GAAW,EACzC,GAQA,OAPIE,EACAT,EAAWS,CAAc,CAAC,EAAE,CAACvE,IAAI,CAAC,IAAI,CAAEqE,EAAS3S,GAEhC,IAAZ2S,GAELP,CAAAA,EAAW,IAAI,CAACA,QAAQ,CAACpS,EAAEe,QAAQ,CAAG,OAAS,OAAO,AAAD,EAElDqR,CACX,CACJ,CAuCJ,GACAvT,EAAgBD,EAAU,iDAAkD,CAACA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,6CAA6C,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,uCAAuC,CAAC,CAAE,SAAU4R,CAAsB,CAAEuC,CAAyB,CAAE3C,CAAE,CAAE5Q,CAAC,CAAEwK,CAAE,EAY/X,GAAM,CAAEiE,yBAAAA,CAAwB,CAAE/C,cAAAA,CAAa,CAAE,CAAGkF,EAC9C,CAAE1Q,IAAAA,CAAG,CAAE,CAAGF,EACV,CAAE6F,wBAAyB4E,CAAa,CAAE,CAAGD,EA2HnD,OAnHA,cAAiCwG,EAU7BsB,eAAgB,CACZ,IAAI,CAACkB,qBAAqB,GAC1B,IAAI,CAACC,oBAAoB,GACzB,IAAI,CAACC,wBAAwB,GAC7B,IAAI,CAACC,gBAAgB,GACrB,IAAI,CAACC,qBAAqB,EAC9B,CAIAJ,uBAAwB,CACpB,IAAMvM,EAAQ,IAAI,CAACA,KAAK,CAAE4M,EAAU,oBAAsB5M,EAAM6M,KAAK,CAAEC,EAAgBtJ,EAAcxD,EAAM8C,UAAU,CAAC,kCAAmC,CACrJiK,WAAYtI,EAAczE,EAC9B,IACA,GAAI8M,EAAclR,MAAM,CAAE,CACtB,IAAMoR,EAAe,IAAI,CAACC,eAAe,CACrC,IAAI,CAACA,eAAe,EAAIhU,EAAIiU,eAAe,CAAC,6BAA8B,QAC9EF,CAAAA,EAAaG,WAAW,CAAGL,EAC3BE,EAAarQ,EAAE,CAAGiQ,EAClB5M,EAAM0H,QAAQ,CAAC0F,YAAY,CAACJ,EAAchN,EAAM0H,QAAQ,CAAC2F,UAAU,CACvE,CACJ,CAIAb,sBAAuB,CACnB,IAAMxM,EAAQ,IAAI,CAACA,KAAK,CAAEsN,EAAoBtN,EAAM8C,UAAU,CAAC,kCAAmC,CAC9FiK,WAAYtI,EAAczE,EAC9B,EACIA,CAAAA,EAAM4E,QAAQ,CAAC2I,GAAG,EAAID,EAAkB1R,MAAM,EAC9CoE,EAAM4E,QAAQ,CAAC2I,GAAG,CAAC9F,YAAY,CAAC,aAAc6F,EAEtD,CAIAb,0BAA2B,CACvB,IAAMzM,EAAQ,IAAI,CAACA,KAAK,CAAEwN,EAAQxN,EAAM8C,UAAU,CAAC,sCAAuC,CACtFiK,WAAYtI,EAAczE,EAC9B,EACIwN,CAAAA,EAAM5R,MAAM,EACZoE,EAAMyN,SAAS,CAAChG,YAAY,CAAC,aAAc+F,EAEnD,CAKAd,kBAAmB,CACf,IAAM1M,EAAQ,IAAI,CAACA,KAAK,CAAE0N,EAAqB1N,AACpB,aADoBA,EAAMiD,OAAO,CAAC+B,aAAa,CACrE2I,iBAAiB,CAAiBC,EAAiB5N,EAAM8C,UAAU,CAAC,oCAAqC,CAC1G4B,MAAOD,EAAczE,GACrBA,MAAOA,CACX,GACI4N,IACA5N,EAAM0H,QAAQ,CAACD,YAAY,CAAC,OAAQiG,EAAqB,SAAW,SACpE1N,EAAM0H,QAAQ,CAACD,YAAY,CAAC,aAAcmG,GAElD,CAIAjB,uBAAwB,CACpB,IAAM3M,EAAQ,IAAI,CAACA,KAAK,CAAE6N,EAAU7N,EAAM6N,OAAO,CAC7CA,IACIA,EAAQ1I,OAAO,EACf0I,EAAQ/Q,OAAO,CAAC2K,YAAY,CAAC,aAAczH,EAAM8C,UAAU,CAAC,wBAAyB,CACjFgL,WAAYtK,EAAcqK,EAAQ1I,OAAO,CAAEnF,EAAM4E,QAAQ,CAACC,SAAS,CACvE,IAEJ2C,EAAyBxH,EAAO6N,EAAQ/Q,OAAO,EAEvD,CAKAsO,uBAAwB,CACpB,IAAMpL,EAAQ,IAAI,CAACA,KAAK,CACxB,OAAO,IAAIsM,EAA0BtM,EAAO,CACxCwL,WAAY,EAAE,CACdC,SAAU,WACN,MAAO,CAAA,CACX,EACAN,KAAM,WACF,IAAM4C,EAAO/N,EAAMgF,aAAa,CAC5B+I,GACAA,EAAKC,kBAAkB,CAACC,iBAAiB,CAACC,KAAK,EAEvD,CACJ,EACJ,CAIA3C,SAAU,CACN,IAAI,CAACvL,KAAK,CAAC0H,QAAQ,CAACD,YAAY,CAAC,cAAe,CAAA,EACpD,CACJ,CAQJ,GACArP,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,MAmB9HmV,EAPJ,GAAM,CAAEpT,SAAAA,CAAQ,CAAE,CAAGhC,EACf,CAAEwQ,SAAAA,CAAQ,CAAE5J,KAAAA,CAAI,CAAEC,WAAAA,CAAU,CAAE,CAAG5G,EAsRvC,OA/QA,AAAC,SAAUmV,CAAsB,EAY7B,IAAMC,EAAiC,CACnC,IAAK,IAAK,YAAa,QAAS,SAAU,IAAK,IAAK,eACvD,CAyBD,SAASC,IACL,IAAMC,EAAe,IAAI,CAACA,YAAY,CAAEC,EAAqB,IAAI,CAACtL,OAAO,CAAC+B,aAAa,CAACgJ,kBAAkB,CAACQ,WAAW,CAClHF,IACAA,EAAaG,iBAAiB,GAC1BF,EAAmBG,OAAO,EAC1BJ,EAAaK,cAAc,CAACJ,EAAmBK,MAAM,CAAE,CACnDC,OAAQN,EAAmBO,KAAK,CAACC,KAAK,CACtCC,YAAaT,EAAmBO,KAAK,CAACG,SAAS,CAC/CC,EAAGX,EAAmBO,KAAK,CAACK,YAAY,AAC5C,GAGZ,CAeA,SAASC,EAAuBC,CAAU,CAAEf,CAAY,EACpD,IAAMC,EAAqB,IAAI,CAACtL,OAAO,CAAC+B,aAAa,CAACgJ,kBAAkB,CAACQ,WAAW,CAAEc,EAAsBhB,GAAgBe,EAAWvS,OAAO,CAE1IwS,GACAA,EAAoBpB,KAAK,GAGnBoB,EAAoB9K,QAAQ,EAC9B8K,EAAoB9K,QAAQ,CAAC+K,OAAO,EACpChG,EAAS+F,EAAqB,UAAW,WAAc,GAE3DA,EAAoBpB,KAAK,GAErBK,EAAmBiB,uBAAuB,EAC1CF,CAAAA,EAAoBR,KAAK,CAACW,OAAO,CAAG,MAAK,GAG7C,IAAI,CAACnB,YAAY,EACjB,IAAI,CAACA,YAAY,CAACG,iBAAiB,GAEvC,IAAI,CAACH,YAAY,CAAGe,EACpB,IAAI,CAACK,iBAAiB,EAC1B,CA+BA,SAASC,EAAyBf,CAAM,CAAEgB,CAAO,EAEzC,IAAI,CAACpB,WAAW,EAChB,IAAI,CAACC,iBAAiB,GAG1B,IAAMoB,EAAK,IAAI,CAACC,OAAO,GAAIC,EAAMpQ,EAAKiP,EAAQ,GAAI/Q,EAAS,IAAI,CAACmS,WAAW,CAAEC,EAAS,IAAI,CAACA,MAAM,EAAIpS,GAAUA,EAAOoS,MAAM,CAAEC,EAAS,IAAI,CAACA,MAAM,EAAIrS,GAAUA,EAAOqS,MAAM,CAAEC,EAAaF,EAAS,CAACC,EAASA,EAAQE,EAAYD,EAAa/S,KAAKiT,GAAG,CAACJ,GAAUC,GAAU,GACzQ,AAAC9S,CAAAA,KAAKiT,GAAG,CAACJ,GAAU,GAAK7S,KAAKiT,GAAG,CAACH,GAAU,EAAC,EAAK,CACtDL,CAAAA,EAAGhV,CAAC,EAAI,IAAI,CAACyV,UAAU,CAAG,IAAI,CAACA,UAAU,CAAG,EAC5CT,EAAG/U,CAAC,EAAI,IAAI,CAACyV,UAAU,CAAG,IAAI,CAACA,UAAU,CAAG,EAC5C,IAAIC,EAAaX,EAAGhV,CAAC,CAAGkV,EAAKU,EAAaZ,EAAG/U,CAAC,CAAGiV,EAAKW,EAAcb,EAAG9Q,KAAK,CAAG,EAAIgR,EAAKY,EAAed,EAAG7Q,MAAM,CAAG,EAAI+Q,EAqBjHa,EAAU,CAAC,CAAC,IAAI,CAACjM,IAAI,CAC3B,GAAI,AAA0B,SAA1B,IAAI,CAAC7H,OAAO,CAAC+T,QAAQ,EAAeD,EAAS,KAhBzCE,EAAoBC,EAiBxB,IAAMC,EAAY,CAAC,CAAC,IAAI,CAACC,QAAQ,CAC3BC,EAAa,AAACN,EAChB,CACI/V,EAAGmW,EAAY,EAAI,EACnBlW,EAAG,CACP,GAtBAgW,EAAiB,EAAGC,EAAiB,EACrCpM,AAA6B,WAA7BA,AAiBkD,IAAI,CAjBjDwM,IAAI,CAAC,eACVL,EAAiBC,EAAiB,GAE5BpM,AAc4C,IAAI,CAd3CsM,QAAQ,CAInBH,EAAiB,IAHjBC,EAAiB,IAKd,CACHlW,EAAGiW,EACHhW,EAAGiW,CACP,GAUMK,EAAQ,CAAC,IAAI,CAACD,IAAI,CAAC,KACnBE,EAAQ,CAAC,IAAI,CAACF,IAAI,CAAC,KAOzB,GANKjP,MAAMkP,IACPZ,CAAAA,EAAaY,EAASvB,EAAG9Q,KAAK,CAAGmS,EAAWrW,CAAC,CAAIkV,CAAE,EAElD7N,MAAMmP,IACPZ,CAAAA,EAAaY,EAASxB,EAAG7Q,MAAM,CAAGkS,EAAWpW,CAAC,CAAIiV,CAAE,EAEpDa,GAAWI,EAAW,CACtB,IAAMM,EAAOZ,EACbA,EAAcC,EACdA,EAAeW,EACVpP,MAAMkP,IACPZ,CAAAA,EAAaY,EAASvB,EAAG7Q,MAAM,CAAGkS,EAAWrW,CAAC,CAAIkV,CAAE,EAEnD7N,MAAMmP,IACPZ,CAAAA,EAAaY,EAASxB,EAAG9Q,KAAK,CAAGmS,EAAWpW,CAAC,CAAIiV,CAAE,CAE3D,CACJ,CACA,IAAI,CAACvB,WAAW,CAAG,IAAI,CAAC5J,QAAQ,CAAC2M,IAAI,CAACf,EAAYC,EAAYC,EAAaC,EAAczT,SAAS,AAAC0S,CAAAA,GAAWA,EAAQV,CAAC,EAAI,CAAA,EAAGlI,QAAQ,GAAI,IAAMoJ,GAC3InV,QAAQ,CAAC,2BACTkW,IAAI,CAAC,CACNK,OAAQ,EACZ,GACKnW,GAAG,CAACwC,GACJ,IAAI,CAAC+G,QAAQ,CAAC6M,UAAU,EACzB,IAAI,CAACjD,WAAW,CAAC2C,IAAI,CAAC,CAClBtC,OAAQe,GAAWA,EAAQf,MAAM,CACjC,eAAgB,AAACe,CAAAA,GAAWA,EAAQZ,WAAW,EAAI,CAAA,EAAKoB,CAC5D,GAEJsB,AAUJ,SAA6CxW,CAAE,CAAE,GAAGyW,CAAY,EACxDzW,EAAG0W,sBAAsB,GAG7B1W,EAAG0W,sBAAsB,CAAG,CAAC,EAC7BxD,EAA+BrN,OAAO,CAAC,AAACiI,IACpC,IAAM6I,EAAY7I,EAAU,SACtB8I,EAAa5W,CAAE,CAAC2W,EAAU,EAAI3W,EAAG6W,cAAc,AACrD7W,CAAAA,EAAG0W,sBAAsB,CAACC,EAAU,CAAGC,EACvC5W,CAAE,CAAC2W,EAAU,CAAG,WACZ,IAAMG,EAAMF,EAAWpZ,KAAK,CAACwC,EAAImO,WAEjC,OADAnO,EAAGyT,cAAc,CAACjW,KAAK,CAACwC,EAAIyW,GACrBK,CACX,CACJ,GACJ,EAzBwC,IAAI,CAAEpD,EAAQgB,GAClDqC,AAhGJ,SAA6C/W,CAAE,EAC3C,GAAIA,EAAGgX,sBAAsB,CACzB,OAEJ,IAAMC,EAAcjX,EAAGqQ,OAAO,AAC9BrQ,CAAAA,EAAGqQ,OAAO,CAAG,WAIT,OAHIrQ,EAAGsT,WAAW,EAAItT,EAAGsT,WAAW,CAACjD,OAAO,EACxCrQ,EAAGsT,WAAW,CAACjD,OAAO,GAEnB4G,EAAYzZ,KAAK,CAACwC,EAAImO,UACjC,EACAnO,EAAGgX,sBAAsB,CAAGC,CAChC,EAoFwC,IAAI,CAC5C,CA2CA,SAASC,QAcuClX,EAAAA,EAbL,IAAI,CActCA,EAAG0W,sBAAsB,GAG9BS,OAAOrP,IAAI,CAAC9H,EAAG0W,sBAAsB,EAAE7Q,OAAO,CAAC,AAAC8Q,IAC5C,IAAMC,EAAa5W,EAAG0W,sBAAsB,CAACC,EAAU,AACnDC,CAAAA,IAAe5W,EAAG6W,cAAc,CAChC,OAAO7W,CAAE,CAAC2W,EAAU,CAGpB3W,CAAE,CAAC2W,EAAU,CAAGC,CAExB,GACA,OAAO5W,EAAG0W,sBAAsB,EAvC3B1W,AAckC,IAAI,CAdnCgX,sBAAsB,GAG9BhX,AAWuC,IAAI,CAXxCqQ,OAAO,CAAGrQ,AAW0B,IAAI,CAX3BgX,sBAAsB,CACtC,OAAOhX,AAUgC,IAAI,CAVjCgX,sBAAsB,EAW5B,IAAI,CAAC1D,WAAW,GAChB,IAAI,CAACA,WAAW,CAACjD,OAAO,GACxB,OAAO,IAAI,CAACiD,WAAW,CAE/B,CAlNAL,EAAuBhL,OAAO,CAT9B,SAASA,EAAQC,CAAU,CAAEkP,CAAe,EACxC,GAAI1S,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,CAAEiP,EAAkBD,EAAgBhP,SAAS,AACpFD,CAAAA,EAAWqM,iBAAiB,CAAGrB,EAC/BhL,EAAWmP,iBAAiB,CAAGpD,EAC/BmD,EAAgB5D,cAAc,CAAGgB,EACjC4C,EAAgB9D,iBAAiB,CAAG2D,CACxC,CACJ,CAyOJ,EAAGjE,GAA2BA,CAAAA,EAAyB,CAAC,CAAA,GAOjDA,CACX,GACA/V,EAAgBD,EAAU,mCAAoC,CAACA,CAAQ,CAAC,4BAA4B,CAAEA,CAAQ,CAAC,4CAA4C,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUsa,CAAG,CAAE7I,CAAkB,CAAE7Q,CAAC,CAAEwK,CAAE,CAAEvK,CAAC,EAYnT,GAAM,CAAEC,IAAAA,CAAG,CAAE,CAAGF,EACV,CAAEkC,SAAAA,CAAQ,CAAE6D,oBAAAA,CAAmB,CAAE,CAAGyE,EACpC,CAAE4N,KAAAA,CAAI,CAAE,CAAGnY,EAuEjB,OAjEA,MAMIkQ,YAAYlJ,CAAK,CAAEvG,CAAI,CAAE,CACrB,IAAI,CAACuG,KAAK,CAAGA,EACb,IAAI,CAACmK,kBAAkB,CAAG,IAAIP,EAC9B,IAAI,CAAC8I,cAAc,CAAG,IAAI,CAACC,iBAAiB,CAAClZ,EACjD,CAMA8R,SAAU,CACN,IAAI,CAACpB,kBAAkB,CAACb,sBAAsB,EAClD,CACAsJ,SAASC,CAAO,CAAE,CACdJ,EAAIK,cAAc,CAAC,IAAI,CAACJ,cAAc,CAAEG,GAGpC,IAAI,CAACE,4BAA4B,EACjCC,aAAa,IAAI,CAACD,4BAA4B,EAElD,IAAI,CAACA,4BAA4B,CAAGE,WAAW,KAC3C,IAAI,CAACP,cAAc,CAACQ,SAAS,CAAGT,EAAIU,SAAS,CAC7C,OAAO,IAAI,CAACJ,4BAA4B,AAC5C,EAAG,IACP,CACAJ,kBAAkBlZ,CAAI,CAAE,CACpB,IAAM2Z,EAAkB,IAAI,CAACpT,KAAK,CAACqT,kBAAkB,EAAI,IAAI,CAACC,wBAAwB,GAAKC,EAAM,IAAI,CAACpJ,kBAAkB,CAACf,aAAa,CAAC,OAavI,OAZA+H,EAAKoC,EAAK,CACN,cAAe,CAAA,EACf,YAAa9Z,EACb,cAAe,CAAA,CACnB,GACI,IAAI,CAACuG,KAAK,CAACyR,UAAU,CACrBxW,EAASsY,EAAK,8BAGdzU,EAAoByU,GAExBH,EAAezU,WAAW,CAAC4U,GACpBA,CACX,CACAD,0BAA2B,CACvB,IAAMtT,EAAQ,IAAI,CAACA,KAAK,CAAEyN,EAAYxU,EAAImQ,aAAa,CAAC,OAQxD,OAPA+H,EAAK1D,EAAW,CACZ,cAAe,CAAA,EACf,MAAS,gCACb,GACAA,EAAUqB,KAAK,CAACnU,QAAQ,CAAG,WAC3BqF,EAAM0H,QAAQ,CAAC0F,YAAY,CAACK,EAAWzN,EAAM0H,QAAQ,CAAC2F,UAAU,EAChErN,EAAMqT,kBAAkB,CAAG5F,EACpBA,CACX,CACJ,CAQJ,GACArV,EAAgBD,EAAU,8CAA+C,CAACA,CAAQ,CAAC,uCAAuC,CAAC,CAAE,SAAUqb,CAAa,EAYhJ,GAAM,CAAEjX,oBAAAA,CAAmB,CAAEqC,wBAAAA,CAAuB,CAAE,CAAG4U,EAazD,SAASC,EAAyBzT,CAAK,EACnC,IAAM0T,EAAc1T,EAAM0T,WAAW,EAAI,EAAE,CAC3C,OAAOA,EAAY/Q,MAAM,CAAC,CAACC,EAAKC,KACxBA,EAAII,OAAO,EACXJ,AAAwB,CAAA,IAAxBA,EAAII,OAAO,CAAC0Q,OAAO,EACnB/Q,CAAAA,EAAMA,EAAIgR,MAAM,CAAC/Q,EAAIgR,MAAM,CAAA,EAExBjR,GACR,EAAE,CACT,CAQA,SAASkR,EAAatG,CAAK,EACvB,OAAQ,AAACA,EAAMvK,OAAO,EAClBuK,EAAMvK,OAAO,CAAC+B,aAAa,EAC3BwI,EAAMvK,OAAO,CAAC+B,aAAa,CAACC,WAAW,EACtCuI,EAAMvJ,OAAO,EACVuJ,EAAMvJ,OAAO,CAACU,IAAI,EAClB6I,EAAMvJ,OAAO,CAACU,IAAI,CAACQ,OAAO,EAC9B,EACR,CAQA,SAAS4O,EAA8BvG,CAAK,EACxC,IAAMwG,EAAYxG,EAAMvK,OAAO,EAC3BuK,EAAMvK,OAAO,CAAC+B,aAAa,EAC3BwI,EAAMvK,OAAO,CAAC+B,aAAa,CAACC,WAAW,CAC3C,GAAI+O,EACA,OAAOA,EAEX,IAAMhU,EAAQwN,EAAMxN,KAAK,CACnBiU,EAAYH,EAAatG,GACzB1J,EAAS0J,EAAM1J,MAAM,CACrBoQ,EAAe,AAAChM,GAAWA,EAAMjE,OAAO,EAC1CiE,EAAMjE,OAAO,CAACnH,OAAO,EACrBoL,EAAMjE,OAAO,CAACnH,OAAO,CAACqX,YAAY,CAAC,eACnC,GAUEC,EAAyBtQ,EAC1BzE,MAAM,CAAC,AAAC2E,GAAM,CAAC,CAACA,EAAEC,OAAO,EACzBoQ,GAAG,CAXa,AAACnM,IAClB,IAAMoM,EAAWpM,EAAMlD,aAAa,EAChCkD,EAAMlD,aAAa,CAACuP,gBAAgB,EACpCL,EAAahM,GACXsM,EAActM,GAChBA,EAAMrE,MAAM,CAACyD,IAAI,EACjB,GACJ,MAAO,AAACkN,CAAAA,EAAaA,EAAa,KAAO,EAAC,EAAK,cAAgBF,CACnE,GAKKjV,MAAM,CAAC,AAACoV,GAAS,CAAC,CAACA,GAClBC,EAAYN,EAAuBxY,MAAM,CACzC+Y,EAAiBD,EAAY,EAC/B,iBAAmBA,EACnB,cAAgB,WAGd3U,EAAU,CACZ6U,eAAgBX,EAChBY,WAAYrH,EACZkH,UAAWA,EACXI,gBAAiBV,CAAsB,CAAC,EAAE,CAC1CW,2BAA4BX,EAAuBjX,KAAK,CAAC,EAC7D,EACA,OAAO6C,EAAM8C,UAAU,CATA,4DACnB6R,EAQmC5U,EAC3C,CAQA,SAASiV,EAAuBhV,CAAK,EACjC,IAAM6T,EAASJ,EAAyBzT,GACxC,OAAO6T,EAAOQ,GAAG,CAAC,AAAC7G,IACf,IAAMiH,EAAOlY,EAAoBqC,EAAwBmV,EAA8BvG,GAAQxN,EAAM4E,QAAQ,CAACC,SAAS,GACvH,OAAO4P,EAAO,CAAC,IAAI,EAAEA,EAAK,KAAK,CAAC,CAAG,EACvC,EACJ,CA6CA,MAPwB,CACpBQ,uBA/BJ,SAAgCjV,CAAK,EACjC,IAAM0T,EAAc1T,EAAM0T,WAAW,CACrC,GAAI,CAAEA,CAAAA,GAAeA,EAAY9X,MAAM,AAAD,EAClC,MAAO,GAEX,IAAMsZ,EAAkBF,EAAuBhV,GAC/C,MAAO,CAAC,kCAAkC,EAAEkV,EAAgBC,IAAI,CAAC,KAAK,KAAK,CAAC,AAChF,EAyBIpB,8BAAAA,EACAiB,uBAAAA,EACAI,wBAlBJ,SAAiClN,CAAK,EAClC,IAAM2L,EAASJ,EAAyBvL,EAAMrE,MAAM,CAAC7D,KAAK,EACpDqV,EAAcxB,EACfxU,MAAM,CAAC,AAACmO,GAAUA,EAAM1J,MAAM,CAACxI,OAAO,CAAC4M,GAAS,WACrD,AAAKmN,EAAYzZ,MAAM,CAGhByZ,EAAYhB,GAAG,CAAC,AAAC7G,GAAU,CAAC,EAAEsG,EAAatG,GAAO,CAAC,EAF/C,EAAE,AAGjB,CAWA,CAGJ,GACApV,EAAgBD,EAAU,mDAAoD,CAACA,CAAQ,CAAC,4BAA4B,CAAEA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,mCAAmC,CAAEA,CAAQ,CAAC,8CAA8C,CAAEA,CAAQ,CAAC,4BAA4B,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,qBAAqB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUmd,CAAQ,CAAEvL,CAAsB,CAAEwL,CAAS,CAAEC,CAAe,CAAE/C,CAAG,CAAE9I,CAAE,CAAEpK,CAAC,CAAExG,CAAC,CAAEwK,CAAE,CAAEvK,CAAC,EAYnlB,GAAM,CAAEic,uBAAAA,CAAsB,CAAE,CAAGO,EAC7B,CAAE1Q,mBAAAA,CAAkB,CAAEQ,wBAAAA,CAAuB,CAAEb,cAAAA,CAAa,CAAE+C,yBAAAA,CAAwB,CAAE,CAAGmC,EAC3F,CAAElK,OAAAA,CAAM,CAAE,CAAGF,EACb,CAAEtG,IAAAA,CAAG,CAAE,CAAGF,EACV,CAAEkC,SAAAA,CAAQ,CAAEyB,WAAAA,CAAU,CAAEG,4BAAAA,CAA2B,CAAE+B,wBAAAA,CAAuB,CAAEE,oBAAAA,CAAmB,CAAE,CAAGyE,EACtG,CAAE4N,KAAAA,CAAI,CAAExR,KAAAA,CAAI,CAAE,CAAG3G,EAyEvB,SAASyc,EAAmBjZ,CAAG,EAC3B,OAAOA,EAAIC,OAAO,CAAC,0BAA2B,GAClD,CAqbA,OAxaA,cAAmCsN,EAC/Bb,aAAc,CAMV,KAAK,IAAIG,WACT,IAAI,CAACqM,oBAAoB,CAAG,CAAC,CACjC,CAWAvK,MAAO,CACH,IAAMnL,EAAQ,IAAI,CAACA,KAAK,CAClB2V,EAAY,IAAI,CACtB,IAAI,CAACC,sBAAsB,GAC3B,IAAI,CAACrM,QAAQ,CAACvJ,EAAO,mBAAoB,SAAUzG,CAAC,EAChDoc,EAAUE,kBAAkB,CAACtc,EACjC,GACA,IAAI,CAACgQ,QAAQ,CAACvJ,EAAO,gBAAiB,SAAUzG,CAAC,EACzCA,EAAEuc,SAAS,GACXH,EAAUI,YAAY,CAAGxc,EAAEuD,OAAO,CAGlCmW,WAAW,WACP0C,EAAUK,cAAc,EAC5B,EAAG,KAEX,GACA,IAAI,CAACzM,QAAQ,CAACvJ,EAAO,gBAAiB,WAC9B2V,EAAUM,mBAAmB,EAC7BN,EAAUM,mBAAmB,CACxBxO,YAAY,CAAC,gBAAiB,QAE3C,GACA,IAAI,CAACyO,SAAS,CAAG,IAAIX,EAAUvV,EAAO,YAC1C,CAIA4V,wBAAyB,CACrB,IAAMD,EAAY,IAAI,CAAEQ,EAAuB,IAAI,CAACnW,KAAK,CAACiD,OAAO,CAAC+B,aAAa,AAC/E,CAAA,IAAI,CAAC0Q,oBAAoB,CAAG,CACxBU,OAAQ,CACJtZ,QAAS,KACTuZ,aAAc,SAAUrW,CAAK,EACzB,IAAMsW,EAAYH,EAAqBzP,mBAAmB,CACrD6P,oBAAoB,CACzB,OAAOD,EAAYA,EAAUtW,GACzB2V,EAAUa,2BAA2B,CAACxW,EAC9C,EACAyW,cAAe,SAAUvb,CAAE,CAAE8E,CAAK,EAC9BA,EAAM0H,QAAQ,CAAC0F,YAAY,CAAClS,EAAI8E,EAAM0H,QAAQ,CAAC2F,UAAU,CAC7D,EACAqJ,cAAe,WAC6B,KAAA,IAA7Bf,EAAUgB,cAAc,EAC/BhB,EAAUiB,gBAAgB,CAACjB,EAAUgB,cAAc,EAEZ,KAAA,IAAhChB,EAAUkB,iBAAiB,EAClClB,EAAUmB,mBAAmB,CAACnB,EAAUkB,iBAAiB,CAEjE,CACJ,EACAE,MAAO,CACHja,QAAS,KACTuZ,aAAc,SAAUrW,CAAK,EACzB,IAAMsW,EAAYH,EAAqBzP,mBAAmB,CACrDsQ,mBAAmB,CACxB,OAAOV,EAAYA,EAAUtW,GACzB2V,EAAUsB,0BAA0B,EAC5C,EACAR,cAAe,SAAUvb,CAAE,CAAE8E,CAAK,EAC9BA,EAAM0H,QAAQ,CAAC0F,YAAY,CAAClS,EAAI8E,EAAMyN,SAAS,CAACyJ,WAAW,CAC/D,EACAR,cAAe,WACPf,EAAU3V,KAAK,CAACgF,aAAa,EAC7BmR,EAAqBnI,kBAAkB,CAACU,OAAO,EAC/CiH,EAAU3V,KAAK,CAACgF,aAAa,CACxBgJ,kBAAkB,CAACmJ,gBAAgB,EAEhD,CACJ,CACJ,CACJ,CAKA7L,eAAgB,CACZ,IAAMqK,EAAY,IAAI,AACtB,CAAA,IAAI,CAACyB,wBAAwB,CAAG,IAAI,CAACC,2BAA2B,GAChE,IAAI,CAACC,yBAAyB,GAC9BjF,OAAOrP,IAAI,CAAC,IAAI,CAAC0S,oBAAoB,EAAE3U,OAAO,CAAC,SAAUwW,CAAS,EAC9D5B,EAAU6B,yBAAyB,CAACD,EACxC,EACJ,CAIAF,6BAA8B,CAC1B,IAAMI,EAAe,IAAI,CAACzX,KAAK,CAACiD,OAAO,CAAEyU,EAAmBD,EAAazS,aAAa,CAAC2S,iBAAiB,CACxG,GAAI,CAACD,EACD,OAEJ,GAAI,AAA4B,UAA5B,OAAOA,EACP,OAAOA,EAEX,IAAME,EAAQnY,EAAOiY,EAAkB,IAAI,CAAC1X,KAAK,EAAG6X,EAAa5e,EAAI6e,gBAAgB,CAACF,GACtF,GAAIC,AAAsB,IAAtBA,EAAWjc,MAAM,CACjB,OAAOic,CAAU,CAAC,EAAE,AAE5B,CAIAP,2BAA4B,CACxB,IAAMpc,EAAK,IAAI,CAACkc,wBAAwB,CACpClc,IACAA,EAAGuM,YAAY,CAAC,cAAe,QAC/BxM,EAASC,EAAI,iCAErB,CAMAsc,0BAA0BD,CAAS,CAAE,CACjC,IAAMvX,EAAQ,IAAI,CAACA,KAAK,CAClB+X,EAAS,IAAI,CAACrC,oBAAoB,CAAC6B,EAAU,CAC7CS,EAAUD,EAAO1B,YAAY,CAACrW,GAC9BiY,EAAaF,EAAOjb,OAAO,CAAIib,EAAOjb,OAAO,EAAI,IAAI,CAACsM,aAAa,CAAC,OACpE8O,EAAaD,EAAW5K,UAAU,EAAI,IAAI,CAACjE,aAAa,CAAC,OAC3D4O,GACA,IAAI,CAACG,6BAA6B,CAACF,EAAYV,GAC/C9E,EAAIK,cAAc,CAACoF,EAAWF,GAC9BC,EAAWtZ,WAAW,CAACuZ,GACvBH,EAAOtB,aAAa,CAACwB,EAAYjY,GAC7BA,EAAMyR,UAAU,CAChBxW,EAASid,EAAW,8BAGpBpZ,EAAoBoZ,GAExB1Q,EAAyBxH,EAAOkY,GAC5BH,EAAOrB,aAAa,EACpBqB,EAAOrB,aAAa,KAIpBuB,EAAW1Z,UAAU,EACrB0Z,EAAW1Z,UAAU,CAACL,WAAW,CAAC+Z,GAEtCF,EAAOjb,OAAO,CAAG,KAEzB,CAOAqb,8BAA8BF,CAAU,CAAEV,CAAS,CAAE,CACjD,IAAMvX,EAAQ,IAAI,CAACA,KAAK,CAAEiU,EAAYjU,EAAM8C,UAAU,CAAC,qCAAuCyU,EAC1F,cAAe,CAAEvX,MAAOA,EAAO+M,WAAYtI,EAAczE,EAAO,GAAIoY,EAAY,CAAC,gCAAgC,EAAEb,EAAU,CAAC,EAAEvX,EAAM6M,KAAK,CAAC,CAAC,CACjJsE,EAAK8G,EAAY,CACbtb,GAAIyb,EACJ,aAAcnE,GAAa,KAAK,CACpC,GAGAgE,EAAWnJ,KAAK,CAACnU,QAAQ,CAAG,WACxBsZ,GACAgE,EAAWxQ,YAAY,CAAC,OAAQzH,AAAkD,QAAlDA,EAAMiD,OAAO,CAAC+B,aAAa,CAAC2I,iBAAiB,CACzE,SAAW,QAEvB,CAIA6I,6BAA8B,CAC1B,IAAMxW,EAAQ,IAAI,CAACA,KAAK,CAAEP,EAASO,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0B,mBAAmB,CAC7E2R,iBAAiB,CACtB,GAAI,CAAC5Y,EACD,MAAO,GAEX,IAAM6Y,EAAW,IAAI,CAACC,kBAAkB,GAAIC,EAAuBxY,EAAMyY,MAAM,EAC3EzY,EAAMiD,OAAO,CAACyV,YAAY,EAC1B1Y,EAAMiD,OAAO,CAACyV,YAAY,CAAChK,OAAO,CAAGiI,EAAiB,mCACtD3W,EAAM6M,KAAK,CAAEgK,EAAoB,mCACjC7W,EAAM6M,KAAK,CAAE8L,EAAkB1D,EAAuBjV,GAAQ4Y,EAAsB5Y,EAAM8C,UAAU,CAAC,wDAAyD,CAAE9C,MAAOA,CAAM,GAAID,EAAU,CAC3L8Y,eAAgBhc,EAA4BmD,EAAM0H,QAAQ,EAC1DqF,WAAYtI,EAAczE,GAC1B8Y,gBAAiB,IAAI,CAACC,sBAAsB,GAC5CC,cAAe,IAAI,CAACC,eAAe,GACnCC,cAAe,IAAI,CAACC,eAAe,GACnCC,iBAAkBd,EAASnQ,KAAK,CAChCkR,iBAAkBf,EAASlQ,KAAK,CAChCkR,kBAAmBd,EACf,IAAI,CAACe,mBAAmB,CAAC5C,GAAkB,GAC/C6C,gBAAiBxZ,EAAMyZ,MAAM,CACzB,IAAI,CAACC,sBAAsB,CAAC7C,GAAqB,GACrD8C,iBAAkBhB,EAAkBC,EAAsB,GAC1DD,gBAAiBA,CACrB,EAAGiB,EAAkBtE,EAASzV,UAAU,CAACJ,EAAQM,EAASC,GAG1D,OAFA,IAAI,CAAC6W,iBAAiB,CAAGA,EACzB,IAAI,CAACF,cAAc,CAAGA,EACflB,EAAmBmE,EAC9B,CAIA3C,4BAA6B,CACzB,IAAMjX,EAAQ,IAAI,CAACA,KAAK,CAClBP,EAASO,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0B,mBAAmB,CACzDmT,gBAAgB,CACrB,GAAI,CAACpa,EACD,MAAO,GAEX,IAAMM,EAAU,CAAE+Z,iBAAkB,IAAI,CAACC,uBAAuB,EAAG,EAC7DH,EAAkBtE,EAASzV,UAAU,CAACJ,EAAQM,EAASC,GAC7D,OAAOyV,EAAmBmE,EAC9B,CAIAI,sBAAuB,CACnB,IAAM9e,EAAK,IAAI,CAACkc,wBAAwB,CAAEY,EAAU9c,GAAMA,EAAGgY,SAAS,EAAI,GAC1E,OAAOtU,EAAwBoZ,EAAS,IAAI,CAAChY,KAAK,CAAC4E,QAAQ,CAACC,SAAS,CACzE,CAIAsU,iBAAkB,CACd,IAAM1B,EAAe,IAAI,CAACzX,KAAK,CAACiD,OAAO,CAAEgX,EAAiBxC,EAAayC,OAAO,CAAEC,EAAcF,GAAkBA,EAAetV,IAAI,CAAEgT,EAAoB,IAAI,CAACqC,oBAAoB,GAClL,OAAQvC,EAAazS,aAAa,CAACC,WAAW,EAC1C0S,GACAwC,GACA,EACR,CAIApB,wBAAyB,CACrB,IAAM/Y,EAAQ,IAAI,CAACA,KAAK,CACxB,OAAOA,EAAMoa,KAAK,CACdpa,EAAMiD,OAAO,CAAC+B,aAAa,CAAC8T,eAAe,EACvCuB,AApShB,SAA4Bra,CAAK,CAAEoa,CAAK,EACpC,IAAME,EAAYF,CAAK,CAAC,EAAE,CAAEG,EAAcva,EAAM6D,MAAM,EAAI7D,EAAM6D,MAAM,CAAC,EAAE,EAAI,CAAC,EAAG2W,EAAWxa,EAAMya,OAAO,EAAIza,EAAMya,OAAO,CAACC,MAAM,EAC7H1a,EAAMya,OAAO,CAACC,MAAM,CAAChW,KAAK,CAAEiW,EAAgB,CAC5CC,UAAW5a,EAAM6D,MAAM,CAACjI,MAAM,CAC9B8Y,UAAW6F,EAAYzW,MAAM,EAAIyW,EAAYzW,MAAM,CAAClI,MAAM,CAC1DoE,MAAAA,EACAwa,SAAAA,CACJ,SACA,AAAKF,EAGDA,AAAc,QAAdA,GAAuBA,AAAc,gBAAdA,EA7CpBK,AA8CkCA,EA9CpBH,QAAQ,CACzBxa,AA6C8BA,EA7CxB8C,UAAU,CAAC,8CA6CoB6X,GA5CrC3a,AA4C8BA,EA5CxB8C,UAAU,CAAC,sCA4CoB6X,GAErC3a,EAAMoa,KAAK,CAACxe,MAAM,CAAG,EAxClBoE,AAyCmCA,EAzC7B8C,UAAU,CAAC,4CAyCyB6X,GAE1CE,AAhCX,SAAwC7a,CAAK,CAAEoa,CAAK,CAAEra,CAAO,EACzD,IAAMua,EAAYF,CAAK,CAAC,EAAE,CAAEU,EAAmB9a,EAAM8C,UAAU,CAAC,wCAA0CwX,EAAWva,GAAUgb,EAAQ/a,EAAM6D,MAAM,EAAI7D,EAAM6D,MAAM,CAACjI,MAAM,CAAG,EAAI,SAAW,WAC5L,MAAO,AAACoE,CAAAA,EAAM8C,UAAU,CAAC,4BAA8BwX,EAAYS,EAAOhb,IACtEC,EAAM8C,UAAU,CAAC,mCAAqCiY,EAAOhb,EAAO,EAAM+a,CAAAA,EAAmB,IAAMA,EAAmB,EAAC,CAC/H,EA4B0C9a,EAAOoa,EAAOO,GArC7C3a,AA6B6BA,EA7BvB8C,UAAU,CAAC,sCA6BmB6X,EAS/C,EAkRmC3a,EAAOA,EAAMoa,KAAK,EAAI,EACrD,CAIAV,uBAAuBsB,CAAQ,CAAE,CAC7B,IAAMhb,EAAQ,IAAI,CAACA,KAAK,CAAEib,EAAajb,EAAM8C,UAAU,CAAC,gDAAiD,CAAE9C,MAAOA,EAAO+M,WAAYtI,EAAczE,EAAO,GAC1J,MAAO,eAAiBgb,EAAW,KAAOC,EAAa,WAC3D,CAIA1B,oBAAoByB,CAAQ,CAAE,CAC1B,IAAMhb,EAAQ,IAAI,CAACA,KAAK,CACxB,GAAIA,EAAMiD,OAAO,CAACyV,YAAY,EAC1B1Y,AAAuC,CAAA,IAAvCA,EAAMiD,OAAO,CAACyV,YAAY,CAAChK,OAAO,CAClC,MAAO,GAEX,IAAMuM,EAAajb,EAAM8C,UAAU,CAAC,mDAAoD,CAAE9C,MAAOA,EAAO+M,WAAYtI,EAAczE,EAAO,GACzI,MAAO,eAAiBgb,EAAW,KAAOC,EAAa,WAC3D,CAIAhC,iBAAkB,CACd,IAAMiC,EAAY,IAAI,CAAClb,KAAK,CAACiD,OAAO,CAACiY,QAAQ,CAC7C,OAAOtc,EAAwBsc,GAAYA,EAASvW,IAAI,EAAI,GAAI,IAAI,CAAC3E,KAAK,CAAC4E,QAAQ,CAACC,SAAS,CACjG,CAIAkV,yBAA0B,CACtB,IAAM/Z,EAAQ,IAAI,CAACA,KAAK,CAAEmb,EAAanb,EAAM8C,UAAU,CAAC,qDAAsD,CAAE9C,MAAOA,CAAM,GAAIrD,EAAK,kCAAoCqD,EAAM6M,KAAK,CACrL,MAAO,YAAclQ,EAAK,KAAOwe,EAAa,QAClD,CAKAtF,mBAAmBtc,CAAC,CAAE,CAClB,IAAMyG,EAAQ,IAAI,CAACA,KAAK,CACxB,GAAIA,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0J,OAAO,CAAE,CACjC,IAAI,CAACuH,mBAAmB,EACxB,IAAI,CAACA,mBAAmB,CAACxO,YAAY,CAAC,gBAAiB,QAE3D,IAAM2T,EAAa7hB,EAAE8hB,IAAI,CAACD,UAAU,EAAI,CAAC,CACzCA,CAAAA,EAAWE,QAAQ,CAAG,GACtBF,EAAWG,OAAO,CA3XnBvb,AA2XsCA,EA3XhC8C,UAAU,CAAC,mCAAoC,CAAE9C,MA2XjBA,CA3X8B,GA4XnEzG,EAAE8hB,IAAI,CAACD,UAAU,CAAGA,CACxB,CACJ,CAIApF,gBAAiB,CACb,IAAMwF,EAAW,IAAI,CAACzF,YAAY,CAAE0F,EAAQD,GAAYA,EAASE,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAC7FD,GAASA,EAAMvN,KAAK,EACpBuN,EAAMvN,KAAK,EAEnB,CAKA0I,iBAAiBD,CAAc,CAAE,CAC7B,IAAMzb,EAAK,IAAI,CAACygB,YAAY,CAAGjf,EAAWia,GACpC3W,EAAQ,IAAI,CAACA,KAAK,CAClB4b,EAAiB,AAACriB,IAChB2B,IACAA,EAAGuM,YAAY,CAAC,cAAe,QAC/BvM,EAAGuM,YAAY,CAAC,aAAc,KAElClO,EAAE8C,cAAc,GAChB9C,EAAEsiB,eAAe,GACjB,IAAMC,EAAc9b,EAAM8C,UAAU,CAAC,0DAA2D,CAAE9C,MAAOA,CAAM,GAC/G,IAAI,CAACkW,SAAS,CAACtD,QAAQ,CAACkJ,GACxB7I,WAAW,KACH/X,IACAA,EAAG6gB,eAAe,CAAC,eACnB7gB,EAAG6gB,eAAe,CAAC,eAEnB/b,EAAMyY,MAAM,EACZzY,EAAMyY,MAAM,EAEpB,EAAG,IACP,EACIvd,GAAM8E,IACN9E,EAAGuM,YAAY,CAAC,WAAY,IAC5BvM,EAAG8gB,OAAO,CAAG,SAAUziB,CAAC,EACpB,IAAM0iB,EAAsBjc,EAAMiD,OAAO,CAAC+B,aAAa,EACnDhF,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0B,mBAAmB,CAC1CuV,kBAAkB,CAC3B,AAACA,CAAAA,GAAsBL,CAAa,EAAG/T,IAAI,CAAC,IAAI,CAAEtO,EAAGyG,EACzD,EAER,CAMA8W,oBAAoBoF,CAAa,CAAE,CAC/B,IAAMhhB,EAAK,IAAI,CAAC+a,mBAAmB,CAAGvZ,EAAWwf,GAAgBlc,EAAQ,IAAI,CAACA,KAAK,CAAEmc,EAAUD,EAAczf,OAAO,CAAC,aAAc,IAC/HvB,IACAiW,EAAKjW,EAAI,CACLogB,SAAU,GACV,gBAAiB,CAAC,CAAC5e,EAAWyf,EAClC,GACAjhB,EAAG8gB,OAAO,CAAGhc,EAAMiD,OAAO,CAAC+B,aAAa,CACnC0B,mBAAmB,CAAC0V,oBAAoB,EACzC,WACIpc,EAAMqc,QAAQ,EAClB,EAEZ,CAKA9D,oBAAqB,CACjB,IAAMvY,EAAQ,IAAI,CAACA,KAAK,CAAEsc,EAAqB,SAAUC,CAAa,CAAEC,CAAgB,EACpF,IAAMC,EAAOzc,CAAK,CAACuc,EAAc,CACjC,OAAOE,EAAK7gB,MAAM,CAAG,GAAK6gB,CAAI,CAAC,EAAE,EAC7B9c,EAAK8c,CAAI,CAAC,EAAE,CAACxZ,OAAO,CAAC+B,aAAa,EAC9ByX,CAAI,CAAC,EAAE,CAACxZ,OAAO,CAAC+B,aAAa,CAAC0J,OAAO,CAAE8N,EACnD,EAAGE,EAAW,CAAC,CAAC1c,EAAMoa,KAAK,EACvBpa,AAA6B,EAA7BA,EAAMoa,KAAK,CAAC9e,OAAO,CAAC,QACpB0E,AAAiC,EAAjCA,EAAMoa,KAAK,CAAC9e,OAAO,CAAC,YACpB0E,AAAiC,EAAjCA,EAAMoa,KAAK,CAAC9e,OAAO,CAAC,WAAgBqhB,EAAe,CAAC,CAAC3c,EAAM4c,kBAAkB,CAAEC,EAAYP,EAAmB,QAAS,CAACtc,EAAM8c,OAAO,EAAIH,GAAgBD,GAAWK,EAAYT,EAAmB,QAASK,GAAgBD,GAAWjI,EAAO,CAAC,EAOnP,OANIoI,GACApI,CAAAA,EAAKtM,KAAK,CAAG,IAAI,CAAC6U,sBAAsB,CAAC,QAAO,EAEhDD,GACAtI,CAAAA,EAAKrM,KAAK,CAAG,IAAI,CAAC4U,sBAAsB,CAAC,QAAO,EAE7CvI,CACX,CAIAuI,uBAAuBT,CAAa,CAAE,CAClC,IAAMvc,EAAQ,IAAI,CAACA,KAAK,CAClByc,EAAOzc,CAAK,CAACuc,EAAc,CACjC,OAAOvc,EAAM8C,UAAU,CAAC,sBAAwByZ,EAAgB,cAAiBE,CAAAA,EAAK7gB,MAAM,CAAG,EAAI,SAAW,UAAS,EAAI,CACvHoE,MAAOA,EACPid,MAAOR,EAAKpI,GAAG,CAAC,SAAUtP,CAAI,EAC1B,OAAOD,EAAmBC,EAC9B,GACAmY,OAAQT,EAAKpI,GAAG,CAAC,SAAUtP,CAAI,EAC3B,OAAOO,EAAwBP,EACnC,GACAoY,QAASV,EAAK7gB,MAAM,AACxB,EACJ,CAIA2P,SAAU,CACF,IAAI,CAAC2K,SAAS,EACd,IAAI,CAACA,SAAS,CAAC3K,OAAO,EAE9B,CACJ,CAQJ,GACAnT,EAAgBD,EAAU,4CAA6C,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,6CAA6C,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAC,CAAE,SAAUilB,CAAK,CAAErkB,CAAC,CAAEC,CAAC,CAAE+Q,CAAsB,CAAEuC,CAAyB,CAAE+Q,CAAc,CAAE7J,CAAa,EAY3d,GAAM,CAAEzY,SAAAA,CAAQ,CAAE,CAAGhC,EACf,CAAEoY,KAAAA,CAAI,CAAEvR,WAAAA,CAAU,CAAE,CAAG5G,EACvB,CAAEyL,cAAAA,CAAa,CAAE+C,yBAAAA,CAAwB,CAAE,CAAG6V,EAC9C,CAAE3iB,kBAAAA,CAAiB,CAAE,CAAG8Y,EAU9B,SAAS8J,EAA2Btd,CAAK,EACrC,OAAOA,EAAMud,iBAAiB,EAAIvd,EAAMud,iBAAiB,CAAC,EAAE,AAChE,CAyBA,MAAMC,UAAsBzT,EAUxBoB,MAAO,CACH,IAAMnL,EAAQ,IAAI,CAACA,KAAK,CAAE2V,EAAY,IAAI,CAC1C,IAAI,CAACpM,QAAQ,CAACvJ,EAAO,kBAAmB,WACpC2V,EAAU8H,WAAW,EACzB,GACA,IAAI,CAAClU,QAAQ,CAACvJ,EAAO,mBAAoB,WACrC2V,EAAU+H,YAAY,EAC1B,GACA,IAAI,CAACC,gBAAgB,EACzB,CAIAD,cAAe,CACX,IAAME,EAAO,IAAI,CAAC5d,KAAK,CAAC6d,iBAAiB,CACrCD,GACAA,EAAKnW,YAAY,CAAC,cAAe,QAErC,IAAI,CAACqW,4BAA4B,CAAC,QACtC,CAIAL,aAAc,CACV,IAAMzd,EAAQ,IAAI,CAACA,KAAK,CAAE4d,EAAO5d,EAAM6d,iBAAiB,CACpDD,IACA,IAAI,CAACG,+BAA+B,GACpCvW,EAAyBxH,EAAO4d,IAEpC,IAAI,CAACE,4BAA4B,CAAC,OACtC,CAKAA,6BAA6BE,CAAQ,CAAE,CAC/B,IAAI,CAACC,iBAAiB,EACtB,IAAI,CAACA,iBAAiB,CAACC,YAAY,CAACzW,YAAY,CAAC,gBAAiBuW,EAE1E,CAKA1S,eAAgB,CACZ,IAAMtL,EAAQ,IAAI,CAACA,KAAK,CAAEme,EAAUne,EAAMsO,YAAY,CAAEP,EAAO/N,EAAMgF,aAAa,CAClF,IAAI,CAACiF,aAAa,CAACmU,UAAU,CAAC,aAC9B,IAAI,CAACC,eAAe,GAChB,IAAI,CAACJ,iBAAiB,EACtBE,GACAA,IAAYne,EAAMse,cAAc,GAC5BH,EAAQ3P,WAAW,CACnBxO,EAAMwS,iBAAiB,CAAC2L,EAAS,IAAI,CAACF,iBAAiB,CAACC,YAAY,EAE/DnQ,GACLA,EAAKC,kBAAkB,CAACC,iBAAiB,CAACC,KAAK,GAG3D,CAIAmQ,iBAAkB,CACd,IAAMre,EAAQ,IAAI,CAACA,KAAK,CAClBiK,EAAgB,IAAI,CAACA,aAAa,CAClCsU,EAAWjB,EAA2Btd,GACxCwe,AAjGZ,CAAA,SAAiCxe,CAAK,EAClC,IAAMye,EAAgBze,EAAMiD,OAAO,CAACyb,SAAS,CAAEC,EAAerB,EAA2Btd,GACzF,MAAO,CAAC,CAAEye,CAAAA,GACNA,AAA0B,CAAA,IAA1BA,EAAc/P,OAAO,EACrB+P,EAAczZ,aAAa,EAC3ByZ,EAAczZ,aAAa,CAAC0J,OAAO,EACnCiQ,GACAA,EAAa7hB,OAAO,AAAD,CAC3B,CAAA,EAyFoCkD,IAAUue,GAClC,CAAA,IAAI,CAACN,iBAAiB,CAAGhU,EAAc2U,eAAe,CAAC,YAAa,CAAEC,MAAON,CAAS,EAAG,SAAU,CAC/F,aAAcve,EAAM8C,UAAU,CAAC,0CAA2C,CACtE9C,MAAOA,EACP+M,WAAYtI,EAAczE,EAC9B,GACA,gBAAiB,CAAA,EACjB0E,MAAO1E,EAAMiD,OAAO,CAACC,IAAI,CAAC4b,kBAAkB,EAAI,IACpD,EAAC,CAET,CAIAnB,kBAAmB,CACf,IAAM3d,EAAQ,IAAI,CAACA,KAAK,CACpBA,GAAS,IAAI,CAACiK,aAAa,EAC3B,IAAI,CAACA,aAAa,CAAC8U,QAAQ,CAAC,YAEpC,CAIAhB,iCAAkC,CAC9B,IAAM/d,EAAQ,IAAI,CAACA,KAAK,CAAEgf,EAAahf,EAAMif,iBAAiB,CAC9D,GAAID,GAAcA,EAAWpjB,MAAM,CAAE,CAGjCojB,EAAWje,OAAO,CAAC,AAAClF,IACZA,IACIA,AAAiB,OAAjBA,EAAKmB,OAAO,EACVnB,EAAKqjB,QAAQ,EAAIrjB,EAAKqjB,QAAQ,CAACtjB,MAAM,CAIvCC,EAAK4L,YAAY,CAAC,cAAe,QAHjC5L,EAAK4L,YAAY,CAAC,WAAY,IAM1C,GAEA,IAAM0X,EAAaH,CAAU,CAAC,EAAE,EAAIA,CAAU,CAAC,EAAE,CAACzgB,UAAU,CACxD4gB,GACAhO,EAAKgO,EAAW,CACZ,cAAe,KAAK,EACpB,aAAcnf,EAAM8C,UAAU,CAAC,yCAA0C,CAAE9C,MAAAA,CAAM,GACjFof,KAAM,MACV,EAER,CACJ,CAKAhU,uBAAwB,CACpB,IAAMpI,EAAO,IAAI,CAACoH,QAAQ,CAAEpK,EAAQ,IAAI,CAACA,KAAK,CAAE2V,EAAY,IAAI,CAChE,OAAO,IAAIrJ,EAA0BtM,EAAO,CACxCwL,WAAY,CAER,CACI,CAACxI,EAAKqH,IAAI,CAAErH,EAAKuH,EAAE,CAAC,CACpB,WACI,OAAOoL,EAAU0J,aAAa,CAAC,IAAI,CACvC,EACH,CAED,CACI,CAACrc,EAAKsH,KAAK,CAAEtH,EAAKwH,IAAI,CAAC,CACvB,WACI,OAAOmL,EAAU2J,SAAS,CAAC,IAAI,CACnC,EACH,CAED,CACI,CAACtc,EAAKyH,KAAK,CAAEzH,EAAK0H,KAAK,CAAC,CACxB,WACI,OAAOiL,EAAU4J,UAAU,CAAC,IAAI,CACpC,EACH,CACJ,CAGD9T,SAAU,WACN,MAAO,CAAC,CAACzL,EAAM0e,SAAS,EACpB1e,AAAoC,CAAA,IAApCA,EAAMiD,OAAO,CAACyb,SAAS,CAAChQ,OAAO,EAC/B1O,AACI,CAAA,IADJA,EAAMiD,OAAO,CAACyb,SAAS,CAAC1Z,aAAa,CAAC0J,OAAO,AAErD,EAEAvD,KAAM,WACF,IAAMqU,EAAQ7J,EAAUsI,iBAAiB,CACnCwB,EAAQ9J,EAAU3V,KAAK,CAACse,cAAc,CACxCkB,GAASC,GACTzf,EAAMwS,iBAAiB,CAACiN,EAAOD,EAAMtB,YAAY,CAEzD,EAEAxS,UAAW,WACP1L,EAAM0f,cAAc,EACxB,CACJ,EACJ,CAMAL,cAAcM,CAAyB,CAAE,CACrC,IAAM3f,EAAQ,IAAI,CAACA,KAAK,CAClB4f,EAAc5f,EAAMiD,OAAO,CAAC+B,aAAa,CACzC2G,EAAWgU,EAA0BhU,QAAQ,CAG/ChQ,EAAIqE,EAAM6f,uBAAuB,EAAI,EACzC,KAAOlkB,KACH,GAAIqE,EAAM8f,mBAAmB,CAACnkB,GAC1B,OAAOgQ,EAASC,OAAO,QAI/B,AAAIgU,EAAY5R,kBAAkB,CAAC+R,UAAU,EACzC/f,EAAMggB,uBAAuB,GACtBrU,EAASC,OAAO,EAEpBD,EAASE,IAAI,AACxB,CAMAyT,UAAUK,CAAyB,CAAE,CACjC,IAAM3f,EAAQ,IAAI,CAACA,KAAK,CAClB4f,EAAc5f,EAAMiD,OAAO,CAAC+B,aAAa,CACzC2G,EAAWgU,EAA0BhU,QAAQ,CAGnD,IAAK,IAAIhQ,EAAI,AAACqE,CAAAA,EAAM6f,uBAAuB,EAAI,CAAA,EAAK,EAAGlkB,EAAIqE,EAAMif,iBAAiB,CAACrjB,MAAM,CAAE,EAAED,EACzF,GAAIqE,EAAM8f,mBAAmB,CAACnkB,GAC1B,OAAOgQ,EAASC,OAAO,QAI/B,AAAIgU,EAAY5R,kBAAkB,CAAC+R,UAAU,EACzC/f,EAAM8f,mBAAmB,CAAC,GACnBnU,EAASC,OAAO,EAEpBD,EAASG,IAAI,AACxB,CAMAyT,WAAWI,CAAyB,CAAE,CAClC,IAAM3f,EAAQ,IAAI,CAACA,KAAK,CAClBigB,EAAqBjgB,EAAMif,iBAAiB,CAACjf,EAAM6f,uBAAuB,CAAC,CAC3EK,EAAsB5C,EAA2Btd,GAAOlD,OAAO,CAQrE,OAPIkD,EAAMmgB,QAAQ,CACd,IAAI,CAACnV,cAAc,CAACiV,IAGpB,IAAI,CAACjV,cAAc,CAACkV,GACpBlgB,EAAM8f,mBAAmB,CAAC,IAEvBH,EAA0BhU,QAAQ,CAACC,OAAO,AACrD,CACJ,CA2HA,OArHA,AAAC,SAAU4R,CAAa,EA8BpB,SAAS4C,IACL,IAAMzB,EAAerB,EAA2B,IAAI,EACpD,GAAIqB,EAAc,CACd,IAAMzjB,EAAKyjB,EAAa7hB,OAAO,AAC3B5B,CAAAA,EAAG8gB,OAAO,EACV9gB,EAAG8gB,OAAO,CAACthB,EAAkB,SAErC,CACJ,CAKA,SAAS2lB,IACL,IAAoBrB,EAAahf,AAAnB,IAAI,CAAqBif,iBAAiB,CACpDD,GAAchf,AADJ,IAAI,CACM6d,iBAAiB,EAAI7d,AAD/B,IAAI,CACiCmgB,QAAQ,GAEvDnB,EAAWje,OAAO,CAAC,AAAC7F,IACZA,GACAA,AAAiB,yBAAjBA,EAAGC,SAAS,EACZD,EAAGolB,UAAU,EACbplB,EAAGolB,UAAU,CAAC5lB,EAAkB,YAExC,GACAsF,AAVU,IAAI,CAUR6f,uBAAuB,CAAG,EAEhC7f,AAZU,IAAI,CAYR6d,iBAAiB,CAAC0C,QAAQ,GAEhCvgB,AAdU,IAAI,CAcRyN,SAAS,CAACS,KAAK,GAE7B,CAOA,SAASsS,EAAyB9d,CAAE,EAChC,IAAM+d,EAAW,IAAI,CAACxB,iBAAiB,EAAI,IAAI,CAACA,iBAAiB,CAACvc,EAAG,CAC/Dge,EAAiB,IAAI,CAACzB,iBAAiB,EACzC,IAAI,CAACA,iBAAiB,CAAC,IAAI,CAACY,uBAAuB,CAAC,CACxD,GAAIY,GACAA,AAAqB,OAArBA,EAASzjB,OAAO,EAChB,CAAEyjB,CAAAA,EAASvB,QAAQ,EAAIuB,EAASvB,QAAQ,CAACtjB,MAAM,AAAD,EAAI,CAElD,IAAM+kB,EAAqB,CAAC,CAAC,AAAC,CAAA,IAAI,CAACjZ,QAAQ,CAACgU,oBAAoB,CAAC,IAAI,CAAC,EAAE,EAAI,CAAC,CAAA,EAAGxN,KAAK,CAarF,OAVIuS,EAASvS,KAAK,EAAIyS,GAClBF,EAASvS,KAAK,GAEdwS,GAAkBA,EAAeJ,UAAU,EAC3CI,EAAeJ,UAAU,CAAC5lB,EAAkB,aAE5C+lB,EAASG,WAAW,EACpBH,EAASG,WAAW,CAAClmB,EAAkB,cAE3C,IAAI,CAACmlB,uBAAuB,CAAGnd,EACxB,CAAA,CACX,CACA,MAAO,CAAA,CACX,CAOA,SAASme,IAEL,GAAI7gB,AADU,IAAI,CACRif,iBAAiB,CAAE,CACzB,IAAItjB,EAAIqE,AAFE,IAAI,CAEAif,iBAAiB,CAACrjB,MAAM,CACtC,KAAOD,KACH,GAAIqE,AAJE,IAAI,CAIA8f,mBAAmB,CAACnkB,GAC1B,MAAO,CAAA,CAGnB,CACA,MAAO,CAAA,CACX,CAtFA6hB,EAAcra,OAAO,CATrB,SAASA,EAAQC,CAAU,EACvB,GAAIxD,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAa+Z,EAAM9Z,SAAS,AAClCD,CAAAA,EAAWqc,cAAc,CAAGW,EAC5Bhd,EAAWyc,mBAAmB,CAAGU,EACjCnd,EAAW2c,uBAAuB,CAAGa,EACrCxd,EAAWyd,cAAc,CAAGV,CAChC,CACJ,CAwFJ,EAAG5C,GAAkBA,CAAAA,EAAgB,CAAC,CAAA,GAO/BA,CACX,GACAplB,EAAgBD,EAAU,sCAAuC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,4CAA4C,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,uCAAuC,CAAC,CAAE,SAAUY,CAAC,CAAEykB,CAAa,CAAExkB,CAAC,CAAE6Q,CAAa,CAAE2J,CAAa,EAYjV,GAAM,CAAEzY,SAAAA,CAAQ,CAAE9B,IAAAA,CAAG,CAAEC,IAAAA,CAAG,CAAE,CAAGH,EACzB,CAAEwQ,SAAAA,CAAQ,CAAE5F,UAAAA,CAAS,CAAE/D,WAAAA,CAAU,CAAE,CAAG5G,EACtC,CAAE0D,WAAAA,CAAU,CAAEtD,qBAAAA,CAAoB,CAAE,CAAGoa,CAoB7C,OAAMuN,EAMF7X,YAAYlJ,CAAK,CAAEghB,CAAU,CAAE,CAC3B,IAAI,CAACC,eAAe,CAAGC,IACvB,IAAI,CAACC,OAAO,CAAG,EAAE,CACjB,IAAI,CAAChW,IAAI,CAACnL,EAAOghB,EACrB,CAcA7V,KAAKnL,CAAK,CAAEghB,CAAU,CAAE,CACpB,IAAMI,EAAK,IAAI,CAAClX,aAAa,CAAG,IAAIL,CACpC,CAAA,IAAI,CAAC7J,KAAK,CAAGA,EACb,IAAI,CAACghB,UAAU,CAAGA,EAClB,IAAI,CAACG,OAAO,CAAG,EAAE,CACjB,IAAI,CAACF,eAAe,CAAG,EACvB,IAAI,CAACI,MAAM,GACXD,EAAG7X,QAAQ,CAAC,IAAI,CAAC0E,iBAAiB,CAAE,UAAW,AAAC1U,GAAM,IAAI,CAAC+nB,SAAS,CAAC/nB,IACrE6nB,EAAG7X,QAAQ,CAAC,IAAI,CAAC0E,iBAAiB,CAAE,QAAS,AAAC1U,GAAM,IAAI,CAACgoB,OAAO,CAAChoB,IACjE,CAAC,UAAW,WAAW,CAACwH,OAAO,CAAC,AAACygB,GAAcJ,EAAG7X,QAAQ,CAACtQ,EAAKuoB,EAAW,AAACjoB,GAAM,IAAI,CAACkoB,SAAS,CAACloB,KACjG,CAAC,YAAa,aAAa,CAACwH,OAAO,CAAC,AAACygB,GAAcJ,EAAG7X,QAAQ,CAACvJ,EAAM0H,QAAQ,CAAE8Z,EAAW,KACtF,IAAI,CAACE,eAAe,CAAG,CAAA,CAC3B,GACJ,CAMAL,OAAOM,CAAK,CAAE,CACV,IAAM/B,EAAc,IAAI,CAAC5f,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAAE4c,EAAkBhC,GAAeA,EAAY5R,kBAAkB,CAAEgT,EAAa,IAAI,CAACA,UAAU,CACnJ,IAAI,CAACa,uBAAuB,GACxBD,GACAA,EAAgBlT,OAAO,EACvBiT,GACAA,EAAM/lB,MAAM,EAEZ,IAAI,CAACulB,OAAO,CAAGQ,EAAMhf,MAAM,CAAC,SAAUwe,CAAO,CAAEW,CAAa,EACxD,IAAMC,EAAaf,CAAU,CAACc,EAAc,CACvC1W,qBAAqB,GAC1B,OAAO+V,EAAQvN,MAAM,CAACmO,EAC1B,EAAG,EAAE,EACL,IAAI,CAAC5K,gBAAgB,KAGrB,IAAI,CAACgK,OAAO,CAAG,EAAE,CACjB,IAAI,CAACF,eAAe,CAAG,EACvB,IAAI,CAACe,gBAAgB,GAE7B,CAQA7K,kBAAmB,CACf,IAAM8K,EAAc,CAAC,+BAA+B,EAAE,IAAI,CAACjiB,KAAK,CAAC6M,KAAK,CAAC,CAAC,CAAEqV,EAAYxlB,EAAWulB,GACjG,IAAI,CAACD,gBAAgB,GACjBE,GACA,IAAI,CAACC,uBAAuB,CAACD,GAC7B,IAAI,CAACE,UAAU,CAAGF,GAGlB,IAAI,CAACG,gBAAgB,EAE7B,CASAC,KAAKC,CAAS,CAAE,CACZ,IAAMC,EAAY,IAAI,CAACrB,OAAO,EAAI,IAAI,CAACA,OAAO,CAAC,IAAI,CAACF,eAAe,CAAC,CAChEuB,GAAaA,EAAU9W,SAAS,EAChC8W,EAAU9W,SAAS,CAAC6W,GAGpB,IAAI,CAACviB,KAAK,CAACsO,YAAY,EACvB,IAAI,CAACtO,KAAK,CAACsO,YAAY,CAACG,iBAAiB,GAE7C,IAAI,CAACwS,eAAe,EAAIsB,EACxB,IAAME,EAAY,IAAI,CAACtB,OAAO,EAAI,IAAI,CAACA,OAAO,CAAC,IAAI,CAACF,eAAe,CAAC,CACpE,GAAIwB,EAAW,CACX,GAAIA,EAAUhX,QAAQ,EAAI,CAACgX,EAAUhX,QAAQ,GACzC,OAAO,IAAI,CAAC6W,IAAI,CAACC,GAErB,GAAIE,EAAUtX,IAAI,CAEd,OADAsX,EAAUtX,IAAI,CAACoX,GACR,CAAA,CAEf,CAWA,OATA,IAAI,CAACtB,eAAe,CAAG,EAEvB,IAAI,CAACyB,OAAO,CAAG,CAAA,EACXH,EAAY,EACZ,IAAI,CAACH,UAAU,EAAI,IAAI,CAACA,UAAU,CAAClU,KAAK,GAGxC,IAAI,CAACD,iBAAiB,CAACC,KAAK,GAEzB,CAAA,CACX,CAMAqT,QAAQhoB,CAAC,CAAE,CACP,IAAMyG,EAAQ,IAAI,CAACA,KAAK,CAAE2iB,EAAuBppB,EAAEkB,aAAa,EAC5DuF,EAAMyN,SAAS,CAACmV,QAAQ,CAACrpB,EAAEkB,aAAa,EAAImlB,EAAc5f,EAAMiD,OAAO,CAAC+B,aAAa,CAAE4c,EAAkBhC,GAAeA,EAAY5R,kBAAkB,CAAEU,EAAUkT,GAAmBA,EAAgBlT,OAAO,CAEhN,GAAIA,GACA,CAAC,IAAI,CAACgU,OAAO,EACb,CAAC,IAAI,CAACG,kBAAkB,EACxB,CAAC,IAAI,CAACnB,eAAe,EACrB,CAACiB,EAAqB,CACtB,IAAMjgB,EAAK,IAAI,CAACogB,qBAAqB,EAC1B,QAAPpgB,IACA,IAAI,CAACue,eAAe,CAAGve,EACvB,IAAI,CAACye,OAAO,CAACze,EAAG,CAACyI,IAAI,CAAC,GAE9B,CACA,IAAI,CAAC4X,aAAa,CAAG,CAAA,EACrB,IAAI,CAACL,OAAO,CAAG,CAAA,CACnB,CAOAjB,UAAUloB,CAAC,CAAE,CAET,GADA,OAAO,IAAI,CAACmoB,eAAe,CACvB,CAAC,IAAI,CAACqB,aAAa,EACnBxpB,EAAEkB,aAAa,GAAKrB,EAAsB,CAC1C,IAAM4G,EAAQ,IAAI,CAACA,KAAK,CACxB,GAAI,CAACzG,EAAEypB,MAAM,EACT,CAAChjB,EAAMyN,SAAS,CAACmV,QAAQ,CAACrpB,EAAEypB,MAAM,EAAG,CACrC,IAAMC,EAAS,IAAI,CAAC9B,OAAO,EACvB,IAAI,CAACA,OAAO,CAAC,IAAI,CAACF,eAAe,EAAI,EAAE,CACvCgC,GAAUA,EAAOvX,SAAS,EAC1BuX,EAAOvX,SAAS,GAEpB,IAAI,CAACuV,eAAe,CAAG,CAC3B,CACIjhB,EAAMsO,YAAY,GAClBtO,EAAMsO,YAAY,CAACG,iBAAiB,GACpC,OAAOzO,EAAMsO,YAAY,EAE7B,IAAI,CAACyU,aAAa,CAAG,CAAA,CACzB,CACJ,CAMAzB,UAAU4B,CAAE,CAAE,KAIN7mB,EAHJ,IAAM9C,EAAI2pB,GAAMhqB,EAAIiqB,KAAK,CAAEC,EAAgB,IAAI,CAACjC,OAAO,EACnD,IAAI,CAACA,OAAO,CAACvlB,MAAM,EACnB,IAAI,CAACulB,OAAO,CAAC,IAAI,CAACF,eAAe,CAAC,CAEhC+B,EAASzpB,EAAEypB,MAAM,CACvB,GAAIA,CAAAA,CAAAA,GACAA,AAAoB,UAApBA,EAAOnS,QAAQ,EACdmS,EAAO5nB,SAAS,CAACwnB,QAAQ,CAAC,gCAA+B,IAI9D,IAAI,CAACG,aAAa,CAAG,CAAA,EAErB,IAAI,CAACL,OAAO,CAAG,CAAA,EAGXU,GAAc,CACd,IAAMzX,EAAWyX,EAAanX,GAAG,CAAC1S,EAC9BoS,CAAAA,IAAayX,EAAazX,QAAQ,CAACC,OAAO,CAC1CvP,EAAiB,CAAA,EAEZsP,IAAayX,EAAazX,QAAQ,CAACE,IAAI,CAC5CxP,EAAiB,IAAI,CAACimB,IAAI,CAAC,IAEtB3W,IAAayX,EAAazX,QAAQ,CAACG,IAAI,EAC5CzP,CAAAA,EAAiB,IAAI,CAACimB,IAAI,CAAC,EAAC,EAE5BjmB,IACA9C,EAAE8C,cAAc,GAChB9C,EAAEsiB,eAAe,GAEzB,CACJ,CAKAgG,yBAA0B,KAElB5T,EADJ,IAAM2R,EAAc,IAAI,CAAC5f,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAAE4c,EAAkBhC,GAAeA,EAAY5R,kBAAkB,CAAEqV,EAAqB,CAAEzB,CAAAA,GAAmBA,AAA4B,CAAA,IAA5BA,EAAgBlT,OAAO,AAAS,EAAI1O,EAAQ,IAAI,CAACA,KAAK,CAAEyN,EAAYzN,EAAMyN,SAAS,CAEhPzN,EAAM0H,QAAQ,CAACI,YAAY,CAAC,aAC5B2F,EAAUsO,eAAe,CAAC,YAC1B9N,EAAoBjO,EAAM0H,QAAQ,EAGlCuG,EAAoBR,EAExB,IAAI,CAACQ,iBAAiB,CAAGA,EACzB,IAAMqV,EAAcrV,EAAkBkG,YAAY,CAAC,WAC/CkP,CAAAA,GAAsB,CAACC,EACvBrV,EAAkBxG,YAAY,CAAC,WAAY,KAErC4b,GACNrjB,EAAMyN,SAAS,CAACsO,eAAe,CAAC,WAExC,CAKAsG,kBAAmB,CACf,IAAMriB,EAAQ,IAAI,CAACA,KAAK,CAAEoiB,EAAa,IAAI,CAACA,UAAU,CAAGnpB,EAAImQ,aAAa,CAAC,OAC3EpJ,EAAM0H,QAAQ,CAAC/I,WAAW,CAACyjB,GAC3B,IAAI,CAACD,uBAAuB,CAACC,EACjC,CAMAD,wBAAwBjnB,CAAE,CAAE,CACxB,IAAMqoB,EAAgB,IAAI,CAACtV,iBAAiB,CAACkG,YAAY,CAAC,aAAe,EACzEjZ,EAAGuM,YAAY,CAAC,QAAS,0BACzBvM,EAAGuM,YAAY,CAAC,WAAY8b,GAC5BroB,EAAGuM,YAAY,CAAC,cAAe,CAAA,GAE/B,IAAI,CAAC+b,uBAAuB,CAACtoB,EACjC,CAKA8mB,kBAAmB,CACX,IAAI,CAACI,UAAU,EAAI,IAAI,CAACA,UAAU,CAAC7jB,UAAU,GAC7C,IAAI,CAAC6jB,UAAU,CAAC7jB,UAAU,CAACL,WAAW,CAAC,IAAI,CAACkkB,UAAU,EACtD,OAAO,IAAI,CAACA,UAAU,CAE9B,CAKAoB,wBAAwB1mB,CAAO,CAAE,CAC7B,IAAMkD,EAAQ,IAAI,CAACA,KAAK,CAAEgO,EAAqB,IAAI,CACnD,IAAI,CAAC9D,aAAa,CAACX,QAAQ,CAACzM,EAAS,QAAS,SAAUomB,CAAE,EACtD,IAAM3pB,EAAI2pB,GAAMhqB,EAAIiqB,KAAK,CAAER,EAAuBppB,EAAEkB,aAAa,EAC7DuF,EAAMyN,SAAS,CAACmV,QAAQ,CAACrpB,EAAEkB,aAAa,EAAIgpB,EAAoB,CAAEd,CAAAA,GAAuB3U,EAAmB0U,OAAO,AAAD,EAItH,GAHI1iB,EAAMsO,YAAY,EAClB,OAAOtO,EAAMsO,YAAY,CAEzBmV,EAQA,CAAA,GANAzV,EAAmB6U,kBAAkB,CAAG,CAAA,EACxC7U,EAAmBC,iBAAiB,CAACC,KAAK,GAC1C,OAAOF,EAAmB6U,kBAAkB,CAC5CtpB,EAAE8C,cAAc,GAGZ2R,EAAmBmT,OAAO,EAC1BnT,EAAmBmT,OAAO,CAACvlB,MAAM,CAAE,CACnCoS,EAAmBiT,eAAe,CAC9BjT,EAAmBmT,OAAO,CAACvlB,MAAM,CAAG,EACxC,IAAM4mB,EAAYxU,EAAmBmT,OAAO,CAACnT,EAAmBiT,eAAe,CAAC,AAE5EuB,CAAAA,GACAA,EAAU/W,QAAQ,EAAI,CAAC+W,EAAU/W,QAAQ,GAEzCuC,EAAmBsU,IAAI,CAAC,IAEnBE,GAELA,EAAUrX,IAAI,CAAC,GAEvB,CAAA,MAIA6C,EAAmB0U,OAAO,CAAG,CAAA,CAErC,EACJ,CAMAI,uBAAwB,CACpB,IAAM7gB,EAAM,IAAI,CAACkf,OAAO,CAACvlB,MAAM,CAC/B,IAAK,IAAID,EAAI,EAAGA,EAAIsG,EAAK,EAAEtG,EAAG,CAC1B,IAAM+nB,EAAM,IAAI,CAACvC,OAAO,CAACxlB,EAAE,CAC3B,GAAI,CAAC+nB,EAAIjY,QAAQ,EAAIiY,EAAIjY,QAAQ,GAC7B,OAAO9P,CAEf,CACA,OAAO,IACX,CAKA4P,SAAU,CACN,IAAI,CAACyW,gBAAgB,GACrB,IAAI,CAAC9X,aAAa,CAACR,iBAAiB,GACpC,IAAI,CAAC1J,KAAK,CAACyN,SAAS,CAACsO,eAAe,CAAC,WACzC,CACJ,CAmEA,OA7DA,AAAC,SAAUgF,CAAkB,EA6BzB,SAAS4C,IACL,IAAM3jB,EAAQ,IAAI,CAClB2D,EAAU,IAAI,CAAE,sBAAuB,CAAC,EAAG,WACnC3D,EAAM4jB,OAAO,EACb5jB,EAAM4jB,OAAO,CAACC,IAAI,CAAC,GAEvB7jB,EAAM0f,cAAc,EACxB,EACJ,CAMA,SAASoE,EAAkBvqB,CAAC,EACxB,IAAMwqB,EAAUxqB,EAAE4S,KAAK,EAAI5S,EAAE2S,OAAO,AACxB,CAAA,KACR6X,GAAmBhrB,EAAEirB,MAAM,EAC3BjrB,EAAEirB,MAAM,CAACjjB,OAAO,CAAC,AAACf,IACVA,GAASA,EAAMikB,mBAAmB,EAClCjkB,EAAMikB,mBAAmB,EAEjC,EAER,CA7BAlD,EAAmB5d,OAAO,CAT1B,SAASA,EAAQC,CAAU,EAEvB,GADAoa,EAAcra,OAAO,CAACC,GAClBxD,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,AACvCD,CAAAA,EAAW4gB,mBAAmB,CAAGN,EACjCpa,EAAStQ,EAAK,UAAW6qB,EAC7B,CACA,OAAO1gB,CACX,CA+BJ,EAAG2d,GAAuBA,CAAAA,EAAqB,CAAC,CAAA,GAOzCA,CACX,GACA3oB,EAAgBD,EAAU,8CAA+C,CAACA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,wBAAwB,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,6CAA6C,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAC,CAAE,SAAU+rB,CAAC,CAAEnrB,CAAC,CAAEorB,CAAM,CAAEnrB,CAAC,CAAE+Q,CAAsB,CAAEuC,CAAyB,CAAE3C,CAAE,CAAEpG,CAAE,EAY9f,GAAM,CAAE6gB,WAAAA,CAAU,CAAE,CAAGF,EACjB,CAAEnpB,SAAAA,CAAQ,CAAE9B,IAAAA,CAAG,CAAE,CAAGF,EACpB,CAAEwQ,SAAAA,CAAQ,CAAE5F,UAAAA,CAAS,CAAE0gB,SAAAA,CAAQ,CAAE1kB,KAAAA,CAAI,CAAEC,WAAAA,CAAU,CAAE0kB,YAAAA,CAAW,CAAE,CAAGtrB,EACnE,CAAEyL,cAAAA,CAAa,CAAE,CAAGkF,EACpB,CAAE/K,wBAAyB4E,CAAa,CAAEvI,SAAAA,CAAQ,CAAEkD,YAAAA,CAAW,CAAE,CAAGoF,EAkB1E,SAASghB,EAAmBvkB,CAAK,EAC7B,IAAMwkB,EAAQxkB,EAAMykB,MAAM,EAAIzkB,EAAMykB,MAAM,CAACC,QAAQ,CAAEC,EAAqB3kB,EAAMiD,OAAO,CAACwhB,MAAM,CAACzf,aAAa,EAAI,CAAC,EAAI4f,EAAuB5kB,EAAM6kB,SAAS,EAAI7kB,EAAM6kB,SAAS,CAACC,IAAI,CAAC,AAACC,GAAM,CAACA,EAAEC,WAAW,EAAI,CAACD,EAAEC,WAAW,CAACppB,MAAM,EAClO,MAAO,CAAC,CAAE4oB,CAAAA,GAASA,EAAM5oB,MAAM,EAC3B,CAACgpB,GACDD,AAA8B,CAAA,IAA9BA,EAAkBjW,OAAO,AAAS,CAC1C,CAIA,SAASuW,EAAwBC,CAAW,CAAErpB,CAAI,EAC9C,IAAMspB,EAAatpB,EAAKspB,UAAU,EAAI,CAAC,EAEvC,IAAK,IAAMte,KADXhL,EAAKupB,QAAQ,CAACF,EAAc,QAAU,GAAI,CAAA,GACxB,CAAC,QAAS,QAAS,SAAS,EAAE,CAC5C,IAAM7V,EAAa8V,CAAU,CAACte,EAAI,CAC5B/J,EAAUuS,GAAcA,EAAWvS,OAAO,EAAIuS,EAChDvS,GACA6G,EAAU7G,EAASooB,EAAc,YAAc,WAEvD,CACJ,CAaA,MAAMG,UAAwBtb,EAC1Bb,aAAc,CAMV,KAAK,IAAIG,WACT,IAAI,CAACic,uBAAuB,CAAGpE,IAC/B,IAAI,CAACqE,UAAU,CAAG,IACtB,CAUApa,MAAO,CACH,IAAMwK,EAAY,IAAI,CACtB,IAAI,CAAC6P,eAAe,GAKpB,IAAI,CAACjc,QAAQ,CAAC4a,EAAQ,cAAe,WAC7B,IAAI,CAACnkB,KAAK,GAAK2V,EAAU3V,KAAK,GAC9B2V,EAAU1L,aAAa,CAACwb,gCAAgC,CAAC,UACzD9P,EAAU+P,+BAA+B,GACrC/P,EAAU2P,uBAAuB,CAAG,IACpC,IAAI,CAACtlB,KAAK,CAAC2lB,mBAAmB,CAAChQ,EAAU2P,uBAAuB,EAG5E,GACA,IAAI,CAAC/b,QAAQ,CAAC4a,EAAQ,oBAAqB,SAAU5qB,CAAC,EAC9C,IAAI,CAACyG,KAAK,GAAK2V,EAAU3V,KAAK,EAAI,IAAI,CAACA,KAAK,CAAC4E,QAAQ,EACrD+Q,EAAUiQ,0BAA0B,CAACrsB,EAAEsC,IAAI,CAEnD,GACA,IAAI,CAAC0N,QAAQ,CAAC4a,EAAQ,cAAe,WAC7B,IAAI,CAACnkB,KAAK,GAAK2V,EAAU3V,KAAK,EAC9B,IAAI,CAACA,KAAK,CAAC4E,QAAQ,EACnB+Q,EAAU6P,eAAe,IACzBlB,EAAY,IAAM3O,EAAU1L,aAAa,CACpCwb,gCAAgC,CAAC,UAAWrB,EAAWzkB,EAAK,IAAI,CAACK,KAAK,CAAC4E,QAAQ,CAACihB,eAAe,CAAE,CAAA,IAAOC,QAAQ,CAE7H,EACJ,CAKAJ,iCAAkC,KAM1BP,EALJ,IAAMnlB,EAAQ,IAAI,CAACA,KAAK,CAClBykB,EAASzkB,EAAMykB,MAAM,CACrBD,EAAQC,EAAOC,QAAQ,EAAI,EAAE,CAC7BqB,EAAUtB,EAAOuB,WAAW,EAAI,EAChCC,EAAaxB,EAAOwB,UAAU,EAAI,EAExCzB,EAAMzjB,OAAO,CAAC,AAAClF,IACX,GAAIA,EAAKqqB,gBAAgB,CAAE,CACvB,IAAMC,EAAW1B,EAAO2B,KAAK,EAAI3B,EAAO2B,KAAK,CAACxqB,MAAM,CAC9CyqB,EAAUxqB,EAAKqqB,gBAAgB,CAACppB,OAAO,CACzC+mB,EAAO,CAAA,EAEX,GADAsB,EAAatpB,EAAKspB,UAAU,EAAI,CAAC,EAC7BgB,EAAU,CACV,IAAMG,EAAWnB,EAAWoB,MAAM,EAAI,EAChCzrB,EAAIqqB,EAAWrqB,CAAC,EAAI,EACpB0rB,EAAIrB,EAAW3X,KAAK,CACtBpQ,KAAKqpB,KAAK,CAACtB,EAAW3X,KAAK,CAACsC,OAAO,GAAG9Q,MAAM,EAC5C,EACJ6kB,EAAO/oB,EAAI0rB,EAAI/B,EAAO2B,KAAK,CAACE,EAAS,CAAGL,GACpCK,IAAaP,EAAU,CAC/B,CACIlC,EACI7jB,EAAMyR,UAAU,CAChBxW,EAASorB,EAAS,6BAGlBA,EAAQvX,KAAK,CAAC4X,UAAU,CAAG,UAI/BvoB,EAAYkoB,EAAS,6BACrBA,EAAQvX,KAAK,CAAC4X,UAAU,CAAG,GAEnC,CACJ,EACJ,CAIApb,eAAgB,CACPiZ,EAAmB,IAAI,CAACvkB,KAAK,GAC9B,IAAI,CAAC2mB,aAAa,EAE1B,CAIAC,4BAA4BrE,CAAS,CAAE,CACnC,IAAMviB,EAAQ,IAAI,CAACA,KAAK,CAClBykB,EAASzkB,EAAMykB,MAAM,CACrBoC,EAAYpC,EAAOuB,WAAW,EAAI,EAClCc,EAAYD,EAAYtE,EACxB6D,EAAQ3B,EAAO2B,KAAK,EAAI,EAAE,CAChC,GAAIU,EAAY,GAAKA,GAAaV,EAAMxqB,MAAM,CAAE,CAC5C,IAAID,EAAI,EACR,IAAK,IAAME,KAAQ4oB,EAAOC,QAAQ,CACzB,CAAA,AAAC7oB,CAAAA,EAAKspB,UAAU,EAAI,CAAC,CAAA,EAAGoB,MAAM,EAAI,CAAA,EAAK,IAAMO,GACxC9mB,EAAM2lB,mBAAmB,CAAChqB,IAE5B,CAAA,IAAI,CAAC2pB,uBAAuB,CAAG3pB,CAAAA,EAGvC,EAAEA,CAEV,CACJ,CAIAiqB,2BAA2B/pB,CAAI,CAAE,CACzBA,EAAKqqB,gBAAgB,EACrBrqB,EAAKqqB,gBAAgB,CAACa,eAAe,EAE7C,CAMAvB,iBAAkB,CACd,IAAMwB,EAAiB/tB,EAAIguB,aAAa,CAClC1B,EAAa,IAAI,CAACA,UAAU,CAC5B2B,EAAqBF,GAAkBzB,GACzCA,EAAW3C,QAAQ,CAACoE,UAExB,AADA,IAAI,CAACL,aAAa,KACdpC,EAAmB,IAAI,CAACvkB,KAAK,IAC7B,IAAI,CAACmnB,mBAAmB,GACxB,IAAI,CAACC,gBAAgB,GACrB,IAAI,CAAC1B,+BAA+B,GACpC,IAAI,CAAC2B,iBAAiB,GAClBH,GACA,IAAI,CAAClnB,KAAK,CAAC2lB,mBAAmB,CAAC,IAAI,CAACL,uBAAuB,EAExD,CAAA,EAGf,CAIAqB,eAAgB,CACZ,IAAI,CAAC1c,aAAa,CAACqd,WAAW,CAAC,SACnC,CAIAD,mBAAoB,CAChB,IAAMrnB,EAAQ,IAAI,CAACA,KAAK,CAClBunB,EAAc/jB,EAAc,AAACxD,CAAAA,EAAMykB,MAAM,EAC3CzkB,EAAMykB,MAAM,CAACxhB,OAAO,CAACyB,KAAK,EAC1B1E,EAAMykB,MAAM,CAACxhB,OAAO,CAACyB,KAAK,CAACC,IAAI,EAC/B,EAAC,EAAGlI,OAAO,CAAC,aAAc,KAAMuD,EAAM4E,QAAQ,CAACC,SAAS,EACtD2iB,EAAcxnB,EAAM8C,UAAU,CAAC,mCAAsCykB,CAAAA,EAAc,GAAK,SAAQ,EAAI,CACtGvnB,MAAAA,EACAunB,YAAAA,EACAxa,WAAYtI,EAAczE,EAC9B,GACA,IAAI,CAACiK,aAAa,CAACwd,gBAAgB,CAAC,SAAU,CAC1C,aAAcD,CAClB,EACJ,CAIAL,qBAAsB,CAClB,IAAMvH,EAAc,IAAI,CAAC5f,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAC9C0iB,EAAY9H,AAAkC,QAAlCA,EAAYjS,iBAAiB,CAC3C,SAAW,IACf,CAAA,IAAI,CAAC4X,UAAU,CAAG,IAAI,CAACtb,aAAa,CAAC8U,QAAQ,CAAC,SAAU,KAAM,CAG1D,aAAc,gBACdK,KAAMsI,CACV,EACJ,CAIAN,kBAAmB,KAEXjC,EADJ,IAAMxP,EAAY,IAAI,CAAE6O,EAAQ,AAAC,CAAA,IAAI,CAACxkB,KAAK,CAACykB,MAAM,EAAI,CAAC,CAAA,EAAGC,QAAQ,EAAI,EAAE,CAExEF,EAAMzjB,OAAO,CAAC,AAAClF,IAEPspB,AADJA,CAAAA,EAAatpB,EAAKspB,UAAU,EAAI,CAAC,CAAA,EAClB3X,KAAK,EAAI2X,EAAW3X,KAAK,CAAC1Q,OAAO,EAC5C6Y,EAAUgS,eAAe,CAAC9rB,EAElC,EACJ,CAKA8rB,gBAAgB9rB,CAAI,CAAE,CAClB,IAAMspB,EAAatpB,EAAKspB,UAAU,EAAI,CAAC,EACvC,GAAI,CAACA,EAAW3X,KAAK,EAAI,CAAC2X,EAAW9gB,KAAK,CACtC,OAEJ,IAAMujB,EAAY,IAAI,CAAC5nB,KAAK,CAAC8C,UAAU,CAAC,kCAAmC,CACvE9C,MAAO,IAAI,CAACA,KAAK,CACjB6nB,SAAUrkB,EAAc3H,EAAKyL,IAAI,CAAE,IAAI,CAACtH,KAAK,CAAC4E,QAAQ,CAACC,SAAS,EAChEhJ,KAAAA,CACJ,GACM+T,EAAU,CACZ0L,SAAU,GACV,eAAgBzf,EAAK8X,OAAO,CAC5B,aAAciU,CAClB,EAEME,EAA0B3C,EAAW9gB,KAAK,CAACkP,GAAG,CAChD4R,EAAW3X,KAAK,CAChB2X,EAAW9gB,KAAK,AACpBxI,CAAAA,EAAKqqB,gBAAgB,CAAG,IAAI,CAACjc,aAAa,CAAC2U,eAAe,CAAC,SAAU,CACjEC,MAAOsG,EAAW3X,KAAK,CACvBua,OAAQD,EAAwBhrB,OAAO,AAC3C,EAAG,SAAU8S,EACjB,CAKAxE,uBAAwB,CACpB,IAAMpI,EAAO,IAAI,CAACoH,QAAQ,CAAEuL,EAAY,IAAI,CAAE3V,EAAQ,IAAI,CAACA,KAAK,CAChE,OAAO,IAAIsM,EAA0BtM,EAAO,CACxCwL,WAAY,CACR,CACI,CAACxI,EAAKqH,IAAI,CAAErH,EAAKsH,KAAK,CAAEtH,EAAKuH,EAAE,CAAEvH,EAAKwH,IAAI,CAAC,CAC3C,SAAU0B,CAAO,EACb,OAAOyJ,EAAUqS,aAAa,CAAC,IAAI,CAAE9b,EACzC,EACH,CACD,CACI,CAAClJ,EAAKyH,KAAK,CAAEzH,EAAK0H,KAAK,CAAC,CACxB,WACI,OAAOiL,EAAU4J,UAAU,CAAC,IAAI,CACpC,EACH,CACD,CACI,CAACvc,EAAK8H,QAAQ,CAAE9H,EAAK6H,MAAM,CAAC,CAC5B,SAAUqB,CAAO,EACb,IAAMqW,EAAYrW,IAAYlJ,EAAK8H,QAAQ,CAAG,EAAI,GAElD,OADA6K,EAAUiR,2BAA2B,CAACrE,GAC/B,IAAI,CAAC5W,QAAQ,CAACC,OAAO,AAChC,EACH,CACJ,CACDH,SAAU,WACN,OAAOkK,EAAUsS,0BAA0B,EAC/C,EACA9c,KAAM,WACFnL,EAAM2lB,mBAAmB,CAAC,GAC1BhQ,EAAU2P,uBAAuB,CAAG,CACxC,EACA5Z,UAAW,WACPiK,EAAU2P,uBAAuB,CAAG,GACpCtlB,EAAMykB,MAAM,CAACC,QAAQ,CAAC3jB,OAAO,CAAC,AAAClF,GAASopB,EAAwB,CAAA,EAAOppB,GAC3E,CACJ,EACJ,CAKAmsB,cAAcrI,CAAyB,CAAE9Y,CAAG,CAAE,CAC1C,GAAM,CAAEuD,SAAU,CAAEC,KAAAA,CAAI,CAAEE,GAAAA,CAAE,CAAE,CAAE+a,wBAAAA,CAAuB,CAAEtlB,MAAAA,CAAK,CAAE,CAAG,IAAI,CAAEkoB,EAAWloB,EAAMykB,MAAM,CAACC,QAAQ,CAAC9oB,MAAM,CAAEmkB,EAAa/f,EAAMiD,OAAO,CAAC+B,aAAa,CACrJgJ,kBAAkB,CAAC+R,UAAU,CAAEwC,EAAY,AAAC1b,IAAQwD,GAAQxD,IAAQ0D,EAAM,GAAK,EAAGnD,EAAMpH,EAAM2lB,mBAAmB,CAACL,EAA0B/C,GASjJ,OARInb,EACA,IAAI,CAACke,uBAAuB,EAAI/C,EAE3BxC,GAAcmI,EAAW,IAC9B,IAAI,CAAC5C,uBAAuB,CAAG/C,EAAY,EACvC,EAAI2F,EAAW,EACnBloB,EAAM2lB,mBAAmB,CAAC,IAAI,CAACL,uBAAuB,GAEnD3F,EAA0BhU,QAAQ,CAACC,OAAO,AACrD,CAMA2T,WAAWI,CAAyB,CAAE,CAClC,IAAMwF,EAAa,IAAI,CAACnlB,KAAK,CAACykB,MAAM,CAACC,QAAQ,CAAC,IAAI,CAACY,uBAAuB,CAAC,CAI3E,OAHIH,GAAcA,EAAWe,gBAAgB,EACzCf,EAAWe,gBAAgB,CAACrH,KAAK,GAE9Bc,EAA0BhU,QAAQ,CAACC,OAAO,AACrD,CAIAqc,4BAA6B,CACzB,GAAI,CAAC1D,EAAmB,IAAI,CAACvkB,KAAK,EAC9B,MAAO,CAAA,EAEX,IAAMA,EAAQ,IAAI,CAACA,KAAK,CAAEmoB,EAAgBnoB,EAAMiD,OAAO,CAACwhB,MAAM,EAAI,CAAC,EAAGE,EAAqBwD,EAAcnjB,aAAa,EAAI,CAAC,EAC3H,MAAO,CAAC,CAAEhF,CAAAA,EAAMykB,MAAM,CAAC2D,OAAO,EAC1BzD,EAAkB3W,kBAAkB,EACpC2W,EAAkB3W,kBAAkB,CAACU,OAAO,AAAD,CACnD,CAKAnD,SAAU,CACN,IAAI,CAACob,aAAa,EACtB,CACJ,CAsEA,OAhEA,AAAC,SAAUtB,CAAe,EAetB,SAASgD,EAAyB3lB,CAAE,EAChC,IAAM8hB,EAAQ,IAAI,CAACC,MAAM,CAACC,QAAQ,CAC5B4D,EAAQ,IAAI,CAACtjB,aAAa,EAC5B,IAAI,CAACA,aAAa,CAACgc,UAAU,CAACyD,MAAM,CAACa,uBAAuB,CAC1DiD,EAAkB/D,CAAK,CAAC9hB,EAAG,CAAEyiB,EAAaoD,GAAiBpD,YAAc,CAAC,EAChF,GAAIoD,EAAiB,CACblE,EAASiE,IAAU9D,CAAK,CAAC8D,EAAM,EAC/BrD,EAAwB,CAAA,EAAOT,CAAK,CAAC8D,EAAM,EAE/CE,AAxYZ,SAA4B/D,CAAM,CAAEgE,CAAM,EACtC,IAAMnC,EAAW,AAAC7B,CAAAA,EAAOC,QAAQ,CAAC+D,EAAO,CAACtD,UAAU,EAAI,CAAC,CAAA,EAAGoB,MAAM,CAAER,EAAUtB,EAAOuB,WAAW,AACxE,MAAA,IAAbM,GAA4BA,EAAW,IAAMP,GACpDtB,EAAOiE,MAAM,CAAC,EAAIpC,EAAWP,EAErC,EAmY+B,IAAI,CAACtB,MAAM,CAAE/hB,GAChC,IAAMimB,EAAiBxD,EAAW3X,KAAK,CACjCob,EAAWL,EAAgBrC,gBAAgB,EAC7CqC,EAAgBrC,gBAAgB,CAACppB,OAAO,CAK5C,OAJI6rB,GAAkBA,EAAe7rB,OAAO,EAAI8rB,GAC5C,IAAI,CAACpW,iBAAiB,CAACmW,EAAgBC,GAE3C3D,EAAwB,CAAA,EAAMsD,GACvB,CAAA,CACX,CACA,MAAO,CAAA,CACX,CAgBA,SAASM,EAA0BtvB,CAAC,EAChC,IAAMyG,EAAQ,IAAI,CAACA,KAAK,CAAE4f,EAAc5f,EAAMiD,OAAO,CAAC+B,aAAa,CAAEmgB,EAAa5rB,EAAEsC,IAAI,AACpF+jB,CAAAA,EAAYlR,OAAO,EAAIyW,GAAcA,EAAWe,gBAAgB,EAChEf,EAAWe,gBAAgB,CAAChI,YAAY,CAACzW,YAAY,CAAC,eAAgBlO,EAAEoa,OAAO,CAAG,OAAS,QAEnG,CAVA0R,EAAgBliB,OAAO,CAPvB,SAASA,EAAQC,CAAU,CAAE0lB,CAAW,EACpC,GAAIlpB,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,AACvCD,CAAAA,EAAWsiB,mBAAmB,CAAG0C,EACjC9e,EAASuf,EAAa,oBAAqBD,EAC/C,CACJ,CAYJ,EAAGxD,GAAoBA,CAAAA,EAAkB,CAAC,CAAA,GAOnCA,CACX,GACAjtB,EAAgBD,EAAU,wCAAyC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,EAU3I,GAAM,CAAE+B,SAAAA,CAAQ,CAAEguB,cAAAA,CAAa,CAAE,CAAGhwB,EAC9B,CAAEwQ,SAAAA,CAAQ,CAAEyf,aAAAA,CAAY,CAAEvlB,QAAAA,CAAO,CAAE4gB,SAAAA,CAAQ,CAAE1kB,KAAAA,CAAI,CAAEC,WAAAA,CAAU,CAAE,CAAG5G,EASxE,SAASiwB,IAEAlkB,AADQ,IAAI,CACPmkB,aAAa,EACnBnkB,CAAAA,AAFS,IAAI,CAERmkB,aAAa,CAAG,IAAIC,EAFhB,IAAI,CAEuC,CAE5D,CAOA,SAASC,EAAW7vB,CAAC,EACjB,IAAmByG,EAAQ+E,AAAd,IAAI,CAAe/E,KAAK,CAAEyX,EAAezX,EAAMiD,OAAO,CAAEomB,EAAY5R,EAAa4R,SAAS,CAAEH,EAAgBnkB,AAA5G,IAAI,CAA6GmkB,aAAa,CAAEI,EAAYtpB,EAAMupB,OAAO,CAACD,SAAS,CAAEE,EAAgB/R,EAAa+R,aAAa,CAAEC,EAAWzpB,EAAMupB,OAAO,CAAC9vB,IAAI,CAC3P,GAAIsL,AADS,IAAI,CACR2kB,OAAO,EAAK,CAAA,AAACL,GAAaA,EAAU3a,OAAO,EAC/C8a,GAAiBA,EAAc9a,OAAO,GAEvC,GAAI+a,AAAa,MAAbA,EACAlwB,EAAEowB,MAAM,CAAG,CAAA,OAOV,GAAI,AAAC,CAAA,AAAC,CAACZ,GAAiBU,AAAa,OAAbA,GACxBV,GAAiBO,AAAc,OAAdA,CAAkB,GACpCvkB,AAdK,IAAI,CAcJ9B,OAAO,CAAC6C,KAAK,CAAE,CACpB,IAAM8jB,EAAeV,EAAcU,YAAY,CAC3CnmB,EAAQlK,EAAEswB,MAAM,EAChBX,EAAcU,YAAY,CAAG,CAAC7kB,AAjB7B,IAAI,CAiB8B1H,GAAG,CAAE0H,AAjBvC,IAAI,CAiBwCgB,GAAG,CAAC,CAE5C6jB,IACLrwB,EAAEswB,MAAM,CAAGD,CAAY,CAAC,EAAE,CAC1BrwB,EAAEuwB,MAAM,CAAGF,CAAY,CAAC,EAAE,CAC1BV,EAAcU,YAAY,CAAG,KAAK,EAE1C,EAEoB,KAAA,IAAbrwB,EAAEowB,MAAM,EACfpwB,EAAE8C,cAAc,EAExB,CAUA,MAAM8sB,EASF,OAAOhmB,QAAQ4mB,CAAS,CAAE,CAClBnqB,EAAW7E,EAAU,IAAI,CAACoI,OAAO,IACjC4mB,EAAUC,SAAS,CAACluB,IAAI,CAAC,iBACzByN,EAASwgB,EAAW,OAAQd,GAC5B1f,EAASwgB,EAAW,OAAQX,GAEpC,CAMAlgB,YAAYnE,CAAI,CAAE,CACd,IAAI,CAACA,IAAI,CAAGA,CAChB,CASAwG,SAAU,CACN,IAAI,CAACxG,IAAI,CAAG,KAAK,CACrB,CAQAklB,aAAaC,CAAK,CAAEC,CAAK,CAAEC,CAAQ,CAAEC,CAAQ,CAAE,CAC3C,IAAMtlB,EAAO,IAAI,CAACA,IAAI,CAAE/E,EAAQ+E,EAAK/E,KAAK,CACtC6pB,EAASlqB,EAAKyqB,EAAUrlB,EAAKulB,SAAS,CAACJ,EAAO,CAAA,EAAM,CAACnlB,EAAKwlB,KAAK,GAAIT,EAASnqB,EAAK0qB,EAAUtlB,EAAKulB,SAAS,CAACH,EAAO,CAAA,EAAM,CAACplB,EAAKwlB,KAAK,GAChIC,EAAaxqB,GAASA,EAAMwqB,UAAU,CAAEC,EAAiB,AAAC1lB,CAAAA,EAAK2lB,UAAU,EAAI,CAAA,EAAK,EAoBxF,OAlBKjnB,EAAQ2mB,IACTP,CAAAA,EAASb,EAAaa,EAASY,EAAc,EAE5ChnB,EAAQ4mB,IACTP,CAAAA,EAASd,EAAac,EAASW,EAAc,EAG7CD,GAAczlB,EAAKY,OAAO,EAAIZ,EAAKW,OAAO,GACtCokB,GAAU/kB,EAAKW,OAAO,EACtBmkB,CAAAA,EAASb,EAAajkB,EAAKW,OAAO,CAAG8kB,EAAU,EAE/CX,GAAU9kB,EAAKY,OAAO,EACtBmkB,CAAAA,EAASd,EAAajkB,EAAKY,OAAO,CAAG6kB,EAAU,GAGlDnG,EAASwF,IAAYxF,EAASyF,IAC/BD,CAAAA,EAASC,EAAS,KAAK,CAAA,EAEpB,CACHzsB,IAAKwsB,EACL9jB,IAAK+jB,CACT,CACJ,CACJ,CAOA,OAAOX,CACX,GACA/wB,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,sBAAsB,CAAEA,CAAQ,CAAC,gCAAgC,CAAC,CAAE,SAAUwyB,CAAK,CAAEC,CAAc,EAU3K,GAAM,CAAEC,MAAO9b,CAAK,CAAE,CAAG4b,EACnB,CAAEG,YAAAA,CAAW,CAAE,CAAGF,EAclBG,EAAoB,CAuDtB/rB,OAAQ,GAOR4P,OAAQ,GAURoc,WAAY,CAAA,EAOZC,QAAS,CASLlsB,MAAO,EASPC,OAAQ,GAqBRksB,QAAS,CAAC,mBAAoB,mBAAmB,CAMjDxc,QAAS,CAAA,EAUTO,UAAW,EAMXkc,gBAAiB,UAMjBC,YAAa,SACjB,EAgBAC,SAAUtc,EAAM,WAA0Cuc,UAAU,CAAC,IAAKC,GAAG,GAW7EC,aAAc,UAadC,aAAc,EAkCd5nB,OAAQ,CAeJpK,KAAO,AAAkC,KAAA,IAA3BqxB,EAAYY,UAAU,CAChC,OACA,aAIJC,YAAa,IAIb1c,UAAW,EAIX2c,QAAS,KAITlT,aAAc,CACVhK,QAAS,CAAA,CACb,EAcAmd,aAAc,CACVC,cAAe,UACfpd,QAAS,CAAA,EACTqd,gBAAiB,EAEjBC,YAAa,aACbC,OAAQ,SACRC,WAAY,YAEZC,MAAO,CACH,CAAC,cAAe,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAI,CAAC,CACzD,CAAC,SAAU,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAG,CAAC,CACjC,CAAC,SAAU,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAG,CAAC,CACjC,CAAC,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,CAAC,CAChC,CAAC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAE,CAAC,CACrB,CAAC,OAAQ,CAAC,EAAG,EAAG,EAAE,CAAC,CACnB,CAAC,QAAS,CAAC,EAAG,EAAG,EAAE,CAAC,CACpB,CAAC,OAAQ,KAAK,CACjB,AACL,EAOAC,WAAY,CACR1d,QAAS,CAAA,EACT8C,OAAQ,CACZ,EACA7U,GAAI,8BACJxB,UAAW,8BAaXkxB,UAAW,KACXC,OAAQ,CACJ5d,QAAS,CAAA,CACb,EAkBA6d,UAAW,IACf,EAqCApkB,MAAO,CAQHqkB,WAAY,EACZrxB,UAAW,6BACXsxB,WAAY,EACZxd,UAAW,EACXyd,cAAe,UACfC,cAAe,EACfC,kBAAmB,IACnB/Y,OAAQ,CACJgZ,MAAO,OAIP/d,MAAO,CAEHC,MAAO,UAEP+d,SAAU,QAEVxtB,QAAS,GAETytB,YAAa,cACjB,EACAlyB,EAAG,EACHC,EAAG,EACP,EACAkyB,UAAW,CAAA,CACf,EA0BA5kB,MAAO,CACHjN,UAAW,6BACXwxB,cAAe,EACfM,YAAa,CAAA,EACbC,UAAW,CAAA,EACXC,WAAY,GACZC,WAAY,GACZvZ,OAAQ,CACJnF,QAAS,CAAA,CACb,EACAse,UAAW,CAAA,EACXtoB,MAAO,CACHC,KAAM,IACV,EACA8nB,WAAY,EACZY,UAAW,CACf,CACJ,EAyBA,OAAOtC,CACX,GACA3yB,EAAgBD,EAAU,sCAAuC,EAAE,CAAE,WA2CjE,MAJyB,CACrB,mBArBJ,SAAyBm1B,CAAE,CAAEC,CAAE,CAAExuB,CAAK,CAAEC,CAAM,CAAEiE,EAAU,CAAC,CAAC,EACxD,IAAMuqB,EAAYvqB,EAAQlE,KAAK,CAAGkE,EAAQlE,KAAK,CAAG,EAAIA,EAAO0uB,EAAiBrwB,KAAKqpB,KAAK,CAAC+G,EAAY,GAAK,GAE1G,MAAO,CACH,CAAC,IAAK,CAACA,EAAY,EAAG,GAAI,CAC1B,CAAC,IAAKA,EAAW,GAAI,CACrB,CAAC,IAAKA,EAAWxuB,AAJrBA,CAAAA,EAASiE,EAAQjE,MAAM,EAAIA,CAAK,EAIF,GAAI,CAC9B,CAAC,IAAK,CAACwuB,EAAY,EAAGxuB,EAAS,GAAI,CACnC,CAAC,IAAK,CAACwuB,EAAY,EAAG,GAAI,CAC1B,CAAC,IAAK,CAACC,EAAgB,EAAE,CACzB,CAAC,IAAK,CAACA,EAAgBzuB,EAAS,EAAE,CAClC,CAAC,IAAKyuB,EAAiB,EAAG,EAAE,CAC5B,CAAC,IAAKA,EAAiB,EAAGzuB,EAAS,EAAE,CACxC,AACL,CAQA,CAGJ,GACA5G,EAAgBD,EAAU,0CAA2C,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,sCAAsC,CAAEA,CAAQ,CAAC,oCAAoC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUu1B,CAAC,CAAE30B,CAAC,CAAEowB,CAAsB,CAAE4B,CAAiB,CAAE4C,CAAgB,CAAEC,CAAgB,CAAE50B,CAAC,MAmB9b60B,EATJ,GAAM,CAAEC,eAAAA,CAAc,CAAEC,WAAAA,CAAU,CAAE,CAAGL,EACjC,CAAE3yB,SAAAA,CAAQ,CAAEguB,cAAAA,CAAa,CAAE,CAAGhwB,EAC9B,CAAEi1B,gBAAAA,CAAe,CAAE,CAAGJ,EACtB,CAAErkB,SAAAA,CAAQ,CAAEO,OAAAA,CAAM,CAAEmkB,MAAAA,CAAK,CAAEtuB,KAAAA,CAAI,CAAEC,WAAAA,CAAU,CAAE,CAAG5G,EAoCtD,SAASk1B,IACD,IAAI,CAAC7E,SAAS,EAEd,IAAI,CAACA,SAAS,CAAC8E,aAAa,CAAC,KAAM,CAAA,EAE3C,CAQA,SAASC,QAEDjG,EAAehgB,EAAOC,EAD1B,IAAMqc,EAAS,IAAI,CAACA,MAAM,CAAE4E,EAAY,IAAI,CAACA,SAAS,CAEtD,GAAIA,EAAW,CACXlB,EAAgB1D,GAAUA,EAAOxhB,OAAO,CACxCkF,EAAQkhB,EAAUlhB,KAAK,CACvBC,EAAQihB,EAAUjhB,KAAK,CACvB,GAAM,CAAEimB,gBAAAA,CAAe,CAAEC,iBAAAA,CAAgB,CAAE,CAAGjF,CAE1C,CAAA,IAAI,CAACkF,QAAQ,EACblF,EAAUhf,IAAI,CAAGgf,EAAUmF,QAAQ,CAC/B,IAAI,CAACC,UAAU,CAAGJ,EACdhF,EAAUrqB,MAAM,CACpB,IAAI,CAAC0vB,OAAO,CAAC,EAAE,CAAGL,EACtBhF,EAAUsF,GAAG,CAAG,IAAI,CAACC,OAAO,CAAGN,IAG/BjF,EAAUhf,IAAI,CAAG1K,EAAKwI,EAAMkC,IAAI,CAAE,IAAI,CAACwkB,QAAQ,CAAGP,GAClDjF,EAAUsF,GAAG,CAAGtF,EAAUyF,gBAAgB,CAACH,GAAG,EAC1C,IAAI,CAACI,WAAW,CACZ1F,EAAUrqB,MAAM,CAChBqvB,EACC,CAAA,IAAI,CAAChmB,SAAS,EAAEpF,QAAQ2L,QAAU,CAAA,EACnC,IAAI,CAAC8f,OAAO,CAAC,EAAE,CACd,CAAA,IAAI,CAAClF,aAAa,EAAI,IAAI,CAACwF,iBAAiB,CACzC,IAAI,CAACxF,aAAa,CAACyF,SAAS,GAC5B,CAAA,EACH,CAAA,AAAC9G,GACEA,AAAgC,WAAhCA,EAAc+G,aAAa,EAC3B/G,AAAyB,cAAzBA,EAAcgH,MAAM,EACpBhH,EAAczZ,OAAO,EACrB,CAACyZ,EAAciH,QAAQ,CACvB3K,EAAO4K,YAAY,CACf1vB,EAAKwoB,EAAcvZ,MAAM,CAAE,IAC/B,CAAA,EACH,CAAA,IAAI,CAAC0gB,WAAW,CAAG,IAAI,CAACA,WAAW,CAAC,EAAE,CAAG,CAAA,GAElDnnB,GAASC,IACL,IAAI,CAACmmB,QAAQ,CACbpmB,EAAMlF,OAAO,CAACoH,IAAI,CAAGjC,EAAMnF,OAAO,CAACoH,IAAI,CAAGgf,EAAUhf,IAAI,CAGxDlC,EAAMlF,OAAO,CAAC0rB,GAAG,CAAGvmB,EAAMnF,OAAO,CAAC0rB,GAAG,CAAGtF,EAAUsF,GAAG,CAEzDxmB,EAAMonB,WAAW,GACjBnnB,EAAMmnB,WAAW,GAEzB,CACJ,CAKA,SAASC,EAAmBrM,CAAK,EACzB,CAAC,IAAI,CAACkG,SAAS,EAAI,CAAC,IAAI,CAACoG,QAAQ,EAChC,CAAA,IAAI,CAACxsB,OAAO,CAAComB,SAAS,CAAC3a,OAAO,EAC3B,IAAI,CAACzL,OAAO,CAACoF,SAAS,CAACqG,OAAO,AAAD,IACjC,IAAI,CAAC+gB,QAAQ,CAAG,IAAI,CAACpG,SAAS,CAAG,IAAIwE,EAAqB,IAAI,EAC1DluB,EAAKwjB,EAAMuM,MAAM,CAAE,CAAA,IACnB,IAAI,CAACA,MAAM,CAACvM,EAAMwM,SAAS,EAGvC,CAKA,SAASC,IACL,IAAM3sB,EAAU,IAAI,CAACA,OAAO,CACxBA,CAAAA,EAAQomB,SAAS,CAAC3a,OAAO,EACzBzL,EAAQoF,SAAS,CAACqG,OAAO,AAAD,GACxB,CAAA,IAAI,CAAC+gB,QAAQ,CAAG,IAAI,CAACpG,SAAS,CAAG,IAAIwE,EAAqB,IAAI,CAAA,CAEtE,CAOA,SAASgC,IACL,IAAMpY,EAAe,IAAI,CAACxU,OAAO,CAAEomB,EAAY5R,EAAa4R,SAAS,CAAEG,EAAgB/R,EAAa+R,aAAa,CACjH,GAAI,AAAC,CAAA,AAACH,GAAaA,EAAU3a,OAAO,EAC/B8a,GAAiBA,EAAc9a,OAAO,GACtC,CAAA,AAAC,CAACqa,GACC,AAAsB,MAAtB,IAAI,CAACQ,OAAO,CAAC9vB,IAAI,EAChBsvB,GAAiB,AAA2B,MAA3B,IAAI,CAACQ,OAAO,CAACD,SAAS,AAAQ,EACpD,MAAO,CAAA,CAEf,CAIA,SAASwG,EAAgB9vB,CAAK,EAC1B,IAAMqpB,EAAYrpB,EAAMqpB,SAAS,CAEjC,GAAIA,GAAarpB,EAAMmI,KAAK,CAAC,EAAE,CAAE,CAC7B,IAAMvB,EAAW5G,EAAMmI,KAAK,CAAC,EAAE,CAAC4nB,WAAW,GAC3C1G,EAAU2G,MAAM,CAACppB,EAASvJ,GAAG,CAAEuJ,EAASb,GAAG,CAC/C,CACJ,CAKA,SAASsF,EAAc9R,CAAC,EACpB,IAAMu1B,EAAoBv1B,EAAE0J,OAAO,CAAComB,SAAS,EAAI,CAAC,EAAI4G,EAAoB12B,EAAE0J,OAAO,CAACoF,SAAS,EAAI,CAAC,CAC9F,EAAC,IAAI,CAACghB,SAAS,EAAI,CAAC,IAAI,CAACoG,QAAQ,EAChCX,CAAAA,EAAiBpgB,OAAO,EAAIuhB,EAAiBvhB,OAAO,AAAD,IACpDuf,EAAM,CAAA,EAAM,IAAI,CAAChrB,OAAO,CAAComB,SAAS,CAAEyF,GACpCb,EAAM,CAAA,EAAM,IAAI,CAAChrB,OAAO,CAACoF,SAAS,CAAE4nB,GACpC,OAAO12B,EAAE0J,OAAO,CAAComB,SAAS,CAC1B,OAAO9vB,EAAE0J,OAAO,CAACoF,SAAS,CAElC,CAKA,SAAS6nB,IACD,IAAI,CAAClwB,KAAK,CAACqpB,SAAS,EAAI,CAAC,IAAI,CAACpmB,OAAO,CAACktB,UAAU,EAChD,IAAI,CAACnwB,KAAK,CAACqpB,SAAS,CAAC8E,aAAa,CAAC,KAAM,CAAA,EAEjD,CAUA,MAJ6B,CACzBhrB,QApKJ,SAASA,EAAQ4mB,CAAS,CAAE3mB,CAAU,CAAEgtB,CAAc,CAAEC,CAAW,EAG/D,GAFAlH,EAAuBhmB,OAAO,CAAC4mB,GAC/B8D,EAAuBuC,EACnBxwB,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,CACvCD,EAAWitB,SAAS,CAACx0B,IAAI,CAACg0B,GAC1BvmB,EAASnG,EAAY,iBAAkB8qB,GACvC3kB,EAASnG,EAAY,oBAAqBgrB,GAC1C7kB,EAASnG,EAAY,cAAeosB,GACpCjmB,EAASnG,EAAY,eAAgBwsB,GACrCrmB,EAASnG,EAAY,sBAAuBysB,GAC5CtmB,EAASnG,EAAY,SAAUiI,GAC/B9B,EAAS8mB,EAAa,cAAeH,GACrCpmB,EAAOkkB,IAAkB1qB,SAAS,CAAC4nB,OAAO,CAAEyC,GAC5C7jB,EAAOgkB,EAAgB,CAAEzE,UAAW0B,CAAkB,EAC1D,CACJ,CAqJA,CAGJ,GACA3yB,EAAgBD,EAAU,6BAA8B,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,MAiB5Hu3B,EAPJ,GAAM,CAAEx1B,SAAAA,CAAQ,CAAE,CAAGhC,EACf,CAAEwQ,SAAAA,CAAQ,CAAE9F,QAAAA,CAAO,CAAE9D,KAAAA,CAAI,CAAEC,WAAAA,CAAU,CAAE,CAAG5G,EAiMhD,OA1LA,AAAC,SAAUu3B,CAAa,EAMpB,IAAIC,EA2BJ,SAAST,EAAYhrB,CAAI,EACrB,IAAM0rB,EAAU9wB,EAAKoF,EAAK9B,OAAO,EAAI8B,EAAK9B,OAAO,CAAC5F,GAAG,CAAE0H,EAAK1H,GAAG,EACzDqzB,EAAU/wB,EAAKoF,EAAK9B,OAAO,EAAI8B,EAAK9B,OAAO,CAAC8C,GAAG,CAAEhB,EAAKgB,GAAG,EAC/D,MAAO,CACH0qB,QAAAA,EACAC,QAAAA,EACAC,UAAWltB,EAAQsB,EAAKY,OAAO,EAC3BvI,KAAKC,GAAG,CAACozB,EAAS1rB,EAAK1H,GAAG,CAAE0H,EAAKY,OAAO,CAAEhG,EAAKoF,EAAKwnB,SAAS,CAAEqE,MAAaH,EAChFI,UAAWptB,EAAQsB,EAAKW,OAAO,EAC3BtI,KAAK2I,GAAG,CAAC2qB,EAAS3rB,EAAKgB,GAAG,CAAEhB,EAAKW,OAAO,CAAE/F,EAAKoF,EAAKwnB,SAAS,CAAE,CAACqE,MAAaF,CACrF,CACJ,CAKA,SAASI,IACL,IAAmBzoB,EAAYtD,AAAlB,IAAI,CAAmBsD,SAAS,CAAEmmB,EAAWnmB,GAAa,CAACA,EAAUpF,OAAO,CAACurB,QAAQ,CAAE3hB,EAAQ9H,AAA/F,IAAI,CAAgGwlB,KAAK,CAAG,EAAIiE,EAAW,EAAI,EACxInmB,IAEAtD,AAHS,IAAI,CAGR/E,KAAK,CAAC+wB,iBAAiB,CAAG,CAAC,EAAG,EAAE,CACrChsB,AAJS,IAAI,CAIR/E,KAAK,CAACgxB,UAAU,CAACnkB,EAAM,EACxBxE,EAAU4oB,IAAI,CAAI5oB,CAAAA,EAAUpF,OAAO,CAAC2L,MAAM,EAAI,CAAA,EAE1D,CAKA,SAASsiB,IACL,IAAMnsB,EAAO,IAAI,AACbA,CAAAA,EAAK9B,OAAO,EACZ8B,EAAK9B,OAAO,CAACoF,SAAS,EACtBtD,EAAK9B,OAAO,CAACoF,SAAS,CAACqG,OAAO,GAE9B3J,EAAK9B,OAAO,CAACoF,SAAS,CAAC8oB,QAAQ,CAAG,CAACpsB,EAAKwlB,KAAK,CAC7CxlB,EAAK9B,OAAO,CAACgqB,WAAW,CAAGloB,EAAK9B,OAAO,CAACiqB,SAAS,CAAG,CAAA,EACpDnoB,EAAKsD,SAAS,CAAG,IAAImoB,EAAUzrB,EAAK/E,KAAK,CAAC4E,QAAQ,CAAEG,EAAK9B,OAAO,CAACoF,SAAS,CAAEtD,EAAK/E,KAAK,EACtFuJ,EAASxE,EAAKsD,SAAS,CAAE,UAAW,SAAU9O,CAAC,MAEvC+O,EAAIC,EADR,GAAM,CAAEkoB,QAAAA,CAAO,CAAEC,QAAAA,CAAO,CAAEC,UAAWS,CAAS,CAAEP,UAAWQ,CAAS,CAAE,CAAGtB,EAAYhrB,GAAOe,EAAQurB,EAAYD,EAGhH,GAAI,AAAC3tB,EAAQgtB,IAAahtB,EAAQitB,IAclC,GAXI,AAAC3rB,EAAKwlB,KAAK,EAAI,CAACxlB,EAAKusB,QAAQ,EAC5B,CAACvsB,EAAKwlB,KAAK,EAAIxlB,EAAKusB,QAAQ,EAC7BhpB,EAAK8oB,EAAYtrB,EAAQ,IAAI,CAACwC,EAAE,CAChCC,EAAO6oB,EAAYtrB,EAAQ,IAAI,CAACyC,IAAI,GAKpCD,EAAK8oB,EAAYtrB,EAAS,CAAA,EAAI,IAAI,CAACyC,IAAI,AAAD,EACtCA,EAAO6oB,EAAYtrB,EAAS,CAAA,EAAI,IAAI,CAACwC,EAAE,AAAD,GAEtC,IAAI,CAACipB,oBAAoB,CAACh4B,EAAEi4B,OAAO,EAAG,CAEtC,IAAMC,EAAUl4B,AAAc,cAAdA,EAAEi4B,OAAO,EACrBj4B,AAAc,cAAdA,EAAEi4B,OAAO,EAA2B,KAAK,EAC7CzsB,EAAK2sB,WAAW,CAACnpB,EAAMD,EAAI,CAAA,EAAMmpB,EAASl4B,EAC9C,MAII,IAAI,CAACo4B,QAAQ,CAAC,IAAI,CAACppB,IAAI,CAAE,IAAI,CAACD,EAAE,EAExC,GAER,CAKA,SAASspB,QAEDC,EAActpB,EAAMD,EADxB,GAAmB,CAAEqoB,UAAAA,CAAS,CAAEE,UAAAA,CAAS,CAAE,CAAGd,EAAjC,IAAI,EAAgD1nB,EAAYtD,AAAhE,IAAI,CAAiEsD,SAAS,CAAElI,EAAU4E,AAA1F,IAAI,CAA2F+sB,eAAe,CAAI/sB,CAAAA,AAAlH,IAAI,CAAmHuqB,WAAW,EAAI,CAAA,EAAKyB,EAAoBhsB,AAA/J,IAAI,CAAgK/E,KAAK,CAAC+wB,iBAAiB,CAAEgB,EAAahtB,AAA1M,IAAI,CAA2M9B,OAAO,CAAC2L,MAAM,EAAI,EAE9O,GAAIvG,GAAa0oB,EAAmB,CAChC,GAAIhsB,AAHK,IAAI,CAGJwlB,KAAK,CAELxlB,AALA,IAAI,CAKCypB,QAAQ,EACduC,CAAAA,CAAiB,CAAC,EAAE,EAAI5wB,CAAK,EAEjCkI,EAAU1N,QAAQ,CAACoK,AARd,IAAI,CAQesF,IAAI,CAAGtF,AAR1B,IAAI,CAQ2B4pB,GAAG,CACnC5pB,AATC,IAAI,CASA/F,MAAM,CACX,EACA+xB,CAAiB,CAAC,EAAE,CACnBhsB,CAAAA,AAZA,IAAI,CAYCypB,QAAQ,CAAGuD,EAAa,CAAA,EAAKhtB,AAZlC,IAAI,CAYmChG,KAAK,CAAEgG,AAZ9C,IAAI,CAY+C/F,MAAM,EAEzD+F,AAdA,IAAI,CAcCypB,QAAQ,EACduC,CAAAA,CAAiB,CAAC,EAAE,EAAIgB,CAAS,EAErCF,EAAe,MAEd,KAKGG,CAHAjtB,CArBC,IAAI,CAqBAypB,QAAQ,EACbuC,CAAAA,CAAiB,CAAC,EAAE,EAAI5wB,CAAK,EAO7B6xB,EAJC3pB,EAAUpF,OAAO,CAACurB,QAAQ,CAIfzpB,AA7BX,IAAI,CA6BYsF,IAAI,CACjBtF,AA9BH,IAAI,CA8BIhG,KAAK,CACV,EACAgyB,CAAiB,CAAC,EAAE,CACnBhsB,CAAAA,AAjCJ,IAAI,CAiCKypB,QAAQ,CAAG,EAAIuD,CAAS,EAPtBhtB,AA1BX,IAAI,CA0BYypB,QAAQ,CAAG,EAAIuD,EASpC1pB,EAAU1N,QAAQ,CAACq3B,EAAWjtB,AAnCzB,IAAI,CAmC0B4pB,GAAG,CAAE5pB,AAnCnC,IAAI,CAmCoChG,KAAK,CAAEgG,AAnC/C,IAAI,CAmCgD/F,MAAM,EAE3D+F,AArCC,IAAI,CAqCAypB,QAAQ,EACbuC,CAAAA,CAAiB,CAAC,EAAE,EAAIgB,CAAS,EAErCF,EAAe,CACnB,CACAd,CAAiB,CAACc,EAAa,EAAIxpB,EAAU4oB,IAAI,CAC5C5oB,CAAAA,EAAUpF,OAAO,CAAC2L,MAAM,EAAI,CAAA,EAC7B1M,MAAMyuB,IACNzuB,MAAM2uB,IACN,CAACptB,EAAQsB,AA9CJ,IAAI,CA8CK1H,GAAG,GACjB,CAACoG,EAAQsB,AA/CJ,IAAI,CA+CKgB,GAAG,GACjBhB,AAhDK,IAAI,CAgDJ1H,GAAG,GAAK0H,AAhDR,IAAI,CAgDSgB,GAAG,CAKrBsC,EAAUspB,QAAQ,CAAC,EAAG,IAGtBppB,EAAQ,AAACxD,CAAAA,AAxDJ,IAAI,CAwDK1H,GAAG,CAAGszB,CAAQ,EACvBE,CAAAA,EAAYF,CAAQ,EACzBroB,EAAM,AAACvD,CAAAA,AA1DF,IAAI,CA0DGgB,GAAG,CAAG4qB,CAAQ,EACrBE,CAAAA,EAAYF,CAAQ,EACrB,AAAC5rB,AA5DA,IAAI,CA4DCwlB,KAAK,EAAI,CAACxlB,AA5Df,IAAI,CA4DgBusB,QAAQ,EAC5B,CAACvsB,AA7DD,IAAI,CA6DEwlB,KAAK,EAAIxlB,AA7Df,IAAI,CA6DgBusB,QAAQ,CAC7BjpB,EAAUspB,QAAQ,CAACppB,EAAMD,GAIzBD,EAAUspB,QAAQ,CAAC,EAAIrpB,EAAI,EAAIC,GAG3C,CACJ,CAnJAgoB,EAAcptB,OAAO,CARrB,SAASA,EAAQ4mB,CAAS,CAAEkI,CAAc,EAClCryB,EAAW7E,EAAUoI,KACrBqtB,EAAYyB,EACZ1oB,EAASwgB,EAAW,iBAAkB+G,GACtCvnB,EAASwgB,EAAW,YAAamH,GACjC3nB,EAASwgB,EAAW,cAAe6H,GAE3C,CAqJJ,EAAGrB,GAAkBA,CAAAA,EAAgB,CAAC,CAAA,GAO/BA,CACX,GACAn4B,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,kBAAkB,CAAC,CAAE,SAAUY,CAAC,EAUxG,GAAM,CAAEgwB,cAAAA,CAAa,CAAE,CAAGhwB,EAoN1B,MAxL0B,CAWtBiG,OAAQ,GAORkzB,gBAAiB,EAOjBC,mBAAoB,EAMpBC,eAAgB,CAAA,EAsBhBC,WAAY,KAAK,EAQjBzjB,OAAQ,KAAK,EAMb0jB,SAAU,EAEV9D,SAAU,CAAA,EASV+D,KAAM,GAIN/gB,OAAQ,EASRghB,mBAAoB,UAOpBC,eAAgB,EAMhBC,eAAgB,UAShBC,iBAAkB,UASlBC,sBAAuB,UASvBC,kBAAmB,UAOnBC,kBAAmB,EAMnBC,WAAY,OASZC,qBAAsB,6BAStBC,iBAAkB,UAOlBC,kBAAmB,EAOnBC,iBAAkB,CACtB,CAQJ,GACA/6B,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,6BAA6B,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUu1B,CAAC,CAAE30B,CAAC,CAAEw3B,CAAa,CAAE6C,CAAiB,CAAEp6B,CAAC,EAU/R,GAAM,CAAE80B,eAAAA,CAAc,CAAE,CAAGJ,EACrB,CAAEnkB,SAAAA,CAAQ,CAAEyf,aAAAA,CAAY,CAAEvlB,QAAAA,CAAO,CAAE4vB,wBAAAA,CAAuB,CAAE1vB,UAAAA,CAAS,CAAEsqB,MAAAA,CAAK,CAAEtuB,KAAAA,CAAI,CAAE2zB,YAAAA,CAAW,CAAE,CAAGt6B,CAkB1G,OAAMw3B,EAMF,OAAOrtB,QAAQ4mB,CAAS,CAAE,CACtBwG,EAAcptB,OAAO,CAAC4mB,EAAWyG,EACrC,CAkBA,OAAO+C,OAAOj7B,CAAI,CAAE64B,CAAQ,CAAE,CAc1B,OAbIA,GACA74B,EAAKyI,OAAO,CAAC,AAACyyB,QAENliB,EADJ,IAAMrP,EAAMuxB,EAAI53B,MAAM,CAEtB,IAAK,IAAID,EAAI,EAAGA,EAAIsG,EAAKtG,GAAK,EAEN,UAAhB,MADJ2V,CAAAA,EAAOkiB,CAAG,CAAC73B,EAAI,EAAE,AAAD,IAEZ63B,CAAG,CAAC73B,EAAI,EAAE,CAAG63B,CAAG,CAAC73B,EAAI,EAAE,CACvB63B,CAAG,CAAC73B,EAAI,EAAE,CAAG2V,EAGzB,GAEGhZ,CACX,CAMA4Q,YAAYtE,CAAQ,CAAE3B,CAAO,CAAEjD,CAAK,CAAE,CAMlC,IAAI,CAACyzB,OAAO,CAAG,EAAE,CACjB,IAAI,CAACC,MAAM,CAAG,EACd,IAAI,CAACC,MAAM,CAAG,EACd,IAAI,CAACprB,IAAI,CAAG,EACZ,IAAI,CAACqrB,gBAAgB,CAAG,EAAE,CAC1B,IAAI,CAACC,aAAa,CAAG,EACrB,IAAI,CAACC,oBAAoB,CAAG,EAC5B,IAAI,CAACC,YAAY,CAAG,EACpB,IAAI,CAAC9C,IAAI,CAAG,EACZ,IAAI,CAAC3oB,EAAE,CAAG,EACV,IAAI,CAAC6qB,gBAAgB,CAAG,EACxB,IAAI,CAACt4B,CAAC,CAAG,EACT,IAAI,CAACC,CAAC,CAAG,EACT,IAAI,CAACqQ,IAAI,CAACvG,EAAU3B,EAASjD,EACjC,CAYAg0B,WAAY,CACR,IAAMC,EAAe,IAAI,CAAChxB,OAAO,CAACsrB,QAAQ,CAAG,CAAC,EAAG,EAAE,CAAG,CAAC,EAAG,EAAE,CAAEvzB,EAAU,IAAI,CAAC44B,gBAAgB,CAAEM,EAAM,IAAI,CAACC,cAAc,CAACr3B,OAAO,CAAEs3B,EAAQ,IAAI,CAACA,KAAK,CAACt3B,OAAO,CAAEu3B,EAAmB,IAAI,CAACA,gBAAgB,CAACC,IAAI,CAAC,IAAI,EAAGC,EAAmB,IAAI,CAACA,gBAAgB,CAACD,IAAI,CAAC,IAAI,EAAGE,EAAiB,IAAI,CAACA,cAAc,CAACF,IAAI,CAAC,IAAI,EAEhTb,EAAU,CACZ,CACIz4B,CAAO,CAACi5B,CAAY,CAAC,EAAE,CAAC,CAACn3B,OAAO,CAChC,QACA,IAAI,CAAC23B,gBAAgB,CAACH,IAAI,CAAC,IAAI,EAClC,CACD,CACIt5B,CAAO,CAACi5B,CAAY,CAAC,EAAE,CAAC,CAACn3B,OAAO,CAChC,QACA,IAAI,CAAC43B,gBAAgB,CAACJ,IAAI,CAAC,IAAI,EAClC,CACD,CAACF,EAAO,QAAS,IAAI,CAACO,UAAU,CAACL,IAAI,CAAC,IAAI,EAAE,CAC5C,CAACJ,EAAK,YAAaG,EAAiB,CACpC,CAACH,EAAIU,aAAa,CAAE,YAAaL,EAAiB,CAClD,CAACL,EAAIU,aAAa,CAAE,UAAWJ,EAAe,CACjD,AAEGz7B,CAAAA,EAAE87B,QAAQ,EACVpB,EAAQ33B,IAAI,CAAC,CAACo4B,EAAK,aAAcG,EAAiB,CAAE,CAACH,EAAIU,aAAa,CAAE,YAAaL,EAAiB,CAAE,CAACL,EAAIU,aAAa,CAAE,WAAYJ,EAAe,EAG3Jf,EAAQ1yB,OAAO,CAAC,SAAUxI,CAAI,EAC1BgR,EAAS7Q,KAAK,CAAC,KAAMH,EACzB,GACA,IAAI,CAACk7B,OAAO,CAAGA,CACnB,CACAiB,iBAAiBn7B,CAAC,CAAE,CAEhB,IAAMuM,EAAS,AAAC2pB,CAAAA,AADC,IAAI,CACInnB,EAAE,CAAGmnB,AADb,IAAI,CACkBlnB,IAAI,AAAD,EACtC5I,EAAK8vB,AAFQ,IAAI,CAEHxsB,OAAO,CAACsvB,IAAI,CAAE,IAChC9C,AAHiB,IAAI,CAGZ1mB,cAAc,CAAC0mB,AAHP,IAAI,CAGYlnB,IAAI,CAAGzC,EAAO2pB,AAH9B,IAAI,CAGmCnnB,EAAE,CAAGxC,GAC7DnC,EAJiB,IAAI,CAID,UAAW,CAC3B4E,KAAMknB,AALO,IAAI,CAKFlnB,IAAI,CACnBD,GAAImnB,AANS,IAAI,CAMJnnB,EAAE,CACfU,QAAS,YACTC,SAAU1P,CACd,EACJ,CACAk7B,iBAAiBl7B,CAAC,CAAE,CAEhB,IAAMuM,EAAQkjB,EAAayG,AADV,IAAI,CACennB,EAAE,CAAGmnB,AADxB,IAAI,CAC6BlnB,IAAI,EAClD5I,EAAK8vB,AAFQ,IAAI,CAEHxsB,OAAO,CAACsvB,IAAI,CAAE,IAChC9C,AAHiB,IAAI,CAGZ1mB,cAAc,CAACigB,EAAayG,AAHpB,IAAI,CAGyBlnB,IAAI,CAAGzC,GAAQkjB,EAAayG,AAHzD,IAAI,CAG8DnnB,EAAE,CAAGxC,IACxFnC,EAJiB,IAAI,CAID,UAAW,CAC3B4E,KAAMknB,AALO,IAAI,CAKFlnB,IAAI,CACnBD,GAAImnB,AANS,IAAI,CAMJnnB,EAAE,CACfU,QAAS,YACTC,SAAU1P,CACd,EACJ,CAaAu7B,0BAA0BC,CAAe,CAAE,CACvC,IAAuB9xB,EAAUwsB,AAAhB,IAAI,CAAqBxsB,OAAO,CAAE+xB,EAAqB/xB,EAAQqvB,QAAQ,CAAG7C,AAA1E,IAAI,CAA+EwF,eAAe,CAC/GhyB,EAAQqvB,QAAQ,CAChB,EACJ,MAAO,CACHoB,OAAQ,AAACqB,CAAAA,EAAgBrB,MAAM,CAAGjE,AAJrB,IAAI,CAI0B50B,CAAC,CACxC40B,AALS,IAAI,CAKJyF,OAAO,AAAD,EACdzF,CAAAA,AANQ,IAAI,CAMH0F,QAAQ,CAAGH,CAAiB,EAC1CrB,OAAQ,AAACoB,CAAAA,EAAgBpB,MAAM,CAAGlE,AAPrB,IAAI,CAO0B30B,CAAC,CACxC20B,AARS,IAAI,CAQJ2F,OAAO,AAAD,EACd3F,CAAAA,AATQ,IAAI,CASH0F,QAAQ,CAAGH,CAAiB,CAC9C,CACJ,CAOAzpB,SAAU,CACN,IAAMkkB,EAAW,IAAI,CAAEpG,EAAYoG,EAASzvB,KAAK,CAACyvB,QAAQ,CAE1DA,EAAS4F,YAAY,GAErB,CACI,QACA,kBACA,YACA,iBACA,QACH,CAACt0B,OAAO,CAAC,SAAUu0B,CAAI,EAChB7F,CAAQ,CAAC6F,EAAK,EAAI7F,CAAQ,CAAC6F,EAAK,CAAC/pB,OAAO,EACxCkkB,CAAAA,CAAQ,CAAC6F,EAAK,CAAG7F,CAAQ,CAAC6F,EAAK,CAAC/pB,OAAO,EAAC,CAEhD,GAEI8d,GAAaoG,IAAapG,EAAUhhB,SAAS,GAC7CghB,EAAUhhB,SAAS,CAAG,KAEtBgrB,EAAwBhK,EAAUuK,gBAAgB,EAE1D,CASA2B,oBAAoB1oB,CAAK,CAAE,CACvB,IAAuBjI,EAAW6qB,AAAjB,IAAI,CAAsB7qB,QAAQ,CAAEgvB,EAAmBnE,AAAvD,IAAI,CAA4DmE,gBAAgB,CAAE3wB,EAAUwsB,AAA5F,IAAI,CAAiGxsB,OAAO,CAAEguB,EAAOxB,AAArH,IAAI,CAA0HwB,IAAI,CAAE5sB,EAAQO,EAAS4wB,CAAC,GAAGn6B,GAAG,CAACo0B,AAA7J,IAAI,CAAkKprB,KAAK,EAE5L,GADAuvB,EAAiB93B,IAAI,CAACuI,GAClBpB,EAAQmvB,cAAc,CAAE,CAExB,IAAM7gB,EAAO3M,EAAS2M,IAAI,GACrBtW,QAAQ,CAAC,+BACTI,GAAG,CAACgJ,EAEJorB,CARQ,IAAI,CAQHzvB,KAAK,CAACyR,UAAU,EAC1BF,EAAKJ,IAAI,CAAC,CACNtC,OAAQ5L,EAAQ4vB,iBAAiB,CACjC,eAAgB5vB,EAAQ6vB,iBAAiB,CACzC2C,KAAMxyB,EAAQ2vB,qBAAqB,AACvC,GAGJrhB,EAAKJ,IAAI,CAACI,EAAKmkB,KAAK,CAAC,CACjB76B,EAAG,IACHC,EAAG,IAEHiE,MAAOkyB,EAAO,EACdjyB,OAAQiyB,EAAO,EACf/hB,EAAGjM,EAAQkvB,kBAAkB,AACjC,EAAG5gB,EAAKvC,WAAW,KAEnB,IAAM2mB,EAAQ/wB,EACTtM,IAAI,CAACk4B,EAAU+C,MAAM,CAAC,CAAC,CACpB,IACAtC,EAAO,EAAKpkB,CAAAA,EAAQ,GAAK,CAAA,EACzBokB,EAAO,EAAI,EACd,CAAE,CACC,IACAA,EAAO,EAAKpkB,CAAAA,EAAQ,GAAK,CAAA,EACzBokB,EAAO,EAAI,EACd,CAAE,CACC,IACAA,EAAO,EAAKpkB,CAAAA,EAAQ,EAAI,EAAC,EACzBokB,EAAO,EACV,CAAC,CAAEhuB,EAAQkuB,QAAQ,GACnBl2B,QAAQ,CAAC,8BACTI,GAAG,CAACu4B,CAAgB,CAAC/mB,EAAM,CAC3B4iB,CAzCQ,IAAI,CAyCHzvB,KAAK,CAACyR,UAAU,EAC1BkkB,EAAMxkB,IAAI,CAAC,CACPskB,KAAMxyB,EAAQ0vB,gBAAgB,AAClC,EAER,CACJ,CAQAxnB,KAAKvG,CAAQ,CAAE3B,CAAO,CAAEjD,CAAK,CAAE,CAE3ByvB,AADiB,IAAI,CACZmE,gBAAgB,CAAG,EAAE,CAC9BnE,AAFiB,IAAI,CAEZ7qB,QAAQ,CAAGA,EACpB6qB,AAHiB,IAAI,CAGZmG,WAAW,CAAG3yB,EACvBwsB,AAJiB,IAAI,CAIZxsB,OAAO,CAAGgrB,EAAMmF,EAAmBtF,EAAezlB,SAAS,CAAEpF,GACtEwsB,AALiB,IAAI,CAKZxsB,OAAO,CAAC2L,MAAM,CAAGjP,EAAK8vB,AALd,IAAI,CAKmBxsB,OAAO,CAAC2L,MAAM,CAAE,IACxD6gB,AANiB,IAAI,CAMZzvB,KAAK,CAAGA,EAEjByvB,AARiB,IAAI,CAQZwB,IAAI,CAAGtxB,EAAK8vB,AARJ,IAAI,CAQSxsB,OAAO,CAACguB,IAAI,CAAExB,AAR3B,IAAI,CAQgCxsB,OAAO,CAACjE,MAAM,EAE/DiE,EAAQyL,OAAO,GACf+gB,AAXa,IAAI,CAWRO,MAAM,GACfP,AAZa,IAAI,CAYRuE,SAAS,GAE1B,CACAK,iBAAiB96B,CAAC,CAAE,CAChB,IAAuBw7B,EAAkBtF,AAAxB,IAAI,CAA6BzvB,KAAK,CAAC61B,OAAO,CAACC,SAAS,CAACv8B,GAAIw8B,EAAgBtG,AAA7E,IAAI,CAAkFqF,yBAAyB,CAACC,EACjItF,CADiB,IAAI,CACZiE,MAAM,CAAGqC,EAAcrC,MAAM,CACtCjE,AAFiB,IAAI,CAEZkE,MAAM,CAAGoC,EAAcpC,MAAM,CACtClE,AAHiB,IAAI,CAGZuG,aAAa,CAAG,CAACvG,AAHT,IAAI,CAGclnB,IAAI,CAAEknB,AAHxB,IAAI,CAG6BnnB,EAAE,CAAC,CACrDmnB,AAJiB,IAAI,CAIZwG,aAAa,CAAG,CAAA,CAC7B,CAKA1B,iBAAiBh7B,CAAC,CAAE,KAGmB28B,EAFnC,IAAuBnB,EAAkBtF,AAAxB,IAAI,CAA6BzvB,KAAK,CAAC61B,OAAO,CAACC,SAAS,CAACv8B,GAAI0J,EAAUwsB,AAAvE,IAAI,CAA4ExsB,OAAO,CAAEsf,EAAYtf,EAAQkuB,QAAQ,CAClI,SAAW,SAAU6E,EAAgBvG,AADxB,IAAI,CAC6BuG,aAAa,EAAI,EAAE,AAKjEvG,CANa,IAAI,CAMRwG,aAAa,EAErB,CAAA,CAAC18B,EAAE0C,OAAO,EAAI1C,AAA4B,IAA5BA,EAAE0C,OAAO,CAAC,EAAE,CAACsmB,EAAU,AAAK,IAG3C2T,EAASC,AAFO1G,AATH,IAAI,CASQqF,yBAAyB,CAACC,EAAgB,CAACxS,EAAU,CAC7DkN,AAVJ,IAAI,AAUQ,CAAClN,EAAU,CAEpCkN,AAZa,IAAI,CAYR2G,UAAU,CAAG,CAAA,EACtB3G,AAba,IAAI,CAaR1mB,cAAc,CAACitB,CAAa,CAAC,EAAE,CAAGE,EAAQF,CAAa,CAAC,EAAE,CAAGE,GAClEzG,AAdS,IAAI,CAcJ2G,UAAU,EACnBzyB,EAfS,IAAI,CAeO,UAAW,CAC3B4E,KAAMknB,AAhBD,IAAI,CAgBMlnB,IAAI,CACnBD,GAAImnB,AAjBC,IAAI,CAiBInnB,EAAE,CACfU,QAAS,YACTwoB,QAASj4B,EAAEE,IAAI,CACfwP,SAAU1P,CACd,GAGZ,CAKAi7B,eAAej7B,CAAC,CAAE,CAEVk2B,AADa,IAAI,CACR2G,UAAU,EACnBzyB,EAFa,IAAI,CAEG,UAAW,CAC3B4E,KAAMknB,AAHG,IAAI,CAGElnB,IAAI,CACnBD,GAAImnB,AAJK,IAAI,CAIAnnB,EAAE,CACfU,QAAS,YACTwoB,QAASj4B,EAAEE,IAAI,CACfwP,SAAU1P,CACd,GAEJk2B,AAViB,IAAI,CAUZwG,aAAa,CAClBxG,AAXa,IAAI,CAWR2G,UAAU,CACf3G,AAZS,IAAI,CAYJiE,MAAM,CACXjE,AAbK,IAAI,CAaAkE,MAAM,CAAG,IAClC,CAgBAh5B,SAASE,CAAC,CAAEC,CAAC,CAAEiE,CAAK,CAAEC,CAAM,CAAE,CAC1B,IAAuBiE,EAAUwsB,AAAhB,IAAI,CAAqBxsB,OAAO,CAAE,CAAEmvB,eAAAA,CAAc,CAAExjB,OAAAA,EAAS,CAAC,CAAEuiB,SAAAA,CAAQ,CAAE,CAAGluB,EAASozB,EAAS5G,AAA/F,IAAI,CAAoG6G,QAAQ,CAAG,UAAY,OAC5IpB,EAAUl2B,EAAQo2B,EAAU,EAEhC3F,AAHiB,IAAI,CAGZprB,KAAK,CAACkyB,IAAI,GACnB9G,AAJiB,IAAI,CAIZ50B,CAAC,CAAGA,EACb40B,AALiB,IAAI,CAKZ30B,CAAC,CAAGA,EAAI,IAAI,CAACq4B,gBAAgB,CACtC1D,AANiB,IAAI,CAMZ1wB,KAAK,CAAGA,EACjB0wB,AAPiB,IAAI,CAOZzwB,MAAM,CAAGA,EAClBywB,AARiB,IAAI,CAQZyF,OAAO,CAAGA,EACnBzF,AATiB,IAAI,CASZ2F,OAAO,CAAGA,EAEfjE,GACA1B,AAZa,IAAI,CAYR1wB,KAAK,CAAG0wB,AAZJ,IAAI,CAYS2F,OAAO,CAAGr2B,EAAQq2B,EAAU3F,AAZzC,IAAI,CAY8CwB,IAAI,CACnExB,AAba,IAAI,CAaRyF,OAAO,CAAGA,EAAU,EAC7BzF,AAda,IAAI,CAcR2F,OAAO,CAAGA,EAAUhD,EAAiB3C,AAdjC,IAAI,CAcsCwB,IAAI,CAAG,EAE9DxB,AAhBa,IAAI,CAgBR0F,QAAQ,CAAGn2B,EAAUozB,CAAAA,EAAiBrzB,AAAQ,EAARA,EAAY,CAAA,EAC3D0wB,AAjBa,IAAI,CAiBR50B,CAAC,CAAGA,GAAQ+T,IAGrB6gB,AApBa,IAAI,CAoBRzwB,MAAM,CAAGA,EAASywB,AApBd,IAAI,CAoBmBwB,IAAI,CACxCxB,AArBa,IAAI,CAqBRyF,OAAO,CAAGA,EAAU9C,EAAiB3C,AArBjC,IAAI,CAqBsCwB,IAAI,CAAG,EAE9DxB,AAvBa,IAAI,CAuBR0F,QAAQ,CAAGp2B,EAASqzB,CAAAA,EAAiBpzB,AAAS,EAATA,EAAa,CAAA,EAC3DywB,AAxBa,IAAI,CAwBR30B,CAAC,CAAG20B,AAxBA,IAAI,CAwBK30B,CAAC,CAAG8T,GAG9B6gB,AA3BiB,IAAI,CA2BZprB,KAAK,CAACgyB,EAAO,CAAC,CACnB/lB,WAAYzV,EACZ0V,WAAYkf,AA7BC,IAAI,CA6BI30B,CAAC,AAC1B,GAEA20B,AAhCiB,IAAI,CAgCZ2E,KAAK,CAACiC,EAAO,CAAC,CACnBt3B,MAAOA,EACPC,OAAQA,CACZ,GAEAywB,AArCiB,IAAI,CAqCZmE,gBAAgB,CAAC,EAAE,CAACyC,EAAO,CAAC,CACjC/lB,WAAY6gB,EAAW,EAAIpyB,EAAQm2B,EACnC3kB,WAAY4gB,EAAWnyB,EAASo2B,EAAU,CAC9C,EACJ,CAOAC,cAAe,CACX,IAAI,CAAC5B,OAAO,CAAC1yB,OAAO,CAAC,SAAUxI,CAAI,EAC/B+6B,EAAY56B,KAAK,CAAC,KAAMH,EAC5B,GACA,IAAI,CAACk7B,OAAO,CAAC73B,MAAM,CAAG,CAC1B,CAOAo0B,QAAS,CACL,IAAuBprB,EAAW6qB,AAAjB,IAAI,CAAsB7qB,QAAQ,CAAE3B,EAAUwsB,AAA9C,IAAI,CAAmDxsB,OAAO,CAAEguB,EAAOxB,AAAvE,IAAI,CAA4EwB,IAAI,CAAExf,EAAage,AAAnG,IAAI,CAAwGzvB,KAAK,CAACyR,UAAU,CAAEpN,EAAQO,EAAS4wB,CAAC,CAAC,aAC7JrkB,IAAI,CAAC,CACNK,OAAQvO,EAAQuO,MAAM,AAC1B,GACKqS,IAAI,GACJxoB,GAAG,EAERo0B,CAPiB,IAAI,CAOZprB,KAAK,CAAGA,EAEjBorB,AATiB,IAAI,CASZ2E,KAAK,CAAGxvB,EAAS2M,IAAI,GACzBtW,QAAQ,CAAC,8BACTkW,IAAI,CAAC,CACNjC,EAAGjM,EAAQiwB,iBAAiB,EAAI,EAChCl0B,OAAQiyB,EACRlyB,MAAOkyB,CACX,GAAG51B,GAAG,CAACgJ,GACFoN,GACDge,AAjBa,IAAI,CAiBR2E,KAAK,CAACjjB,IAAI,CAAC,CAChBskB,KAAMxyB,EAAQ+vB,oBAAoB,CAClCnkB,OAAQ5L,EAAQgwB,gBAAgB,CAChC,eAAgBhwB,EAAQkwB,gBAAgB,AAC5C,GAEJ,IAAMA,EAAmB1D,AAvBR,IAAI,CAuBa0D,gBAAgB,CAC9C1D,AAxBa,IAAI,CAwBR2E,KAAK,CAACplB,WAAW,GAC9BygB,AAzBiB,IAAI,CAyBZ2E,KAAK,CAACjjB,IAAI,CAAC,CAChBtW,EAAG,CAACs4B,EAAmB,EAAI,EAC3Br4B,EAAG,CAACq4B,EAAmB,EAAI,CAC/B,GAEA1D,AA9BiB,IAAI,CA8BZ0E,cAAc,CAAGvvB,EAAS4wB,CAAC,GAAGn6B,GAAG,CAACgJ,GAC3CorB,AA/BiB,IAAI,CA+BZpnB,SAAS,CAAGzD,EAAS2M,IAAI,GAC7BtW,QAAQ,CAAC,8BACTkW,IAAI,CAAC,CACNnS,OAAQiyB,EAAOkC,EACfp0B,MAAOkyB,EAAOkC,EACdjkB,EAAGjM,EAAQivB,eAAe,EAAI,CAClC,GAAG72B,GAAG,CAACo0B,AArCU,IAAI,CAqCL0E,cAAc,EAC9B1E,AAtCiB,IAAI,CAsCZ+G,eAAe,CAAG5xB,EACtBtM,IAAI,CAACk4B,EAAU+C,MAAM,CAAC,CACvB,CAAC,IAAK,GAAItC,EAAO,EAAE,CACnB,CAAC,IAAK,GAAI,EAAIA,EAAO,EAAE,CACvB,CAAC,IAAK,EAAGA,EAAO,EAAE,CAClB,CAAC,IAAK,EAAG,EAAIA,EAAO,EAAE,CACtB,CAAC,IAAK,EAAGA,EAAO,EAAE,CAClB,CAAC,IAAK,EAAG,EAAIA,EAAO,EAAE,CACzB,CAAEhuB,EAAQkuB,QAAQ,GACdl2B,QAAQ,CAAC,+BACTI,GAAG,CAACo0B,AAhDQ,IAAI,CAgDH0E,cAAc,EAC3B1iB,IACDge,AAlDa,IAAI,CAkDRpnB,SAAS,CAAC8I,IAAI,CAAC,CACpBskB,KAAMxyB,EAAQuvB,kBAAkB,CAChC3jB,OAAQ5L,EAAQyvB,cAAc,CAC9B,eAAgBzvB,EAAQwvB,cAAc,AAC1C,GACAhD,AAvDa,IAAI,CAuDR+G,eAAe,CAACrlB,IAAI,CAAC,CAC1BtC,OAAQ5L,EAAQ8vB,UAAU,CAC1B,eAAgB,CACpB,IAEJtD,AA5DiB,IAAI,CA4DZqE,oBAAoB,CAAGrE,AA5Df,IAAI,CA4DoBpnB,SAAS,CAAC2G,WAAW,GAC9DygB,AA7DiB,IAAI,CA6DZ0E,cAAc,CAAC7J,SAAS,CAAC,CAACmF,AA7DlB,IAAI,CA6DuBqE,oBAAoB,CAAG,EAAI,EAAG,CAACrE,AA7D1D,IAAI,CA6D+DqE,oBAAoB,CAAG,EAAI,GAE/GrE,AA/DiB,IAAI,CA+DZ8F,mBAAmB,CAAC,GAC7B9F,AAhEiB,IAAI,CAgEZ8F,mBAAmB,CAAC,EACjC,CAWA5D,SAASppB,CAAI,CAAED,CAAE,CAAE,KAQXmuB,EAAQC,EAPZ,IAAuBzzB,EAAUwsB,AAAhB,IAAI,CAAqBxsB,OAAO,CAAEkuB,EAAWluB,EAAQkuB,QAAQ,CAAEmB,EAAWrvB,EAAQqvB,QAAQ,CAAEqE,EAAYlH,AAAxG,IAAI,CAA6G0F,QAAQ,CAAEkB,EAAS,AAAC,CAAA,IAAI,CAACC,QAAQ,EAC9J,IAAI,CAACF,UAAU,EACd,IAAI,CAACp2B,KAAK,CAACqpB,SAAS,EAAI,IAAI,CAACrpB,KAAK,CAACqpB,SAAS,CAAC+M,UAAU,CAAiB,OAAZ,UAClE,GAAI,CAAC3yB,EAAQkzB,GACT,OAEJ,IAAMC,EAAOD,EAAYv5B,KAAKC,GAAG,CAACiL,EAAI,GAGtCmuB,EAASr5B,KAAKy5B,IAAI,CAACF,EADnBpuB,CAAAA,EAAOnL,KAAK2I,GAAG,CAACwC,EAAM,EAAC,GAEvBknB,AAViB,IAAI,CAUZwF,eAAe,CAAGyB,EAAU1N,EAAa4N,EAAOH,GAErDC,EAAUpE,IACVmE,EAAS,AAACE,CAAAA,EAAYrE,EAAWoE,CAAM,EAAKnuB,EAC5CmuB,EAAUpE,GAEd,IAAMwE,EAAS15B,KAAK25B,KAAK,CAACN,EAAShH,AAhBlB,IAAI,CAgBuByF,OAAO,CAAGzF,AAhBrC,IAAI,CAgB0C2F,OAAO,EAChE4B,EAAeN,EAAU,EAAI,EAEnCjH,CAnBiB,IAAI,CAmBZlnB,IAAI,CAAGA,EAChBknB,AApBiB,IAAI,CAoBZnnB,EAAE,CAAGA,EACT6oB,GAcD1B,AAnCa,IAAI,CAmCR0E,cAAc,CAACkC,EAAO,CAAC,CAC5B9lB,WAAYumB,CAChB,GACArH,AAtCa,IAAI,CAsCRpnB,SAAS,CAACguB,EAAO,CAAC,CACvBr3B,OAAQ03B,CACZ,GACAjH,AAzCa,IAAI,CAyCR+G,eAAe,CAACH,EAAO,CAAC,CAC7B9lB,WAAYymB,CAChB,GACAvH,AA5Ca,IAAI,CA4CRsE,YAAY,CAAG+C,EACxBrH,AA7Ca,IAAI,CA6CRoE,aAAa,CAAG,IAvBzBpE,AAtBa,IAAI,CAsBR0E,cAAc,CAACkC,EAAO,CAAC,CAC5B/lB,WAAYwmB,CAChB,GACArH,AAzBa,IAAI,CAyBRpnB,SAAS,CAACguB,EAAO,CAAC,CACvBt3B,MAAO23B,CACX,GACAjH,AA5Ba,IAAI,CA4BR+G,eAAe,CAACH,EAAO,CAAC,CAC7B/lB,WAAY0mB,CAChB,GACAvH,AA/Ba,IAAI,CA+BRoE,aAAa,CAAGiD,EACzBrH,AAhCa,IAAI,CAgCRsE,YAAY,CAAG,GAexB2C,GAAW,GACXjH,AAhDa,IAAI,CAgDR+G,eAAe,CAAC3S,IAAI,GAG7B4L,AAnDa,IAAI,CAmDR+G,eAAe,CAACD,IAAI,GAGR,CAAA,IAArBtzB,EAAQg0B,QAAQ,GACZ1uB,GAAQ,GAAKD,GAAM,EACnBmnB,AAxDS,IAAI,CAwDJprB,KAAK,CAACwf,IAAI,GAGnB4L,AA3DS,IAAI,CA2DJprB,KAAK,CAACkyB,IAAI,IAG3B9G,AA9DiB,IAAI,CA8DZ6G,QAAQ,CAAG,CAAA,CACxB,CAQA/E,qBAAqB2F,CAAS,CAAE,CAC5B,OAAQv3B,EAAK,IAAI,CAACsD,OAAO,CAACovB,UAAU,CAAEt5B,EAAEo+B,GAAG,EACvC,CAACp+B,EAAEgwB,aAAa,EAChB,CAAC,IAAI,CAAC/oB,KAAK,CAACo3B,OAAO,GAEnBF,AAAc,YAAdA,GACAA,AAAc,aAAdA,GAEA,CAACzzB,EAAQyzB,EACjB,CACAvC,WAAWp7B,CAAC,CAAE,CAEV,IAAMw7B,EAAkBtF,AADP,IAAI,CACYzvB,KAAK,CAAC61B,OAAO,CAACC,SAAS,CAACv8B,GAAIuM,EAAQ2pB,AADpD,IAAI,CACyDnnB,EAAE,CAAGmnB,AADlE,IAAI,CACuElnB,IAAI,CAAEomB,EAAMc,AADvF,IAAI,CAC4F30B,CAAC,CAAG20B,AADpG,IAAI,CACyGsE,YAAY,CAAE1pB,EAAOolB,AADlI,IAAI,CACuI50B,CAAC,CAAG40B,AAD/I,IAAI,CACoJoE,aAAa,AAClL,AAACpE,CAFY,IAAI,CAEPxsB,OAAO,CAACkuB,QAAQ,EAAI4D,EAAgBpB,MAAM,CAAGhF,GACtD,CAACc,AAHW,IAAI,CAGNxsB,OAAO,CAACkuB,QAAQ,EAAI4D,EAAgBrB,MAAM,CAAGrpB,EAExDolB,AALa,IAAI,CAKR1mB,cAAc,CAAC0mB,AALX,IAAI,CAKgBlnB,IAAI,CAAGzC,EAAO2pB,AALlC,IAAI,CAKuCnnB,EAAE,CAAGxC,GAI7D2pB,AATa,IAAI,CASR1mB,cAAc,CAAC0mB,AATX,IAAI,CASgBlnB,IAAI,CAAGzC,EAAO2pB,AATlC,IAAI,CASuCnnB,EAAE,CAAGxC,GAEjEnC,EAXiB,IAAI,CAWD,UAAW,CAC3B4E,KAAMknB,AAZO,IAAI,CAYFlnB,IAAI,CACnBD,GAAImnB,AAbS,IAAI,CAaJnnB,EAAE,CACfU,QAAS,YACTC,SAAU1P,CACd,EACJ,CAQA8nB,OAAOpe,CAAO,CAAE,CACZ,IAAI,CAACsI,OAAO,GACZ,IAAI,CAACJ,IAAI,CAAC,IAAI,CAACnL,KAAK,CAAC4E,QAAQ,CAAEqpB,EAAM,CAAA,EAAM,IAAI,CAAChrB,OAAO,CAAEA,GAAU,IAAI,CAACjD,KAAK,CACjF,CASA+I,eAAeR,CAAI,CAAED,CAAE,CAAE,CACjBA,EAAK,IACLC,EAAOygB,EAAa,EAAIA,EAAa1gB,EAAKC,IAC1CD,EAAK,GAELC,EAAO,IACPD,EAAK0gB,EAAa1gB,EAAKC,GACvBA,EAAO,GAEX,IAAI,CAACA,IAAI,CAAGA,EACZ,IAAI,CAACD,EAAE,CAAGA,CACd,CACJ,CAmBA,OAbAkoB,EAAU1C,cAAc,CAAGsF,EAM3BtF,EAAezlB,SAAS,CAAG4lB,EAAM,CAAA,EAAMuC,EAAU1C,cAAc,CAAEA,EAAezlB,SAAS,EAOlFmoB,CACX,GACAp4B,EAAgBD,EAAU,+BAAgC,CAACA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUk/B,CAAI,CAAE3J,CAAC,CAAE30B,CAAC,CAAEowB,CAAsB,CAAEmO,CAAoB,CAAE9G,CAAS,CAAEx3B,CAAC,EAUnZ,GAAM,CAAE80B,eAAAA,CAAc,CAAE,CAAGJ,EACrB,CAAEmH,SAAAA,CAAQ,CAAE9L,cAAAA,CAAa,CAAE,CAAGhwB,EAC9B,CAAEwQ,SAAAA,CAAQ,CAAEguB,MAAAA,CAAK,CAAEvO,aAAAA,CAAY,CAAEvlB,QAAAA,CAAO,CAAE4vB,wBAAAA,CAAuB,CAAEmE,MAAAA,CAAK,CAAE1tB,OAAAA,CAAM,CAAEpG,KAAAA,CAAI,CAAEC,UAAAA,CAAS,CAAE8zB,QAAAA,CAAO,CAAEpT,SAAAA,CAAQ,CAAE4J,MAAAA,CAAK,CAAEtuB,KAAAA,CAAI,CAAE2zB,YAAAA,CAAW,CAAEoE,MAAAA,CAAK,CAAE,CAAG1+B,EAYhK,SAAS2+B,EAAOC,CAAO,CAAE,GAAGr/B,CAAI,EAC5B,IAAMs/B,EAAU,EAAE,CAACx4B,MAAM,CAACwI,IAAI,CAACtP,EAAM8rB,GACrC,GAAIwT,EAAQj8B,MAAM,CACd,OAAOwB,IAAI,CAACw6B,EAAQ,CAACl/B,KAAK,CAAC,EAAGm/B,EAEtC,CAgBA,MAAMC,EAMF,OAAO30B,QAAQ4mB,CAAS,CAAE3mB,CAAU,CAAEitB,CAAW,CAAE,CAC/CiH,EAAqBn0B,OAAO,CAAC4mB,EAAW3mB,EAAY00B,EAAWzH,EACnE,CAMAnnB,YAAYlJ,CAAK,CAAE,CACf,IAAI,CAACquB,eAAe,CAAG,EACvB,IAAI,CAACljB,IAAI,CAACnL,EACd,CAwBA+3B,WAAWl9B,CAAC,CAAEgS,CAAK,CAAE0hB,CAAQ,CAAEyJ,CAAI,CAAE,CACjC,IAAwBh5B,EAASqqB,AAAf,IAAI,CAAqByF,gBAAgB,CAAC7D,OAAO,CAACjsB,MAAM,CAE1EqqB,AAFkB,IAAI,CAEZ4B,OAAO,CAACpe,EAAM,CAACmrB,EAAK,CAACzJ,EAAW,CACtCje,WAAYlT,KAAKqpB,KAAK,CAAC4C,AAHT,IAAI,CAGehf,IAAI,CAAGgf,AAH1B,IAAI,CAGgCrqB,MAAM,CAAG,GAC3DuR,WAAYnT,KAAKqpB,KAAK,CAAC4C,AAJT,IAAI,CAIesF,GAAG,CAAGzxB,SAASrC,EAAG,IAAM,GAAMmE,EACnE,EAAI,CACAsR,WAAYlT,KAAKqpB,KAAK,CAAC4C,AANT,IAAI,CAMehf,IAAI,CAAGnN,SAASrC,EAAG,KACpD0V,WAAYnT,KAAKqpB,KAAK,CAAC4C,AAPT,IAAI,CAOesF,GAAG,CAAGtF,AAPzB,IAAI,CAO+BrqB,MAAM,CAAG,EAAIA,EAAS,EAAI,EAC/E,EACJ,CAmBAi5B,YAAYC,CAAS,CAAEC,CAAS,CAAE5J,CAAQ,CAAEyJ,CAAI,CAAE,CAC9C,IAAwBhN,EAAa3B,AAAnB,IAAI,CAAyByF,gBAAgB,CAAC9D,UAAU,CAAES,EAAepC,AAAzE,IAAI,CAA+E5Z,OAAO,CAACT,WAAW,GAAIopB,EAAc3M,EAAe,EAAG4M,EAAoB,AAAC5M,EAAe,EAAK,EACrM6C,EAAmBjF,AADD,IAAI,CACOiF,gBAAgB,CAAEgK,EAAgBjP,AAD7C,IAAI,CACmD4H,IAAI,CAAEsH,EAAelP,AAD5E,IAAI,CACkFsF,GAAG,CAAE3vB,EAASqqB,AADpG,IAAI,CAC0GrqB,MAAM,CAAEw5B,EAAUD,EAAeH,EAAaK,EAAUF,EAAev5B,EACnMqL,EAAOgf,AAFO,IAAI,CAEDhf,IAAI,CAAEquB,EAAapgC,EACpCi2B,GACAmK,EAAcH,EAAeJ,EAAYE,EACzCF,EAAYI,EAAeL,EAAYG,EACvC//B,EAAO,CACH,CACI,IACA+R,EAAOrL,EACPu5B,EAAejK,EAAmB+J,EACrC,CAED,CAAC,IAAKhuB,EAAOrL,EAAQ05B,EAAY,CACjC,CAAC,IAAKruB,EAAMquB,EAAY,CACxB,CAAC,IAAKruB,EAAM8tB,EAAU,CACtB,CAAC,IAAK9tB,EAAOrL,EAAQm5B,EAAU,CAC/B,CACI,IACA9tB,EAAOrL,EACPu5B,EAAeD,EAAgBhK,EAClC,CACJ,CACGtD,GACA1yB,EAAKwD,IAAI,CAET,CAAC,IAAKuO,EAAOrL,EAAQ05B,EAAcN,EAAY,CAE/C,CACI,IACA/tB,EAAOrL,EACPm5B,EAAYC,EACf,IAIL/tB,GAAQikB,EACR4J,GAAa7tB,EAAOikB,EAAmB+J,EACvCF,GAAa9tB,EAAOikB,EAAmB+J,EACvC//B,EAAO,CAEH,CAAC,IAAK+R,EAAMmuB,EAAQ,CAEpB,CAAC,IAAKN,EAAWM,EAAQ,CAEzB,CAAC,IAAKN,EAAWO,EAAQ,CAEzB,CAAC,IAAKN,EAAWM,EAAQ,CAEzB,CAAC,IAAKN,EAAWK,EAAQ,CAEzB,CACI,IACAnuB,EAAOiuB,EAAgBhK,AAAmB,EAAnBA,EACvBiK,EAAeH,EAClB,CACJ,CACGpN,GACA1yB,EAAKwD,IAAI,CAET,CAAC,IAAKo8B,EAAYE,EAAaI,EAAQ,CAEvC,CAAC,IAAKL,EAAYC,EAAaI,EAAQ,GAG/CnP,AAjEkB,IAAI,CAiEZ5Z,OAAO,CAACuoB,EAAK,CAAC,CACpBW,EAAGrgC,CACP,EACJ,CAmBAsgC,UAAUV,CAAS,CAAEC,CAAS,CAAE5J,CAAQ,CAAEyJ,CAAI,CAAE,KAExCh5B,EAAQD,EAAOlE,EAAGC,EADtB,IAAwBuP,EAAOgf,AAAb,IAAI,CAAmBhf,IAAI,CAAEskB,EAAMtF,AAAnC,IAAI,CAAyCsF,GAAG,CAAEkK,EAAkBxP,AAApE,IAAI,CAA0ErqB,MAAM,CAIlGuvB,GACA1zB,EAAI,CAACwP,EAAMA,EAAMA,EAAK,CACtBvP,EAAI,CAAC6zB,EAAKA,EAAMuJ,EAAWvJ,EAAMwJ,EAAU,CAC3Cp5B,EAAQ,CAAC85B,EAAiBA,EAAiBA,EAAgB,CAC3D75B,EAAS,CACLk5B,EACAC,EAAYD,EACZ7O,AAXU,IAAI,CAWJ4H,IAAI,CAAGkH,EACpB,GAGDt9B,EAAI,CAACwP,EAAMA,EAAO6tB,EAAW7tB,EAAO8tB,EAAU,CAC9Cr9B,EAAI,CAAC6zB,EAAKA,EAAKA,EAAI,CACnB5vB,EAAQ,CACJm5B,EACAC,EAAYD,EACZ7O,AApBU,IAAI,CAoBJ4H,IAAI,CAAGkH,EACpB,CACDn5B,EAAS,CAAC65B,EAAiBA,EAAiBA,EAAgB,EAEhExP,AAxBkB,IAAI,CAwBZyP,MAAM,CAAC/3B,OAAO,CAAC,CAACg4B,EAAOp9B,KAC7Bo9B,CAAK,CAACf,EAAK,CAAC,CACRn9B,EAAGA,CAAC,CAACc,EAAE,CACPb,EAAGA,CAAC,CAACa,EAAE,CACPoD,MAAOA,CAAK,CAACpD,EAAE,CACfqD,OAAQA,CAAM,CAACrD,EAAE,AACrB,EACJ,EACJ,CAeAq9B,gBAAiB,CACb,IAAM3P,EAAY,IAAI,CAAEyF,EAAmBzF,EAAUyF,gBAAgB,CAAE9D,EAAa8D,EAAiB9D,UAAU,CAAEhrB,EAAQqpB,EAAUrpB,KAAK,CAAEuuB,EAAWvuB,EAAMuuB,QAAQ,CAAE3pB,EAAW5E,EAAM4E,QAAQ,CAAEq0B,EAAc,CAC1Mp4B,OAAQ0tB,EAAW,YAAc,WACrC,EAEA2K,EAAiB7P,EAAU6P,cAAc,CAAGt0B,EACvC4wB,CAAC,CAAC,aACFrkB,IAAI,CAAC,CACNK,OAAQ,EACRkV,WAAY,QAChB,GACKrrB,GAAG,GAkCR,GAhCA,CACI,CAAC2vB,EACDA,EACA,CAACA,EACJ,CAACjqB,OAAO,CAAC,CAACo4B,EAAStsB,KAChB,IAAMksB,EAAQn0B,EAAS2M,IAAI,GACtBtW,QAAQ,CAAC,4BACT4R,CAAAA,AAAU,IAAVA,EAAc,UAAY,UAAS,GACnCxR,GAAG,CAAC69B,EACJl5B,CAAAA,EAAMyR,UAAU,GACjBsnB,EAAM5nB,IAAI,CAAC,CACPskB,KAAM0D,EACFrK,EAAiBzD,QAAQ,CACzB,eACR,GACc,IAAVxe,GACAksB,EAAM5/B,GAAG,CAAC8/B,IAGlB5P,EAAUyP,MAAM,CAACjsB,EAAM,CAAGksB,CAC9B,GAEA1P,EAAU5Z,OAAO,CAAG7K,EAAStM,IAAI,GAC5B2C,QAAQ,CAAC,gCACTI,GAAG,CAAC69B,GACJl5B,EAAMyR,UAAU,EACjB4X,EAAU5Z,OAAO,CAAC0B,IAAI,CAAC,CACnB,eAAgB2d,EAAiBrD,YAAY,CAC7C5c,OAAQigB,EAAiBtD,YAAY,AACzC,GAGAsD,EAAiB7D,OAAO,EAAI6D,EAAiB7D,OAAO,CAACvc,OAAO,CAAE,CAC9D,IAAM0qB,EAAiBtK,EAAiB7D,OAAO,CAAE,CAAEjsB,OAAAA,CAAM,CAAED,MAAAA,CAAK,CAAE,CAAGq6B,EACrE,CAAC,EAAG,EAAE,CAACr4B,OAAO,CAAC,AAAC8L,IACZwc,EAAU4B,OAAO,CAACpe,EAAM,CAAGjI,EAASy0B,MAAM,CAACD,EAAelO,OAAO,CAACre,EAAM,CAAE,CAAC9N,EAAQ,EAAI,EAAG,EAAGA,EAAOC,EAAQo6B,GACxGp5B,EAAMuuB,QAAQ,EACdlF,EAAU4B,OAAO,CAACpe,EAAM,CAACsE,IAAI,CAAC,CAC1BF,SAAU,GACVqoB,gBAAiBl8B,KAAK25B,KAAK,CAAC,CAACh4B,EAAQ,GACrCw6B,gBAAiB,AAACv6B,CAAAA,EAASD,CAAI,EAAK,CACxC,GAIJsqB,EAAU4B,OAAO,CAACpe,EAAM,CAACsE,IAAI,CAAC,CAAEK,OAAQ,EAAI3E,CAAM,GAC7C5R,QAAQ,CAAC,2DAEV,CAAC,OAAQ,QAAQ,CAAC4R,EAAM,EAAExR,GAAG,CAAC69B,GAC7Bl5B,EAAMyR,UAAU,EACjB4X,EAAU4B,OAAO,CAACpe,EAAM,CACnBsE,IAAI,CAAC,CACNskB,KAAM2D,EAAejO,eAAe,CACpCtc,OAAQuqB,EAAehO,WAAW,CAClC,eAAgBgO,EAAenqB,SAAS,AAC5C,GACK9V,GAAG,CAAC8/B,EAEjB,EACJ,CACJ,CAUA5X,OAAOpe,CAAO,CAAE,CAEZ,AAAC,CAAA,IAAI,CAACY,MAAM,EAAI,EAAE,AAAD,EAAG9C,OAAO,CAAC,AAAC8C,IACrBA,EAAO21B,UAAU,EACjB,OAAO31B,EAAO21B,UAAU,CAACC,eAAe,AAEhD,GAEA,IAAI,CAACluB,OAAO,GACZ,IAAMkM,EAAe,IAAI,CAACzX,KAAK,CAACiD,OAAO,CACvCgrB,EAAM,CAAA,EAAMxW,EAAa4R,SAAS,CAAEpmB,GACpC,IAAI,CAACkI,IAAI,CAAC,IAAI,CAACnL,KAAK,CACxB,CAeAgwB,OAAO3yB,CAAG,CAAE0I,CAAG,CAAEmkB,CAAK,CAAEC,CAAK,CAAE,CAC3B,IAAwBnqB,EAAQqpB,AAAd,IAAI,CAAoBrpB,KAAK,CAAEmI,EAAQkhB,AAAvC,IAAI,CAA6ClhB,KAAK,CAAEuiB,EAAaviB,EAAMuiB,UAAU,EAAI,EAAGgP,EAAiBvxB,EAAM+gB,aAAa,CAACyQ,IAAI,CAAG35B,EAAMmI,KAAK,CAAC,EAAE,CAAGA,EAAOyxB,EAAmBvQ,AAAnL,IAAI,CAAyLuQ,gBAAgB,CAAEtD,EAAWjN,AAA1N,IAAI,CAAgOiN,QAAQ,CAAE/H,EAAWvuB,EAAMuuB,QAAQ,CAAEsL,EAAW75B,EAAMmI,KAAK,CAAC,EAAE,CAAC0xB,QAAQ,CAAEC,EAAW95B,EAAMmI,KAAK,CAAC,EAAE,CAAClF,OAAO,CAAC62B,QAAQ,CAAExL,EAAmBjF,AAA5W,IAAI,CAAkXiF,gBAAgB,CACpZyL,EAAgBlG,EAAeE,EAAc1F,EAAkBhF,AADjD,IAAI,CACuDgF,eAAe,CAAEiK,EAAeN,EAE7G,GAAI,IAAI,CAAC5B,UAAU,EAAI,CAAC3yB,EAAQymB,GAC5B,OAKJ,GAHA7sB,EAAM2rB,EAAa3rB,EAAMqtB,EAAa,GACtC3kB,EAAMijB,EAAajjB,EAAM2kB,EAAa,GAElC,CAACrG,EAAShnB,IAAQ,CAACgnB,EAASte,GAAM,CAGlC,IAAIuwB,EAKA,OAJApM,EAAQ,EACRC,EAAQxqB,EAAKwI,EAAMpJ,KAAK,CAAE26B,EAAe36B,KAAK,CAKtD,CACAsqB,AApBkB,IAAI,CAoBZhf,IAAI,CAAG1K,EAAKwI,EAAMkC,IAAI,CAEhCrK,EAAM6uB,QAAQ,CAAGP,EACZC,CAAAA,EAAWvuB,EAAMg6B,SAAS,CAAG,CAAA,GAClC,IAAI7B,EAAY9O,AAxBE,IAAI,CAwBI4H,IAAI,CAAGqH,EAAgB34B,EAAKwI,EAAMlG,GAAG,CAAE,AAACssB,CAAAA,EAAWvuB,EAAMi6B,UAAU,CAAGj6B,EAAMg6B,SAAS,AAAD,EAC1G,EAAI1L,GAEJyL,EADAxL,EACiBF,EAGAiK,EAAgB,EAAIhK,EAGzCpE,EAAQvqB,EAAKuqB,EAAO/hB,EAAMO,QAAQ,CAACrL,EAAK,CAAA,IACxC8sB,EAAQxqB,EAAKwqB,EAAOhiB,EAAMO,QAAQ,CAAC3C,EAAK,CAAA,IAEnCse,EAAS6F,IAAU9sB,KAAKiT,GAAG,CAAC6Z,KAAW0G,MACxC1G,EAAQ,EACRC,EAAQ4P,GAGZ,IAAMlQ,EAAS1hB,EAAM+xB,OAAO,CAAChQ,EAAO,CAAA,GAAOJ,EAAS3hB,EAAM+xB,OAAO,CAAC/P,EAAO,CAAA,GAAOgQ,EAAe/8B,KAAKiT,GAAG,CAAC2Y,EAAac,EAASD,GAC1HsQ,CAAAA,EAAeN,EACX,IAAI,CAACO,WAAW,CAChBlQ,EAAQ/hB,EAAMO,QAAQ,CAACohB,EAAS+P,EAAWnP,EAAY,CAAA,GAElD,IAAI,CAAC2P,YAAY,EACtBlQ,CAAAA,EAAQhiB,EAAMO,QAAQ,CAACmhB,EAASgQ,EAAWnP,EAAY,CAAA,EAAI,EAG1DjnB,EAAQq2B,IACb9Q,EAAamR,EAAezP,GAAcoP,IACtC,IAAI,CAACM,WAAW,CAChBlQ,EAAQ/hB,EAAMO,QAAQ,CAACohB,EAASgQ,EAAWpP,EAAY,CAAA,GAElD,IAAI,CAAC2P,YAAY,EACtBlQ,CAAAA,EAAQhiB,EAAMO,QAAQ,CAACmhB,EAASiQ,EAAWpP,EAAY,CAAA,EAAI,GAInErB,AA5DkB,IAAI,CA4DZ8O,SAAS,CAAGZ,EAAMn6B,KAAK2I,GAAG,CAACmkB,EAAOC,GAAQ,EAAGgO,GACvD9O,AA7DkB,IAAI,CA6DZ6O,SAAS,CAAGX,EAAMlO,AA7DV,IAAI,CA6DgBiR,UAAU,CAC5CjR,AA9Dc,IAAI,CA8DR8O,SAAS,CAAG9O,AA9DR,IAAI,CA8DciR,UAAU,CAC1Cl9B,KAAKC,GAAG,CAAC6sB,EAAOC,GAAQ,EAAGgO,GAC/B9O,AAhEkB,IAAI,CAgEZvjB,KAAK,CAAGujB,AAhEA,IAAI,CAgEM8O,SAAS,CAAG9O,AAhEtB,IAAI,CAgE4B6O,SAAS,CAC3DC,EAAY/6B,KAAKqpB,KAAK,CAAC4C,AAjEL,IAAI,CAiEW8O,SAAS,EAC1C,IAAMD,EAAY96B,KAAKqpB,KAAK,CAAC4C,AAlEX,IAAI,CAkEiB6O,SAAS,EAC5C0B,IACAvQ,AApEc,IAAI,CAoER6P,cAAc,CAAC/nB,IAAI,CAAC,CAC1BuV,WAAY,SAChB,GAEAsR,EAAO1B,GAAY,CAACjN,AAxEN,IAAI,CAwEY+M,UAAU,CAAG,UAAY,OACvD/M,AAzEc,IAAI,CAyERuP,SAAS,CAACV,EAAWC,EAAW5J,EAAUyJ,GACpD3O,AA1Ec,IAAI,CA0ER4O,WAAW,CAACC,EAAWC,EAAW5J,EAAUyJ,GAClD3O,AA3EU,IAAI,CA2EJyF,gBAAgB,CAAC7D,OAAO,CAACvc,OAAO,GAC1C2a,AA5EU,IAAI,CA4EJ0O,UAAU,CAACG,EAAW,EAAG3J,EAAUyJ,GAC7C3O,AA7EU,IAAI,CA6EJ0O,UAAU,CAACI,EAAW,EAAG5J,EAAUyJ,KAGjD3O,AAhFc,IAAI,CAgFRhhB,SAAS,GACfkmB,GACAwF,EAAe1K,AAlFL,IAAI,CAkFWsF,GAAG,CAAGL,EAC/BuF,EAAgBxK,AAnFN,IAAI,CAmFYhf,IAAI,CAAGgkB,EAC5BuL,CAAAA,GAAoB,CAACF,EAAelL,QAAQ,CAAG,EAE5C,AAACkL,CAAAA,EAAepK,WAAW,EAAI,CAAA,EAE3BoK,EAAe5H,eAAe,AAAD,EACzCzD,EAAkBiK,EAAgB,EAAIhK,IAGtCyF,EAAe1K,AA5FL,IAAI,CA4FWsF,GAAG,CAAIiL,CAAAA,EAC5BvQ,AA7FM,IAAI,CA6FArqB,MAAM,CAChB,CAACqvB,CAAc,EACnBwF,EAAgBxK,AA/FN,IAAI,CA+FYhf,IAAI,CAAGikB,GAGrCjF,AAlGc,IAAI,CAkGRhhB,SAAS,CAAC1N,QAAQ,CAACk5B,EAAeE,EAAcgG,EAAgB1L,GAE1EhF,AApGc,IAAI,CAoGRhhB,SAAS,CAACspB,QAAQ,CAG5BtI,AAvGc,IAAI,CAuGR6O,SAAS,CAAII,CAAAA,GAAiB,CAAA,EAAIjP,AAvG9B,IAAI,CAuGoC8O,SAAS,CAAIG,CAAAA,GAAiB,CAAA,IAExFjP,AAzGkB,IAAI,CAyGZiN,QAAQ,CAAG,CAAA,EACrB3yB,EAAU,IAAI,CAAE,cACpB,CAOA42B,gBAAiB,CACb,IAAMlR,EAAY,IAAI,CAAErpB,EAAQqpB,EAAUrpB,KAAK,CAAEyN,EAAYzN,EAAMyN,SAAS,CACxE+sB,EAAiB,EAAE,CAAEjG,EAAkBC,CAK3CnL,CAAAA,EAAUkL,gBAAgB,CAAGA,EAAmB,SAAUh7B,CAAC,EACvD8vB,EAAUoR,WAAW,CAAClhC,EAC1B,EACA8vB,EAAUmL,cAAc,CAAGA,EAAiB,SAAUj7B,CAAC,EACnD8vB,EAAU5H,SAAS,CAACloB,EACxB,EAMAihC,AAJAA,CAAAA,EAAiBnR,EAAUqR,cAAc,CAAC,YAAW,EAItC5+B,IAAI,CAACyN,EAASvJ,EAAM0H,QAAQ,CAAE,YAAa6sB,GAAmBhrB,EAASkE,EAAUmnB,aAAa,CAAE,UAAWJ,IAEtHK,IACA2F,EAAe1+B,IAAI,CAACyN,EAASvJ,EAAM0H,QAAQ,CAAE,YAAa6sB,GAAmBhrB,EAASkE,EAAUmnB,aAAa,CAAE,WAAYJ,IAC3HgG,EAAe5mB,MAAM,CAACyV,EAAUqR,cAAc,CAAC,gBAEnDrR,EAAUmR,cAAc,CAAGA,EAEvBnR,EAAUxlB,MAAM,EAAIwlB,EAAUxlB,MAAM,CAAC,EAAE,EACvC22B,EAAe1+B,IAAI,CAACyN,EAAS8f,EAAUxlB,MAAM,CAAC,EAAE,CAACsE,KAAK,CAAE,gBAAiB,WACrEnI,EAAMqpB,SAAS,CAACsR,2BAA2B,EAC/C,GAER,CAcAD,eAAelZ,CAAS,CAAE,CACtB,IAAM6H,EAAY,IAAI,CAAEuR,EAAS,EAAE,CAQnC,MAPA,CAAC,SAAU,UAAU,CAAC75B,OAAO,CAAC,SAAUuG,CAAI,EACxC+hB,CAAS,CAAC/hB,EAAK,CAACvG,OAAO,CAAC,SAAU85B,CAAa,CAAEhuB,CAAK,EAClD+tB,EAAO9+B,IAAI,CAACyN,EAASsxB,EAAc/9B,OAAO,CAAE0kB,EAAW,SAAUjoB,CAAC,EAC9D8vB,CAAS,CAAC/hB,EAAO,YAAY,CAAC/N,EAAGsT,EACrC,GACJ,EACJ,GACO+tB,CACX,CAiBAE,gBAAgBvhC,CAAC,CAAEsT,CAAK,CAAE,CACtBtT,EAAI,IAAI,CAACyG,KAAK,CAAC61B,OAAO,CAACC,SAAS,CAACv8B,GACjC,IAAwByG,EAAQqpB,AAAd,IAAI,CAAoBrpB,KAAK,CAAEmI,EAAQkhB,AAAvC,IAAI,CAA6ClhB,KAAK,CAAE+vB,EAAY7O,AAApE,IAAI,CAA0E6O,SAAS,CAAEI,EAAgBjP,AAAzG,IAAI,CAA+G4H,IAAI,CAAEnrB,EAAQujB,AAAjI,IAAI,CAAuIvjB,KAAK,CAC9Ji1B,EAAoB1R,AADN,IAAI,CACYhf,IAAI,CAAEqpB,EAASn6B,EAAEm6B,MAAM,CAAErJ,EAAUD,EAAU4Q,EAAK3wB,CAEhFrK,CAAAA,EAAMuuB,QAAQ,GACdmF,EAASn6B,EAAEo6B,MAAM,CACjBoH,EAAoB1R,AALN,IAAI,CAKYsF,GAAG,EAEjC9hB,AAAU,IAAVA,GAEAwc,AATc,IAAI,CASR4M,aAAa,CAAGvC,EAC1BrK,AAVc,IAAI,CAURiR,UAAU,CAAGx0B,EACvBujB,AAXc,IAAI,CAWR4R,UAAU,CAAGvH,EAASwE,IAIhC7tB,EAAOqpB,EAASqH,EAAoBj1B,EAAQ,EACxC+G,AAAU,IAAVA,EACAxC,EAAOjN,KAAK2I,GAAG,CAAC,EAAGsE,GAEJ,IAAVwC,GAAexC,EAAOvE,GAASwyB,IACpCjuB,EAAOiuB,EAAgBxyB,EACnBujB,AArBM,IAAI,CAqBA6R,gBAAgB,EAE1B7wB,GAAQvE,EACRskB,EAAWf,AAxBL,IAAI,CAwBW8R,gBAAgB,GAAGx1B,OAAO,EAI/C0kB,EAAWhB,AA5BL,IAAI,CA4BW8R,gBAAgB,GAAGz1B,OAAO,EAGnD2E,IAAS6tB,IACT7O,AAhCU,IAAI,CAgCJiR,UAAU,CAAGx0B,EAEnBrC,EAAQu3B,AADZA,CAAAA,EAAM7yB,EAAM+gB,aAAa,CAACe,YAAY,CAAC5f,EAAMA,EAAOvE,EAAOskB,EAAUC,EAAQ,EAC7DhtB,GAAG,GACf2C,EAAMmI,KAAK,CAAC,EAAE,CAACupB,WAAW,CAACt0B,KAAKC,GAAG,CAAC29B,EAAI39B,GAAG,CAAE29B,EAAIj1B,GAAG,EAAG3I,KAAK2I,GAAG,CAACi1B,EAAI39B,GAAG,CAAE29B,EAAIj1B,GAAG,EAAG,CAAA,EAAM,KACzF,CAAEiD,QAAS,WAAY,IAIvC,CAYAoyB,iBAAiB7hC,CAAC,CAAEsT,CAAK,CAAE,CACvBtT,EAAI,IAAI,CAACyG,KAAK,CAAC61B,OAAO,CAACC,SAAS,CAACv8B,GACjC,IAAwByG,EAAQqpB,AAAd,IAAI,CAAoBrpB,KAAK,CAAEq7B,EAAYr7B,EAAMmI,KAAK,CAAC,EAAE,CAG3EmzB,EAAUjS,AAHQ,IAAI,CAGF6R,gBAAgB,AAChCruB,AAAU,CAAA,IAAVA,GAEAwc,AANc,IAAI,CAMR+Q,WAAW,CAAG,CAAA,EACxB/Q,AAPc,IAAI,CAORkS,cAAc,CAAGlS,AAPb,IAAI,CAOmB8O,SAAS,CAC9C9O,AARc,IAAI,CAQRmS,YAAY,CAAGF,EAAUD,EAAUh+B,GAAG,CAAGg+B,EAAUt1B,GAAG,GAIhEsjB,AAZc,IAAI,CAYRgR,YAAY,CAAG,CAAA,EACzBhR,AAbc,IAAI,CAaRkS,cAAc,CAAGlS,AAbb,IAAI,CAamB6O,SAAS,CAC9C7O,AAdc,IAAI,CAcRmS,YAAY,CAAGF,EAAUD,EAAUt1B,GAAG,CAAGs1B,EAAUh+B,GAAG,EAEpE2C,EAAMwqB,UAAU,CAAG,IACvB,CAUAiQ,YAAYlhC,CAAC,CAAE,CACX,IAAM8vB,EAAY,IAAI,CAAErpB,EAAQqpB,EAAUrpB,KAAK,CAAEs4B,EAAgBjP,EAAUiP,aAAa,CAAExyB,EAAQujB,EAAUvjB,KAAK,CAAEm1B,EAAa5R,EAAU4R,UAAU,CAAE1M,EAAWvuB,EAAMuuB,QAAQ,CAC3KlkB,EAAOgf,EAAUhf,IAAI,CAAEqpB,EAIvB,CAAA,CAACn6B,EAAE0C,OAAO,EAAI1C,AAAuB,IAAvBA,EAAE0C,OAAO,CAAC,EAAE,CAACw/B,KAAK,AAAK,IAErC/H,EAASn6B,AADTA,CAAAA,EAAIyG,EAAM61B,OAAO,CAACC,SAAS,CAACv8B,EAAC,EAClBm6B,MAAM,CAEbnF,IACAlkB,EAAOgf,EAAUsF,GAAG,CACpB+E,EAASn6B,EAAEo6B,MAAM,EAGjBtK,EAAU+Q,WAAW,EACrB/Q,EAAU+M,UAAU,CAAG,CAAA,EACvB/M,EAAU2G,MAAM,CAAC,EAAG,EAAG0D,EAASrpB,EAAMgf,EAAUkS,cAAc,GAGzDlS,EAAUgR,YAAY,EAC3BhR,EAAU+M,UAAU,CAAG,CAAA,EACvB/M,EAAU2G,MAAM,CAAC,EAAG,EAAG3G,EAAUkS,cAAc,CAAE7H,EAASrpB,IAGrDgf,EAAU4M,aAAa,GAC5B5M,EAAU+M,UAAU,CAAG,CAAA,EACnB1C,EAASuH,EACTvH,EAASuH,EAGJvH,EACL4E,EAAgB2C,EAAan1B,GAC7B4tB,CAAAA,EAAS4E,EAAgB2C,EAAan1B,CAAI,EAE9CujB,EAAU2G,MAAM,CAAC,EAAG,EAAG0D,EAASuH,EAAYvH,EAASuH,EAAan1B,IAElEujB,EAAU+M,UAAU,EACpB/M,EAAUhhB,SAAS,EACnB1I,EAAK0pB,EAAUhhB,SAAS,CAACpF,OAAO,CAACovB,UAAU,CAG3C,CAACtJ,GACG,CAAC,IAAI,CAAC/oB,KAAK,CAACo3B,OAAO,IACvB79B,EAAEi4B,OAAO,CAAGj4B,EAAEE,IAAI,CAClBwZ,WAAW,WACPoW,EAAU5H,SAAS,CAACloB,EACxB,EAAG,IAGf,CASAkoB,UAAUloB,CAAC,CAAE,KAGL4+B,EAAWD,EAAWwD,EAAetR,EAAUC,EAAU2Q,EAF7D,IAAwBh7B,EAAQqpB,AAAd,IAAI,CAAoBrpB,KAAK,CAAEmI,EAAQkhB,AAAvC,IAAI,CAA6ClhB,KAAK,CAAEE,EAAYghB,AAApE,IAAI,CAA0EhhB,SAAS,CAAEY,EAAW1P,EAAE0P,QAAQ,EAAI1P,EAAGg1B,EAAWvuB,EAAMuuB,QAAQ,CAAEyJ,EAAO3O,AAAvJ,IAAI,CAA6JiN,QAAQ,EAAI,CAACjN,AAA9K,IAAI,CAAoL+M,UAAU,CAChN,UAAY,OAMhB,CAAA,AAAC/M,AAPiB,IAAI,CAOX+M,UAAU,EAAK,CAAA,CAAC/tB,GAAa,CAACA,EAAU+tB,UAAU,AAAD,GACxD78B,AAAc,cAAdA,EAAEyP,OAAO,AAAe,IACxB0yB,EAAgBrS,AATF,IAAI,CASQ8R,gBAAgB,GAEtC9R,AAXU,IAAI,CAWJ6O,SAAS,GAAK7O,AAXd,IAAI,CAWoBkS,cAAc,CAChDnR,EAAWf,AAZD,IAAI,CAYOmS,YAAY,CAE5BnS,AAdK,IAAI,CAcC8O,SAAS,GAAK9O,AAdnB,IAAI,CAcyBkS,cAAc,EACrDlR,CAAAA,EAAWhB,AAfD,IAAI,CAeOmS,YAAY,AAAD,EAGhCnS,AAlBU,IAAI,CAkBJ8O,SAAS,GAAK9O,AAlBd,IAAI,CAkBoB4H,IAAI,EACtC5G,CAAAA,EAAWhB,AAnBD,IAAI,CAmBO6R,gBAAgB,CACjCQ,EAAc/1B,OAAO,CACrB+1B,EAAch2B,OAAO,AAAD,EAGA,IAAxB2jB,AAxBU,IAAI,CAwBJ6O,SAAS,EACnB9N,CAAAA,EAAWf,AAzBD,IAAI,CAyBO6R,gBAAgB,CACjCQ,EAAch2B,OAAO,CACrBg2B,EAAc/1B,OAAO,AAAD,EAGxBlC,EAAQu3B,AADZA,CAAAA,EAAM7yB,EAAM+gB,aAAa,CAACe,YAAY,CAACZ,AA7BzB,IAAI,CA6B+B6O,SAAS,CAAE7O,AA7B9C,IAAI,CA6BoD8O,SAAS,CAAE/N,EAAUC,EAAQ,EACnFhtB,GAAG,GACf2C,EAAMmI,KAAK,CAAC,EAAE,CAACupB,WAAW,CAACt0B,KAAKC,GAAG,CAAC29B,EAAI39B,GAAG,CAAE29B,EAAIj1B,GAAG,EAAG3I,KAAK2I,GAAG,CAACi1B,EAAI39B,GAAG,CAAE29B,EAAIj1B,GAAG,EAAG,CAAA,EAGnFsjB,CAAAA,AAlCU,IAAI,CAkCJ+M,UAAU,EAAW,KAAM,CACjCptB,QAAS,YACT2yB,UAAW,iBACX1yB,SAAUA,CACd,IAGU,cAAd1P,EAAEi4B,OAAO,EACTj4B,AAAc,cAAdA,EAAEi4B,OAAO,EACTnI,CAAAA,AA3Cc,IAAI,CA2CR+Q,WAAW,CAAG/Q,AA3CV,IAAI,CA2CgBgR,YAAY,CAC1ChR,AA5CU,IAAI,CA4CJ4M,aAAa,CAAG5M,AA5ChB,IAAI,CA4CsBiR,UAAU,CAC1CjR,AA7CM,IAAI,CA6CAmS,YAAY,CAAGnS,AA7CnB,IAAI,CA6CyBkS,cAAc,CAC7ClS,AA9CE,IAAI,CA8CI+M,UAAU,CAAG/M,AA9CrB,IAAI,CA8C2B4R,UAAU,CAAG,IAAG,EAG7D5R,AAjDc,IAAI,CAiDRuQ,gBAAgB,EAC1BvV,EAASgF,AAlDK,IAAI,CAkDC6O,SAAS,GAC5B7T,EAASgF,AAnDK,IAAI,CAmDC8O,SAAS,IAC5BD,EAAY96B,KAAKqpB,KAAK,CAAC4C,AApDT,IAAI,CAoDe6O,SAAS,EAC1CC,EAAY/6B,KAAKqpB,KAAK,CAAC4C,AArDT,IAAI,CAqDe8O,SAAS,EACtC9O,AAtDU,IAAI,CAsDJyP,MAAM,EAChBzP,AAvDU,IAAI,CAuDJuP,SAAS,CAACV,EAAWC,EAAW5J,EAAUyJ,GAEpD3O,AAzDU,IAAI,CAyDJ5Z,OAAO,EACjB4Z,AA1DU,IAAI,CA0DJ4O,WAAW,CAACC,EAAWC,EAAW5J,EAAUyJ,GAEtD3O,AA5DU,IAAI,CA4DJyF,gBAAgB,CAAC7D,OAAO,CAACvc,OAAO,EAC1C2D,OAAOrP,IAAI,CAACqmB,AA7DF,IAAI,CA6DQ4B,OAAO,EAAErvB,MAAM,GACjCytB,AA9DM,IAAI,CA8DA4B,OAAO,CAACrvB,MAAM,GAC5BytB,AA/DU,IAAI,CA+DJ0O,UAAU,CAACG,EAAW,EAAG3J,EAAUyJ,GAC7C3O,AAhEU,IAAI,CAgEJ0O,UAAU,CAACI,EAAW,EAAG5J,EAAUyJ,IAGzD,CAOA3C,cAAe,CACP,IAAI,CAACmF,cAAc,GACnB,IAAI,CAACA,cAAc,CAACz5B,OAAO,CAAC,SAAU66B,CAAM,EACxCA,GACJ,GACA,IAAI,CAACpB,cAAc,CAAG,KAAK,GAE/B,IAAI,CAACqB,sBAAsB,EAC/B,CAOAA,wBAAyB,CACrB,IAAMrC,EAAa,IAAI,CAACA,UAAU,EAAI,EAAE,AACpC,CAAA,IAAI,CAACI,gBAAgB,EAAIJ,CAAU,CAAC,EAAE,GACW,CAAA,IAA7C,IAAI,CAAC1K,gBAAgB,CAACgN,kBAAkB,EACxCtC,EAAWz4B,OAAO,CAAC,SAAU8C,CAAM,EAC/ByvB,EAAYzvB,EAAQ,cAAe,IAAI,CAACk4B,kBAAkB,CAC9D,EAAG,IAAI,EAGPvC,CAAU,CAAC,EAAE,CAACrxB,KAAK,EACnBmrB,EAAYkG,CAAU,CAAC,EAAE,CAACrxB,KAAK,CAAE,gBAAiB,IAAI,CAAC6zB,sBAAsB,EAGzF,CAOA7wB,KAAKnL,CAAK,CAAE,CACR,IAAMyX,EAAezX,EAAMiD,OAAO,CAAE6rB,EAAmBrX,EAAa4R,SAAS,EAAI,CAAC,EAAGuQ,EAAmB9K,EAAiBpgB,OAAO,CAAEuhB,EAAmBxY,EAAapP,SAAS,EAAI,CAAC,EAAG4zB,EAAmBhM,EAAiBvhB,OAAO,CAAE1P,EAAS46B,GAAoB9K,EAAiB9vB,MAAM,EAAI,EAAGqvB,EAAkB4N,GAAoBhM,EAAiBjxB,MAAM,EAAI,EAAGsvB,EAAmB2B,EAAiBmC,cAAc,EAAI/D,GAAmB,CACxa,CAAA,IAAI,CAACpD,OAAO,CAAG,EAAE,CACjB,IAAI,CAAC6N,MAAM,CAAG,EAAE,CAChB,IAAI,CAAC94B,KAAK,CAAGA,EACb,IAAI,CAACmuB,aAAa,GAClB,IAAI,CAACnvB,MAAM,CAAGA,EACd,IAAI,CAACqvB,eAAe,CAAGA,EACvB,IAAI,CAACC,gBAAgB,CAAGA,EACxB,IAAI,CAAC2N,gBAAgB,CAAGA,EACxB,IAAI,CAACrC,gBAAgB,CAAGA,EACxB,IAAI,CAAC9K,gBAAgB,CAAGA,EACxB,IAAI,CAACmB,gBAAgB,CAAGA,EACxB,IAAI,CAACzB,QAAQ,CAAG7uB,EAAKmvB,EAAiBN,QAAQ,CAAE0N,CAAAA,CAAQ,CAAA,CAACtC,GAAoB55B,EAAMuuB,QAAQ,AAAD,GAC1F,IAAMlF,EAAY,IAAI,CAAEmQ,EAAanQ,EAAUmQ,UAAU,CAAE2C,EAAan8B,EAAMmI,KAAK,CAACvM,MAAM,CAAEwgC,EAAap8B,EAAMoI,KAAK,CAACxM,MAAM,CAAEygC,EAAY7C,GAAcA,CAAU,CAAC,EAAE,EAAIA,CAAU,CAAC,EAAE,CAACrxB,KAAK,EACvLnI,EAAMmI,KAAK,CAAC,EAAE,EAAI,CAAElF,QAAS,CAAC,CAAE,EAwFpC,GAvFAjD,EAAMs8B,UAAU,CAAG,CAAA,EACfjT,EAAUuQ,gBAAgB,EAE1BvQ,EAAUlhB,KAAK,CAAG,IAAIkvB,EAAKr3B,EAAOiuB,EAAM,CAEpCsO,OAAQF,EAAUp5B,OAAO,CAACs5B,MAAM,CAChCC,QAASH,EAAUp5B,OAAO,CAACu5B,OAAO,AACtC,EAAG1N,EAAiB3mB,KAAK,CAAE,CACvBxL,GAAI,mBACJyL,MAAO,mBACP3O,KAAM,WACNoT,MAAOsvB,EACPhM,WAAY,CAAA,EACZhwB,OAAQ,EACRs8B,mBAAoB,CAAA,EACpBxP,YAAa,CAAA,EACbC,UAAW,CAAA,EACXC,WAAY,EACZC,WAAY,EACZsP,YAAa,CAAA,CACjB,EAAG18B,EAAMuuB,QAAQ,CAAG,CAChBoO,QAAS,CAACrO,EAAkB,EAAG,CAACA,EAAkB,EAAE,CACpDvvB,MAAOC,CACX,EAAI,CACA29B,QAAS,CAAC,EAAG,CAACrO,EAAkB,EAAGA,EAAiB,CACpDtvB,OAAQA,CACZ,GAAI,SACJqqB,EAAUjhB,KAAK,CAAG,IAAIivB,EAAKr3B,EAAOiuB,EAAMa,EAAiB1mB,KAAK,CAAE,CAC5DzL,GAAI,mBACJigC,WAAY,CAAA,EACZz8B,OAAQ,EACR0M,MAAOuvB,EACPjM,WAAY,CAAA,EACZmB,SAAU3xB,EAAMmvB,EAAiB1mB,KAAK,EAClC0mB,EAAiB1mB,KAAK,CAACkpB,QAAQ,CAAItxB,EAAMoI,KAAK,CAAC,EAAE,EAAIpI,EAAMoI,KAAK,CAAC,EAAE,CAACkpB,QAAQ,CAAG,CAAA,GACnFoL,YAAa,CAAA,CACjB,EAAG18B,EAAMuuB,QAAQ,CAAG,CAChBxvB,MAAOC,CACX,EAAI,CACAA,OAAQA,CACZ,GAAI,SAEAw6B,GAAc1K,EAAiBjrB,MAAM,CAACg5B,IAAI,CAC1CxT,EAAUyT,qBAAqB,CAAC,CAAA,GAGH,IAAxB98B,EAAM6D,MAAM,CAACjI,MAAM,EACxBytB,CAAAA,EAAU0T,YAAY,CAAGxzB,EAASvJ,EAAO,eAAgB,WAEjDA,EAAM6D,MAAM,CAACjI,MAAM,CAAG,GAAK,CAACytB,EAAUxlB,MAAM,GAC5CwlB,EAAU8E,aAAa,GACvB9E,EAAU0T,YAAY,GAE9B,EAAC,EAEL1T,EAAU6R,gBAAgB,CAAG,AAACl7B,EAAMuuB,QAAQ,EAAI,CAAClF,EAAUlhB,KAAK,CAACmpB,QAAQ,EAAM,CAACtxB,EAAMuuB,QAAQ,EAAIlF,EAAUlhB,KAAK,CAACmpB,QAAQ,CAE1HjI,EAAU2P,cAAc,GAExB3P,EAAUkR,cAAc,KAIxBlR,EAAUlhB,KAAK,CAAG,CACdnI,MAAAA,EACAkpB,cAAe,CACXyQ,KAAM,CAAA,CACV,EACArP,UAAW,SAAUxpB,CAAK,CAAEw6B,CAAO,EAC/B,IAAMv2B,EAAO/E,EAAMmI,KAAK,CAAC,EAAE,CAAE6yB,EAAMj2B,EAAKgrB,WAAW,GAAIiN,EAAmBj4B,EAAK9C,GAAG,CAAG,EAAIqsB,EAAkBjxB,EAAMs6B,EAAO,MAAO5yB,EAAK9B,OAAO,CAAC5F,GAAG,CAAE29B,EAAIr1B,OAAO,EAAGs3B,EAAatF,EAAO,MAAO5yB,EAAK9B,OAAO,CAAC8C,GAAG,CAAEi1B,EAAIt1B,OAAO,EAAIrI,EAC3N,OAAOi+B,EAEH,AAACx6B,EAAQm8B,EAAaD,EAAoB3/B,EAE1C2/B,EAAoBl8B,CAAAA,EAAQzD,CAAE,EAAK4/B,CAC3C,EACAv0B,SAAU,SAAU5H,CAAK,EACrB,OAAO,IAAI,CAACwpB,SAAS,CAACxpB,EAC1B,EACAo5B,QAAS,SAAUp5B,CAAK,EACpB,OAAO,IAAI,CAACwpB,SAAS,CAACxpB,EAAO,CAAA,EACjC,CACJ,EACAuoB,EAAUlhB,KAAK,CAAC+gB,aAAa,CAACnkB,IAAI,CAAGskB,EAAUlhB,KAAK,CACpDkhB,EAAUlhB,KAAK,CAAC+gB,aAAa,CAACe,YAAY,CAAId,EAAuB7lB,SAAS,CAAC2mB,YAAY,CAACqK,IAAI,CAACjL,EAAUlhB,KAAK,CAAC+gB,aAAa,GAG9HlpB,EAAMiD,OAAO,CAACoF,SAAS,CAACqG,OAAO,CAAE,CACjC,IAAMzL,EAAUgrB,EAAMjuB,EAAMiD,OAAO,CAACoF,SAAS,CAAE,CAAE8oB,SAAUnxB,EAAMuuB,QAAQ,AAAC,EACtE,EAAClK,EAASphB,EAAQ2L,MAAM,GAAKya,EAAUuQ,gBAAgB,EACvD32B,CAAAA,EAAQ2L,MAAM,CAAG5O,EAAMuuB,QAAQ,CAAG,GAAK,CAAA,EAE3CvuB,EAAMqI,SAAS,CAAGghB,EAAUhhB,SAAS,CAAG,IAAImoB,EAAUxwB,EAAM4E,QAAQ,CAAE3B,EAASjD,GAC/EuJ,EAAS8f,EAAUhhB,SAAS,CAAE,UAAW,SAAU9O,CAAC,EAChD,IAAMuM,EAAQujB,EAAU4H,IAAI,CAAE3oB,EAAKxC,EAAQ,IAAI,CAACwC,EAAE,CAAEC,EAAOzC,EAAQ,IAAI,CAACyC,IAAI,AAC5E8gB,CAAAA,EAAU+M,UAAU,CAAG/M,EAAUhhB,SAAS,CAAC+tB,UAAU,CACrD/M,EAAU2G,MAAM,CAAC,EAAG,EAAGznB,EAAMD,GACzB,IAAI,CAACipB,oBAAoB,CAACh4B,EAAEi4B,OAAO,GACnCve,WAAW,WACPoW,EAAU5H,SAAS,CAACloB,EACxB,EAER,EACJ,CAEA8vB,EAAU6T,mBAAmB,GAE7B7T,EAAU8T,cAAc,EAC5B,CAQAhC,iBAAiBiC,CAAyB,CAAE,KAEpCprB,EADJ,IAAMqrB,EAAW,IAAI,CAACr9B,KAAK,CAACmI,KAAK,CAAC,EAAE,CAAEm1B,EAAU,IAAI,CAACn1B,KAAK,CAAEo1B,EAAiBD,EAAQr6B,OAAO,CAAEu6B,EAAkBH,EAASp6B,OAAO,CAShI,OAPKm6B,GAA6BC,AAAqB,OAArBA,EAAS13B,OAAO,EAC9CqM,CAAAA,EAAM,CACFrM,QAAShG,EACT49B,GAAkBA,EAAelgC,GAAG,CAAEs6B,EAAO,MAAO6F,EAAgBngC,GAAG,CAAEggC,EAAS13B,OAAO,CAAE23B,EAAQ33B,OAAO,CAAE23B,EAAQjgC,GAAG,GACvHqI,QAAS/F,EAAK49B,GAAkBA,EAAex3B,GAAG,CAAE4xB,EAAO,MAAO6F,EAAgBz3B,GAAG,CAAEs3B,EAAS33B,OAAO,CAAE43B,EAAQ53B,OAAO,CAAE43B,EAAQv3B,GAAG,EACzI,CAAA,EAEGiM,CACX,CAaAmc,cAAcsP,CAAiB,CAAE/N,CAAM,CAAE,CACrC,IAAM1vB,EAAQ,IAAI,CAACA,KAAK,CAAEw5B,EAAa,IAAI,CAACA,UAAU,CAAG,EAAE,CAC3DiE,EAAqBA,GACjBz9B,EAAMiD,OAAO,EAAIjD,EAAMiD,OAAO,CAAComB,SAAS,CAACmQ,UAAU,EAClDx5B,CAAAA,EAAM6D,MAAM,CAACjI,MAAM,CAEhB8H,EAAK1D,EAAM6D,MAAM,CAAE,AAAC0D,GAAO,CAACA,EAAEtE,OAAO,CAACktB,UAAU,EAAGtjB,KAAK,CACxD,CAAA,EAGR,AAAC7M,CAAAA,EAAM6D,MAAM,EAAI,EAAE,AAAD,EAAG9C,OAAO,CAAC,CAAC8C,EAAQlI,KAGlC,CAACkI,EAAOZ,OAAO,CAACktB,UAAU,EACrBtsB,CAAAA,EAAOZ,OAAO,CAACy6B,eAAe,EAC3B,AAAC/hC,CAAAA,IAAM8hC,GACH55B,EAAOZ,OAAO,CAACtG,EAAE,GAAK8gC,CAAgB,GACtC55B,AAAmC,CAAA,IAAnCA,EAAOZ,OAAO,CAACy6B,eAAe,AAAS,GAC/ClE,EAAW19B,IAAI,CAAC+H,EAExB,GAEI,IAAI,CAACsE,KAAK,EAAI,CAAC,IAAI,CAACA,KAAK,CAAC+gB,aAAa,CAACyQ,IAAI,EAC5C,IAAI,CAACmD,qBAAqB,CAAC,CAAA,EAAMpN,EAEzC,CAQAoN,sBAAsB9I,CAAS,CAAEtE,CAAM,CAAE,CACrC,IAAMrG,EAAY,IAAI,CAAErpB,EAAQqpB,EAAUrpB,KAAK,CAAEw5B,EAAanQ,EAAUmQ,UAAU,CAAEmE,EAAiB,CACjGC,oBAAqB,CAAA,EACrB/wB,MAAO,KACPgxB,SAAU,KACVx5B,MAAO,MACPy5B,SAAU,CAAA,EACV31B,MAAO,mBACPC,MAAO,mBACP21B,aAAc,CAAA,EACdC,SAAU,KAAK,EACf7N,WAAY,CAAA,EACZ8N,OAAQ,CACJC,SAAU,CACN5+B,QAAS,CACb,CACJ,CACJ,EAEAm6B,EAAkBpQ,EAAUxlB,MAAM,CAC9B,AAACwlB,CAAAA,EAAUxlB,MAAM,EAAI,EAAE,AAAD,EAAGxE,MAAM,CAAC,AAAC8+B,IAC7B,IAAMC,EAAOD,EAAU3E,UAAU,OACjC,CAAIA,CAAAA,AAA2B,EAA3BA,EAAWl+B,OAAO,CAAC8iC,EAAQ,IAGvBA,IACA9K,EAAY8K,EAAM,cAAe/U,EAAU0S,kBAAkB,EAC7D,OAAOqC,EAAK3E,eAAe,EAI3B0E,EAAUn+B,KAAK,EACfm+B,EAAU5yB,OAAO,GAEd,CAAA,EAGf,GACA8yB,EAAaC,EAAwBC,EAA8BlV,EAAUyF,gBAAgB,CAACjrB,MAAM,CAAE26B,EAGtGhF,GAAcA,EAAW59B,MAAM,EAC/B49B,EAAWz4B,OAAO,CAAC,AAACq9B,IAChB,IAAMK,EAAkBL,EAAK3E,eAAe,CAAEiF,EAAiB50B,EAE/D,CACIiF,MAAOqvB,EAAKrvB,KAAK,CACjB4E,QAASyqB,EAAKzqB,OAAO,AACzB,EAAG,AAAC8jB,EAAQ8G,GAERzQ,EAAezE,SAAS,CAACxlB,MAAM,CAD/B06B,GAIJ,GAAIE,GACApV,AAAkD,CAAA,IAAlDA,EAAUyF,gBAAgB,CAACgN,kBAAkB,CAC7C,MAEJ6B,CAAAA,EAAer2B,IAAI,CAAG,aAAekyB,EAAW59B,MAAM,CAEtD4iC,EAAuBH,AADvBA,CAAAA,EAAcD,EAAKn7B,OAAO,EAAI,CAAC,CAAA,EACI6rB,gBAAgB,EAAI,CAAC,EAGxD4P,EAAetS,UAAU,CAAGsL,EAAMgH,EAAetS,UAAU,EAG3DkS,AAFAA,CAAAA,EAAyBrQ,EAAMoQ,EAAaV,EAAgBe,EAAgBF,EAAoB,EAEzE9T,UAAU,CAAG/qB,EAEpC++B,EAAehU,UAAU,CAAE8T,EAAqB9T,UAAU,CAE1DoD,EAAe6Q,WAAW,CAACL,EAAuB7kC,IAAI,EAAI,OAAO,CAACixB,UAAU,EAG5E,IAAMkU,EAAsBJ,EAAqB3B,IAAI,EAAI6B,EAAe7B,IAAI,AAC5ExT,CAAAA,EAAUwV,gBAAgB,CACtBxV,EAAUwV,gBAAgB,EAAI,CAAC,CAACD,EACpCN,EAAuBzB,IAAI,CACvB+B,GACIP,EAAYxB,IAAI,EAAIwB,EAAYxB,IAAI,CAAC1/B,KAAK,CAAC,GAE/CshC,GAAmBA,EAAgBx7B,OAAO,CAC1Cw7B,EAAgBpd,MAAM,CAACid,EAAwB5O,IAG/C0O,EAAK3E,eAAe,CAAGz5B,EAAM8+B,UAAU,CAACR,GACxCF,EAAK3E,eAAe,CAACD,UAAU,CAAG4E,EAClC3E,EAAgB39B,IAAI,CAACsiC,EAAK3E,eAAe,EAEjD,GAKA8E,CAAAA,EAA4B1B,IAAI,EAChC,CAAErD,CAAAA,GAAcA,EAAW59B,MAAM,AAAD,GAChC67B,EAAQ8G,EAA2B,IACnClV,EAAUwV,gBAAgB,CAAG,CAAA,EAI7BN,AAFAA,CAAAA,EACI7G,EAAM6G,EAA2B,EACTx9B,OAAO,CAAC,CAACg+B,EAAmBpjC,KACpDgiC,EAAer2B,IAAI,CACf,aAAgBmyB,CAAAA,EAAgB79B,MAAM,CAAG,CAAA,EAc7C0iC,AAbAA,CAAAA,EAAyBrQ,EAAMH,EAAezE,SAAS,CAACxlB,MAAM,CAAE,CAO5DkL,MAAO/O,EAAM6D,MAAM,CAAClI,EAAE,EAClB,CAACqE,EAAM6D,MAAM,CAAClI,EAAE,CAACsH,OAAO,CAACktB,UAAU,EACnCnwB,EAAM6D,MAAM,CAAClI,EAAE,CAACoT,KAAK,EACrB/O,EAAMiD,OAAO,CAAC+7B,MAAM,CAACrjC,EAAE,EACvBqE,EAAMiD,OAAO,CAAC+7B,MAAM,CAAC,EAAE,AAC/B,EAAGrB,EAAgBoB,EAAiB,EACblC,IAAI,CAAGkC,EAAkBlC,IAAI,CAChDyB,EAAuBzB,IAAI,GAC3BxT,EAAUwV,gBAAgB,CAAG,CAAA,EAC7BpF,EAAgB39B,IAAI,CAACkE,EAAM8+B,UAAU,CAACR,IAE9C,IAEAtK,GACA,IAAI,CAACkJ,mBAAmB,EAEhC,CAQAA,qBAAsB,CAClB,IAAM7T,EAAY,IAAI,CAAEmQ,EAAanQ,EAAUmQ,UAAU,EAAI,EAAE,AAK3DA,CAAAA,CAAU,CAAC,EAAE,EAAIA,CAAU,CAAC,EAAE,CAACrxB,KAAK,EACpCqxB,CAAU,CAAC,EAAE,CAACgB,cAAc,CAAC1+B,IAAI,CAACyN,EAASiwB,CAAU,CAAC,EAAE,CAACrxB,KAAK,CAAE,gBAAiB,IAAI,CAAC6zB,sBAAsB,GAEhHxC,EAAWz4B,OAAO,CAAC,AAACq9B,IAEhBA,EAAK5D,cAAc,CAAC1+B,IAAI,CAACyN,EAAS60B,EAAM,OAAQ,WACxC,IAAI,CAAC3E,eAAe,EACpB,IAAI,CAACA,eAAe,CAACwF,UAAU,CAAC,CAAA,EAAM,CAAA,EAE9C,IACAb,EAAK5D,cAAc,CAAC1+B,IAAI,CAACyN,EAAS60B,EAAM,OAAQ,WACxC,IAAI,CAAC3E,eAAe,EACpB,IAAI,CAACA,eAAe,CAACwF,UAAU,CAAC,CAAA,EAAO,CAAA,EAE/C,IAGiD,CAAA,IAA7C,IAAI,CAACnQ,gBAAgB,CAACgN,kBAAkB,EACpCsC,EAAKj2B,KAAK,EACVi2B,EAAK5D,cAAc,CAAC1+B,IAAI,CAACyN,EAAS60B,EAAM,cAAe,IAAI,CAACrC,kBAAkB,GAItFqC,EAAK5D,cAAc,CAAC1+B,IAAI,CAACyN,EAAS60B,EAAM,SAAU,WAC1C,IAAI,CAAC3E,eAAe,GACpBjC,EAAMnO,EAAUxlB,MAAM,CAAE,IAAI,CAAC41B,eAAe,EACxCh2B,EAAQ,IAAI,CAACg2B,eAAe,CAACx2B,OAAO,GACpC,IAAI,CAACw2B,eAAe,CAACr7B,MAAM,CAAC,CAAA,GAEhC,OAAO,IAAI,CAACq7B,eAAe,CAEnC,GACJ,EACJ,CASAyF,iBAAiBC,CAAgB,CAAE,CAC/B,OAAO,IAAI,CAAC3F,UAAU,CAAC72B,MAAM,CAAC,SAAUtF,CAAG,CAAEwG,CAAM,EAE/C,OAAOzG,KAAKC,GAAG,CAACA,EAAKwG,EAAOu7B,KAAK,EAAIv7B,EAAOu7B,KAAK,CAACxjC,MAAM,CACpDiI,EAAOu7B,KAAK,CAAC,EAAE,CAAG/hC,EAC1B,EAAG8hC,EACP,CASAxE,6BAA8B,CAC1B,IAAMxyB,EAAQ,IAAI,CAACA,KAAK,CACxB,GAAI,AAA6B,KAAA,IAAtBA,EAAM4nB,WAAW,CAAkB,CAC1C,IAAM2L,EAAgB,IAAI,CAACP,gBAAgB,CAAC,CAAA,GACxCO,GACCA,CAAAA,EAAc/1B,OAAO,GAAKwC,EAAM9K,GAAG,EAChCq+B,EAAch2B,OAAO,GAAKyC,EAAMpC,GAAG,AAAD,IACtCoC,EAAM9K,GAAG,CAAGq+B,EAAc/1B,OAAO,CACjCwC,EAAMpC,GAAG,CAAG21B,EAAch2B,OAAO,CAEzC,CACJ,CAOAs2B,wBAAyB,KAOjBlS,EAAQD,EANZ,IAAwBR,EAAYgS,AAAlB,IAAI,CAAwBr7B,KAAK,CAACqpB,SAAS,CAAEgW,EAAehE,AAA5D,IAAI,CAAkEtL,WAAW,GAAIuP,EAAUD,EAAahiC,GAAG,CAAEkiC,EAAUF,EAAat5B,GAAG,CAAEy5B,EAAcH,EAAa15B,OAAO,CAAE85B,EAAcJ,EAAa35B,OAAO,CAAEI,EAAQy5B,EAAUD,EAASI,EAAarW,EAAUqW,UAAU,CAAEC,EAAatW,EAAUsW,UAAU,CAAEnT,EAAa7sB,EAAK07B,AAAxU,IAAI,CAA8Up4B,OAAO,CAACupB,UAAU,CAAE,GAAIiN,EAAkBpQ,EAAUxlB,MAAM,EAAIwlB,EAAUxlB,MAAM,CAAC,EAAE,CAAE+7B,EAAiB,CAAC,CAACvE,AAAxb,IAAI,CAA8b3J,WAAW,CAI/dmO,EAAYxE,AAJM,IAAI,CAIAyE,SAAS,EAC3BzE,AAAgC,wBAAhCA,AALc,IAAI,CAKRyE,SAAS,CAAC92B,OAAO,AAE3B,EAAC62B,IAGGH,GAEA5V,CAAAA,EAASD,AADTA,CAAAA,EAAS2V,CAAU,EACD15B,CAAI,EAItB65B,IACA7V,EAAS2V,EAAcjT,EAElBkT,GACD7V,CAAAA,EAASzsB,KAAK2I,GAAG,CAACy5B,EAClB1V,EAAShkB,EAAOujB,EAAU6V,gBAAgB,CAACzF,GAAmBA,EAAgB2F,KAAK,CAC/E3F,EAAgB2F,KAAK,CAAC,EAAE,CACxB,CAACp9B,OAAO+9B,SAAS,EAAC,GAI1BH,GAAmBF,CAAAA,GAAcC,CAAS,GACtCtb,EAASwF,KACTwR,AA7BM,IAAI,CA6BAh+B,GAAG,CAAGg+B,AA7BV,IAAI,CA6BgB2E,OAAO,CAAGnW,EACpCwR,AA9BM,IAAI,CA8BAt1B,GAAG,CAAGs1B,AA9BV,IAAI,CA8BgB4E,OAAO,CAAGnW,IAKhDT,EAAUqW,UAAU,CAChBrW,EAAUsW,UAAU,CAAG,IAC/B,CASA5D,oBAAqB,CACjB,IAAM1S,EAAY,IAAI,CAACrpB,KAAK,CAACqpB,SAAS,CAAqBoQ,EAAkB,IAAI,CAACA,eAAe,CAAEyG,EAAmB7W,EAAU6R,gBAAgB,CAC5I99B,AAAoC,IAApCA,KAAKqpB,KAAK,CAAC4C,EAAU6O,SAAS,EAC9B96B,KAAKqpB,KAAK,CAAC4C,EAAU8O,SAAS,GAAK/6B,KAAKqpB,KAAK,CAAC4C,EAAU4H,IAAI,CAGhE5H,CAAAA,EAAUsW,UAAU,CAAGhgC,EAAK,IAAI,CAACK,KAAK,CAACiD,OAAO,CAAComB,SAAS,EACpD,IAAI,CAACrpB,KAAK,CAACiD,OAAO,CAAComB,SAAS,CAACsW,UAAU,CAAEO,GAC7C7W,EAAUqW,UAAU,CAAGrW,EAAU8W,gBAAgB,CAPI,IAAI,CAOK9W,GAE1DoQ,GAAmB,CAACpQ,EAAUwV,gBAAgB,GAC9CpF,EAAgBx2B,OAAO,CAACm9B,UAAU,CAAG5G,AAVY,IAAI,CAUL4F,KAAK,CAAC,EAAE,CACxD3F,EAAgB4G,OAAO,CAAC7G,AAXyB,IAAI,CAWlBv2B,OAAO,CAAC45B,IAAI,CAAE,CAAA,EAAO,KAAM,CAAA,GAEtE,CAOAsD,iBAAiB3G,CAAU,CAAEnQ,CAAS,CAAE,CACpC,IAAMiX,EAAWjX,EAAU6V,gBAAgB,CAAC1F,EAAW4F,KAAK,CAAC,EAAE,EAAGj3B,EAAQqxB,EAAWrxB,KAAK,CAAEpC,EAAMoC,EAAMpC,GAAG,CAAE1I,EAAM8K,EAAM9K,GAAG,CAAEyI,EAAQqC,EAAMlF,OAAO,CAAC6C,KAAK,CAiBzJ,QAfIue,CAAAA,EAASte,IAAQse,EAAShnB,EAAG,IAGzByI,GAASC,EAAMu6B,EAAW,EACbv6B,EAAMu6B,EAAWx6B,EAKjBzI,GAAOijC,EAOhC,CAOAnD,gBAAiB,CACR,IAAI,CAAC3C,cAAc,EACpB,CAAA,IAAI,CAACA,cAAc,CAAG,EAAE,AAAD,EAE3B,IAAI,CAACA,cAAc,CAAC1+B,IAAI,CAGxByN,EAAS,IAAI,CAACvJ,KAAK,CAAE,SAAU,WAC3B,IAAMqpB,EAAY,IAAI,CAACA,SAAS,CAAElhB,EAAQkhB,GAAcA,CAAAA,EAAUmQ,UAAU,EACxEnQ,EAAUmQ,UAAU,CAAC,EAAE,EACvBnQ,EAAUmQ,UAAU,CAAC,EAAE,CAACrxB,KAAK,EAC7B,IAAI,CAACA,KAAK,CAAC,EAAE,AAAD,EACZA,GACAkhB,EAAU2G,MAAM,CAAC7nB,EAAM9K,GAAG,CAAE8K,EAAMpC,GAAG,CAE7C,GAEAwD,EAAS,IAAI,CAACvJ,KAAK,CAAE,aAAc,WAC/B,IAAkBqpB,EAAYrpB,AAAlB,IAAI,CAAoBqpB,SAAS,CAAEkX,EAAalX,EAAUmF,QAAQ,CAC1E,UAAY,cACZxuB,CAFQ,IAAI,CAENuuB,QAAQ,EACdgS,CAAAA,EAAalX,EAAUmF,QAAQ,CAC3B,cAAgB,UAAS,EAEjCxuB,AANY,IAAI,AAMX,CAACugC,EAAW,CACb,AAACvgC,CAAAA,AAPO,IAAI,AAON,CAACugC,EAAW,EAAI,CAAA,EAAMlX,CAAAA,EAAUuQ,gBAAgB,EAAI,CAAC55B,AAPnD,IAAI,CAOqDuuB,QAAQ,CACrElF,EAAUrqB,MAAM,CAAGqqB,EAAUgF,eAAe,CAC5C,CAAA,EAAKhF,EAAUyF,gBAAgB,CAAClgB,MAAM,AAClD,GACJ,CAOArD,SAAU,CAEN,IAAI,CAAC8pB,YAAY,GACb,IAAI,CAACltB,KAAK,GACVqvB,EAAM,IAAI,CAACx3B,KAAK,CAACmI,KAAK,CAAE,IAAI,CAACA,KAAK,EAClCqvB,EAAM,IAAI,CAACx3B,KAAK,CAACyc,IAAI,CAAE,IAAI,CAACtU,KAAK,GAEjC,IAAI,CAACC,KAAK,GACVovB,EAAM,IAAI,CAACx3B,KAAK,CAACoI,KAAK,CAAE,IAAI,CAACA,KAAK,EAClCovB,EAAM,IAAI,CAACx3B,KAAK,CAACyc,IAAI,CAAE,IAAI,CAACrU,KAAK,GAGrC,AAAC,CAAA,IAAI,CAACvE,MAAM,EAAI,EAAE,AAAD,EAAG9C,OAAO,CAAC,AAACwG,IACrBA,EAAEgE,OAAO,EACThE,EAAEgE,OAAO,EAEjB,GAEA,CACI,SAAU,QAAS,QAAS,SAAU,UAAW,iBACjD,kBAAmB,iBAAkB,YAAa,iBAClD,WACH,CAACxK,OAAO,CAAC,AAACu0B,IACH,IAAI,CAACA,EAAK,EAAI,IAAI,CAACA,EAAK,CAAC/pB,OAAO,EAChC,IAAI,CAAC+pB,EAAK,CAAC/pB,OAAO,GAEtB,IAAI,CAAC+pB,EAAK,CAAG,IACjB,GAEA,CAAC,IAAI,CAACrK,OAAO,CAAC,CAAClqB,OAAO,CAAC,AAAC8H,IACpBwqB,EAAwBxqB,EAC5B,EACJ,CACJ,CAOA,OAAOivB,CACX,GACA1/B,EAAgBD,EAAU,iDAAkD,CAACA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,mCAAmC,CAAEA,CAAQ,CAAC,6CAA6C,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,qBAAqB,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,wCAAwC,CAAC,CAAE,SAAU4R,CAAsB,CAAEwL,CAAS,CAAEjJ,CAAyB,CAAEwrB,CAAS,CAAE5T,CAAC,CAAEsc,CAAC,CAAExnC,CAAC,CAAEuK,CAAE,CAAEoG,CAAE,EAkBvkB,GAAM,CAAEya,WAAAA,CAAU,CAAE,CAAGF,EACjB,CAAEzkB,OAAAA,CAAM,CAAE,CAAG+gC,EACb,CAAEjJ,MAAAA,CAAK,CAAE53B,KAAAA,CAAI,CAAE2kB,YAAAA,CAAW,CAAE,CAAGtrB,EAC/B,CAAE0B,kBAAAA,CAAiB,CAAE,CAAG6I,EACxB,CAAE+B,wBAAAA,CAAuB,CAAEhB,qCAAAA,CAAoC,CAAE,CAAGqF,EAqM1E,OA7LA,cAAiCI,EAK7BoB,MAAO,CACH,IAAMnL,EAAQ,IAAI,CAACA,KAAK,CAAE2V,EAAY,IAAI,AAC1C,CAAA,IAAI,CAACO,SAAS,CAAG,IAAIX,EAAUvV,EAAO,UAEtC,IAAI,CAACuJ,QAAQ,CAACuuB,EAAW,cAAe,WAChC,IAAI,CAAC93B,KAAK,GAAK2V,EAAU3V,KAAK,EAC9B,IAAI,CAACA,KAAK,CAAC4E,QAAQ,EACnB0f,EAAY,KACR3O,EAAU1L,aAAa,CAClBwb,gCAAgC,CAAC,aACtC9P,EAAU8qB,kBAAkB,EAChC,EAAGrc,EAAWzkB,EAAK,IAAI,CAACK,KAAK,CAAC4E,QAAQ,CAACihB,eAAe,CAAE,CAAA,IAAOC,QAAQ,CAE/E,EACJ,CAKAza,eAAgB,CACZ,IAAMrL,EAAQ,IAAI,CAACA,KAAK,CAAEiD,EAAUjD,EAAMiD,OAAO,CACjD,GAAIA,EAAQomB,SAAS,CAACrkB,aAAa,EAAE0J,QAAS,CAC1C,IAAMgyB,EAAYz9B,EAAQ+B,aAAa,CAAC2I,iBAAiB,CAAEgzB,EAAiB19B,EAAQC,IAAI,CACnF8B,aAAa,EAAEqkB,UAAUuX,WAG9B,IAAI,CAAC32B,aAAa,CAACqd,WAAW,CAAC,aAC/B,IAAI,CAACrd,aAAa,CAAC8U,QAAQ,CAAC,YAAa,MAAO,CAC5CK,KAAMshB,AAAc,QAAdA,EAAsB,SAAW,QACvC,aAAcjhC,EAAOkhC,EAAgB,CAAE3gC,MAAAA,CAAM,EAAGA,EACpD,GACA,IAAM6gC,EAAkB59B,EAAQC,IAAI,CAC/B8B,aAAa,EAAEqkB,UAAUyX,YAC9B,CAAC,EAAG,EAAE,CAAC//B,OAAO,CAAC,AAACggC,IACZ,IAAMC,EAAS,IAAI,CAACC,aAAa,CAACF,GAClC,GAAIC,EAAQ,CACR,IAAM3a,EAAU,IAAI,CAACpc,aAAa,CAAC2U,eAAe,CAAC,YAAa,CAC5DC,MAAOmiB,CACX,EAAG,QAAS,CACRvnC,KAAM,QACN,aAAcgG,EAAOohC,EAAiB,CAAEK,SAAUH,EAAG/gC,MAAAA,CAAM,EAAGA,EAClE,EACA,CAAA,IAAI,CAAC+gC,EAAI,iBAAmB,iBAAiB,CACzC1a,EAAQnI,YAAY,CACxBmI,EAAQnI,YAAY,CAACpP,KAAK,CAACqyB,aAAa,CAAG,OAC3C9a,EAAQnI,YAAY,CAACkjB,OAAO,CACxB,IAAM,IAAI,CAACC,eAAe,EAClC,CACJ,GACA,IAAI,CAACZ,kBAAkB,EAC3B,MAEI,IAAI,CAACx2B,aAAa,CAACqd,WAAW,CAAC,YAEvC,CAMAga,6BAA6BJ,CAAQ,CAAE,CACnC,IAAMvrB,EAAY,IAAI,CAAE3V,EAAQ,IAAI,CAACA,KAAK,CAAEqmB,EAAU6a,EAAW,IAAI,CAACK,cAAc,CAAG,IAAI,CAACC,cAAc,CAAEx+B,EAAO,IAAI,CAACoH,QAAQ,CAChI,OAAO,IAAIkC,EAA0BtM,EAAO,CACxCwL,WAAY,CAAC,CACL,CAACxI,EAAKqH,IAAI,CAAErH,EAAKsH,KAAK,CAAEtH,EAAKuH,EAAE,CAAEvH,EAAKwH,IAAI,CAAC,CAC3C,SAAU0B,CAAO,EACb,GAAIma,EAAS,CACT,IAAMob,EAAQv1B,IAAYlJ,EAAKqH,IAAI,EAC/B6B,IAAYlJ,EAAKuH,EAAE,CAAG,GAAK,CAC/B8b,CAAAA,EAAQvlB,KAAK,CAAG,GAAKy2B,EAAMmK,WAAWrb,EAAQvlB,KAAK,EAAI2gC,EAAO,EAAG,KACjE9rB,EAAU0rB,eAAe,CAAC,KACtB,IAAML,EAASrrB,EAAUsrB,aAAa,CAACC,GACnCF,GACAhhC,EAAMwS,iBAAiB,CAACwuB,EAAQ3a,EAExC,EACJ,CACA,OAAO,IAAI,CAAC1a,QAAQ,CAACC,OAAO,AAChC,EACH,CAAC,CACNT,KAAM,KACFnL,EAAMwS,iBAAiB,CAAC,IAAI,CAACyuB,aAAa,CAACC,GAAW7a,EAC1D,EACA5a,SAAU,IAAM,CAAC,CAAE,CAAA,IAAI,CAACw1B,aAAa,CAACC,IAAa7a,GAC/CrmB,EAAMiD,OAAO,CAAComB,SAAS,CAACrkB,aAAa,EAAE0J,OAAM,CACrD,EACJ,CAMAtD,uBAAwB,CACpB,MAAO,CACH,IAAI,CAACk2B,4BAA4B,CAAC,GAClC,IAAI,CAACA,4BAA4B,CAAC,GACrC,AACL,CAIA/1B,SAAU,CACF,IAAI,CAACo2B,4BAA4B,EACjC3uB,aAAa,IAAI,CAAC2uB,4BAA4B,EAElD,IAAI,CAAC13B,aAAa,CAACqd,WAAW,CAAC,aAC3B,IAAI,CAACpR,SAAS,EACd,IAAI,CAACA,SAAS,CAAC3K,OAAO,EAE9B,CAKAk1B,oBAAqB,CACjB,IAAMpX,EAAY,IAAI,CAACrpB,KAAK,CAACqpB,SAAS,CACtC,GAAIA,GAAa,IAAI,CAACmY,cAAc,EAAI,IAAI,CAACD,cAAc,CAAE,CACzD,IAAM3lC,EAASytB,EAAU4H,IAAI,AAC7B,CAAA,IAAI,CAACuQ,cAAc,CAAC1gC,KAAK,CACrB,GAAK1D,KAAKqpB,KAAK,CAAC4C,EAAU6O,SAAS,CAAGt8B,EAAS,KACnD,IAAI,CAAC2lC,cAAc,CAACzgC,KAAK,CACrB,GAAK1D,KAAKqpB,KAAK,CAAC4C,EAAU8O,SAAS,CAAGv8B,EAAS,IACvD,CACJ,CAKAqlC,cAAcv+B,CAAE,CAAE,CACd,IAAM2mB,EAAY,IAAI,CAACrpB,KAAK,CAACqpB,SAAS,CACtC,OAAOA,GAAaA,EAAU4B,OAAO,EACjC5B,EAAU4B,OAAO,CAACvoB,EAAG,AAC7B,CAKA2+B,gBAAgBO,CAAc,CAAE,CAmCxB,IAAI,CAACD,4BAA4B,EACjC3uB,aAAa,IAAI,CAAC2uB,4BAA4B,EAElD,IAAI,CAACA,4BAA4B,CAAG1uB,WAAW4uB,AArCzB,CAAA,AAACD,IACnB,IAAM5hC,EAAQ,IAAI,CAACA,KAAK,CAAEqpB,EAAYrpB,EAAMqpB,SAAS,CACrD,GAAIA,GAAa,IAAI,CAACmY,cAAc,EAAI,IAAI,CAACD,cAAc,CAAE,CACzD,IAAMO,EAAW9hC,EAAM61B,OAAO,CAACkM,gBAAgB,GAAIC,EAAUN,WAAW,IAAI,CAACF,cAAc,CAAC1gC,KAAK,EAC7F,IAAMuoB,EAAU4H,IAAI,CAAEgR,EAAUP,WAAW,IAAI,CAACH,cAAc,CAACzgC,KAAK,EACpE,IAAMuoB,EAAU4H,IAAI,CAExB,CACI,CAAC,EAAG,YAAa5H,EAAU6O,SAAS,CAAC,CACrC,CAAC,EAAG,YAAa8J,EAAQ,CACzB,CAAC,EAAG,UAAWA,EAAQ,CACvB,CAAC,EAAG,YAAa3Y,EAAU8O,SAAS,CAAC,CACrC,CAAC,EAAG,YAAa8J,EAAQ,CACzB,CAAC,EAAG,UAAWA,EAAQ,CAC1B,CAAClhC,OAAO,CAAC,CAAC,CAACmgC,EAAUznC,EAAMoB,EAAE,IAC1B,IAAMmmC,EAAS,IAAI,CAACC,aAAa,CAACC,IAAWpkC,QACzCkkC,GACA18B,EAAqC08B,EAAQtmC,EAAkBjB,EAAM,CACjEoB,EAAGinC,EAASz3B,IAAI,CAAGgf,EAAUhf,IAAI,CAAGxP,EACpCC,EAAGgnC,EAASnT,GAAG,CAAGtF,EAAUsF,GAAG,AACnC,EAAGqS,GAEX,GACIY,GACAA,IAGJ,IAAMM,EAAoBliC,EAAMiD,OAAO,CAACC,IAAI,CACvC8B,aAAa,EAAEqkB,UAAU8Y,mBAAoBC,EAAuB98B,EAAwBtF,EAAMmI,KAAK,CAAC,EAAE,EAC/G,IAAI,CAAC+N,SAAS,CAACtD,QAAQ,CAACnT,EAAOyiC,EAAmB,CAAEE,qBAAAA,EAAsBpiC,MAAAA,CAAM,EAAGA,GACvF,CACJ,CAAA,EAM6Ds0B,IAAI,CAAC,IAAI,CAAEsN,GAAiB,GAC7F,CACJ,CAQJ,GACAxpC,EAAgBD,EAAU,8DAA+D,CAACA,CAAQ,CAAC,8CAA8C,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,qBAAqB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUqd,CAAe,CAAE6H,CAAc,CAAE9d,CAAC,CAAEiU,CAAa,CAAExa,CAAC,EAYlX,GAAM,CAAEoc,wBAAAA,CAAuB,CAAE,CAAGI,EAC9B,CAAE1Q,mBAAAA,CAAkB,CAAElB,2BAAAA,CAA0B,CAAEM,qBAAAA,CAAoB,CAAEsD,yBAAAA,CAAwB,CAAE,CAAG6V,EACrG,CAAE5d,OAAAA,CAAM,CAAE4iC,aAAAA,CAAY,CAAE,CAAG9iC,EAC3B,CAAEf,kBAAAA,CAAiB,CAAEI,wBAAyB4E,CAAa,CAAE,CAAGgQ,EAChE,CAAE9P,KAAAA,CAAI,CAAE2gB,SAAAA,CAAQ,CAAEie,SAAAA,CAAQ,CAAE3iC,KAAAA,CAAI,CAAE8D,QAAAA,CAAO,CAAE,CAAGzK,EA2EpD,SAASupC,EAAsC1+B,CAAM,EACjD,IAAM2+B,EAAmB3+B,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAAEunB,EAAaiW,EAAiB3+B,MAAM,CAAC4+B,gCAAgC,CAClI,MAAO,CAAC,CAAElW,CAAAA,AAAc,CAAA,IAAdA,GACN1oB,EAAOC,MAAM,EACbD,EAAOC,MAAM,CAAClI,MAAM,EAAI,CAAC2wB,CAAQ,CACzC,CA6BA,SAASmW,EAAoBx6B,CAAK,CAAEpH,CAAK,EACrC,IAAM+C,EAASqE,EAAMrE,MAAM,CAAE7D,EAAQ6D,EAAO7D,KAAK,CAAE2iC,EAAmB3iC,EAAMiD,OAAO,CAAC+B,aAAa,CAACkD,KAAK,EAAI,CAAC,EAAG06B,EAAyB/+B,EAAOZ,OAAO,CAAC+B,aAAa,EAChKnB,EAAOZ,OAAO,CAAC+B,aAAa,CAACkD,KAAK,EAAI,CAAC,EAAG26B,EAAiBh/B,EAAOg/B,cAAc,EAAI,CAAC,EAAG3/B,EAAOlD,EAAMiD,OAAO,CAACC,IAAI,QACrH,AAAImhB,EAASvjB,GACFuhC,EAAavhC,EAAO8hC,EAAuBE,aAAa,EAC3DH,EAAiBG,aAAa,EAC9BD,EAAeC,aAAa,EAC5B,GAAI5/B,EAAK6/B,YAAY,CAAE7/B,EAAK8B,aAAa,CAACg+B,YAAY,EAAI9/B,EAAK8/B,YAAY,EAE5EliC,CACX,CAcA,SAASmiC,EAA6Bp/B,CAAM,CAAEq/B,CAAc,EACxD,IAAMn+B,EAAOlB,CAAM,CAACq/B,EAAe,CACnC,OAAOr/B,EAAO7D,KAAK,CAAC8C,UAAU,CAAC,wBAA0BogC,EAAiB,cAAe,CACrF57B,KAAMxC,EAAmBC,GACzBlB,OAAQA,CACZ,EACJ,CA6GA,SAASs/B,EAAiCj7B,CAAK,EAC3C,IAAMrE,EAASqE,EAAMrE,MAAM,CAAEu/B,EAAyBv/B,EAAO7D,KAAK,CAAC6D,MAAM,CAACjI,MAAM,CAAG,GAC/EiI,EAAOZ,OAAO,CAACqE,IAAI,CAAE+7B,EAAUC,AApBvC,SAAkCp7B,CAAK,EACnC,IAAMrE,EAASqE,EAAMrE,MAAM,CAAE7D,EAAQ6D,EAAO7D,KAAK,CAAEujC,EAAoB1/B,EAAOZ,OAAO,CAAC+B,aAAa,CAAEw+B,EAAwBD,GAAqBA,EAAkBr7B,KAAK,EACrKq7B,EAAkBr7B,KAAK,CAACu7B,sBAAsB,CAAEC,EAA8BF,GAC9ExjC,EAAMiD,OAAO,CAAC+B,aAAa,CAACkD,KAAK,CAACu7B,sBAAsB,CAAEE,EAAmBhkC,EAAKkE,EAAOsE,KAAK,EAC9FtE,EAAOsE,KAAK,CAAClF,OAAO,CAAC+B,aAAa,EAClCnB,EAAOsE,KAAK,CAAClF,OAAO,CAAC+B,aAAa,CAAC0J,OAAO,CAAE,CAAC1O,EAAM8c,OAAO,EAAIjZ,AAAgB,YAAhBA,EAAOpK,IAAI,EAAiBmqC,EAAQD,EAAmBE,AA1E7H,SAA8B37B,CAAK,EAC/B,IAAM47B,EAAWC,AAjBrB,SAAqC77B,CAAK,EACtC,IAAMrE,EAASqE,EAAMrE,MAAM,CAAE7D,EAAQ6D,EAAO7D,KAAK,CAAEujC,EAAoB1/B,EAAOZ,OAAO,CAAC+B,aAAa,EAC/FnB,EAAOZ,OAAO,CAAC+B,aAAa,CAACkD,KAAK,EAAI,CAAC,EAAG0X,EAAc5f,EAAMiD,OAAO,CAAC+B,aAAa,CAACkD,KAAK,EAAI,CAAC,EAAG87B,EAAYngC,EAAOsE,KAAK,EAAItE,EAAOsE,KAAK,CAAC9C,QAAQ,CACtJ,GAAI2+B,EAAW,CACX,IAAMC,EAAoBD,EAAUE,cAAc,CAACh8B,EAAMrN,CAAC,EAAI,EAAGmF,EAAMiD,OAAO,CAAC2gB,OAAO,CAACugB,oBAAoB,EAAGp9B,EAAaw8B,EAAkBa,aAAa,EACtJb,EAAkBa,aAAa,CAACl8B,IAChC0X,EAAYwkB,aAAa,EAAIxkB,EAAYwkB,aAAa,CAACl8B,IACvDq7B,EAAkBx8B,UAAU,EAC5B6Y,EAAY7Y,UAAU,EACtBk9B,EACJ,OAAOjkC,EAAM8G,IAAI,CAACC,UAAU,CAACA,EAAYmB,EAAMrN,CAAC,EAAI,EAAG,KAAK,EAChE,CACJ,EAKiDqN,GAAQC,EAAQD,EAAMrE,MAAM,CAACsE,KAAK,EAAI,CAAC,EAAGk8B,EAAgBl8B,EAAM/C,UAAU,EAAI3B,EAAQyE,EAAMo8B,QAAQ,GAC7I,AAAC,CAAA,GAAKp8B,EAAMo8B,QAAQ,AAAD,EAAG7nC,OAAO,CAAC,QAAS,KAAM8nC,EAAW9gC,EAAQyE,EAAMvL,EAAE,GACxE,AAAyC,EAAzC,AAAC,CAAA,GAAKuL,EAAMvL,EAAE,AAAD,EAAGrB,OAAO,CAAC,eAAoBkpC,EAAW,MAAQt8B,EAAMrN,CAAC,CAC1E,OAAOqN,EAAMZ,IAAI,EAAIw8B,GAAYO,GAC5BE,CAAAA,EAAWr8B,EAAMvL,EAAE,CAAG6nC,CAAO,CACtC,EAoEkJt8B,GAAS,GAAInI,EAAU,CACjKmI,MAAOA,EACP2E,MAAOpJ,EAAQyE,EAAM2E,KAAK,EAAK3E,EAAM2E,KAAK,CAAG,EAAK,GAClD43B,aAAcb,EACd9iC,MAAO4jC,AAnDf,SAAuBx8B,CAAK,EACxB,IAAMrE,EAASqE,EAAMrE,MAAM,CAAE8gC,EAAgB9gC,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAACkD,KAAK,EAAI,CAAC,EAAG08B,EAAsB/gC,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,EACjJnB,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAACkD,KAAK,EAAI,CAAC,EAAG26B,EAAiBh/B,EAAOg/B,cAAc,EAAI,CAAC,EAAGgC,EAAcD,EAAoBC,WAAW,EAC3IF,EAAcE,WAAW,EACzBhC,EAAegC,WAAW,EAC1B,GAAIC,EAAcF,EAAoBE,WAAW,EACjDH,EAAcG,WAAW,EACzBjC,EAAeiC,WAAW,EAC1B,GAAIC,EAAe,AACnB,KAAA,IAD0B78B,EAAMpH,KAAK,CAErC,QAAU,IAAMkkC,EAAetC,EAAoBx6B,EAAOA,CAAK,CAAC68B,EAAY,SAChF,AAAI78B,EAAM+8B,MAAM,CACLphC,EAAO7D,KAAK,CAAC8C,UAAU,CAAC,sCAAuC,CAClEoF,MAAOA,CACX,GAEArE,EAAOqhC,aAAa,CACbC,AAlCf,SAA0Cj9B,CAAK,CAAEk9B,CAAM,CAAEC,CAAM,EAC3D,IAAMC,EAAMF,GAAU,GAAIG,EAAMF,GAAU,GAAIG,EAAc,SAAU3+B,CAAG,EACrE,IAAMvE,EAAMogC,EAAoBx6B,EAAOvI,EAAKuI,CAAK,CAACrB,EAAI,CAAEqB,EAAMjF,OAAO,CAAC4D,EAAI,GAC1E,OAAOvE,AAAQ,KAAK,IAAbA,EACHuE,EAAM,KAAOy+B,EAAMhjC,EAAMijC,EACzBjjC,CACR,EAAG4iC,EAAgBh9B,EAAMrE,MAAM,CAACqhC,aAAa,CAC7C,OAAOA,EAAcviC,MAAM,CAAC,SAAU8R,CAAI,CAAE5N,CAAG,EAC3C,IAAM4+B,EAAWD,EAAY3+B,GAC7B,OAAO4+B,EACFhxB,EAAQA,CAAAA,EAAK7Y,MAAM,CAAG,KAAO,EAAC,EAAK6pC,EACpChxB,CACR,EAAG,GACP,EAqBgDvM,EAAO28B,EAAaC,GAEzDD,EAAcG,EAAeF,CACxC,EA+B6B58B,GACrBw9B,UAAW/B,EAAmB,KAAO,EACzC,EACA,OAAOlkC,EAAOikC,EAA6B3jC,EAASC,EACxD,EAOgEkI,GAAQjD,EAAciD,EAAMjF,OAAO,EAAIiF,EAAMjF,OAAO,CAAC+B,aAAa,EAC1HkD,EAAMjF,OAAO,CAAC+B,aAAa,CAACC,WAAW,CAAuD0gC,EAAiBvC,EAAyB,IAAMv/B,EAAOyD,IAAI,CAAG,IAAM,GAAIs+B,EAAkBC,AAhChM,SAAuC39B,CAAK,EACxC,IAAMlI,EAAQkI,EAAMrE,MAAM,CAAC7D,KAAK,CAE1B0T,EAAc0B,EAAwBlN,GAE5C,OAAOwL,EAAY9X,MAAM,CAAGoE,EAAM8C,UAAU,CAH5B,mDAEA,CAAEoF,MAAAA,EAAOwL,YAAAA,CAAY,GAC4B,EACrE,EA0B8NxL,GAG1N,OAFAA,EAAMlD,aAAa,CAAGkD,EAAMlD,aAAa,EAAI,CAAC,EAC9CkD,EAAMlD,aAAa,CAACuP,gBAAgB,CAAG8uB,EAChCA,EAHqDp+B,CAAAA,EAAc,IAAMA,EAAc,EAAC,EAG/D0gC,EAHyNC,CAAAA,EAAkB,IAAMA,EAAkB,EAAC,CAIxS,CA0DA,SAASE,EAAkCjiC,CAAM,EAC7C,IAAM7D,EAAQ6D,EAAO7D,KAAK,CAAE+lC,EAAa/lC,EAAMoa,KAAK,EAAI,EAAE,CAAEnV,EAAc+gC,AA/L9E,SAAkCniC,CAAM,EACpC,IAAM0/B,EAAoB1/B,EAAOZ,OAAO,CAAC+B,aAAa,EAAI,CAAC,EAAGihC,EAAU1C,EAAkBt+B,WAAW,CACrG,OAAOghC,GAAWpiC,EAAO7D,KAAK,CAAC8C,UAAU,CAAC,mCAAoC,CAC1EmC,YAAaghC,EACbpiC,OAAQA,CACZ,IAAM,EACV,EAyLuGA,GAASqiC,EAAqB,SAAUr9B,CAAI,EAC3I,OAAO7I,CAAK,CAAC6I,EAAK,EAAI7I,CAAK,CAAC6I,EAAK,CAACjN,MAAM,CAAG,GAAKiI,CAAM,CAACgF,EAAK,AAChE,EAAGs9B,EAAetiC,EAAOgJ,KAAK,CAAG,EAAGu5B,EAAYnD,EAA6Bp/B,EAAQ,SAAUwiC,EAAYpD,EAA6Bp/B,EAAQ,SAAUyiC,EAAiB,CACvKH,aAAAA,EACAtiC,OAAAA,EACA7D,MAAAA,CACJ,EAAGumC,EAAoBR,EAAWnqC,MAAM,CAAG,EAAI,cAAgB,GAAI2f,EAAUvb,EAAM8C,UAAU,CAAC,gCAAkCe,EAAOpK,IAAI,CAAG8sC,EAAmBD,IAAmBtmC,EAAM8C,UAAU,CAAC,uCAAyCyjC,EAAmBD,GAAiBE,EAAkB,AAACN,CAAAA,EAAmB,SAAW,IAAMG,EAAY,IAAM,EAAC,EAAMH,CAAAA,EAAmB,SAAW,IAAME,EAAY,IAAM,EAAC,EAAIK,EAAY9mC,EAAKkE,EAAOZ,OAAO,CAAC+B,aAAa,EACtcnB,EAAOZ,OAAO,CAAC+B,aAAa,CAAC0hC,iBAAiB,CAAE1mC,EAAMiD,OAAO,CAAC+B,aAAa,CAACnB,MAAM,CAAC6iC,iBAAiB,CAAE,IAC1G,OAAOjnC,EAAOgnC,EAAW,CACrBE,kBAAmBprB,EACnBqrB,kBAAoB3hC,EAAc,IAAMA,EAAc,GACtDuhC,gBAAAA,EACA3iC,OAAAA,EACA7D,MAAAA,EACAmmC,aAAAA,CACJ,EAAG,KAAK,EACZ,CA+DA,MANwB,CACpBhD,iCAAAA,EACA2C,kCAAAA,EACAe,eA5BJ,SAAwBhjC,CAAM,EAC1B,IAAM7D,EAAQ6D,EAAO7D,KAAK,CAAEmE,EAAeP,EAA2BC,GAASmE,EAAW9D,EAAqBL,GAASijC,EAAO9mC,EAAM8mC,IAAI,EAAI9mC,EAAM8mC,IAAI,GACnJ9+B,IAKIA,EAAS/J,SAAS,GAAKkG,GAAiB2iC,GACxCtoC,EAAkBwJ,GAEtB++B,AA9FR,SAAgCljC,CAAM,EAClC,IAAMmjC,EAAuBC,AAnMjC,SAA4CpjC,CAAM,EAC9C,IAAM0/B,EAAoB1/B,EAAOZ,OAAO,CAAC+B,aAAa,EAAI,CAAC,EAC3D,MAAO,CAACu9B,EAAsC1+B,IAC1C,CAAC0/B,EAAkB2D,iBAAiB,AAC5C,EA+LoErjC,GAASsjC,EAAmBC,AA3LhG,SAA2CvjC,CAAM,EAC7C,IAAM2+B,EAAmB3+B,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAAEqiC,EAAmB7E,EAAiBx0B,kBAAkB,CAACs5B,gBAAgB,CACpI,MAAO,CAAC,CAAEzjC,CAAAA,EAAOC,MAAM,EAAKD,CAAAA,EAAOC,MAAM,CAAClI,MAAM,CAC5C,CAACyrC,EAAiBE,+BAA+B,EACjDF,AAAqD,CAAA,IAArDA,EAAiBE,+BAA+B,AAAS,CAAC,CAClE,EAsLkI1jC,GAAS2jC,EAA2B3jC,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAC/LkD,KAAK,CAACu/B,YAAY,CACnBT,CAAAA,GAAwBG,CAAe,GACvCtjC,EAAOC,MAAM,CAAC/C,OAAO,CAAC,AAACmH,IACnB,IAAMw/B,EAAUx/B,EAAMjE,OAAO,EAAIiE,EAAMjE,OAAO,CAACnH,OAAO,EAClD6qC,AAhQhB,SAA4Bz/B,CAAK,EAG7B,IAAMrE,EAASqE,EAAMrE,MAAM,CAAE7D,EAAQ6D,GAAUA,EAAO7D,KAAK,CAAE4nC,EAAa/jC,GAAUA,EAAOgkC,EAAE,CAAC,YAAa5C,EAAS/8B,EAAM+8B,MAAM,CAAE6C,EAAqB9nC,GACnJA,EACKiD,OAAO,CAAC+B,aAAa,CAACkD,KAAK,CAACu/B,YAAY,CACjD,OAAOxC,GAAU,CAAC2C,GAAcE,CACpC,EAyPmC5/B,IAAU6/B,AAvO7C,SAA6B7/B,CAAK,EAC9B,IAAMrE,EAASqE,EAAMrE,MAAM,CAAEE,EAAwBikC,AA5CzD,SAAmC9/B,CAAK,EACpC,IAAM+/B,EAAmB//B,EAAM2E,KAAK,QACpC,AAAK3E,EAAMrE,MAAM,EAAKqE,EAAMrE,MAAM,CAACg5B,IAAI,EAAKp5B,EAAQwkC,IAG7CvkC,EAAKwE,EAAMrE,MAAM,CAACg5B,IAAI,CAAE,SAAU74B,CAAC,EACtC,MAAO,CAAC,CAAEA,CAAAA,GACN,AAAmB,KAAA,IAAZA,EAAE6I,KAAK,EACd7I,EAAE6I,KAAK,CAAGo7B,GACVjkC,EAAEC,OAAO,EACTD,EAAEC,OAAO,CAACnH,OAAO,AAAD,CACxB,IAAM,IACV,EAgCmFoL,GAAQggC,EAAenkC,GAAyBA,EAAsBE,OAAO,CAAE+L,EAAck4B,EACxKA,EAAal4B,WAAW,CACxBnM,EAAOO,KAAK,EAAIP,EAAOQ,KAAK,CAAE8jC,EAAUpkC,EAAwB,CAChElJ,EAAG8E,EAAKuI,EAAMkgC,KAAK,CAAErkC,EAAsBqkC,KAAK,CAAE,GAClDttC,EAAG6E,EAAKuI,EAAMmgC,KAAK,CAAEtkC,EAAsBskC,KAAK,CAAE,EACtD,EAAI,CACAxtC,EAAG8E,EAAKuI,EAAMkgC,KAAK,CAAE,GACrBttC,EAAG6E,EAAKuI,EAAMmgC,KAAK,CAAE,EACzB,EAAGC,EAAcC,AAvBrB,SAAyBrgC,CAAK,CAAEtN,CAAG,EAC/B,IAAMgK,EAAWsD,EAAMrE,MAAM,CAAC7D,KAAK,CAAC4E,QAAQ,CAAE4jC,EAAO5jC,EAAS2M,IAAI,CAAC3W,EAAIC,CAAC,CAAED,EAAIE,CAAC,CAAE,EAAG,GAQpF,OAPA0tC,EAAKr3B,IAAI,CAAC,CACN,MAAS,6BACTskB,KAAM,OACNn2B,QAAS,EACT,eAAgB,EAChB,iBAAkB,CACtB,GACOkpC,CACX,EAaqCtgC,EAAOigC,GACxC,GAAIn4B,GAAeA,EAAYlT,OAAO,CAMlC,OALAoL,EAAMjE,OAAO,CAAGqkC,EAChBpgC,EAAMugC,cAAc,CAAG,CAAA,EACvBH,EAAYjtC,GAAG,CAAC2U,GAEhBA,EAAYlT,OAAO,CAACsQ,YAAY,CAACk7B,EAAYxrC,OAAO,CAAEorC,EAAeA,EAAaprC,OAAO,CAAG,MACrFwrC,EAAYxrC,OAAO,AAElC,EAqNiEoL,GAAQwgC,EAAqBxgC,EAAMjF,OAAO,EAC3FiF,EAAMjF,OAAO,CAAC+B,aAAa,EAC3BkD,AAAwC,CAAA,IAAxCA,EAAMjF,OAAO,CAAC+B,aAAa,CAAC0J,OAAO,CACvC,GAAIg5B,EAAS,CACT,GAAIx/B,EAAM+8B,MAAM,EAAI,CAACuC,EAA0B,CAC3CE,EAAQjgC,YAAY,CAAC,cAAe,CAAA,GACpC,MACJ,CAIAigC,EAAQjgC,YAAY,CAAC,WAAY,MAC5B5D,EAAO7D,KAAK,CAACyR,UAAU,EACxBi2B,CAAAA,EAAQ54B,KAAK,CAACW,OAAO,CAAG,MAAK,EAE7Bu3B,GAAwB,CAAC0B,EACzBC,AAtCpB,SAAqCzgC,CAAK,CAAE0gC,CAAY,EACpD,IAAM/kC,EAASqE,EAAMrE,MAAM,CAAEglC,EAAyBhlC,EAAOZ,OAAO,CAAC+B,aAAa,EAAEkD,OAAS,CAAC,EAAGy6B,EAAmB9+B,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAACkD,KAAK,EAAI,CAAC,EAAGsF,EAAQhK,EAAc,AAAC8+B,EAASuG,EAAuBnC,iBAAiB,GACxOjnC,EAAOopC,EAAuBnC,iBAAiB,CAAEx+B,EAAOrE,EAAO7D,KAAK,GACpE6oC,EAAuBC,oBAAoB,GAAG5gC,IAC7Co6B,EAASK,EAAiB+D,iBAAiB,GACxCjnC,EAAOkjC,EAAiB+D,iBAAiB,CAAEx+B,EAAOrE,EAAO7D,KAAK,GAClE2iC,EAAiBmG,oBAAoB,GAAG5gC,IACxCi7B,EAAiCj7B,GAAQrE,EAAO7D,KAAK,CAAC4E,QAAQ,CAACC,SAAS,EAC5E+jC,EAAanhC,YAAY,CAAC,OAAQ,OAClCmhC,EAAanhC,YAAY,CAAC,aAAc+F,EAC5C,EA4BgDtF,EAAOw/B,GAGnCA,EAAQjgC,YAAY,CAAC,cAAe,CAAA,EAE5C,CACJ,EAER,EAgE+B5D,GACvB2D,EAAyBxH,EAAOgI,GAC5B+gC,AAjRZ,SAAqCllC,CAAM,EACvC,IAAM7D,EAAQ6D,EAAO7D,KAAK,CAAEyX,EAAezX,EAAMiD,OAAO,CAACjD,KAAK,CAAEgpC,EAAavxB,EAAawxB,SAAS,EAAIxxB,EAAawxB,SAAS,CAACv6B,OAAO,CAAEw6B,EAAoBlpC,EAAM6D,MAAM,CAACjI,MAAM,CAAG,EAAGutC,EAA6BnpC,EAAMiD,OAAO,CAAC+B,aAAa,CAACnB,MAAM,CAACulC,oBAAoB,CAAEC,EAA0B,AAACxlC,CAAAA,EAAOZ,OAAO,CAAC+B,aAAa,EAAI,CAAC,CAAA,EAAGkiC,iBAAiB,CAC1V,MAAO,CADoW8B,CAAAA,GAAcE,CAAgB,GAChXA,CAAAA,GAAqBC,GAC1CE,GAA2B9G,EAAsC1+B,EAAM,CAC/E,EA6QwCA,GAC5BylC,AAtCZ,SAA+BzlC,CAAM,CAAE0lC,CAAa,EAChD,IAAMhG,EAAoB1/B,EAAOZ,OAAO,CAAC+B,aAAa,EAAI,CAAC,EAAG4a,EAAc/b,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAAE2I,EAAoBiS,EAAYjS,iBAAiB,AAE7J41B,CAAAA,EAAkB2D,iBAAiB,CACnCqC,EAAc9hC,YAAY,CAAC,OAAQ,OAE9BkG,AAAsB,QAAtBA,EACL47B,EAAc9hC,YAAY,CAAC,OAAQ,UAGnC8hC,EAAc9hC,YAAY,CAAC,OAAQ,SAEvC8hC,EAAc9hC,YAAY,CAAC,WAAY,MAClC5D,EAAO7D,KAAK,CAACyR,UAAU,EAExB83B,CAAAA,EAAcz6B,KAAK,CAACW,OAAO,CAAG,MAAK,EAEvC85B,EAAc9hC,YAAY,CAAC,aAAcjE,EAAcoc,EAAY/b,MAAM,CAACilC,oBAAoB,EAC1FlpB,EAAY/b,MAAM,CAACilC,oBAAoB,CAACjlC,IACxCiiC,EAAkCjiC,GAASA,EAAO7D,KAAK,CAAC4E,QAAQ,CAACC,SAAS,EAClF,EAkBkChB,EAAQmE,GAG9BA,EAAS+T,eAAe,CAAC,cAGrC,CAUA,CAGJ,GACA3jB,EAAgBD,EAAU,+DAAgE,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,mCAAmC,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,8DAA8D,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,CAAEuc,CAAS,CAAE8H,CAAc,CAAExT,CAAa,CAAE2/B,CAAe,EAYzb,GAAM,CAAEzuC,SAAAA,CAAQ,CAAE,CAAGhC,EACf,CAAEwQ,SAAAA,CAAQ,CAAE9F,QAAAA,CAAO,CAAE7D,WAAAA,CAAU,CAAE,CAAG5G,EACpC,CAAEyL,cAAAA,CAAa,CAAE,CAAG4Y,EACpB,CAAE8lB,iCAAAA,CAAgC,CAAE2C,kCAAAA,CAAiC,CAAE,CAAG0D,EAUhF,SAASC,EAAwBzpC,CAAK,EAClC,MAAO,CAAC,CAACA,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0kC,eAAe,CAACh7B,OAAO,AAChE,CA8BA,MAAMi7B,EAMFzgC,YAAYlJ,CAAK,CAAE,CACf,IAAI,CAAC4pC,KAAK,CAAG,CACTC,UAAW,CAAC,CAChB,EACA,IAAI,CAACC,oBAAoB,CAAG,EAC5B,IAAI,CAAC9pC,KAAK,CAAGA,CACjB,CAWAmL,MAAO,CACH,IAAMnL,EAAQ,IAAI,CAACA,KAAK,CAClB+pC,EAAmB/pC,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0kC,eAAe,CAC9DM,EAAeD,EAAgBE,aAAa,CAC9C,YAAc,QAClB,CAAA,IAAI,CAACH,oBAAoB,CAAG,EAC5B,IAAI,CAACF,KAAK,CAAG,CACTC,UAAW,CAAC,CAChB,EACA,IAAI,CAAC3/B,aAAa,CAAG,IAAIL,EACzB,IAAI,CAACqM,SAAS,CAAG,IAAIX,EAAUvV,EAAOgqC,GACtC,IAAI,CAACE,iBAAiB,EAC1B,CAKA3+B,SAAU,CACN,IAAI,CAACrB,aAAa,CAACR,iBAAiB,GACpC,IAAI,CAACwM,SAAS,CAAC3K,OAAO,EAC1B,CAKA2+B,mBAAoB,CAChB,IAAMh0B,EAAY,IAAI,CAAElW,EAAQ,IAAI,CAACA,KAAK,CAAEzG,EAAI,IAAI,CAAC2Q,aAAa,CAClE3Q,EAAEgQ,QAAQ,CAACvJ,EAAO,sBAAuB,WACrCkW,EAAU4zB,oBAAoB,CAAG,CACrC,GACAvwC,EAAEgQ,QAAQ,CAACvJ,EAAO,iBAAkB,SAAUzG,CAAC,EAC3C2c,EAAUi0B,aAAa,CAAC5wC,EAAEsK,MAAM,CACpC,GACAtK,EAAEgQ,QAAQ,CAACvJ,EAAO,SAAU,WACxBkW,EAAUk0B,iBAAiB,EAC/B,EACJ,CAMAD,cAActmC,CAAM,CAAE,CACd4lC,EAAwB,IAAI,CAACzpC,KAAK,IAClC,IAAI,CAAC4pC,KAAK,CAACS,QAAQ,CAAG,CAAA,EACtB,IAAI,CAACT,KAAK,CAACC,SAAS,CAAChmC,EAAOyD,IAAI,CAAGzD,EAAOgJ,KAAK,CAAC,CAAGhJ,EAEnD,IAAI,CAAC+lC,KAAK,CAACU,SAAS,CAAG7mC,EAAQ,IAAI,CAACmmC,KAAK,CAACU,SAAS,EAC/C,KAAK,EAAIzmC,EAErB,CAKAumC,mBAAoB,CAChB,IAAMpqC,EAAQ,IAAI,CAACA,KAAK,CAAEkW,EAAY,IAAI,CAC1C,GAAIlW,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0kC,eAAe,EAC3C,IAAI,CAACE,KAAK,CAACS,QAAQ,CAAE,CACrB,IAAIE,EAAW,IAAI,CAACX,KAAK,CAACW,QAAQ,CAI9BA,GACAA,CAAAA,EAAWC,AAjH3B,SAA8BtiC,CAAK,EAC/B,IAAMuiC,EAAaviC,EAAMrE,MAAM,CAACg5B,IAAI,CAACx9B,MAAM,CAAC,AAACqrC,GAAexiC,EAAMrN,CAAC,GAAK6vC,EAAU7vC,CAAC,EAAIqN,EAAMpN,CAAC,GAAK4vC,EAAU5vC,CAAC,EAC9G,OAAO2vC,AAAsB,IAAtBA,EAAW7uC,MAAM,CAAS6uC,CAAU,CAAC,EAAE,CAAGviC,CACrD,EA8GgDqiC,EAAQ,EAE5C,IAAI,CAACI,iBAAiB,CAACt4B,OAClBrP,IAAI,CAAC,IAAI,CAAC4mC,KAAK,CAACC,SAAS,EACzBx1B,GAAG,CAAC,AAAC3R,GAAOwT,EAAU0zB,KAAK,CAACC,SAAS,CAACnnC,EAAG,EAAG,IAAI,CAACknC,KAAK,CAACU,SAAS,CAAEC,GAEvE,IAAI,CAACX,KAAK,CAAG,CACTC,UAAW,CAAC,CAChB,CACJ,CACJ,CAWAc,kBAAkBC,CAAW,CAAEN,CAAS,CAAEC,CAAQ,CAAE,CAChD,IAAMvqC,EAAQ,IAAI,CAACA,KAAK,CAClB6qC,EAAa7qC,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0kC,eAAe,CAC9D,GAAImB,EAAWn8B,OAAO,CAAE,CACpB,IAAMo8B,EAAM,CAAC,IAAIC,KACXC,EAAQF,EAAM,IAAI,CAAChB,oBAAoB,CACvChjC,EAAO1J,KAAK2I,GAAG,CAAC,EAAG8kC,EAAWI,mBAAmB,CAAGD,GAEpDnB,EAAYqB,AAtI9B,SAAyBC,CAAM,CAAEC,CAAM,EACnC,IAAMC,EAAe,AAACF,CAAAA,GAAU,EAAE,AAAD,EAAGv3B,MAAM,CAACw3B,GAAU,EAAE,EAAEzoC,MAAM,CAAC,CAACC,EAAKC,KAClED,CAAG,CAACC,EAAIyE,IAAI,CAAGzE,EAAIgK,KAAK,CAAC,CAAGhK,EACrBD,GACR,CAAC,GACJ,OAAOyP,OACFrP,IAAI,CAACqoC,GACLh3B,GAAG,CAAC,AAAC3R,GAAO2oC,CAAY,CAAC3oC,EAAG,CACrC,EA8H8C,IAAI,CAAC4oC,kBAAkB,EAAI,IAAI,CAACA,kBAAkB,CAACznC,MAAM,CAAE+mC,GAEvF/3B,EAAU,IAAI,CAAC04B,wBAAwB,CAAC1B,EAAWS,EAAWC,GAChE13B,IAEI,IAAI,CAACy4B,kBAAkB,EACvBt4B,aAAa,IAAI,CAACw4B,uBAAuB,EAG7C,IAAI,CAACF,kBAAkB,CAAG,CACtBxkC,KAAMgkC,EACNj4B,QAASA,EACThP,OAAQgmC,CACZ,EAEA,IAAI,CAAC2B,uBAAuB,CAAGv4B,WAAW,KAClC,IAAI,EAAI,IAAI,CAACiD,SAAS,GACtB,IAAI,CAAC4zB,oBAAoB,CAAG,CAAC,IAAIiB,KACjC,IAAI,CAAC70B,SAAS,CAACtD,QAAQ,CAAC,IAAI,CAAC04B,kBAAkB,CAACz4B,OAAO,EACvD,OAAO,IAAI,CAACy4B,kBAAkB,CAC9B,OAAO,IAAI,CAACE,uBAAuB,CAE3C,EAAG1kC,GAEX,CACJ,CAcAykC,yBAAyBX,CAAW,CAAEN,CAAS,CAAEC,CAAQ,CAAE,CACvD,IAAMvqC,EAAQ,IAAI,CAACA,KAAK,CAAE6qC,EAAa7qC,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0kC,eAAe,CAElF,GAAImB,EAAWY,qBAAqB,CAAE,CAClC,IAAMC,EAAeb,EAAWY,qBAAqB,CAACb,EAAaN,EAAWC,GAC9E,GAAImB,AAAiB,CAAA,IAAjBA,EACA,OAAOA,EAAa9vC,MAAM,CAAG8vC,EAAe,IAEpD,CAEA,IAAMC,EAAW5yC,EAAEirB,MAAM,EAAIjrB,EAAEirB,MAAM,CAACpoB,MAAM,CAAG,EAC3C,WAAa,SAAUmH,EAAUunC,EAAY,oBAAsBqB,EACnEpB,EAAW,mBAAqBoB,EAAW,kBAAmB5+B,EAAatI,EAAczE,GAC7F,OAAOA,EAAM8C,UAAU,CAAC,iCAAmCC,EAAS,CAChEgK,WAAYA,EACZ6+B,WAAYtB,EACRxE,EAAkCwE,GAClC,KACJuB,UAAWtB,EACPpH,EAAiCoH,GACjC,KACJriC,MAAOqiC,EACP1mC,OAAQymC,CACZ,EACJ,CACJ,CAgEA,OA1DA,AAAC,SAAUX,CAAgB,EA0BvB,SAASmC,EAAiBvyC,CAAC,EACvB,IAAMyG,EAAQ,IAAI,CAACA,KAAK,CAAE+rC,EAAmB,IAAI,CAACA,gBAAgB,CAC9DA,GACAA,EAAiB/rC,KAAK,GAAKA,GAC3BypC,EAAwBzpC,IAExB+rC,CAAAA,EAAiBnC,KAAK,CAACW,QAAQ,CAAI9mC,EAAQsoC,EAAiBnC,KAAK,CAACW,QAAQ,EACtE,KAAK,EACLhxC,EAAE2O,KAAK,CAEnB,CAMA,SAAS8jC,IACL,IAAMhsC,EAAQ,IAAI,CAACA,KAAK,CAAE+rC,EAAmB,IAAI,CAACA,gBAAgB,CAC9DA,GACAA,EAAiB/rC,KAAK,GAAKA,GAC3BypC,EAAwBzpC,KACxB+rC,EAAiBnC,KAAK,CAACS,QAAQ,CAAG,CAAA,EAClC0B,EAAiBnC,KAAK,CAACC,SAAS,CAAC,IAAI,CAACviC,IAAI,CAAG,IAAI,CAACuF,KAAK,CAAC,CAAG,IAAI,CAEvE,CA9BA88B,EAAiBxmC,OAAO,CANxB,SAASA,EAAQktB,CAAW,EACpBzwB,EAAW7E,EAAUoI,KACrBoG,EAAS8mB,EAAa,WAAYyb,GAClCviC,EAAS8mB,EAAa,cAAe2b,GAE7C,CAgCJ,EAAGrC,GAAqBA,CAAAA,EAAmB,CAAC,CAAA,GAOrCA,CACX,GACAvxC,EAAgBD,EAAU,gCAAiC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,CAAE6Q,CAAa,CAAEwT,CAAc,CAAE7J,CAAa,EAgBxU,GAAM,CAAEva,IAAAA,CAAG,CAAE,CAAGF,EACV,CAAEoY,KAAAA,CAAI,CAAEhY,IAAAA,CAAG,CAAE80B,MAAAA,CAAK,CAAE,CAAGj1B,EACvB,CAAEsL,qCAAAA,CAAoC,CAAE,CAAG+Y,EAC3C,CAAE/jB,gBAAAA,CAAe,CAAEiC,gBAAAA,CAAe,CAAEb,kBAAAA,CAAiB,CAAE4D,cAAAA,CAAa,CAAE,CAAGkV,EAoM/E,OAvLA,MAMItK,YAAYlJ,CAAK,CAAEgjB,CAAM,CAAEipB,EAAmB,QAAQ,CAAEC,CAAkB,CAAE9wB,CAAU,CAAE,CACpF,IAAI,CAACpb,KAAK,CAAGA,EACb,IAAI,CAACgjB,MAAM,CAAGA,EACd,IAAI,CAAC9Y,aAAa,CAAG,IAAIL,EACzB,IAAMsiC,EAAU,IAAI,CAACjuB,YAAY,CAC7BjlB,EAAImQ,aAAa,CAAC6iC,GAAmBG,EAAY,IAAI,CAACtvC,OAAO,CAAGovC,EAChEjzC,EAAImQ,aAAa,CAAC8iC,GAAsBC,CACvCnsC,CAAAA,EAAMyR,UAAU,EACjB,IAAI,CAAC46B,mBAAmB,CAACF,GAEzBD,IAC2B,OAAvBA,GAAgClsC,EAAMyR,UAAU,EAChD26B,CAAAA,EAAUt9B,KAAK,CAACw9B,SAAS,CAAG,MAAK,EAErCF,EAAUztC,WAAW,CAACwtC,GACtB,IAAI,CAACrvC,OAAO,CAAGsvC,GAEnB,IAAI,CAACG,YAAY,CAACvpB,EAAQ5H,EAC9B,CASAyD,OAAQ,CACJ,IAAMjkB,EAAM,IAAI,CAAC4xC,iBAAiB,EAClC5xC,CAAAA,EAAIC,CAAC,EAAID,EAAImE,KAAK,CAAG,EACrBnE,EAAIE,CAAC,EAAIF,EAAIoE,MAAM,CAAG,EACtB,IAAMytC,EAAkB/xC,EAAkB,QAASE,GACnD0J,EAAqC,IAAI,CAAC0e,MAAM,CAACnE,KAAK,CAAE4tB,EAC5D,CAQAF,aAAavpB,CAAM,CAAE5H,CAAU,CAAE,CAC7B,IAAI,CAAC4H,MAAM,CAAGA,EACd,IAAI,CAAC0pB,kBAAkB,GACvB,IAAMC,EAAQvxB,GAAc,CAAC,EAC7B/I,OAAOrP,IAAI,CAAC2pC,GAAO5rC,OAAO,CAAC,AAAC6rC,IACP,OAAbD,CAAK,CAACC,EAAE,EACR,OAAOD,CAAK,CAACC,EAAE,AAEvB,GACA,IAAMC,EAAkB,IAAI,CAACC,aAAa,CAAC9pB,EAAOnE,KAAK,CAAE,cACzD1N,EAAK,IAAI,CAAC+M,YAAY,CAAE+P,EAAM4e,EAAkB,CAC5C,aAAcA,CAClB,EAAI,CAAC,EAAGF,IACR,IAAI,CAACziC,aAAa,CAACR,iBAAiB,GACpC,IAAI,CAACqjC,uBAAuB,CAAC,IAAI,CAAC7uB,YAAY,CAAE8E,EAAOnE,KAAK,EAC5D,IAAI,CAACkI,eAAe,EACxB,CAIAA,iBAAkB,CACd,IAAMimB,EAAO,IAAI,CAACR,iBAAiB,GACnCrzC,EAAI,IAAI,CAAC+kB,YAAY,CAAE,CACnBnf,MAAO,AAACiuC,CAAAA,EAAKjuC,KAAK,EAAI,CAAA,EAAK,KAC3BC,OAAQ,AAACguC,CAAAA,EAAKhuC,MAAM,EAAI,CAAA,EAAK,KAC7BqL,KAAM,AAACjN,CAAAA,KAAKqpB,KAAK,CAACumB,EAAKnyC,CAAC,GAAK,CAAA,EAAK,KAClC8zB,IAAK,AAACvxB,CAAAA,KAAKqpB,KAAK,CAACumB,EAAKlyC,CAAC,GAAK,CAAA,EAAK,IACrC,EACJ,CAIAsD,QAAS,CACL,IAAI,CAAC8L,aAAa,CAACR,iBAAiB,GACpCpL,EAAc,IAAI,CAACxB,OAAO,CAC9B,CAKA4vC,oBAAqB,CACjB,IAAMO,EAAqB,AAAC1lC,GAAOA,EAAEjM,OAAO,CAAC,yBAA2B,GAClEmpB,EAAS,IAAI,CAACzkB,KAAK,CAACykB,MAAM,CAC1ByoB,EAAWzoB,EAAOpgB,KAAK,EAAIogB,EAAOpgB,KAAK,CAACkP,GAAG,CAC3C45B,EAAmBF,EAAmBC,GAAYA,EAAS/xC,SAAS,EAAI,IACxEiyC,EAAkB,IAAI,CAACN,aAAa,CAAC,IAAI,CAAC9pB,MAAM,CAACnE,KAAK,CAAE,UAAY,GACpEwuB,EAAoBJ,EAAmBG,EAC7C,CAAA,IAAI,CAAClvB,YAAY,CAAC/iB,SAAS,CAAGgyC,GAAoBE,EAC9C,sDACA,+BACR,CAIAN,wBAAwBjwC,CAAO,CAAEkmB,CAAM,CAAE,CACrC,CACI,QAAS,aAAc,WAAY,cAAe,YAClD,YAAa,aAAc,aAAc,WAC5C,CAACjiB,OAAO,CAAC,AAACusC,IACP,IAAMC,EAAeD,AAA6B,IAA7BA,EAAQhyC,OAAO,CAAC,SACrC,IAAI,CAAC4O,aAAa,CAACX,QAAQ,CAACzM,EAASwwC,EAAS,AAAC/zC,IAC3C,IAAMi0C,EAAcD,EAChBhyC,EAAgBhC,GAChBD,EAAgBC,GAChBypB,GACA1e,EAAqC0e,EAAQwqB,GAEjDj0C,EAAEsiB,eAAe,GAGZ0xB,GACDh0C,EAAE8C,cAAc,EAExB,EAAG,CAAEoxC,QAAS,CAAA,CAAM,EACxB,EACJ,CAIApB,oBAAoBnxC,CAAE,CAAE,CACpB/B,EAAI+B,EAAI,CACJwV,YAAa,EACbya,gBAAiB,cACjBtqB,OAAQ,UACR4O,QAAS,OACTnQ,QAAS,KACTD,OAAQ,mBACRmS,OAAQ,IACRvS,SAAU,SACVyuC,QAAS,EACT9+B,OAAQ,EACRwZ,QAAS,QACTztB,SAAU,WACV,aAAc,oDAClB,EACJ,CAIA6xC,mBAAoB,CAChB,IAAMmB,EAAc,IAAI,CAAC3qB,MAAM,CAACnE,KAAK,CAE/B+uB,EAAqBD,EAAY7wC,OAAO,CAC1C6wC,EAAY7wC,OAAO,CACnB6wC,EACEE,EAAa,IAAI,CAAC7qB,MAAM,CAAC+E,MAAM,EAAI6lB,EACnCE,EAAW,IAAI,CAAC9tC,KAAK,CAAC0H,QAAQ,CACpC,GAAIomC,GAAYD,GAAcA,EAAWE,qBAAqB,CAAE,CAC5D,IAAMC,EAASH,EAAWE,qBAAqB,GAAIjM,EAAW,IAAI,CAAC9hC,KAAK,CAAC61B,OAAO,CAACkM,gBAAgB,GACjG,MAAO,CACHlnC,EAAG,AAACmzC,CAAAA,EAAO3jC,IAAI,CAAGy3B,EAASz3B,IAAI,AAAD,EAAKy3B,EAAS7xB,MAAM,CAClDnV,EAAG,AAACkzC,CAAAA,EAAOrf,GAAG,CAAGmT,EAASnT,GAAG,AAAD,EAAKmT,EAAS5xB,MAAM,CAChDnR,MAAOivC,EAAO1jC,KAAK,CAAGw3B,EAAS7xB,MAAM,CACjC+9B,EAAO3jC,IAAI,CAAGy3B,EAAS7xB,MAAM,CACjCjR,OAAQgvC,EAAOC,MAAM,CAAGnM,EAAS5xB,MAAM,CACnC89B,EAAOrf,GAAG,CAAGmT,EAAS5xB,MAAM,AACpC,CACJ,CACA,MAAO,CAAErV,EAAG,EAAGC,EAAG,EAAGiE,MAAO,EAAGC,OAAQ,CAAE,CAC7C,CAIA8tC,cAAc9pB,CAAM,CAAEnc,CAAG,CAAE,QACvB,AAAImc,EAAOlmB,OAAO,CACPkmB,EAAOlmB,OAAO,CAACqX,YAAY,CAACtN,GAEhCmc,EAAO7O,YAAY,CAACtN,EAC/B,CACJ,CAQJ,GACAzO,EAAgBD,EAAU,iCAAkC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,4CAA4C,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,gCAAgC,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,CAAE2Q,CAAE,CAAEC,CAAkB,CAAErG,CAAE,CAAE2qC,CAAY,EAgBrX,GAAM,CAAEj1C,IAAAA,CAAG,CAAE,CAAGF,EACV,CAAEoY,KAAAA,CAAI,CAAEhY,IAAAA,CAAG,CAAE,CAAGH,EAChB,CAAEwO,yBAAAA,CAAwB,CAAE,CAAGmC,EAC/B,CAAErL,cAAAA,CAAa,CAAEN,iBAAAA,CAAgB,CAAE,CAAGuF,EA4R5C,OAhRA,MAMI2F,YAAYlJ,CAAK,CAAE,CACf,IAAI,CAACA,KAAK,CAAGA,EACb,IAAI,CAACmK,kBAAkB,CAAG,IAAIP,EAC9B,IAAI,CAACukC,MAAM,CAAG,CAAC,EACf,IAAI,CAACC,UAAU,CAAG,EAAE,CACpB,IAAI,CAACC,4BAA4B,CAAG,IAAI,CAACC,uBAAuB,CAAC,UACjE,IAAI,CAACC,2BAA2B,CAAG,IAAI,CAACD,uBAAuB,CAAC,SAChE,IAAI,CAACjtB,MAAM,EACf,CAUAzC,gBAAgB4vB,CAAQ,CAAExrB,CAAM,CAAEipB,EAAmB,QAAQ,CAAE7wB,CAAU,CAAE,CACvE,IAAM/W,EAAQ,IAAI,CAAC8pC,MAAM,CAACK,EAAS,CACnC,GAAI,CAACnqC,EACD,MAAM,AAAIoqC,MAAM,oDAAsDD,GAE1E,IAAMtC,EAAqB7nC,AAAe,OAAfA,EAAM5K,IAAI,EAAa4K,AAAe,OAAfA,EAAM5K,IAAI,CACxD,KAAO,KAAK,EAAG+lB,EAAQ,IAAI0uB,EAAa,IAAI,CAACluC,KAAK,CAAEgjB,EAAQipB,EAAkBC,EAAoB9wB,GAGtG,OAFA/W,EAAMqqC,qBAAqB,CAAC/vC,WAAW,CAAC6gB,EAAM1iB,OAAO,EACrDuH,EAAMsqC,aAAa,CAAC7yC,IAAI,CAAC0jB,GAClBA,CACX,CAOAT,SAASyvB,CAAQ,CAAEI,EAAmB,KAAK,CAAExzB,CAAU,CAAE,KAUjDyzB,EATJ,IAAMC,EAAgB,IAAI,CAACX,MAAM,CAACK,EAAS,CAC3C,GAAIM,EACA,OAAOA,EAAcD,YAAY,CAErC,IAAME,EAAiB,IAAI,CAAC5kC,kBAAkB,CACzCf,aAAa,CAACwlC,GA4BnB,OAvBIxzB,GAAcA,EAAWgE,IAAI,EAAIwvB,AAAqB,QAArBA,EAEjCC,AADAA,CAAAA,EAAe,IAAI,CAAC1kC,kBAAkB,CAACf,aAAa,CAAC,MAAK,EAC7CzK,WAAW,CAACowC,GAGzBF,EAAeE,EAEnBF,EAAa1zC,SAAS,CAAG,2DACrBqzC,EAAS/xC,OAAO,CAAC,MAAO,KAC5B,IAAI,CAAC0xC,MAAM,CAACK,EAAS,CAAG,CACpBE,sBAAuBK,EACvBF,aAAAA,EACAp1C,KAAMm1C,EACND,cAAe,EAAE,AACrB,EACAx9B,EAAK09B,EAAczzB,GAAc,CAAC,GACT,OAArBwzB,GACAG,EAAetnC,YAAY,CAAC,OAAQ,QAIxC,IAAI,CAAC8mC,2BAA2B,CAAC5vC,WAAW,CAACkwC,GAC7C,IAAI,CAACG,gBAAgB,CAAC,IAAI,CAACZ,UAAU,EAC9BS,CACX,CAIApnB,iBAAiB+mB,CAAQ,CAAEpzB,CAAU,CAAE,CACnC,IAAM/W,EAAQ,IAAI,CAAC8pC,MAAM,CAACK,EAAS,CACnC,GAAI,CAACnqC,EACD,MAAM,AAAIoqC,MAAM,qDAAuDD,GAE3Er9B,EAAK9M,EAAMwqC,YAAY,CAAEzzB,EAC7B,CAQA4zB,iBAAiBC,CAAS,CAAE,CAIxB,GAFA,IAAI,CAACb,UAAU,CAAGa,EAAU9xC,KAAK,GAE7B,IAAI,CAAC+xC,oBAAoB,GACzB,OAEJ,IAAMC,EAAWF,EAAU3zC,OAAO,CAAC,UAC7B8zC,EAAaD,EAAW,GAAKF,EAAU9xC,KAAK,CAAC,EAAGgyC,GAAYF,EAC5DI,EAAYF,EAAW,GAAKF,EAAU9xC,KAAK,CAACgyC,EAAW,GAAK,EAAE,CAE9DloB,EAAgBhuB,EAAIguB,aAAa,CAEvC,CAAC,SAAU,QAAQ,CAAClmB,OAAO,CAAC,AAACnG,IACzB,IAAM00C,EAAe,IAAI,CAAC10C,AAAQ,WAARA,EACtB,+BACA,8BAA8B,CAElCoD,EAAiBsxC,GACjBtsC,AAFapI,CAAAA,AAAQ,WAARA,EAAmBw0C,EAAaC,CAAQ,EAEhDtuC,OAAO,CAAC,AAACytC,IACV,IAAMnqC,EAAQ,IAAI,CAAC8pC,MAAM,CAACK,EAAS,CAC/BnqC,GACAirC,EAAa3wC,WAAW,CAAC0F,EAAMwqC,YAAY,CAEnD,EACJ,GAGK,CAAA,IAAI,CAACR,4BAA4B,CAACzrB,QAAQ,CAACqE,IAC5C,IAAI,CAACsnB,2BAA2B,CAAC3rB,QAAQ,CAACqE,EAAa,GACvDA,GAAiBA,EAAc/Y,KAAK,EACpC+Y,EAAc/Y,KAAK,EAE3B,CAIAkQ,WAAWowB,CAAQ,CAAE,CACjB,IAAMnqC,EAAQ,IAAI,CAAC8pC,MAAM,CAACK,EAAS,CACnC,GAAI,CAACnqC,EACD,MAAM,AAAIoqC,MAAM,+CAAiDD,GAErExwC,EAAiBqG,EAAMqqC,qBAAqB,CAChD,CAMApnB,YAAYknB,CAAQ,CAAE,CAClB,IAAMnqC,EAAQ,IAAI,CAAC8pC,MAAM,CAACK,EAAS,CAC/BnqC,IACA/F,EAAc+F,EAAMwqC,YAAY,EAChC,OAAO,IAAI,CAACV,MAAM,CAACK,EAAS,CAEpC,CAIAntB,QAAS,CACL,IAAI,CAACkuB,2BAA2B,GAChC,IAAI,CAACP,gBAAgB,CAAC,IAAI,CAACZ,UAAU,EACrC,IAAI,CAACoB,2BAA2B,EACpC,CAIAA,6BAA8B,CAC1Bn9B,OAAOrP,IAAI,CAAC,IAAI,CAACmrC,MAAM,EAAEptC,OAAO,CAAC,IAAI,CAAC0kB,gCAAgC,CAAC6O,IAAI,CAAC,IAAI,EACpF,CAKA7O,iCAAiC+oB,CAAQ,CAAE,CACvC,IAAMnqC,EAAQ,IAAI,CAAC8pC,MAAM,CAACK,EAAS,CAC/BnqC,GACAA,EAAMsqC,aAAa,CAAC5tC,OAAO,CAAC,AAAC7F,GAAOA,EAAG6rB,eAAe,GAE9D,CAIAxb,SAAU,CACN,IAAI,CAACpB,kBAAkB,CAACb,sBAAsB,EAClD,CAMAglC,wBAAwBmB,CAAgB,CAAE,CACtC,IAAMv0C,EAAK,IAAI,CAACiP,kBAAkB,CAACf,aAAa,CAAC,OAWjD,OAVAlO,EAAGuM,YAAY,CAAC,cAAe,SAC/BvM,EAAGC,SAAS,CAAG,kCAAqCs0C,CAAAA,EAAmB,IAAMA,EAAmB,EAAC,EACjGt2C,EAAI+B,EAAI,CACJyzB,IAAK,IACLtkB,KAAM,GACV,GACK,IAAI,CAACrK,KAAK,CAACyR,UAAU,GACtBvW,EAAG4T,KAAK,CAAC5P,UAAU,CAAG,SACtBhE,EAAG4T,KAAK,CAACnU,QAAQ,CAAG,YAEjBO,CACX,CAKAw0C,2BAA4B,CACxB,IAAMC,EAAyB,AAACz0C,IAC5B,IAAM00C,EAAYv9B,OAAOrP,IAAI,CAAC,IAAI,CAACmrC,MAAM,EACrCxyC,EAAIi0C,EAAUh0C,MAAM,CACxB,KAAOD,KAAK,CACR,IAAM6yC,EAAWoB,CAAS,CAACj0C,EAAE,CACvB0I,EAAQ,IAAI,CAAC8pC,MAAM,CAACK,EAAS,CACnC,GAAInqC,GAASnJ,IAAOmJ,EAAMwqC,YAAY,CAClC,OAAOL,CAEf,CACJ,EACMqB,EAAwB,AAAC30C,IAC3B,IAAM40C,EAAgB,EAAE,CAClB5wB,EAAWhkB,EAAGgkB,QAAQ,CAC5B,IAAK,IAAIvjB,EAAI,EAAGA,EAAIujB,EAAStjB,MAAM,CAAE,EAAED,EAAG,CACtC,IAAM6yC,EAAWmB,EAAuBzwB,CAAQ,CAACvjB,EAAE,EAC/C6yC,GACAsB,EAAch0C,IAAI,CAAC0yC,EAE3B,CACA,OAAOsB,CACX,EACM15B,EAASy5B,EAAsB,IAAI,CAACxB,4BAA4B,EAChEt3B,EAAQ84B,EAAsB,IAAI,CAACtB,2BAA2B,EAEpE,OADAn4B,EAAOta,IAAI,CAAC,UACLsa,EAAOxC,MAAM,CAACmD,EACzB,CAKAm4B,sBAAuB,CACnB,IAAMa,EAAW,IAAI,CAACL,yBAAyB,GACzCM,EAAuB,IAAI,CAAC5B,UAAU,CAAC/uC,MAAM,CAAC,AAACxE,GAAMA,AAAM,WAANA,GAAkB,CAAC,CAAC,IAAI,CAACszC,MAAM,CAACtzC,EAAE,EACzFc,EAAIo0C,EAASn0C,MAAM,CACvB,GAAID,IAAMq0C,EAAqBp0C,MAAM,CACjC,MAAO,CAAA,EAEX,KAAOD,KACH,GAAIo0C,CAAQ,CAACp0C,EAAE,GAAKq0C,CAAoB,CAACr0C,EAAE,CACvC,MAAO,CAAA,EAGf,MAAO,CAAA,CACX,CAKA4zC,6BAA8B,CAC1B,IAAMvvC,EAAQ,IAAI,CAACA,KAAK,CAExB,GAAIA,EAAM4E,QAAQ,CAACC,SAAS,CACxB,OAEJ,IAAMorC,EAAgBjwC,EAAM4E,QAAQ,CAAC2I,GAAG,CACxCvN,EAAMyN,SAAS,CAACL,YAAY,CAAC,IAAI,CAACmhC,2BAA2B,CAAE0B,EAAc/4B,WAAW,EACxFlX,EAAMyN,SAAS,CAACL,YAAY,CAAC,IAAI,CAACihC,4BAA4B,CAAE4B,GAChEzoC,EAAyB,IAAI,CAACxH,KAAK,CAAE,IAAI,CAACuuC,2BAA2B,EACrE/mC,EAAyB,IAAI,CAACxH,KAAK,CAAE,IAAI,CAACquC,4BAA4B,CAC1E,CACJ,CAQJ,GACAj2C,EAAgBD,EAAU,+CAAgD,EAAE,CAAE,WA+gB1E,MAL8B,CAC1B+K,KAreS,CAMTgtC,kBAAmB,OAQnBC,kBAAmB,GAMnBC,gBAAiB,GACrB,EAidI5mB,cAvckB,CAYlB6mB,kBAAmB,CAAA,EA0CnBr1C,QAAS,KAAK,EAqGds1C,cAAe,EAgBfC,SAAU,aAWV7hC,QAAS,KAAK,EAadwgB,cAAe,MAqBfshB,YAAa,CAETzxC,MAAO,GAEPC,OAAQ,GAER0uC,QAAS,EAETl8B,OAAQ,CACZ,EAWA4d,SAAU,CAAA,EAOVv0B,EAAG,EAOHC,EAAG,EASHkE,OAAQ,KAAK,EAUbyxC,oBAAqB,OASrBC,eAAgB,GAWhBC,cAAe,KAAK,EAgBpBC,gBAAiB,WAiBjBC,gBAAiB,KAAK,EActBC,oBAAqB,WAIrBC,aAAc,CAAA,EAOdC,cAAe,CAWXnkB,MAAO,QAIPhyB,EAAG,EAIHC,EAAG,CACP,EAOAm2C,aAAc,EAQdC,SAAU,KAAK,EAMfC,eAAgB,CAWZtkB,MAAO,OAIPhyB,EAAG,EAIHC,EAAG,CACP,EAcAs2C,WAAY,CAERriC,MAAO,UAEPlO,OAAQ,UAERisB,SAAU,OACd,EAYAukB,WAAY,CAERtiC,MAAO,UAEP+d,SAAU,OACd,CACJ,CASA,CAGJ,GACA10B,EAAgBD,EAAU,kDAAmD,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,+CAA+C,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUu1B,CAAC,CAAE30B,CAAC,CAAEu4C,CAAqB,CAAEt4C,CAAC,MAwBnQu4C,EAdJ,GAAM,CAAEzjB,eAAAA,CAAc,CAAE,CAAGJ,EACrB,CAAE3yB,SAAAA,CAAQ,CAAE,CAAGhC,EACf,CAAEwQ,SAAAA,CAAQ,CAAE9F,QAAAA,CAAO,CAAEqG,OAAAA,CAAM,CAAEpG,KAAAA,CAAI,CAAE2gB,SAAAA,CAAQ,CAAE4J,MAAAA,CAAK,CAAEtuB,KAAAA,CAAI,CAAEC,WAAAA,CAAU,CAAE,CAAG5G,EAMzEw4C,EAAqB,EAAE,CAuB7B,SAASC,QAcDp0C,EAAKyI,EAbT,IAAM4rC,EAAe,IAAI,CAAC5rC,KAAK,CAAErM,EAAOi4C,EAAaj4C,IAAI,CAAEsM,EAAM,IAAI,CAACA,GAAG,CAAEe,EAAO,IAAI,CAAC9G,KAAK,CAAC8G,IAAI,CAEjG6qC,EAAe,SAAUvT,CAAI,CAAEwT,CAAK,EAChC,IAAMC,EAAWp4C,AAAS,SAATA,EACb,WAAa,QACXq4C,EAAO,IAAIhrC,EAAKikC,IAAI,CAAC3M,GACrB2T,EAAajrC,EAAKykB,GAAG,CAACsmB,EAAUC,GAKtC,OAJAhrC,EAAKkrC,GAAG,CAACH,EAAUC,EAAMC,EAAaH,GAClCG,IAAejrC,EAAKykB,GAAG,CAACsmB,EAAUC,IAClChrC,EAAKkrC,GAAG,CAAC,OAAQF,EAAM,GAEpBA,EAAKG,OAAO,GAAK7T,CAC5B,EAEI/Z,EAASqtB,IACTr0C,EAAM0I,EAAM2rC,EACZ5rC,EAAQ4rC,GAEHA,IACLr0C,EAAM0I,EAAM4rC,EAAa5rC,EAAK,CAAE2rC,CAAAA,EAAaE,KAAK,EAAI,CAAA,GAElD,IAAI,CAAC5xC,KAAK,EACV,CAAA,IAAI,CAACA,KAAK,CAACwqB,UAAU,CAAGzkB,EAAM1I,CAAE,GAGxC,IAAMsI,EAAUhG,EAAK,IAAI,CAACgG,OAAO,CAAE3D,OAAOkwC,SAAS,EAmBnD,OAlBK7tB,EAAShnB,IACVA,CAAAA,EAAMsI,CAAM,EAEZtI,GAAOsI,IACPtI,EAAMsI,EACe,KAAA,IAAVG,GACPA,CAAAA,EAAQ6rC,EAAat0C,EAAKq0C,EAAaE,KAAK,CAAA,EAEhD,IAAI,CAAC9nB,MAAM,CAAG1sB,KAAKC,GAAG,CAACA,EAAMyI,EAAOnG,EAAK,IAAI,CAAC+F,OAAO,CAAE1D,OAAO+9B,SAAS,IAEtE1b,EAASte,GAGL,CAACse,EAASqtB,IACfA,GACAA,EAAaS,UAAU,EACvB90C,CAAAA,GAAOq0C,EAAaS,UAAU,AAAD,EAL7B90C,EAAM,KAAK,EAORA,CACX,CAwBA,SAAS+0C,IACD,IAAI,CAACnvC,OAAO,CAACumB,aAAa,EAC1B,IAAI,CAACvmB,OAAO,CAACumB,aAAa,CAAC9a,OAAO,EAClC,CAAA,IAAI,CAAC8a,aAAa,CAAG,IAAI+nB,EAAyB,IAAI,CAAA,CAE9D,CAIA,SAAS3hB,IACL,IAAoBnT,EAAOzc,AAAb,IAAI,CAAeyc,IAAI,CAAE+M,EAAgBxpB,AAAzC,IAAI,CAA2CwpB,aAAa,CAC1E,GAAIA,EAAe,CACXnF,EAASmF,EAAc6oB,gBAAgB,IACvC7oB,EAAc8oB,WAAW,CAAC9oB,EAAc6oB,gBAAgB,EACxD,OAAO7oB,EAAc6oB,gBAAgB,EAEzC51B,EAAK1b,OAAO,CAAC,AAACgE,IACVA,EAAKwtC,WAAW,GAChBxtC,EAAKytC,QAAQ,EACjB,GACAxyC,AAVU,IAAI,CAURyyC,cAAc,GACpBjpB,EAAcwG,MAAM,GACpB,IAAMd,EAAgB1F,EAAcvmB,OAAO,CAACisB,aAAa,AACpD1F,CAAAA,EAAcvmB,OAAO,CAACmsB,QAAQ,GAC3BF,AAAkB,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAACwjB,cAAc,CAAG,CAAA,CAAG,EAGrC,CACJ,CAIA,SAAS5iB,EAAgB9vB,CAAK,MACtB4G,EAAU6d,EAAQkuB,EAASzjB,EAC/B,IAAM1F,EAAgBxpB,EAAMwpB,aAAa,CAAEkG,EAAS,KAC5ClG,IACA5iB,EAAW5G,EAAMmI,KAAK,CAAC,EAAE,CAAC4nB,WAAW,GACrCtL,EAASzkB,EAAMykB,MAAM,CACrByK,EAAiB1F,GACbA,EAAcvmB,OAAO,CAACisB,aAAa,CACnC7K,EAASzd,EAASvJ,GAAG,GACrBmsB,EAAcwG,MAAM,CAACppB,EAASvJ,GAAG,CAAEuJ,EAASb,GAAG,EAG/C0e,EAAO2D,OAAO,EACd8G,AAAkB,QAAlBA,GACAA,IAAkBzK,EAAOxhB,OAAO,CAACisB,aAAa,GAE9CyjB,EAAU1kB,EAAMjuB,EAAM4yC,UAAU,EAC5BnuB,AAA0B,aAA1BA,EAAOxhB,OAAO,CAACksB,MAAM,CACrBwjB,EAAQ73C,CAAC,CAAGkF,EAAM4uB,OAAO,CAGzB+jB,EAAQ73C,CAAC,EAAI0uB,EAAcyF,SAAS,GAExCxK,EAAOpgB,KAAK,CAACwuC,MAAM,CAAG,CAAA,EACtBpuB,EAAOoI,KAAK,CAAC8lB,IAGzB,EACA,GAAInpB,EAAe,CACf,IAAMoR,EAASl3B,EAAK8tC,EAAoB,AAACj4C,GAAMA,CAAC,CAAC,EAAE,GAAKyG,GACnD46B,GACD4W,EAAmB11C,IAAI,CAAC,CAACkE,EAAO,CAExBuJ,EAASvJ,EAAMmI,KAAK,CAAC,EAAE,CAAE,mBAAoB,SAAU5O,CAAC,EAChDiwB,GACAA,EAAcwG,MAAM,CAACz2B,EAAE8D,GAAG,CAAE9D,EAAEwM,GAAG,CAEzC,GAEAwD,EAASvJ,EAAO,SAAU0vB,GAC7B,CAAC,EAGVA,GACJ,CACJ,CAKA,SAASojB,IACL,IAAK,IAAIn3C,EAAI,EAAGo3C,EAAOvB,EAAmB51C,MAAM,CAAED,EAAIo3C,EAAM,EAAEp3C,EAAG,CAC7D,IAAMi/B,EAAS4W,CAAkB,CAAC71C,EAAE,CACpC,GAAIi/B,CAAM,CAAC,EAAE,GAAK,IAAI,CAAE,CACpBA,CAAM,CAAC,EAAE,CAAC75B,OAAO,CAAC,AAAC66B,GAAWA,KAC9B4V,EAAmBwB,MAAM,CAACr3C,EAAG,GAC7B,MACJ,CACJ,CACJ,CACA,SAASs3C,IACL,IAAMzpB,EAAgB,IAAI,CAACA,aAAa,CACxC,GAAIA,EAAe,CACf,IAAM0pB,EAAsB1pB,EAAcyF,SAAS,EAC/C,CAAA,IAAI,CAACyjB,cAAc,EACnB,CAAA,IAAI,CAAC9jB,OAAO,EAAIskB,CAAkB,EAElC,IAAI,CAAClkB,iBAAiB,EACtB,CAAA,IAAI,CAACmkB,YAAY,EAAID,CAAkB,CAE/C,CACJ,CAIA,SAAS5nC,IACL,IAAoBke,EAAgBxpB,AAAtB,IAAI,CAAwBwpB,aAAa,CACvD,GAAIA,GAAiB,CAACA,EAAcvmB,OAAO,CAACmsB,QAAQ,CAAE,CAClD5F,EAAcwG,MAAM,GACpB,IAAMd,EAAgB1F,EAAcvmB,OAAO,CAACisB,aAAa,AACrDA,AAAkB,CAAA,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAACwjB,cAAc,CAAG,CAAA,CAAG,CAEjC,CACJ,CAIA,SAASrnC,EAAc9R,CAAC,EACpB,IAAoB0J,EAAU1J,EAAE0J,OAAO,CAAEmwC,EAAuBnwC,EAAQumB,aAAa,CAAE6pB,EAAuB,IAAI,CAACrkB,iBAAiB,CAAEskB,EAAoB,IAAI,CAACZ,cAAc,CACzKlpB,EAAgBxpB,AADN,IAAI,CACQwpB,aAAa,CAUvC,GATI4pB,GACAA,EAAqB1kC,OAAO,EAC5B,CAACjL,EAAQ+lB,IACT,IAAI,CAACvmB,OAAO,CAACumB,aAAa,GAC1B,IAAI,CAACvmB,OAAO,CAACumB,aAAa,CAAC9a,OAAO,CAAG,CAAA,EACrC,IAAI,CAAC8a,aAAa,CAAGA,EAAgB,IAAI+nB,EAAyB,IAAI,GAE1E,IAAI,CAACviB,iBAAiB,CAAG,CAAA,EACzB,IAAI,CAAC0jB,cAAc,CAAG,CAAA,EAClBlpB,EAAe,CACfsG,EAAgB,IAAI,EACpB,IAAMZ,EAAgB,AAACkkB,GACnBA,EAAqBlkB,aAAa,EAAM1F,EAAcvmB,OAAO,EAAIumB,EAAcvmB,OAAO,CAACisB,aAAa,AACnG1F,CAAAA,EAAcvmB,OAAO,CAACmsB,QAAQ,GAC3BF,AAAkB,WAAlBA,EACA,IAAI,CAACF,iBAAiB,CAAG,CAAA,EAEF,WAAlBE,GACL,CAAA,IAAI,CAACwjB,cAAc,CAAG,CAAA,CAAG,GAG7B,CAAA,IAAI,CAAC1jB,iBAAiB,GAAKqkB,GAC3B,IAAI,CAACX,cAAc,GAAKY,CAAgB,GACxC,CAAA,IAAI,CAAChX,UAAU,CAAG,CAAA,CAAG,CAE7B,CACJ,CAUA,MAJiC,CAC7Bn5B,QAvLJ,SAASA,EAAQ4mB,CAAS,CAAE3mB,CAAU,CAAEmwC,CAAkB,EAEtD,GADAhC,EAA2BgC,EACvB3zC,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,AACvCymB,CAAAA,EAAUzmB,SAAS,CAACkwC,YAAY,CAAG/B,EACnCloC,EAASnG,EAAY,oBAAqBgvC,GAC1C7oC,EAASnG,EAAY,eAAgBwsB,GACrCrmB,EAASnG,EAAY,UAAW0vC,GAChCvpC,EAASnG,EAAY,aAAc6vC,GACnC1pC,EAASnG,EAAY,SAAUkI,GAC/B/B,EAASnG,EAAY,SAAUiI,GAC/BhI,EAAWitB,SAAS,CAACx0B,IAAI,CAACg0B,GAC1BhmB,EAAOgkB,EAAgB,CAAEtE,cAAe8nB,EAAsB9nB,aAAa,AAAC,GAC5E1f,EAAOgkB,EAAe5qB,IAAI,CAAEouC,EAAsBpuC,IAAI,CAC1D,CACJ,CAyKA,CAGJ,GACA9K,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,kDAAkD,CAAEA,CAAQ,CAAC,kCAAkC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUk/B,CAAI,CAAE3J,CAAC,CAAE30B,CAAC,CAAE06C,CAAwB,CAAEC,CAAU,CAAE16C,CAAC,EAUhW,GAAM,CAAE80B,eAAAA,CAAc,CAAE,CAAGJ,EACrB,CAAEnkB,SAAAA,CAAQ,CAAEH,cAAAA,CAAa,CAAEjQ,IAAAA,CAAG,CAAEsK,QAAAA,CAAO,CAAE4vB,wBAAAA,CAAuB,CAAEsgB,eAAAA,CAAc,CAAE7pC,OAAAA,CAAM,CAAEnG,UAAAA,CAAS,CAAE0gB,SAAAA,CAAQ,CAAE4J,MAAAA,CAAK,CAAE2lB,WAAAA,CAAU,CAAE7jC,IAAAA,CAAG,CAAEpQ,KAAAA,CAAI,CAAEk0C,KAAAA,CAAI,CAAEnc,MAAAA,CAAK,CAAE,CAAG1+B,CA6CnK,OAAM86C,EASF,OAAO3wC,QAAQ4mB,CAAS,CAAE3mB,CAAU,CAAE,CAClCqwC,EAAyBtwC,OAAO,CAAC4mB,EAAW3mB,EAAY0wC,EAC5D,CAMA5qC,YAAYlJ,CAAK,CAAE,CACf,IAAI,CAAC+zC,aAAa,CAAGD,EAAcxwC,SAAS,CAAC0wC,cAAc,CAC3D,IAAI,CAACC,uBAAuB,CAAG,EAC/B,IAAI,CAACj0C,KAAK,CAAGA,EACb,IAAI,CAACmL,IAAI,CAACnL,EACd,CAgBAsyC,YAAY32C,CAAC,CAAE+zB,CAAM,CAAE,CACnB,IAA4B1vB,EAAQwpB,AAAd,IAAI,CAAwBxpB,KAAK,CAAE0xC,EAAeloB,AAAlD,IAAI,CAA4DuqB,aAAa,CAACp4C,EAAE,CAAE0hC,EAAWr9B,EAAMmI,KAAK,CAAC,EAAE,CAAEuzB,EAAgB,AAAC17B,EAAMyvB,QAAQ,EAAIzvB,EAAMyvB,QAAQ,CAAC0L,gBAAgB,IAAOkC,GAAY,CAAC,EAAG5jC,EAAOi4C,EAAaj4C,IAAI,CAAEoyB,EAAe6lB,EAAa7lB,YAAY,CAC1RlmB,EAAU+1B,EAAc/1B,OAAO,CAAED,EAAUg2B,EAAch2B,OAAO,CAAEmkB,EAAQC,EAASuT,GAAYjgC,KAAKqpB,KAAK,CAACrpB,KAAKC,GAAG,CAACggC,EAASt3B,GAAG,CAAEpG,EAAK+F,EAAS23B,EAASt3B,GAAG,IAC/JmuC,EAAkBpuC,EAAQ4rC,EAAayC,MAAM,CAAEC,EAAUC,EAAYC,EAAcpzC,EAAKqzC,EAAaC,EAAe,CAAA,EAEpH,GAAI7uC,AAAY,OAAZA,GAAoBD,AAAY,OAAZA,GAaxB,GATA1F,EAAMwqB,UAAU,CAAG1kB,EACnB0jB,AATsB,IAAI,CASZirB,WAAW,CAAC94C,GAEtBkwB,IACA,IAAI,CAAC6oB,kBAAkB,CAAG,CAAA,EAC1Brd,EAAK/zB,SAAS,CAACqxC,eAAe,CAAC9sC,IAAI,CAACw1B,GAAY,CAAEr9B,MAAO,IAAI,CAACA,KAAK,AAAC,EAAG6rB,EAAc,CAAA,GACrF,IAAI,CAAC+oB,YAAY,CAAGlD,EAAamD,oBAAoB,EAGrDp7C,AAAS,UAATA,GAAoBA,AAAS,SAATA,EACf4jC,GAMDn8B,EAAM,CACF4E,MAAO4rC,EACP3rC,IAAK+jB,EACL9pB,MAAOA,EACP2F,QAASA,EACTD,QAASA,CACb,EACAmkB,EAASwT,EAASmW,YAAY,CAAC3rC,IAAI,CAAC3G,GAChCmjB,EAASnjB,EAAI4oB,MAAM,GACnBA,CAAAA,EAAS5oB,EAAI4oB,MAAM,AAAD,EAItB0qB,EAAe,CAAA,GAhBf1uC,EAAQ4rC,OAoBX,GAAI5rC,EAELgkB,EAAS1sB,KAAKC,GAAG,CAACwsB,AADlBA,CAAAA,EAASzsB,KAAK2I,GAAG,CAAC+jB,EAAShkB,EAAOH,EAAO,EACdG,EAAOJ,GAClC8uC,EAAe,CAAA,OAEd,GAAI/6C,AAAS,QAATA,GAGL,GAAI4jC,EAMI,CAAA,AAAmB,KAAA,IAAZ33B,GACP,AAAmB,KAAA,IAAZC,CAAsB,IAC7BA,EAAU3D,OAAO+9B,SAAS,CAC1Br6B,EAAU1D,OAAOkwC,SAAS,CAC1BlyC,EAAM6D,MAAM,CAAC9C,OAAO,CAAC,AAAC8C,IAElB,IAAMu7B,EAAQv7B,EAAOu7B,KAAK,CACtBA,IACAz5B,EAAUvI,KAAKC,GAAG,CAAC+hC,CAAK,CAAC,EAAE,CAAEz5B,GAC7BD,EAAUtI,KAAK2I,GAAG,CAACq5B,CAAK,CAACA,EAAMxjC,MAAM,CAAG,EAAE,CAAE8J,GAEpD,GACAgqB,EAAS,CAAA,GAGb7F,EAASuqB,EAAWG,AADpBA,CAAAA,EAAc/qB,AArEA,IAAI,CAqEUsrB,cAAc,CAACpvC,EAASC,EAAS3F,EAAM8G,IAAI,CAACiuC,MAAM,CAAA,EAC9C13C,GAAG,CACnCysB,EAASyqB,EAAYxuC,GAAG,KAKvB,CACDyjB,AA7Ec,IAAI,CA6EJ6oB,gBAAgB,CAAG12C,EACjC,MACJ,MAEc,QAATlC,GAAkB4jC,IAGnBr9B,EAAMqpB,SAAS,EAAIrpB,EAAMqpB,SAAS,CAACmQ,UAAU,CAAC,EAAE,EAChDx5B,CAAAA,EAAMqpB,SAAS,CAACmQ,UAAU,CAAC,EAAE,CAACrxB,KAAK,CAAClF,OAAO,CAAC6C,KAAK,CAAG,KAAK,CAAA,EAE7D+jB,EAASlkB,EACTmkB,EAASpkB,GAET8uC,GAAgB9C,EAAaS,UAAU,EAAI1uC,EAAQomB,IACnDA,CAAAA,GAAU6nB,EAAaS,UAAU,AAAD,EAEhCT,EAAasD,UAAU,EAAIvxC,EAAQqmB,IACnCA,CAAAA,GAAU4nB,EAAasD,UAAU,AAAD,EAEhC,IAAI,CAACzE,QAAQ,EACb,CAAA,IAAI,CAACA,QAAQ,CAAC0E,aAAa,CAAGt5C,EAAI,CAAA,EAGjC0hC,EAeDA,EAAS3L,WAAW,CAAC7H,EAAQC,EAAQnqB,EAAK+vB,EAAQ,CAAA,GAAO,KAAK,EAC9D,CACI1mB,QAAS,sBACTksC,oBAAqBxD,CACzB,IAfA4C,EAAeJ,AADfA,CAAAA,EAAmBxc,EAAM13B,EAAMiD,OAAO,CAACkF,KAAK,CAAC,CAAC,EAAE,AAAD,EACfrC,KAAK,CACrCouC,EAAiBpuC,KAAK,CAAGA,EACzBuuC,EAAaH,EAAiB72C,GAAG,CACjC62C,EAAiB72C,GAAG,CAAG+2C,EACvB7qC,EAASvJ,EAAO,OAAQ,WACpBk0C,EAAiBpuC,KAAK,CAAGwuC,EACzBJ,EAAiB72C,GAAG,CAAGg3C,CAC3B,IAUJ1wC,EAAU,IAAI,CAAE,iBACpB,CASA8wC,YAAYvD,CAAQ,CAAE,CAClB,IAAI,CAACA,QAAQ,CAAG,IAAI,CAACjuC,OAAO,CAACiuC,QAAQ,CAAGA,CAC5C,CAQA/lC,KAAKnL,CAAK,CAAE,CACR,IAAMwpB,EAAgB,IAAI,CAAEvmB,EAAUjD,EAAMiD,OAAO,CAACumB,aAAa,CAAEuqB,EAAiB9wC,EAAQjI,OAAO,EAAIwuB,EAAcwqB,cAAc,CAAC72C,KAAK,GAAKg4C,EAAiBlyC,EAAQiuC,QAAQ,CAAEkE,EAAa,WAC1L,IAAMC,EAAW7rB,EAAc6rB,QAAQ,CAAEC,EAAW9rB,EAAc8rB,QAAQ,CAEtED,GAAcA,EAASE,IAAI,EAC3B5xC,EAAU0xC,EAAU,QAEpBC,GAAcA,EAASC,IAAI,EAC3B5xC,EAAU2xC,EAAU,OAE5B,CACA9rB,CAAAA,EAAcxpB,KAAK,CAAGA,EACtBwpB,EAAcvmB,OAAO,CAAGA,EACxBumB,EAAcxuB,OAAO,CAAG,EAAE,CAC1BwuB,EAAcuqB,aAAa,CAAGA,EAC9B,IAAI,CAACvZ,cAAc,CAAG,EAAE,CACxB,IAAI,CAACA,cAAc,CAAC1+B,IAAI,CAACyN,EAASvJ,EAAMyN,SAAS,CAAE,YAAa2nC,IAChE,IAAI,CAAC5a,cAAc,CAAC1+B,IAAI,CAACyN,EAASvJ,EAAO,SAAUo1C,IAEnDrB,EAAchzC,OAAO,CAACyoB,EAAcgsB,kBAAkB,EAExB,KAAA,IAAnBL,GACPpB,CAAa,CAACoB,EAAe,EAC7B,IAAI,CAAC7C,WAAW,CAAC6C,EAAgB,CAAA,GAErC,IAAI,CAAC3a,cAAc,CAAC1+B,IAAI,CAACyN,EAASvJ,EAAO,OAAQ,WAGzCA,EAAMmI,KAAK,EAAInI,EAAMmI,KAAK,CAAC,EAAE,EAC7BoB,EAASvJ,EAAMmI,KAAK,CAAC,EAAE,CAAE,cAAe,SAAU5O,CAAC,EAC3C,IAAI,CAACwM,GAAG,CAAG,IAAI,CAAC1I,GAAG,GACnB2C,EAAMwqB,UAAU,EAChBjxB,AAAc,wBAAdA,EAAEyP,OAAO,EACTzP,AAAc,gBAAdA,EAAEyP,OAAO,EACTwgB,EAAckrB,kBAAkB,EAChC,CAAClrB,EAAcorB,YAAY,EAC3B,IAAI,CAACD,eAAe,CAAC,CAAA,EAAO,CAAA,EAEpC,EAER,GACJ,CAQAc,oBAAqB,CACjB,IAAMjsB,EAAgB,IAAI,CAAExpB,EAAQ,IAAI,CAACA,KAAK,CAAEuwC,EAAW,IAAI,CAACA,QAAQ,CAAElT,EAAWr9B,EAAMmI,KAAK,CAAC,EAAE,CAAEutC,EAAct4C,KAAKqpB,KAAK,CAAC4W,EAASt3B,GAAG,CAAGs3B,EAAShgC,GAAG,EAAGs4C,EAAY,CAACtY,EAASuY,gBAAgB,CAAEC,EAAM,GAAK,KAC/Mna,EAAgB,AAAC17B,EAAMyvB,QAAQ,EAC3BzvB,EAAMyvB,QAAQ,CAAC0L,gBAAgB,IAAOkC,EAAU13B,EAAU+1B,EAAc/1B,OAAO,CAAED,EAAUg2B,EAAch2B,OAAO,CAAE6uC,EAAc/qB,EAAcsrB,cAAc,CAACpvC,EAASC,EAAS3F,EAAM8G,IAAI,CAACiuC,MAAM,EAAGe,EAASvB,EAAYl3C,GAAG,CAAE04C,EAASxB,EAAYxuC,GAAG,CAAEmrC,EAAW1nB,EAAc0nB,QAAQ,CAAEb,EAAoB7mB,EAAcvmB,OAAO,CAACotC,iBAAiB,CAAEr1C,EAAUwuB,EAAcxuB,OAAO,CACtXg7C,EAAiB3xB,EAAS6sB,GAAW+E,EAAqB,CAAA,EAC9DzsB,EAAcuqB,aAAa,CAAChzC,OAAO,CAAC,CAAC2wC,EAAc/1C,KAC/C,IAAMmK,EAAQ4rC,EAAayC,MAAM,CAAE16C,EAAOi4C,EAAaj4C,IAAI,CAAEm4C,EAAQF,EAAaE,KAAK,EAAI,EAAGp3C,EAASQ,CAAO,CAACW,EAAE,CAAEu6C,EAAcxE,EAAasD,UAAU,CACpJtD,EAAaS,UAAU,CAAEgE,EAAax6C,IAAMu1C,EAGhDkF,EAAkBtwC,EACdJ,EAAUC,EAGd0wC,EAAkBvwC,EAAQu3B,EAASxD,QAAQ,CACvCyc,EAAQ,EAEZC,EAAsB,CAAA,EAEtBC,EAA4B,CAAA,EAAOC,EAAc3wC,IAAU4vC,EACvDS,GAAcC,GACdH,CAAAA,EAAqB,CAAA,CAAG,EAGxB,AAACx8C,CAAAA,AAAS,UAATA,GAAoBA,AAAS,SAATA,CAAc,GAClCi8C,EAAc,MACX,CAAA,CAAEgB,MAAO,GAAIC,KAAM,GAAI,CAAA,CAAC,CAACl9C,EAAK,CAAGo8C,EAAMjE,EAAQsE,GAClDR,EAAc,MACX,CAAA,CAAEgB,MAAO,GAAIC,KAAM,GAAI,CAAA,CAAC,CAACl9C,EAAK,CAAGo8C,EAAMjE,EAAQsE,EACnDO,EAAc,CAAA,EAETh9C,AAAS,QAATA,GACLg9C,EAAc,AAACV,EAASD,EAASI,IAAiBR,EAClDa,EAAsB,CAACJ,GAET,QAAT18C,IACLg9C,EAAepZ,EAASt3B,GAAG,CAAGs3B,EAAShgC,GAAG,EACtCqI,EAAUC,EACd6wC,EAA6B,CAACL,GAC1BH,GACAS,GAMR,IAAMG,EAAW,CAACvG,GACd,CAAE4F,CAAAA,GAAsBx8C,AAAS,QAATA,CAAa,GACpC28C,CAAAA,GACGC,GACAG,GACAb,CAAQ,EACVkB,EAAU,AAACZ,GAAsBx8C,AAAS,QAATA,GAClC08C,GAAcM,GACdA,GAAe,CAACT,GAAkB,CAACO,GACnCJ,GAAc3sB,EAAcorB,YAAY,CACzCgC,EACAN,EAAQ,EAEHO,IACLb,EAAiB,CAAA,EACjBM,EAAQ,GAGR97C,EAAO87C,KAAK,GAAKA,IACjB97C,EAAO4qB,QAAQ,CAACkxB,GACZ/F,IACAA,EAASttC,OAAO,CAACtH,EAAI,EAAE,CAACm7C,QAAQ,CAAGF,EACrB,IAAVN,GACA/F,CAAAA,EAAS0E,aAAa,CAAGt5C,EAAI,CAAA,GAIjC26C,AAAU,IAAVA,GAAepF,IAAav1C,EAC5B6tB,EAAcirB,WAAW,GAEpB,CAAA,AAAW,IAAV6B,GAAe,CAAC7yC,EAAQytC,IAC9B+E,CAAiB,GACjBzsB,EAAcirB,WAAW,CAAC94C,GAGtC,EACJ,CAQA65C,mBAAmB9D,CAAY,CAAE,CAC7B,IAAMj4C,EAAOi4C,EAAaj4C,IAAI,CAAEm4C,EAAQF,EAAaE,KAAK,EAAI,EAG9DmF,EAAa,CACTC,YAAa,EACbC,OAAQ,IACRC,OAAQ,IACRC,KAAM,KACNtB,IAAK,MACLuB,KAAM,MACV,CAEIL,CAAAA,CAAU,CAACt9C,EAAK,CAChBi4C,EAAayC,MAAM,CAAG4C,CAAU,CAACt9C,EAAK,CAAGm4C,EAEpCn4C,CAAAA,AAAS,UAATA,GAAoBA,AAAS,SAATA,CAAc,GACvCi4C,CAAAA,EAAayC,MAAM,CAAG,AAGZ,GAHY,CAAA,CAClBuC,MAAO,GACPC,KAAM,GACV,CAAA,CAAC,CAACl9C,EAAK,CAAQ,KAAOm4C,CAAI,EAE9BF,EAAaS,UAAU,CAAGxyC,EAAK+xC,EAAa2F,SAAS,CAAE,GACvD3F,EAAasD,UAAU,CAAGr1C,EAAK+xC,EAAa4F,SAAS,CAAE,GACvD5F,EAAayC,MAAM,EACfzC,EAAasD,UAAU,CAAGtD,EAAaS,UAAU,AACzD,CAOAoF,cAAcjwC,CAAI,CAAE,CAChB,IAAMkwC,EAAQlwC,AAAS,QAATA,EAAiB,IAAI,CAAC+tC,QAAQ,CAAG,IAAI,CAACC,QAAQ,CACtDryC,EAAU,IAAI,CAACjD,KAAK,CAACiD,OAAO,CAC7BumB,aAAa,CACZ1iB,EAAO,IAAI,CAAC9G,KAAK,CAAC8G,IAAI,QAC5B,AAAI0wC,EACO,AAAC,CAAA,AAAgB,SAAfA,EAAM/9C,IAAI,EAAewJ,EAAQ4tC,eAAe,EACrD,IAAI,CAAC4G,sBAAsB,AAAD,EAAGD,EAAM12C,KAAK,CAAEgG,EAAKiuC,MAAM,CAAEjuC,GAExD,CACX,CAOA4wC,cAAcpwC,CAAI,CAAEqwC,CAAS,CAAE,CAC3B,IAAM10C,EAAU,IAAI,CAACA,OAAO,CAAE6D,EAAO,IAAI,CAAC9G,KAAK,CAAC8G,IAAI,CAAE0wC,EAAQlwC,AAAS,QAATA,EAAiB,IAAI,CAAC+tC,QAAQ,CAAG,IAAI,CAACC,QAAQ,CAAEsC,EAAUtwC,AAAS,QAATA,EAAiB,IAAI,CAACuwC,UAAU,CAAG,IAAI,CAACC,UAAU,CAC1K,GAAIN,EAAO,CACP,IAAMO,EAAaP,EAAMrjC,YAAY,CAAC,gBAClC6jC,EAAcv0C,EAAQs0C,GAAc/1C,OAAO+1C,GAAc,KAAK,EAClE,GAAIt0C,EAAQk0C,GAAY,CACpB,IAAMM,EAAeD,EACjBv0C,EAAQw0C,IACRT,EAAM/vC,YAAY,CAAC,wBAAyBwwC,GAEhDT,EAAM/vC,YAAY,CAAC,eAAgBkwC,GACnCK,EAAcL,CAClB,CACAH,EAAM12C,KAAK,CAAGgG,EAAKC,UAAU,CAAE,IAAI,CAACmxC,gBAAgB,CAACV,EAAM/9C,IAAI,CAAC,EAC5DwJ,EAAQ6tC,mBAAmB,CAAGkH,GAC9BJ,GACAA,EAAQzmC,IAAI,CAAC,CACTxM,KAAMmC,EAAKC,UAAU,CAAC9D,EAAQ2tC,eAAe,CAAEoH,EACnD,EAER,CACJ,CAOAG,iBAAiB7wC,CAAI,CAAEjK,CAAG,CAAE0I,CAAG,CAAE,CAC7B,IAAMyxC,EAAQlwC,AAAS,QAATA,EAAiB,IAAI,CAAC+tC,QAAQ,CAAG,IAAI,CAACC,QAAQ,CAC5D,GAAIkC,EAAO,CACP,IAAM/3C,EAAS,IAAI,CAACy4C,gBAAgB,CAACV,EAAM/9C,IAAI,CAAC,CAC1CqN,EAAO,IAAI,CAAC9G,KAAK,CAAC8G,IAAI,CAC5B,GAAIrH,EAAQ,CACR,IAAMoqB,EAAS/iB,EAAKC,UAAU,CAACtH,EAAQpC,EACnCm6C,CAAAA,EAAMn6C,GAAG,GAAKwsB,GACd2tB,CAAAA,EAAMn6C,GAAG,CAAGwsB,CAAK,EAErB,IAAMC,EAAShjB,EAAKC,UAAU,CAACtH,EAAQsG,EACnCyxC,CAAAA,EAAMzxC,GAAG,GAAK+jB,GACd0tB,CAAAA,EAAMzxC,GAAG,CAAG+jB,CAAK,CAEzB,CACJ,CACJ,CAMAsuB,UAAU9wC,CAAI,CAAE,CACZ,IAAMswC,EAAUtwC,AAAS,QAATA,EAAiB,IAAI,CAACuwC,UAAU,CAAG,IAAI,CAACC,UAAU,CAAEN,EAAQlwC,AAAS,QAATA,EAAiB,IAAI,CAAC+tC,QAAQ,CAAG,IAAI,CAACC,QAAQ,CAC1H,GAAIkC,GAASI,GAAW,IAAI,CAACS,UAAU,CAAE,CACrC,IAAMC,EAAcd,AAAe,SAAfA,EAAM/9C,IAAI,CAAa,CAAE6W,WAAAA,EAAa,CAAC,CAAEC,WAAAA,EAAa,CAAC,CAAE,CAAG,IAAI,CAAC8nC,UAAU,CAAE,CAAEx9C,EAAAA,EAAI,CAAC,CAAEkE,MAAAA,EAAQ,CAAC,CAAEC,OAAAA,EAAS,CAAC,CAAE,CAAG44C,EAAS,CAAEjH,cAAAA,CAAa,CAAE,CAAG,IAAI,CAAC1tC,OAAO,CAC7K9J,EAAIq+C,EAAO,CACPz4C,MAAOu5C,EACF,AAACv5C,EAAS4xC,CAAAA,EAAgB,GAAK,EAAC,EAAM,KACvC,OACJ3xC,OAAQ,AAACA,EAAS,EAAK,KACvBu5C,OAAQ,kBACZ,GACID,GAAe3H,EACfx3C,EAAIq+C,EAAO,CACPntC,KAAM,AAACiG,EAAazV,EAAK,KACzB8zB,IAAKpe,EAAa,IACtB,GAKApX,EAAIq+C,EAAO,CACPntC,KAAMjN,KAAKC,GAAG,CAACD,KAAKqpB,KAAK,CAAC5rB,EACtByV,EACA,AAACknC,CAAAA,EAAMgB,WAAW,CAAGz5C,CAAI,EAAK,GAAI,IAAI,CAACiB,KAAK,CAACyuB,UAAU,CAAG+oB,EAAMgB,WAAW,EAAI,KACnF7pB,IAAK,AAACpe,EAAa,AAACinC,CAAAA,EAAMiB,YAAY,CAAGz5C,CAAK,EAAK,EAAK,IAC5D,EAER,CACJ,CAMA05C,UAAUpxC,CAAI,CAAE,CACZ,IAAMkwC,EAAQlwC,AAAS,QAATA,EAAiB,IAAI,CAAC+tC,QAAQ,CAAG,IAAI,CAACC,QAAQ,CACxDkC,GACAr+C,EAAIq+C,EAAO,CACP7oB,IAAK,UACL4pB,OAAQ,EACRx5C,MAAO,MACPC,OAAQ,KACZ,EAER,CAKAy4C,uBAAuBkB,CAAS,CAAE5D,CAAM,CAAEjuC,CAAI,CAAE,CAI5C,IAAI0wC,EAAQmB,EAAU72C,KAAK,CAAC,KAAKqT,IAAI,CAAC,KAAKrT,KAAK,CAAC,KAAKqT,IAAI,CAAC,KAI3D,GAH2B,KAAvBqiC,EAAMl8C,OAAO,CAAC,MACdk8C,CAAAA,GAAS,QAAO,EAEhBzC,EACAyC,GAAS,QAER,KAVgBh7C,EAUhB,GAAIzD,EAAE6/C,QAAQ,EAVUp8C,CAAAA,CAAAA,CAAAA,CAARA,EAUeg7C,GAVH57C,MAAM,CAAG,CAAA,GACrCY,EAAIq8C,WAAW,CAAC,OAASr8C,EAAIZ,MAAM,CAAG,GACnCY,EAAIq8C,WAAW,CAAC,OAASr8C,EAAIZ,MAAM,CAAG,CAAC,EAQH,CACxC,IAAMuE,EAAS,IAAI4qC,KAAKyM,GAAOsB,iBAAiB,GAAK,GACrDtB,GAASr3C,GAAU,EAAI,CAAC,CAAC,EAAE4P,EAAI,CAAC5P,GAAQ,GAAG,CAAC,CAAG,CAAC,CAAC,EAAE4P,EAAI5P,GAAQ,GAAG,CAAC,AACvE,CAAA,CACA,IAAI2xC,EAAO/G,KAAKlgB,KAAK,CAAC2sB,GAItB,GAAI,CAACnzB,EAASytB,GAAO,CACjB,IAAMiH,EAAQJ,EAAU72C,KAAK,CAAC,KAC9BgwC,EAAO/G,KAAKiO,GAAG,CAACnF,EAAKkF,CAAK,CAAC,EAAE,EAAGlF,EAAKkF,CAAK,CAAC,EAAE,EAAI,EAAGlF,EAAKkF,CAAK,CAAC,EAAE,EACrE,CAIA,OAHIjyC,GAAQiuC,GAAU1wB,EAASytB,IAC3BA,CAAAA,GAAQhrC,EAAKgyC,iBAAiB,CAAChH,EAAI,EAEhCA,CACX,CAOAmH,UAAU3xC,CAAI,CAAE,CACZ,GAAM,CAAEtH,MAAAA,CAAK,CAAEuT,IAAAA,CAAG,CAAE8kC,WAAAA,CAAU,CAAE,CAAG,IAAI,CACjC7uB,EAAgB,IAAI,CAAE0vB,EAAal5C,EAAM4E,QAAQ,CAACkK,KAAK,EAAI,CAAC,EAAGlK,EAAW5E,EAAM4E,QAAQ,CAAE3B,EAAUjD,EAAMiD,OAAO,CAACumB,aAAa,CAAEtmB,EAAO4qB,EAAe5qB,IAAI,CAAEi2C,EAAQ7xC,AAAS,QAATA,EAI3K,SAAS8xC,IACL,GAAM,CAAE9D,SAAAA,CAAQ,CAAED,SAAAA,CAAQ,CAAE,CAAG7rB,EAAe6vB,EAAYr5C,EAAMmI,KAAK,CAAC,EAAE,CAAEuzB,EAAgB,AAAC17B,EAAMyvB,QAAQ,EAAIzvB,EAAMyvB,QAAQ,CAAC0L,gBAAgB,IAAOke,EAAW1zC,EAAU+1B,EAAc/1B,OAAO,CAAED,EAAUg2B,EAAch2B,OAAO,CAC1N5E,EAAQ0oB,EAAc+tB,aAAa,CAACjwC,GACpCxG,IAAUkB,OAAOw1C,EAAMrjC,YAAY,CAAC,2BACpCkQ,EAASvjB,KACT02C,EAAM/vC,YAAY,CAAC,wBAAyB3G,GAGxCq4C,GAAS7D,GAAYjxB,EAAS1e,GAC1B7E,EAAQkB,OAAOszC,EAASnhC,YAAY,CAAC,iBACrCrT,EAAQ,KAAK,EAERA,EAAQ6E,GACb7E,CAAAA,EAAQ6E,CAAM,EAGb0vC,GAAYhxB,EAAS3e,KACtB5E,EAAQkB,OAAOqzC,EAASlhC,YAAY,CAAC,iBACrCrT,EAAQ,KAAK,EAERA,EAAQ4E,GACb5E,CAAAA,EAAQ4E,CAAM,GAID,KAAA,IAAV5E,GACPu4C,EAAU3nB,WAAW,CAACynB,EAAQr4C,EAAQu4C,EAAUh8C,GAAG,CAAE87C,EAAQE,EAAUtzC,GAAG,CAAGjF,EAAO,KAAK,EAAG,KAAK,EAAG,CAAEkI,QAAS,oBAAqB,GAGhJ,CAEA,IAAMrE,EAAOzB,CAAI,CAACi2C,EAAQ,oBAAsB,kBAAkB,EAAI,GAChE3rC,EAAQ5I,EACT4I,KAAK,CAAC7I,EAAM,GACZ1J,QAAQ,CAAC,0BACTkW,IAAI,CAAC,CACNu8B,QAAS/oC,EAAO,EAAI,EACpB3F,OAAQ2F,EAAO1B,EAAQytC,cAAc,CAAG,CAC5C,GACKr1C,GAAG,CAACg9C,GAGHT,EAAUhzC,EACX4I,KAAK,CAAC,GAAI,GACVvS,QAAQ,CAAC,0BACTkW,IAAI,CAAC,CACNu8B,QAAS,EACT3uC,MAAOkE,EAAQ0tC,aAAa,CAC5B3xC,OAAQiE,EAAQytC,cAAc,CAC9B,aAAc,QAClB,GACK4I,EAAE,CAAC,QAAS,WAGb9vB,EAAc4uB,SAAS,CAAC9wC,GACxBkiB,CAAa,CAACliB,EAAO,QAAQ,CAAC4G,KAAK,EACvC,EACKlO,CAAAA,EAAMyR,UAAU,EACjBmmC,EAAQzmC,IAAI,CAAC,CACTtC,OAAQ5L,EAAQwtC,mBAAmB,CACnC,eAAgB,CACpB,GAEJmH,EAAQv8C,GAAG,CAACg9C,GAGZ,IAAMb,EAAQpuC,EAAc,QAAS,CACjC9B,KAAMA,EACNnM,UAAW,2BACf,EAAG,KAAK,EAAGoY,GAGXikC,EAAM/vC,YAAY,CAAC,OAAQ8xC,AArmBnC,SAA4B95C,CAAM,EAC9B,IAAM+5C,EAAK/5C,AAAyB,KAAzBA,EAAOnE,OAAO,CAAC,MAC1B,GAAIk+C,EACA,MAAO,OAEX,IAAM1H,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CAC/DhtB,IAAI,CAAC,AAAC20B,GAASh6C,AAA+B,KAA/BA,EAAOnE,OAAO,CAAC,IAAMm+C,IACnC3yC,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CACtCge,IAAI,CAAC,AAAC20B,GAASh6C,AAA+B,KAA/BA,EAAOnE,OAAO,CAAC,IAAMm+C,WACzC,AAAI3H,GAAQhrC,EACD,iBAEPgrC,EACO,OAEPhrC,EACO,OAEJ,MACX,EAklBsD7D,EAAQ2tC,eAAe,EAAI,aACpE5wC,EAAMyR,UAAU,GAEjBjE,EAAMrU,GAAG,CAAC80B,EAAMirB,EAAYj2C,EAAQouC,UAAU,GAC9CuG,EAAQz+C,GAAG,CAAC80B,EAAM,CACdlf,MAAO,SACX,EAAGmqC,EAAYj2C,EAAQmuC,UAAU,GACjCj4C,EAAIq+C,EAAO1tC,EAAO,CACdnP,SAAU,WACV49C,OAAQ,EACRmB,UAAW,2BACX36C,MAAO,MACPC,OAAQ,MACR0uC,QAAS,EACTiM,UAAW,SACX7sB,SAAUosB,EAAWpsB,QAAQ,CAC7B8sB,WAAYV,EAAWU,UAAU,CACjCjrB,IAAK,SACT,EAAG1rB,EAAQmuC,UAAU,IAGzBoG,EAAMqC,OAAO,CAAG,KACZrwB,EAAc4uB,SAAS,CAAC9wC,EAC5B,EAEAkwC,EAAMsC,MAAM,CAAG,KAEPtC,IAAUz+C,EAAEE,GAAG,CAACguB,aAAa,EAG7BmyB,IAGJ5vB,EAAckvB,SAAS,CAACpxC,GACxBkiB,EAAckuB,aAAa,CAACpwC,GAC5BkwC,EAAMjC,IAAI,EACd,EACA,IAAIwE,EAAU,CAAA,EA0Bd,OAxBAvC,EAAMwC,QAAQ,CAAG,KAERD,IACDX,IACA5vB,EAAckvB,SAAS,CAACpxC,GACxBkwC,EAAMjC,IAAI,GAElB,EACAiC,EAAMyC,UAAU,CAAG,AAAC92B,IAEM,KAAlBA,EAAMjX,OAAO,EACbktC,GAER,EACA5B,EAAM0C,SAAS,CAAG,AAAC/2B,IACf42B,EAAU,CAAA,EAEN52B,CAAAA,AAAkB,KAAlBA,EAAMjX,OAAO,EAAWiX,AAAkB,KAAlBA,EAAMjX,OAAO,AAAM,GAC3CktC,GAER,EACA5B,EAAM2C,OAAO,CAAG,KACZJ,EAAU,CAAA,CACd,EACO,CAAEnC,QAAAA,EAASJ,MAAAA,EAAOhqC,MAAAA,CAAM,CACnC,CAQA4sC,aAAc,CACV,IAAMp6C,EAAQ,IAAI,CAACA,KAAK,CAAEiD,EAAUjD,EAAMiD,OAAO,CAACumB,aAAa,CAAEmF,EAAM1rB,AAA0B,QAA1BA,EAAQisB,aAAa,CACxFlvB,EAAM4uB,OAAO,CAAG5uB,EAAMgxB,UAAU,CAAC,EAAE,CACnC,EACJ,MAAO,CACHqpB,UAAW1rB,EAAM1rB,EAAQkuC,cAAc,CAACr2C,CAAC,CACzCw/C,SAAU3rB,EAAM1rB,EAAQ+tC,aAAa,CAACl2C,CAAC,CAAG,EAC9C,CACJ,CAWAg6C,eAAepvC,CAAO,CAAEC,CAAO,CAAEovC,CAAM,CAAE,CACrC,IAAMjuC,EAAO,IAAI,CAAC9G,KAAK,CAAC8G,IAAI,CAAEgkC,EAAM,IAAIhkC,EAAKikC,IAAI,CAACrlC,GAAUixC,EAAO7vC,EAAKykB,GAAG,CAAC,WAAYuf,GAAMyP,EAAcxF,EACxGjuC,EAAKikC,IAAI,CAACiO,GAAG,CAACrC,EAAM,EAAG,GACvB,CAAC,IAAI7vC,EAAKikC,IAAI,CAAC4L,EAAM,EAAG,GAA0C6D,EAAK1P,EAAImH,OAAO,GACtF,MAAO,CACHlsC,IAAK3I,KAAKC,GAAG,CAACqI,GAAW80C,EAAIA,GAC7Bn9C,IAHkCD,KAAK2I,GAAG,CAACJ,EAAS40C,EAIxD,CACJ,CAaAvqB,OAAO3yB,CAAG,CAAE0I,CAAG,CAAE,CACb,IAAM/F,EAAQ,IAAI,CAACA,KAAK,CAAE4E,EAAW5E,EAAM4E,QAAQ,CAAE6I,EAAYzN,EAAMyN,SAAS,CAAEgK,EAAezX,EAAMiD,OAAO,CAAEA,EAAUwU,EAAa+R,aAAa,CAEpJixB,EAAe96C,EAAK8X,EAAazX,KAAK,CAAC8O,KAAK,EACxC2I,EAAazX,KAAK,CAAC8O,KAAK,CAAC0C,MAAM,CAAE,GAAK,EAAGu/B,EAAe9tC,EAAQ8tC,YAAY,CAAEza,EAAW,IAAI,CAACA,QAAQ,CAC1G,GAAIrzB,AAAoB,CAAA,IAApBA,EAAQyL,OAAO,EAInB,GAAI,CAAC4nB,IACD,IAAI,CAACjyB,KAAK,CAAGO,EAAS4wB,CAAC,CAAC,wBACnBrkB,IAAI,CAAC,CACNK,OAAQ,CACZ,GACKnW,GAAG,GACR,IAAI,CAACkY,GAAG,CAAGnK,EAAc,MAAO,KAAK,EAAG,CACpCzO,SAAU,WACVqE,OAAQ,EACRwS,OAAQipC,CACZ,GACI,IAAI,CAAC1G,aAAa,CAACn4C,MAAM,EACzB,IAAI,CAAC8+C,aAAa,GAIlBjtC,EAAUlP,UAAU,EACpBkP,EAAUlP,UAAU,CAAC6O,YAAY,CAAC,IAAI,CAACmG,GAAG,CAAE9F,GAE5CsjC,GAAc,CAEd,IAAI,CAACsH,UAAU,CAAGzzC,EAAS4wB,CAAC,CAAC,eAAen6B,GAAG,CAAC,IAAI,CAACgJ,KAAK,EAC1D,IAAMs2C,EAAW,IAAI,CAAC1B,SAAS,CAAC,MAChC,CAAA,IAAI,CAACpB,UAAU,CAAG8C,EAAS/C,OAAO,CAClC,IAAI,CAACgD,QAAQ,CAAGD,EAASntC,KAAK,CAC9B,IAAI,CAAC6nC,QAAQ,CAAGsF,EAASnD,KAAK,CAC9B,IAAMqD,EAAW,IAAI,CAAC5B,SAAS,CAAC,MAChC,CAAA,IAAI,CAACnB,UAAU,CAAG+C,EAASjD,OAAO,CAClC,IAAI,CAACkD,QAAQ,CAAGD,EAASrtC,KAAK,CAC9B,IAAI,CAAC8nC,QAAQ,CAAGuF,EAASrD,KAAK,AAClC,CAEJ,GAAIzG,EAAc,CAEd,IAAI,CAAC2G,aAAa,CAAC,MAAOr6C,GAC1B,IAAI,CAACq6C,aAAa,CAAC,MAAO3xC,GAC1B,IAAM21B,EAAgB,AAAC17B,EAAMyvB,QAAQ,EAAIzvB,EAAMyvB,QAAQ,CAAC0L,gBAAgB,IAAOn7B,EAAMmI,KAAK,CAAC,EAAE,EAAI,CAAC,EAClG,GAAI1E,EAAQi4B,EAAc/1B,OAAO,GAC7BlC,EAAQi4B,EAAch2B,OAAO,EAAG,CAChC,IAAMm0B,EAAW75B,EAAMmI,KAAK,CAAC,EAAE,CAAC0xB,QAAQ,EAAI,EAC5C,IAAI,CAACse,gBAAgB,CAAC,MAAOzc,EAAc/1B,OAAO,CAAEvI,KAAKC,GAAG,CAACq+B,EAAch2B,OAAO,CAAE,IAAI,CAAC6xC,aAAa,CAAC,QAAU1d,GACjH,IAAI,CAACse,gBAAgB,CAAC,MAAO/6C,KAAK2I,GAAG,CAAC21B,EAAc/1B,OAAO,CAAE,IAAI,CAAC4xC,aAAa,CAAC,QAAU1d,EAAU6B,EAAch2B,OAAO,CAC7H,CAEA,GAAI,IAAI,CAAC2yC,UAAU,CAAE,CACjB,IAAIx9C,EAAI,EACR,CACI,IAAI,CAAC+/C,QAAQ,CACb,IAAI,CAAC/C,UAAU,CACf,IAAI,CAACiD,QAAQ,CACb,IAAI,CAAChD,UAAU,CAClB,CAAC/2C,OAAO,CAAC,AAACyM,IACP,GAAIA,EAAO,CACP,GAAM,CAAEzO,MAAAA,CAAK,CAAE,CAAGyO,EAAMsC,OAAO,GAC3B/Q,IACAyO,EAAM2D,IAAI,CAAC,CAAEtW,EAAAA,CAAE,GACfA,GAAKkE,EAAQkE,EAAQguC,YAAY,CAEzC,CACJ,EACJ,CACJ,CACA,IAAI,CAAC8J,aAAa,GAClB,IAAI,CAACzkB,QAAQ,CAAG,CAAA,EACpB,CAQAokB,eAAgB,CACZ,GAAM,CAAE1/C,QAAAA,CAAO,CAAEgF,MAAAA,CAAK,CAAEiD,QAAAA,CAAO,CAAE,CAAG,IAAI,CAClCC,EAAO4qB,EAAe5qB,IAAI,CAC1B0B,EAAW5E,EAAM4E,QAAQ,CACzB4rC,EAAcviB,EAAMhrB,EAAQutC,WAAW,EACvCvS,EAASuS,GAAeA,EAAYvS,MAAM,CAI1Cl/B,EAAQyxC,EAAYzxC,KAAK,EAAI,EACnC,QAAOyxC,EAAYzxC,KAAK,CACxB,OAAOyxC,EAAYvS,MAAM,CACzB,IAAI,CAAC+c,WAAW,CAAGp2C,EAAS4wB,CAAC,CAAC,0BAA0Bn6B,GAAG,CAAC,IAAI,CAACgJ,KAAK,EACtE,IAAMksC,EAAW,IAAI,CAACA,QAAQ,CAAGnnC,EAAc,SAAU,KAAK,EAAG,CAC7DzO,SAAU,WACVoE,MAAO,MACPC,OAAQ,MACR0uC,QAAS,EACT6K,OAAQ,EACR5pB,IAAK,UACL9tB,OAAQ,UACRvB,QAAS,IACb,EAAG,IAAI,CAACiU,GAAG,EAEXhK,EAASgnC,EAAU,aAAc,KAC7BA,EAASzhC,KAAK,CAACge,QAAQ,CAAG,MAC9B,GAEA,CACI,CAAC/zB,EAAEkiD,IAAI,CAAG,YAAc,aAAa,CACrC,CAACliD,EAAEkiD,IAAI,CAAG,WAAa,aAAa,CACpC,CAAC,SAAU,QAAQ,CACtB,CAACl6C,OAAO,CAAC,CAAC,CAACwH,EAAMD,EAAG,IACjBiB,EAASgnC,EAAUhoC,EAAM,KACrB,IAAM/N,EAASQ,CAAO,CAAC,IAAI,CAACkgD,kBAAkB,GAAG,CAC7C1gD,GACAmJ,EAAUnJ,EAAOsC,OAAO,CAAEwL,GAAMC,EAExC,EACJ,GACA,IAAI,CAAC4yC,QAAQ,CAAGv2C,EACX4I,KAAK,CAAC,AAACtK,GAAQA,EAAKgtC,iBAAiB,EAAK,GAAI,GAC9C/+B,IAAI,CAAC,CACNu8B,QAASzqC,EAAQutC,WAAW,CAAC9C,OAAO,CACpC1uC,OAAQiE,EAAQutC,WAAW,CAACxxC,MAAM,CAClCo8C,YAAa,EACbC,aAAc,CAClB,GACKhgD,GAAG,CAAC,IAAI,CAAC2/C,WAAW,EACpB,IAAI,CAACh7C,KAAK,CAACyR,UAAU,GACtB,IAAI,CAAC0pC,QAAQ,CAAChiD,GAAG,CAAC8J,EAAQouC,UAAU,EACpCb,CAAW,CAAC,eAAe,CAAG7wC,EAAK6wC,CAAW,CAAC,eAAe,CAAE,IAEpEpnC,EAAc,SAAU,CACpB+D,YAAa,IAAI,CAACguC,QAAQ,CAACh2C,OAAO,CAClC2xC,SAAU,CAAA,CACd,EAAG,KAAK,EAAGvG,GACX,IAAI,CAACwD,aAAa,CAAChzC,OAAO,CAAC,CAAC2wC,EAAc/1C,KACtCyN,EAAc,SAAU,CACpB+D,YAAaukC,EAAahtC,KAAK,EAAIgtC,EAAa/sC,IAAI,AACxD,EAAG,KAAK,EAAG4rC,GACXv1C,CAAO,CAACW,EAAE,CAAGiJ,EACRpK,MAAM,CAACk3C,EAAa/sC,IAAI,CAAE,EAAG,EAAG,AAACpL,QAG9B+hD,EADJ,IAAMC,EAAgB7J,EAAa9W,MAAM,EAAI8W,EAAa9W,MAAM,CAAC/b,KAAK,CAElE08B,GACAD,CAAAA,EACIC,EAAa1zC,IAAI,CAAC6pC,EAAcn4C,EAAC,EAEhB,CAAA,IAArB+hD,GACA,IAAI,CAAChJ,WAAW,CAAC32C,GAErB,IAAI,CAAC6/C,QAAQ,CAAG,CAAA,CACpB,EAAGhL,EAAavS,GAAUA,EAAOwd,KAAK,CAAExd,GAAUA,EAAO4Y,MAAM,CAAE5Y,GAAUA,EAAO6Y,QAAQ,EACrF3lC,IAAI,CAAC,CACN,aAAc,SACdpS,MAAAA,CACJ,GACK1D,GAAG,CAAC,IAAI,CAAC2/C,WAAW,EACrBtJ,EAAahtC,KAAK,EAClB1J,CAAO,CAACW,EAAE,CAACwV,IAAI,CAAC,QAASugC,EAAahtC,KAAK,CAEnD,EACJ,CAOAq2C,eAAgB,CACZ,GAAM,CAAEC,YAAAA,CAAW,CAAEhgD,QAAAA,CAAO,CAAEgF,MAAAA,CAAK,CAAEqE,MAAAA,CAAK,CAAEg0C,WAAAA,CAAU,CAAEp1C,QAAAA,CAAO,CAAEk4C,SAAAA,CAAQ,CAAE,CAAG,IAAI,CAC5E1jC,EAAezX,EAAMiD,OAAO,CAC5By4C,EAAoBjkC,EAAaiH,SAAS,EAC5CjH,AAAmC,CAAA,IAAnCA,EAAaiH,SAAS,CAAChQ,OAAO,EAC9B+I,EAAakkC,UAAU,EACvBlkC,EAAakkC,UAAU,CAAC5H,aAAa,CACnC,CAAE5C,eAAAA,CAAc,CAAEH,cAAAA,CAAa,CAAE9hB,cAAAA,CAAa,CAAE,CAAGjsB,EAGnD24C,EAA4B,CAACv3C,EAAO1J,IACtC,AAAI+gD,GACA,IAAI,CAACG,cAAc,CAAC77C,IACpBkvB,AAAkB,QAAlBA,GACAv0B,AAAmB,UAAnBA,EAASkyB,KAAK,EAAiB,AAAClyB,EAASG,CAAC,CAC1CuJ,EAAMyL,OAAO,GAAG9Q,MAAM,CAAG,GACxB,AAAC08C,CAAAA,EAAiB5gD,CAAC,EAAI,CAAA,EACnB4gD,CAAAA,EAAiB18C,MAAM,EAAI,CAAA,EAC5BgB,EAAM0uB,OAAO,CAAC,EAAE,CACb,IAEJ,EAEPG,EAAW7uB,EAAM6uB,QAAQ,CAC7B,GAAIxqB,GAAS8sC,GAAkBH,EAAe,CAC1C,IAAI1gC,EAAa6gC,EAAet2C,CAAC,CAAGmF,EAAM0uB,OAAO,CAAC,EAAE,CACpD,GAAIssB,EAAa,CAEb,GADA,IAAI,CAACc,eAAe,GAChB,CAAC,IAAI,CAAC7H,uBAAuB,CAAE,CAC/B,IAAIl1C,EAAQ,EACRo8C,GACAp8C,CAAAA,GAASo8C,EAASrrC,OAAO,GAAG/Q,KAAK,CAAG,CAAA,EAExC/D,EAAQ+F,OAAO,CAAC,CAACvG,EAAQmB,KACrBoD,GAASvE,EAAOuE,KAAK,EAAI,EACrBpD,IAAMX,EAAQY,MAAM,CAAG,GACvBmD,CAAAA,GAASkE,EAAQqtC,aAAa,AAAD,CAErC,GACA,IAAI,CAAC2D,uBAAuB,CAAGl1C,CACnC,CACA8vB,GAAY7uB,EAAM0uB,OAAO,CAAC,EAAE,CAC5B,IAAI,CAAC+mB,kBAAkB,GAEvB,IAAMsG,EAAyBH,EAA0BZ,EAAa7J,GACtE,IAAI,CAAC6K,gBAAgB,CAACD,GAEtB13C,EAAMwuC,MAAM,CAAGmI,EAAYnI,MAAM,CAAG7yC,EAAMi8C,SAAS,AACvD,CACA,IAAIF,EAAyB,EACzB1D,IAEA0D,EAAyBH,EAA0BvD,EAAYrH,GAC3DA,AAAwB,SAAxBA,EAAcnkB,KAAK,CACnBvc,EAAaue,EAEgB,UAAxBmiB,EAAcnkB,KAAK,EACxBvc,CAAAA,EAAa,CAAClT,KAAK2I,GAAG,CAAC/F,EAAMgxB,UAAU,CAAC,EAAE,CAAE,CAAC+qB,EAAsB,EAGvE1D,EAAWxrB,KAAK,CAAC,CACb/xB,EAAGk2C,EAAcl2C,CAAC,CAClBiE,MAAOs5C,EAAWvoC,OAAO,GAAG/Q,KAAK,CACjC8tB,MAAOmkB,EAAcnkB,KAAK,CAE1BhyB,EAAGm2C,EAAcn2C,CAAC,CAAGyV,EAAa,CACtC,EAAG,CAAA,EAAMtQ,EAAM4yC,UAAU,EAEzByF,EAAWxF,MAAM,CAAG7yC,EAAMi8C,SAAS,EAEvC,IAAI,CAACC,eAAe,CAACH,GAErB13C,EAAMwoB,KAAK,CAAC,CACRqC,cAAAA,CACJ,EAAG,CAAA,EAAMlvB,EAAM4yC,UAAU,EACzB,IAAMuJ,EAAkB93C,EAAM+3C,SAAS,CAAC7rC,UAAU,CAE9C8rC,EAAch4C,EAAMyL,OAAO,GAAG9Q,MAAM,CAAG,GACvCuR,EAAa,EAEjB,GAAI2e,AAAkB,WAAlBA,EAA4B,CAC5B,IAAM/G,EAAgBnoB,EAAMykB,MAAM,EAAIzkB,EAAMykB,MAAM,CAACxhB,OAAO,CACpDosB,EAAgBlH,GAClBA,AAAgC,WAAhCA,EAAc+G,aAAa,EAC3B/G,EAAczZ,OAAO,EACrB,CAACyZ,EAAciH,QAAQ,CACtBpvB,EAAMykB,MAAM,CAAC4K,YAAY,CACtB1vB,EAAKwoB,EAAcvZ,MAAM,CAAE,IAC/B,EAEJ2B,EAAc4rC,EADdE,CAAAA,EAAcA,EAAchtB,EAAe,EAAC,EAGvCpsB,CAAAA,EAAQmsB,QAAQ,CAAG,EAAInsB,EAAQnI,CAAC,AAADA,EAC/BkF,CAAAA,EAAMsvB,WAAW,CAAGtvB,EAAMsvB,WAAW,CAAC,EAAE,CAAG,CAAA,EAC5C,EAER,CACIJ,AAAkB,QAAlBA,GACIjsB,EAAQmsB,QAAQ,EAChB7e,CAAAA,EAAa,CAAA,EAEbvQ,EAAMsvB,WAAW,EAAItvB,EAAMsvB,WAAW,CAAC,EAAE,EACzC/e,CAAAA,EAAavQ,EAAMsvB,WAAW,CAAC,EAAE,AAAD,EAEpC/e,GAAe,AAACvQ,EAAM4O,MAAM,CAAC,EAAE,CAAG5O,EAAM0uB,OAAO,CAAC,EAAE,EAAK,GAEhC,WAAlBQ,IACD8hB,EAAcl2C,CAAC,GAAKq2C,EAAer2C,CAAC,CACpCyV,EAAa4rC,EAERnL,CAAAA,EAAcl2C,CAAC,EAAIq2C,EAAer2C,CAAC,AAADA,IACnCk2C,EAAcl2C,CAAC,CAAG,GAClBq2C,EAAer2C,CAAC,CAAG,EACnByV,GAAcnT,KAAKC,GAAG,CAAC2zC,EAAcl2C,CAAC,CAAEq2C,EAAer2C,CAAC,EAGxDyV,EAAa4rC,EAAkBE,IAI3Ch4C,EAAMimB,SAAS,CAACrnB,EAAQpI,CAAC,CAAEoI,EAAQnI,CAAC,CAAGsC,KAAK25B,KAAK,CAACxmB,IAElD,GAAM,CAAE8kC,SAAAA,CAAQ,CAAEC,SAAAA,CAAQ,CAAE/E,SAAAA,CAAQ,CAAE,CAAG,IAAI,AACzCttC,CAAAA,EAAQ8tC,YAAY,EAAIsE,GAAYC,IACpCD,EAASvmC,KAAK,CAAC1P,SAAS,CAAGiF,EAAMkM,UAAU,CAAG,KAC9C+kC,EAASxmC,KAAK,CAAC1P,SAAS,CAAGiF,EAAMkM,UAAU,CAAG,MAE9CggC,GACAA,CAAAA,EAASzhC,KAAK,CAAC1P,SAAS,CAAGiF,EAAMkM,UAAU,CAAG,IAAG,CAEzD,CACJ,CASAyrC,iBAAiBD,CAAsB,CAAEh9C,CAAK,CAAE,CAC5C,GAAM,CAAEiB,MAAAA,CAAK,CAAEiD,QAAAA,CAAO,CAAE+3C,YAAAA,CAAW,CAAEhgD,QAAAA,CAAO,CAAE,CAAG,IAAI,CAC/C,CAAEm2C,eAAAA,CAAc,CAAE,CAAGluC,EACrB4rB,EAAW7uB,EAAM6uB,QAAQ,CAAG7uB,EAAM0uB,OAAO,CAAC,EAAE,CAC9Cpe,EAAa6gC,EAAet2C,CAAC,CAAGmF,EAAM0uB,OAAO,CAAC,EAAE,AAChDyiB,AAAyB,CAAA,UAAzBA,EAAetkB,KAAK,CACpBvc,GAAcyrC,EAAyBltB,EAET,WAAzBsiB,EAAetkB,KAAK,EACzBvc,CAAAA,GAAcue,EAAW,CAAA,EAEzBmsB,GAEAA,EAAYnuB,KAAK,CAAC,CACd/xB,EAAGq2C,EAAer2C,CAAC,CACnBiE,MAAOY,EAAKZ,EAAO,IAAI,CAACk1C,uBAAuB,EAC/CpnB,MAAOskB,EAAetkB,KAAK,CAC3BhyB,EAAGyV,CACP,EAAG,CAAA,EAAMtQ,EAAM4yC,UAAU,CAEjC,CAKAkJ,iBAAkB,CACd,GAAM,CAAE9gD,QAAAA,CAAO,CAAEgF,MAAAA,CAAK,CAAEiD,QAAAA,CAAO,CAAEk4C,SAAAA,CAAQ,CAAE,CAAG,IAAI,CAC5CnjB,EAAOh4B,EAAMi8C,SAAS,CAAG,UAAY,OACrC,CAAE9K,eAAAA,CAAc,CAAE,CAAGluC,EACrB4rB,EAAW7uB,EAAM6uB,QAAQ,CAC3BytB,EAAaztB,EACbssB,GAAYA,AAAwB,WAAxBA,EAASz0B,UAAU,GAE/By0B,CAAQ,CAACnjB,EAAK,CAAC,CACXn9B,EAAG8E,EAAKkvB,EAAWsiB,EAAet2C,CAAC,CAAEg0B,EACzC,GAEAytB,GAAcnL,EAAet2C,CAAC,CAC1BsgD,EAASrrC,OAAO,GAAG/Q,KAAK,CAAG,GAEnC,IAAK,IAAIpD,EAAI,EAAGo3C,EAAO,IAAI,CAACgB,aAAa,CAACn4C,MAAM,CAAED,EAAIo3C,EAAM,EAAEp3C,EACtDX,AAA0B,WAA1BA,CAAO,CAACW,EAAE,CAAC+qB,UAAU,EACrB1rB,CAAO,CAACW,EAAE,CAACq8B,EAAK,CAAC,CAAEn9B,EAAGyhD,CAAW,GAEjCA,GAAc,AAACthD,CAAAA,CAAO,CAACW,EAAE,CAACoD,KAAK,EAAI,CAAA,EAAKkE,EAAQqtC,aAAa,EAG7Dt1C,CAAO,CAACW,EAAE,CAACq8B,EAAK,CAAC,CAAEn9B,EAAGg0B,CAAS,EAG3C,CAWAqtB,gBAAgBH,CAAsB,CAAE,CACpC,GAAM,CAAE/7C,MAAAA,CAAK,CAAEg7C,YAAAA,CAAW,CAAE3C,WAAAA,CAAU,CAAE,CAAG,IAAI,CACzC,CAAElH,eAAAA,CAAc,CAAEZ,SAAAA,CAAQ,CAAES,cAAAA,CAAa,CAAE,CAAG,IAAI,CAAC/tC,OAAO,CAC1Ds5C,EAAiB,KACnB,IAAIC,EAAc,EAOlB,OANA,IAAI,CAACxhD,OAAO,CAAC+F,OAAO,CAAC,AAACvG,IAClB,IAAMwyC,EAAOxyC,EAAOsV,OAAO,EACvBk9B,CAAAA,EAAKjuC,KAAK,CAAGy9C,GACbA,CAAAA,EAAcxP,EAAKjuC,KAAK,AAAD,CAE/B,GACOy9C,CACX,EACMC,EAAgB,AAACC,IACnB,GAAIrE,GAAc2C,EAAa,CAC3B,IAAM2B,EAAetE,EAAW+D,SAAS,CAAC9rC,UAAU,CAChD+nC,EAAWuE,YAAY,CAAC/hD,CAAC,CACzBkhD,EAEA1D,EAAWvoC,OAAO,GAAGjV,CAAC,CAEtB,EACEgiD,EAAkBxE,EAAWuE,YAAY,CAAC79C,KAAK,CAC/C+9C,EAAe9B,EAAYoB,SAAS,CAAC9rC,UAAU,CACjD0qC,EAAYlrC,OAAO,GAAGjV,CAAC,CAC3B,OAAO,AAACiiD,EAAeJ,EAAmBC,GACrCA,EAAcE,EAAkBC,GAChC3L,EAAer2C,CAAC,CACZk2C,EAAcl2C,CAAC,CACZu9C,EAAWvoC,OAAO,GAAG9Q,MAAM,AAC3C,CACA,MAAO,CAAA,CACX,EACM+9C,EAAiB,KACf1E,GAAc2C,GACd3C,EAAWlnC,IAAI,CAAC,CACZb,WAAY+nC,EAAW+D,SAAS,CAAC9rC,UAAU,CAAItQ,CAAAA,EAAMgxB,UAAU,CAAC,EAAE,EAAI,CAAC+qB,EACnE,EACA,CAACA,CAAqB,EAC1BxrC,WAAY8nC,EAAW+D,SAAS,CAAC7rC,UAAU,CACvCyqC,EAAYlrC,OAAO,GAAG9Q,MAAM,CAAG,EACvC,EAER,EACA,GAAIg8C,EAAa,CACb,GAAIzK,AAAa,WAAbA,EAAuB,CACvB,IAAI,CAACyM,eAAe,CAACjB,GACjBU,EAAcF,MAGdQ,IAEJ,MACJ,CACiB,UAAbxM,GACA,IAAI,CAAC0M,aAAa,EAE1B,CAEI5E,GAAc2C,EACV,AAAChK,EAAcnkB,KAAK,GAAKskB,EAAetkB,KAAK,EAE7C4vB,EAAc,IAAI,CAACxI,uBAAuB,CAAG,IACzC1D,AAAa,eAAbA,GACA,IAAI,CAACyM,eAAe,CAACjB,GACjBU,EAAcF,MACdQ,KAIJA,IAGc,eAAbxM,GACL,IAAI,CAAC0M,aAAa,GAGjBjC,GAAezK,AAAa,eAAbA,IAChB,IAAI,CAAC0D,uBAAuB,CAAGj0C,EAAMg6B,SAAS,CAC9C,IAAI,CAACgjB,eAAe,CAACjB,GAGrB,IAAI,CAACkB,aAAa,GAG9B,CAQAD,gBAAgBjB,CAAsB,CAAE,CACpC,GAAM,CAAE/gD,QAAAA,CAAO,CAAE+4C,cAAAA,CAAa,CAAE/zC,MAAAA,CAAK,CAAEuwC,SAAAA,CAAQ,CAAEttC,QAAAA,CAAO,CAAEk4C,SAAAA,CAAQ,CAAE,CAAG,IAAI,CAE3E,GAAI,AAAqB,CAAA,IAArB,IAAI,CAAC+B,WAAW,CAChB,MAEJ,CAAA,IAAI,CAACA,WAAW,CAAG,CAAA,EACnB,IAAMC,EAAkB,AAACn9C,EAAM41B,WAAW,CAACpM,aAAa,EACpDxpB,EAAM41B,WAAW,CAACpM,aAAa,CAACgnB,WAAW,EAAK,CAAC,EAC/C4M,EAAa,AAACz4C,GAAU,CAAA,CAC1BA,KAAMA,EAAO,CAAC,EAAEA,EAAK,EAAE,CAAC,CAAG,IAC3B5F,MAAO,OACPq8C,YAAaz7C,EAAKsD,EAAQutC,WAAW,CAAC4K,WAAW,CAAE+B,EAAgBzP,OAAO,CAAE,GAC5E2N,aAAc17C,EAAKsD,EAAQutC,WAAW,CAAC6K,YAAY,CAAE8B,EAAgBzP,OAAO,CAAE,EAClF,CAAA,EACIyN,GACAA,EAASt3B,IAAI,GAEjB,IAAIw5B,EAAkB,CAAA,EACtBtJ,EAAchzC,OAAO,CAAC,CAAC2wC,EAAc/1C,KACjC,IAAMnB,EAASQ,CAAO,CAACW,EAAE,AACrBnB,AAAiB,CAAA,IAAjBA,EAAO87C,KAAK,CACZ97C,EAAOqpB,IAAI,IAGXrpB,EAAO+7B,IAAI,GACX/7B,EAAO2W,IAAI,CAACisC,EAAW1L,EAAa/sC,IAAI,GACxC04C,EAAkB,CAAA,EAE1B,GACKA,IACG9M,GACAA,CAAAA,EAAS0E,aAAa,CAAG,CAAA,EAE7Bj6C,CAAO,CAAC,EAAE,CAACu7B,IAAI,GACfv7B,CAAO,CAAC,EAAE,CAACmW,IAAI,CAACisC,EAAW,IAAI,CAACjC,QAAQ,EAAI,IAAI,CAACA,QAAQ,CAACh2C,OAAO,IAErE,GAAM,CAAE0nB,MAAAA,CAAK,CAAE,CAAG5pB,EAAQkuC,cAAc,CACxC,IAAI,CAAC2K,eAAe,GAChBjvB,CAAAA,AAAU,UAAVA,GAAqBA,AAAU,WAAVA,CAAiB,GACtC,IAAI,CAACmvB,gBAAgB,CAACD,EAAwB/gD,CAAO,CAAC,IAAI,CAACkgD,kBAAkB,GAAG,CAACprC,OAAO,GAAG/Q,KAAK,EAEpG,IAAI,CAACu+C,YAAY,EACrB,CAOAL,eAAgB,CACZ,GAAM,CAAEjiD,QAAAA,CAAO,CAAE+4C,cAAAA,CAAa,CAAE9wC,QAAAA,CAAO,CAAEk4C,SAAAA,CAAQ,CAAE,CAAG,IAAI,CAC1D,IAAI,CAACoC,YAAY,GAEQ,CAAA,IAArB,IAAI,CAACL,WAAW,GAGpB,IAAI,CAACA,WAAW,CAAG,CAAA,EACf/B,GACAA,EAAS5kB,IAAI,GAEjBwd,EAAchzC,OAAO,CAAC,CAAC2wC,EAAc/1C,KACjC,IAAMnB,EAASQ,CAAO,CAACW,EAAE,CACzBnB,EAAO+7B,IAAI,GACX/7B,EAAO2W,IAAI,CAAC,CACRxM,KAAM+sC,EAAa/sC,IAAI,CACvB5F,MAAOkE,EAAQutC,WAAW,CAACzxC,KAAK,EAAI,GACpCq8C,YAAaz7C,EAAKsD,EAAQutC,WAAW,CAAC4K,WAAW,CAAE,SACnDC,aAAc17C,EAAKsD,EAAQutC,WAAW,CAAC6K,YAAY,CAAE,QACzD,GACI7gD,EAAO87C,KAAK,CAAG,GACf97C,EAAO4qB,QAAQ,CAAC,EAExB,GACA,IAAI,CAAC02B,eAAe,GACxB,CAOAZ,oBAAqB,CACjB,GAAM,CAAE3K,SAAAA,CAAQ,CAAE,CAAG,IAAI,QACzB,AAAIA,GAAYA,EAAS0E,aAAa,CAAG,EAC9B1E,EAAS0E,aAAa,CAAG,EAE7B,CACX,CAOAqI,cAAe,CACX,GAAM,CAAEtC,YAAAA,CAAW,CAAEhgD,QAAAA,CAAO,CAAEgF,MAAAA,CAAK,CAAEuwC,SAAAA,CAAQ,CAAE,CAAG,IAAI,CACtD,GAAIyK,GAAezK,EAAU,CACzB,GAAM,CAAEjgC,WAAAA,EAAa,CAAC,CAAEC,WAAAA,EAAa,CAAC,CAAE,CAAGyqC,EAAahO,EAAOhyC,CAAO,CAAC,IAAI,CAACkgD,kBAAkB,GAAG,CAACprC,OAAO,GACzG3W,EAAIo3C,EAAU,CACVlmC,KAAM,AAACrK,EAAM6uB,QAAQ,CAAGve,EAAc,KACtCqe,IAAK,AAACpe,EAAa,GAAO,KAC1BxR,MAAOiuC,EAAKjuC,KAAK,CAAG,KACpBC,OAAQguC,EAAKhuC,MAAM,CAAG,IAC1B,GACA,IAAI,CAACw+C,kBAAkB,CAAG,CAAA,CAC9B,CACJ,CAKAD,cAAe,CACX,GAAM,CAAEhN,SAAAA,CAAQ,CAAE,CAAG,IAAI,CACrBA,IACAp3C,EAAIo3C,EAAU,CACV5hB,IAAK,UACL5vB,MAAO,MACPC,OAAQ,KACZ,GACA,IAAI,CAACw+C,kBAAkB,CAAG,CAAA,EAElC,CASAvuB,WAAY,CACR,IAA4BhsB,EAAUumB,AAAhB,IAAI,CAA0BvmB,OAAO,CAAEw6C,EAAqBj0B,AAA5D,IAAI,CAAsEnlB,KAAK,CAAE2sC,EAAgB/tC,EAAQ+tC,aAAa,CAAEG,EAAiBluC,EAAQkuC,cAAc,CAAEuM,EAAYz6C,EAAQnI,CAAC,CAAE6iD,EAAkBxM,EAAer2C,CAAC,CAAE8iD,EAAiB5M,EAAcl2C,CAAC,CAC9Qo4C,EAAsB,SAC1B,AAAIjwC,EAAQjE,MAAM,CACPiE,EAAQjE,MAAM,EAIzB,IAAI,CAAC+7C,aAAa,GAClB7H,EAAsBuK,EAElB,AAACA,EAAmB3tC,OAAO,CAAC,CAAA,GAAM9Q,MAAM,CAAI,GACxC0+C,EACJ,EAEA,CAAA,AAACE,EAAiB,GAAKD,EAAkB,GACxCC,EAAiB,GAAKD,EAAkB,CAAC,GAC1CzK,CAAAA,GAAuB91C,KAAKiT,GAAG,CAHfjT,KAAKC,GAAG,CAACugD,EAAgBD,GAGE,EAExCzK,EACX,CASA2I,eAAe77C,CAAK,CAAE,CAClB,MAAO,CAAEA,CAAAA,EAAMiD,OAAO,CAACyB,KAAK,CAACC,IAAI,EAC7B3E,EAAMiD,OAAO,CAACiY,QAAQ,CAACvW,IAAI,AAAD,CAClC,CAQA0c,OAAOpe,CAAO,CAAE,CACZ,IAAMjD,EAAQ,IAAI,CAACA,KAAK,CACxBiuB,EAAM,CAAA,EAAMjuB,EAAMiD,OAAO,CAACumB,aAAa,CAAEvmB,GACzC,IAAI,CAACsI,OAAO,GACZ,IAAI,CAACJ,IAAI,CAACnL,GACV,IAAI,CAACgwB,MAAM,EACf,CAOAzkB,SAAU,CACN,IAAMsyC,EAAY,IAAI,CAAExI,EAAWwI,EAAUxI,QAAQ,CAAEC,EAAWuI,EAAUvI,QAAQ,AAChFuI,CAAAA,EAAUrjB,cAAc,GACxBqjB,EAAUrjB,cAAc,CAACz5B,OAAO,CAAC,AAAC66B,GAAWA,KAC7CiiB,EAAUrjB,cAAc,CAAG,KAAK,GAGpCnH,EAAwBwqB,EAAU7iD,OAAO,EAErCq6C,GACAA,CAAAA,EAASwE,OAAO,CAAGxE,EAASyE,MAAM,CAAGzE,EAAS2E,QAAQ,CAAG,IAAG,EAE5D1E,GACAA,CAAAA,EAASuE,OAAO,CAAGvE,EAASwE,MAAM,CAAGxE,EAAS0E,QAAQ,CAAG,IAAG,EAGhEpG,EAAWiK,EAAW,SAAUr7C,CAAG,CAAEqE,CAAG,EAChCrE,GAAOqE,AAAQ,UAARA,IACHrE,aAAekxC,EAEflxC,EAAI+I,OAAO,GAEN/I,aAAe5J,OAAOklD,WAAW,EAEtCnK,EAAenxC,IAGnBA,IAAQsxC,EAAcxwC,SAAS,CAACuD,EAAI,EACpCg3C,CAAAA,CAAS,CAACh3C,EAAI,CAAG,IAAG,CAE5B,EAAG,IAAI,CACX,CACJ,CAqFA,OApFAiD,EAAOgqC,EAAcxwC,SAAS,CAAE,CAK5B0wC,eAAgB,CAAC,CACTv6C,KAAM,QACNm4C,MAAO,EACPjtC,KAAM,KACND,MAAO,cACX,EAAG,CACCjL,KAAM,QACNm4C,MAAO,EACPjtC,KAAM,KACND,MAAO,eACX,EAAG,CACCjL,KAAM,QACNm4C,MAAO,EACPjtC,KAAM,KACND,MAAO,eACX,EAAG,CACCjL,KAAM,MACNkL,KAAM,MACND,MAAO,mBACX,EAAG,CACCjL,KAAM,OACNm4C,MAAO,EACPjtC,KAAM,KACND,MAAO,aACX,EAAG,CACCjL,KAAM,MACNkL,KAAM,MACND,MAAO,UACX,EAAE,CAKNwzC,iBAAkB,CACd,iBAAkB,oBAClB,KAAQ,WACR,KAAQ,UACZ,CACJ,GAyCOpE,CACX,GACA17C,EAAgBD,EAAU,qDAAsD,CAACA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,mCAAmC,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,6CAA6C,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAU4R,CAAsB,CAAEwL,CAAS,CAAE8H,CAAc,CAAEtkB,CAAC,CAAEuT,CAAyB,CAAEwnC,CAAa,CAAE96C,CAAC,EAYrf,GAAM,CAAEwO,yBAAAA,CAAwB,CAAElC,wBAAAA,CAAuB,CAAE,CAAG+X,EACxD,CAAEtiB,SAAAA,CAAQ,CAAE,CAAGhC,EACf,CAAEwQ,SAAAA,CAAQ,CAAE4H,KAAAA,CAAI,CAAEvR,WAAAA,CAAU,CAAE,CAAG5G,CA8BvC,OAAM+kD,UAA+Bh0C,EAWjCoB,MAAO,CACH,IAAMnL,EAAQ,IAAI,CAACA,KAAK,AACxB,CAAA,IAAI,CAACkW,SAAS,CAAG,IAAIX,EAAUvV,EAAO,SAC1C,CAIAqL,eAAgB,CACZ,IAAMrL,EAAQ,IAAI,CAACA,KAAK,CAAE2V,EAAY,IAAI,CAAE6T,EAAgBxpB,EAAMwpB,aAAa,CAC1EA,IAGL,IAAI,CAACw0B,wBAAwB,GAC7B,IAAI,CAACC,gBAAgB,GACjBz0B,EAAcxuB,OAAO,EACrBwuB,EAAcxuB,OAAO,CAACY,MAAM,EAC5B4tB,EAAcxuB,OAAO,CAAC+F,OAAO,CAAC,AAACvG,IAC3Bmb,EAAUuoC,mBAAmB,CAAC1jD,EAClC,GAGAgvB,EAAc8rB,QAAQ,EAAI9rB,EAAc6rB,QAAQ,EAChD,CAAC,WAAY,WAAW,CAACt0C,OAAO,CAAC,SAAU8F,CAAG,CAAElL,CAAC,EAC7C,IAAM67C,EAAQhuB,CAAa,CAAC3iB,EAAI,CAC5B2wC,IACAhwC,EAAyBxH,EAAOw3C,GAChC7hC,EAAUwoC,kBAAkB,CAAC3G,EAAO,+BAAkC77C,CAAAA,EAAI,MAAQ,KAAI,EAClF,cAEZ,GAER,CAKAqiD,0BAA2B,CACvB,IAAMh+C,EAAQ,IAAI,CAACA,KAAK,CAClBwpB,EAAgBxpB,EAAMwpB,aAAa,CACnC+mB,EAAY/mB,GACdA,EAAc+mB,QAAQ,CACpBv1C,EAAWwuB,GACbA,EAAcxuB,OAAO,EACrB,EAAE,CACAojD,EAAa,AAACljD,GAAOA,EAAGuM,YAAY,CAAC,cAAe,CAAA,EACtD+hB,CAAAA,GACAA,EAAcg0B,kBAAkB,EAChCjN,GACA/oC,EAAyBxH,EAAOuwC,GAChCv1C,EAAQ+F,OAAO,CAAC,AAACs9C,GAAQD,EAAWC,EAAIvhD,OAAO,KAG3CyzC,GACA6N,EAAW7N,GAEfv1C,EAAQ+F,OAAO,CAAC,AAACs9C,GAAQ72C,EAAyBxH,EAAOq+C,EAAIvhD,OAAO,GAE5E,CAKAmhD,kBAAmB,CACf,IAAMj+C,EAAQ,IAAI,CAACA,KAAK,CAClBuwC,EAAYvwC,EAAMwpB,aAAa,EACjCxpB,EAAMwpB,aAAa,CAAC+mB,QAAQ,CAChC,GAAIA,EAAU,CACV,IAAM/iC,EAAQxN,EAAM8C,UAAU,CAAC,4CAA6C,CAAEw7C,WAAYt+C,EAAMiD,OAAO,CAACC,IAAI,CAACgtC,iBAAiB,AAAC,GAC/HK,EAAS9oC,YAAY,CAAC,aAAc+F,GACpC+iC,EAAS9oC,YAAY,CAAC,WAAY,GACtC,CACJ,CAKAy2C,oBAAoB1jD,CAAM,CAAE,CACxB2W,EAAK3W,EAAOsC,OAAO,CAAE,CACjBwe,SAAU,GACV8D,KAAM,QACV,EACJ,CAKA++B,mBAAmB3G,CAAK,CAAEz0C,CAAO,CAAE,CAC/B,IAAM/C,EAAQ,IAAI,CAACA,KAAK,CACxBmR,EAAKqmC,EAAO,CACRl8B,SAAU,GACV,aAActb,EAAM8C,UAAU,CAACC,EAAS,CAAE/C,MAAOA,CAAM,EAC3D,EACJ,CAKAu+C,uBAAuB5+B,CAAyB,CAAEzT,CAAO,CAAE,CACvD,IAAMP,EAAWgU,EAA0BhU,QAAQ,CAAE3I,EAAO,IAAI,CAACoH,QAAQ,CAAEpK,EAAQ,IAAI,CAACA,KAAK,CAAE+f,EAAa/f,EAAMiD,OAAO,CAAC+B,aAAa,CAClIgJ,kBAAkB,CAAC+R,UAAU,CAAEwC,EAAY,AAACrW,IAAYlJ,EAAKqH,IAAI,EAAI6B,IAAYlJ,EAAKuH,EAAE,CAAI,GAAK,EAAGi0C,EAAex+C,EAAMy+C,4BAA4B,CAACz+C,EAAM0+C,8BAA8B,CAAGn8B,UAClM,AAAKi8B,EAOE7yC,EAASC,OAAO,CANnB,AAAImU,GACAJ,EAA0BxU,IAAI,CAACoX,GACxB5W,EAASC,OAAO,EAEpBD,CAAQ,CAAC4W,EAAY,EAAI,OAAS,OAAO,AAGxD,CAKAo8B,oBAAoBh/B,CAAyB,CAAE,CAC3C,IAAMhU,EAAWgU,EAA0BhU,QAAQ,CAAE3L,EAAQ,IAAI,CAACA,KAAK,CAAE4+C,EAAc5+C,AAAoC,IAApCA,EAAM6+C,yBAAyB,CAItH,OAHKD,GACD,IAAI,CAAC5zC,cAAc,CAAChL,EAAMwpB,aAAa,CAACxuB,OAAO,CAACgF,EAAM0+C,8BAA8B,CAAC,CAAC5hD,OAAO,EAE1F6O,EAASC,OAAO,AAC3B,CAMAkzC,iBAAkB,CACd,IAAM9+C,EAAQ,IAAI,CAACA,KAAK,CAClBoiC,EAAuB98B,EAAwBtF,EAAMmI,KAAK,CAAC,EAAE,EAC7D42C,EAAe/+C,EAAM8C,UAAU,CAAC,sDAAuD,CAAE9C,MAAAA,EAAOoiC,qBAAAA,CAAqB,GACvH2c,GACA,IAAI,CAAC7oC,SAAS,CAACtD,QAAQ,CAACmsC,EAEhC,CAKAC,eAAez8B,CAAS,CAAE,CACtB,IAAMviB,EAAQ,IAAI,CAACA,KAAK,CAClBi/C,EAAWj/C,EAAMwpB,aAAa,CAC9B01B,EAAQl/C,EAAMm/C,uBAAuB,CAAG,AAACn/C,CAAAA,EAAMm/C,uBAAuB,EAAI,CAAA,EAAK58B,EAErF,GADwB28B,EAAQ,GAAKA,EAAQ,EAEzC,CAAA,GAAIl/C,EAAMgF,aAAa,CAKnB,OAHAhF,EAAMgF,aAAa,CAACgJ,kBAAkB,CAAC0U,OAAO,CAAG,CAAA,EACjD1iB,EAAMgF,aAAa,CAACgJ,kBAAkB,CAACC,iBAAiB,CACnDC,KAAK,GACHlO,EAAMgF,aAAa,CAACgJ,kBAAkB,CAACsU,IAAI,CAACC,EACvD,MAEC,GAAI08B,EAAU,CACf,IAAMx/B,EAAQw/B,CAAQ,CAACC,EAAQ,aAAe,aAAa,CACrDE,EAAUH,CAAQ,CAACC,EAAQ,WAAa,WAAW,CACrDz/B,GAAS2/B,GACTp/C,EAAMwS,iBAAiB,CAACiN,EAAO2/B,EAEvC,CACA,MAAO,CAAA,CACX,CAKAC,eAAe98B,CAAS,CAAE,CACtB,IAAM5M,EAAY,IAAI,CAChB3V,EAAQ,IAAI,CAACA,KAAK,CAClBs/C,EAAsB/8B,EAAY,EAAI,EAAI,EAC1C08B,EAAWj/C,EAAMwpB,aAAa,CAC9B/J,EAASw/B,GACXA,CAAQ,CAACK,EAAsB,aAAe,aAAa,CACzDjK,EAAY4J,GAAYA,EAAS5J,QAAQ,CACzCC,EAAY2J,GAAYA,EAAS3J,QAAQ,CACzC8J,EAAUE,EAAsBhK,EAAWD,EAEjD,GADAr1C,EAAMm/C,uBAAuB,CAAGG,EAC5B7/B,GAAS41B,GAAYC,EAAU,CAC/Bt1C,EAAMwS,iBAAiB,CAACiN,EAAO2/B,GAG3B,IAAI,CAACG,yBAAyB,EAC9B,IAAI,CAACA,yBAAyB,GAElC,IAAMC,EAAiB,AAACjmD,IACpB,IAAMkmD,EAAQ,AAAClmD,CAAAA,EAAE4S,KAAK,EAAI5S,EAAE2S,OAAO,AAAD,IAAO,IAAI,CAAC9B,QAAQ,CAACQ,GAAG,CACtD60C,GACA9pC,EAAUqpC,cAAc,CAACzlD,EAAEe,QAAQ,CAAG,GAAK,KAC3Cf,EAAE8C,cAAc,GAChB9C,EAAEsiB,eAAe,GAEzB,EACM6jC,EAAan2C,EAAS8rC,EAAU,UAAWmK,GAC3CG,EAAap2C,EAAS+rC,EAAU,UAAWkK,EACjD,CAAA,IAAI,CAACD,yBAAyB,CAAG,KAC7BG,IACAC,GACJ,CACJ,CACJ,CAKAC,qBAAsB,CAClB,IAAMX,EAAY,IAAI,CAACj/C,KAAK,CAACwpB,aAAa,EAAI,CAAC,CAC3Cy1B,CAAAA,EAAS3J,QAAQ,EACjB2J,EAASvG,SAAS,CAAC,OAEnBuG,EAAS5J,QAAQ,EACjB4J,EAASvG,SAAS,CAAC,OAEnB,IAAI,CAAC6G,yBAAyB,GAC9B,IAAI,CAACA,yBAAyB,GAC9B,OAAO,IAAI,CAACA,yBAAyB,CAE7C,CAKAM,iBAAkB,CACd,IAAM7/C,EAAQ,IAAI,CAACA,KAAK,CAClBwpB,EAAgBxpB,EAAMwpB,aAAa,CACnC+mB,EAAY/mB,GAAiBA,EAAc+mB,QAAQ,CACrD/mB,GAAiB+mB,IACjBvwC,EAAMwS,iBAAiB,CAACgX,EAAcwxB,WAAW,CAAEzK,GAC/C,IAAI,CAACuP,4BAA4B,EACjC,IAAI,CAACA,4BAA4B,GAIrC,IAAI,CAACA,4BAA4B,CAAGv2C,EAASgnC,EAAU,UAAW,AAACh3C,IAC/D,IAAMkmD,EAAQ,AAAClmD,CAAAA,EAAE4S,KAAK,EAAI5S,EAAE2S,OAAO,AAAD,IAAO,IAAI,CAAC9B,QAAQ,CAACQ,GAAG,CAAEmD,EAAO/N,EAAMgF,aAAa,CAClFy6C,IACAlmD,EAAE8C,cAAc,GAChB9C,EAAEsiB,eAAe,GACb9N,IACAA,EAAKC,kBAAkB,CAACC,iBAAiB,CAACC,KAAK,GAC/CH,EAAKC,kBAAkB,CAACsU,IAAI,CAAC/oB,EAAEe,QAAQ,CAAG,GAAK,IAG3D,GAER,CAMAylD,kCAAmC,CAC/B,IAAM//C,EAAQ,IAAI,CAACA,KAAK,CAClBgD,EAAO,IAAI,CAACoH,QAAQ,CACpBuL,EAAY,IAAI,CACtB,OAAO,IAAIrJ,EAA0BtM,EAAO,CACxCwL,WAAY,CACR,CACI,CAACxI,EAAKqH,IAAI,CAAErH,EAAKsH,KAAK,CAAEtH,EAAKuH,EAAE,CAAEvH,EAAKwH,IAAI,CAAC,CAC3C,SAAU0B,CAAO,EACb,OAAOyJ,EAAU4oC,sBAAsB,CAAC,IAAI,CAAEryC,EAClD,EACH,CACD,CACI,CAAClJ,EAAKyH,KAAK,CAAEzH,EAAK0H,KAAK,CAAC,CACxB,WACI,OAAOiL,EAAUgpC,mBAAmB,CAAC,IAAI,CAC7C,EACH,CACJ,CACDlzC,SAAU,WACN,MAAO,CAAC,CAAEzL,CAAAA,EAAMwpB,aAAa,EACzBxpB,EAAMwpB,aAAa,CAACxuB,OAAO,EAC3BgF,EAAMwpB,aAAa,CAACxuB,OAAO,CAACY,MAAM,AAAD,CACzC,EACAuP,KAAM,SAAUoX,CAAS,EACrB,IAAMiH,EAAgBxpB,EAAMwpB,aAAa,CACzC,GAAIA,GAAiBA,EAAcg0B,kBAAkB,CACjD7nC,EAAUkqC,eAAe,QAExB,GAAIr2B,EAAe,CACpB,IAAMw2B,EAAex2B,EAAcxuB,OAAO,CAACY,MAAM,CAAG,EACpDoE,EAAMy+C,4BAA4B,CAACl8B,EAAY,EAAI,EAAIy9B,EAC3D,CACJ,EACAt0C,UAAW,WACHiK,EAAUmqC,4BAA4B,GACtCnqC,EAAUmqC,4BAA4B,GACtC,OAAOnqC,EAAUmqC,4BAA4B,CAErD,CACJ,EACJ,CAOAG,iCAAkC,CAC9B,IAAMjgD,EAAQ,IAAI,CAACA,KAAK,CAClB2V,EAAY,IAAI,CACtB,OAAO,IAAIrJ,EAA0BtM,EAAO,CACxCwL,WAAY,EAAE,CACdC,SAAU,WACN,MA5ULywB,CAAAA,CAAQl8B,CAAAA,AA4U6BA,EA5UvBwpB,aAAa,EAC9BxpB,AA2UwCA,EA3UlCwpB,aAAa,CAAC6uB,UAAU,EAC9Br4C,AAA4D,WAA5DA,AA0UwCA,EA1UlCwpB,aAAa,CAAC6uB,UAAU,CAACv7C,OAAO,CAACgS,KAAK,CAAC4X,UAAU,EACvD1mB,AAA6C,CAAA,IAA7CA,AAyUwCA,EAzUlCiD,OAAO,CAACumB,aAAa,CAACunB,YAAY,EACxC/wC,AAwUwCA,EAxUlCwpB,aAAa,CAAC6rB,QAAQ,EAC5Br1C,AAuUwCA,EAvUlCwpB,aAAa,CAAC8rB,QAAQ,AAAD,CAwUvB,EACAnqC,KAAM,SAAUoX,CAAS,EACrB5M,EAAU0pC,cAAc,CAAC98B,EAC7B,EACA7W,UAAW,WACPiK,EAAUiqC,mBAAmB,EACjC,CACJ,EACJ,CAMAx0C,uBAAwB,CACpB,MAAO,CACH,IAAI,CAAC20C,gCAAgC,GACrC,IAAI,CAACE,+BAA+B,GACvC,AACL,CAIA10C,SAAU,CACF,IAAI,CAACu0C,4BAA4B,EACjC,IAAI,CAACA,4BAA4B,GAEjC,IAAI,CAACP,yBAAyB,EAC9B,IAAI,CAACA,yBAAyB,GAE9B,IAAI,CAACrpC,SAAS,EACd,IAAI,CAACA,SAAS,CAAC3K,OAAO,EAE9B,CACJ,CA8EA,OAxEA,AAAC,SAAUwyC,CAAsB,EAiB7B,SAASmC,EAAkCx9C,CAAE,EACzC,IAAM1H,EAAW,IAAI,CAACwuB,aAAa,EAC/B,IAAI,CAACA,aAAa,CAACxuB,OAAO,EAC1B,EAAE,CACAmlD,EAAmB,IAAI,CAACzB,8BAA8B,CACtD0B,EAAiB,IAAI,CAAC52B,aAAa,EACrC,IAAI,CAACA,aAAa,CAAC0nB,QAAQ,QAS/B,AAPgC,KAAA,IAArBiP,GACPnlD,CAAO,CAACmlD,EAAiB,EACzBA,IAAqBC,GACrBplD,CAAO,CAACmlD,EAAiB,CAAC/6B,QAAQ,CAAC,IAAI,CAACy5B,yBAAyB,EAAI,GAGzE,IAAI,CAACH,8BAA8B,CAAGh8C,IAClC1H,CAAO,CAAC0H,EAAG,GACX,IAAI,CAAC8P,iBAAiB,CAACxX,CAAO,CAAC0H,EAAG,CAAC6K,GAAG,CAAEvS,CAAO,CAAC0H,EAAG,CAAC5F,OAAO,EACvD4F,IAAO09C,IACP,IAAI,CAACvB,yBAAyB,CAAG7jD,CAAO,CAAC0H,EAAG,CAAC4zC,KAAK,CAClDt7C,CAAO,CAAC0H,EAAG,CAAC0iB,QAAQ,CAAC,IAElB,CAAA,EAGf,CAkBA,SAASi7B,IACL,IAAMtyC,EAAO,IAAI,CAAC/N,KAAK,CAACgF,aAAa,CACrC,GAAI+I,GAAQA,EAAKiT,UAAU,CAACwI,aAAa,CACrC,OAAOzb,EAAKiT,UAAU,CAACwI,aAAa,CAACs1B,eAAe,EAE5D,CAXAf,EAAuB56C,OAAO,CAP9B,SAASA,EAAQC,CAAU,CAAEmwC,CAAkB,EAC3C,GAAI3zC,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,AACvCD,CAAAA,EAAWo7C,4BAA4B,CAAIyB,EAC3C32C,EAASuqC,EAAe,gBAAiBuM,EAC7C,CACJ,CAaJ,EAAGtC,GAA2BA,CAAAA,EAAyB,CAAC,CAAA,GAOjDA,CACX,GACA3lD,EAAgBD,EAAU,4DAA6D,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAC,CAAEC,CAAC,MAmB3JsnD,EAPJ,GAAM,CAAEvlD,SAAAA,CAAQ,CAAE,CAAGhC,EACf,CAAEwQ,SAAAA,CAAQ,CAAE0kB,MAAAA,CAAK,CAAEruB,WAAAA,CAAU,CAAE,CAAG5G,EA0MxC,OAnMA,AAAC,SAAUsnD,CAAwB,EAyB/B,SAASC,EAA8Bt9C,CAAO,EAC1CgrB,EAAM,CAAA,EAAMhrB,EAAS,CACjBqpB,OAAQ,CACJ5d,QAAS,CAAA,EACTuvB,OAAQ,CACJuiB,OAAQ,CACJlhD,QAAS,CACb,CACJ,CACJ,CACJ,EACJ,CAIA,SAASmhD,EAAsBC,CAAY,EACvC,OAAOA,EAAap0B,MAAM,CAAC2R,MAAM,EAC7ByiB,EAAap0B,MAAM,CAAC2R,MAAM,CAACuiB,MAAM,EACjCE,EAAap0B,MAAM,CAAC2R,MAAM,CAACuiB,MAAM,CAAClhD,OAAO,AACjD,CA4BA,SAASqhD,EAAgC98C,CAAM,EAC3C,MAAO,CAAC,CAAEA,CAAAA,EAAO+8C,gBAAgB,EAC7B/8C,EAAOC,MAAM,EACbD,EAAOC,MAAM,CAAClI,MAAM,AAAD,CAC3B,CAeA,SAASilD,IAIDh9C,AAHW,IAAI,CAGR7D,KAAK,CAACyR,UAAU,GACnB5N,AAJO,IAAI,CAIJi9C,WAAW,EAClBj9C,AALO,IAAI,CAKJi9C,WAAW,CAACj9C,AALZ,IAAI,CAKek9C,iBAAiB,CAAG,WAAa,cAAc,CAAC,kCAG1EJ,EARO,IAAI,GASX98C,AATO,IAAI,CASJC,MAAM,CAAC/C,OAAO,CAAC,AAACmH,IACfA,EAAMjE,OAAO,GACbiE,EAAMjE,OAAO,CAACiE,EAAM84C,mBAAmB,CACnC,WAAa,cAAc,CAAC,iCAChC94C,EAAMjE,OAAO,CAACiE,AAA8B,CAAA,IAA9BA,EAAM84C,mBAAmB,CACnC,WACA,cAAc,CAAC,kCAE3B,GAGZ,CAKA,SAASC,EAAwB1nD,CAAC,EAC9B,IAAI,CAAC2nD,sBAAsB,CAAGjzB,EAAM10B,EAAE0J,OAAO,CAACqpB,MAAM,EAAI,CAAC,EAAG,IAAI,CAACsJ,WAAW,CAACtJ,MAAM,EAAI,CAAC,EAC5F,CAKA,SAAS60B,IACL,IAAqBl+C,EAAUY,AAAhB,IAAI,CAAmBZ,OAAO,CACzCm+C,AAkBR,CAAA,SAA4Bv9C,CAAM,EAC9B,IAAM7D,EAAQ6D,EAAO7D,KAAK,CAAEqhD,EAAmBrhD,EAAMiD,OAAO,CAAC+B,aAAa,CAAC0J,OAAO,CAAE4yC,EAAoB,AAC1D,CAAA,IAD2Dz9C,CAAAA,EAAOZ,OAAO,CAAC+B,aAAa,EACjInB,EAAOZ,OAAO,CAAC+B,aAAa,CAAC0J,OAAO,AAAD,EACvC,OAAQ2yC,GACJC,GACAC,AArER,SAAsC19C,CAAM,EACxC,IAAM+b,EAAc/b,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CACtD,OAAOnB,EAAOC,MAAM,CAAClI,MAAM,CACvBgkB,EAAY/b,MAAM,CAAC4+B,gCAAgC,EACnD7iB,AAC0C,CAAA,IAD1CA,EAAY/b,MAAM,CACb4+B,gCAAgC,AAC7C,EA+DqC5+B,EACrC,CAAA,EAzBmB,IAAI,GAEXZ,EAAQqpB,MAAM,EAAIrpB,AAA2B,CAAA,IAA3BA,EAAQqpB,MAAM,CAAC5d,OAAO,GACxC7K,AAHO,IAAI,CAGJk9C,iBAAiB,CAAG,CAAA,EAC3BR,EAA8B18C,AAJvB,IAAI,CAI0BZ,OAAO,GAE5C09C,EANO,IAAI,GAOXa,AApFZ,SAAiC39C,CAAM,EACnC,IAAIlI,EAAIkI,EAAOC,MAAM,CAAClI,MAAM,CAC5B,KAAOD,KAAK,CACR,IAAMuM,EAAQrE,EAAOC,MAAM,CAACnI,EAAE,CACxB+kD,EAAex4C,EAAMjF,OAAO,CAC5Bw+C,EAAkBv5C,EAAM84C,mBAAmB,CAEjD,GADA,OAAO94C,EAAM84C,mBAAmB,CAC5BN,EAAap0B,MAAM,CAAE,CACrB,IAAMo1B,EAAsBD,GACxBhB,AAAwC,IAAxCA,EAAsBC,EACtBA,CAAAA,EAAap0B,MAAM,CAAC5d,OAAO,EAAI,CAACgzC,GAiG5CzzB,EAAM,CAAA,EAAMyyB,AAhG0BA,EAgGbp0B,MAAM,CAAE,CAC7B2R,OAAQ,CACJuiB,OAAQ,CACJlhD,QAASmhD,EAnGiBC,IAmGsB,CACpD,CACJ,CACJ,GArGYx4C,EAAM84C,mBAAmB,CAAG,CAAA,GAES,CAAA,IAAhCN,EAAap0B,MAAM,CAAC5d,OAAO,GAChC6xC,EAA8BG,GAC9Bx4C,EAAM84C,mBAAmB,CAAG,CAAA,EAEpC,CACJ,CACJ,EAyDmB,IAAI,GAUVn9C,AAVM,IAAI,CAUHk9C,iBAAiB,GAC7B,OAAOl9C,AAXI,IAAI,CAWDk9C,iBAAiB,CAC/BY,AA8BR,SAAoC99C,CAAM,EACtC,IAAM+9C,EAAqB/9C,EAAOq9C,sBAAsB,CACxD,GAAIU,EAAoB,CACpB,IAAMC,EAAkBD,EAAmB3jB,MAAM,EAC7C2jB,EAAmB3jB,MAAM,CAACuiB,MAAM,EAChCoB,EAAmB3jB,MAAM,CAACuiB,MAAM,CAAClhD,OAAO,AAGxCuE,CAAAA,EAAO+xB,WAAW,EAAI/xB,EAAO+xB,WAAW,CAACtJ,MAAM,EAC/CzoB,CAAAA,EAAO+xB,WAAW,CAACtJ,MAAM,CAAC5d,OAAO,CAAG,CAAA,CAAG,EAE3C7K,EAAOwd,MAAM,CAAC,CACViL,OAAQ,CACJ5d,QAASkzC,EAAmBlzC,OAAO,CACnCuvB,OAAQ,CACJuiB,OAAQ,CAAElhD,QAASuiD,CAAgB,CACvC,CACJ,CACJ,EACJ,CACJ,EA9DmB,IAAI,EAaf,OAAOh+C,AAbI,IAAI,CAaDq9C,sBAAsB,CAE5C,CAvHAZ,EAAyBn9C,OAAO,CAPhC,SAASA,EAAQktB,CAAW,EACpBzwB,EAAW7E,EAAUoI,KACrBoG,EAAS8mB,EAAa,kBAAmB4wB,GACzC13C,EAAS8mB,EAAa,SAAU8wB,GAChC53C,EAAS8mB,EAAa,cAAewwB,GAE7C,CAwKJ,EAAGP,GAA6BA,CAAAA,EAA2B,CAAC,CAAA,GAOrDA,CACX,GACAloD,EAAgBD,EAAU,uEAAwE,CAACA,CAAQ,CAAC,uBAAuB,CAAEA,CAAQ,CAAC,wBAAwB,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,6CAA6C,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,wCAAwC,CAAC,CAAE,SAAU2pD,CAAK,CAAEC,CAAM,CAAEn3B,CAAc,CAAE7xB,CAAC,CAAEC,CAAC,CAAEsT,CAAyB,CAAEzC,CAAa,CAAEwT,CAAc,EAYhhB,GAAM,CAAEyN,YAAAA,CAAW,CAAE,CAAGF,EAClB,CAAE7vB,SAAAA,CAAQ,CAAE9B,IAAAA,CAAG,CAAE,CAAGF,EACpB,CAAE0K,QAAAA,CAAO,CAAEE,UAAAA,CAAS,CAAE/D,WAAAA,CAAU,CAAE,CAAG5G,EACrC,CAAEmO,eAAAA,CAAc,CAAEE,kBAAAA,CAAiB,CAAEY,kBAAAA,CAAiB,CAAE,CAAGoV,EAkBjE,SAAS2kC,EAAc95C,CAAK,EACxB,IAAM2E,EAAQ3E,EAAM2E,KAAK,CAAE/I,EAASoE,EAAMrE,MAAM,CAACC,MAAM,CACnDnI,EAAImI,EAAOlI,MAAM,CACrB,GAAIkI,CAAM,CAAC+I,EAAM,GAAK3E,EAQlB,OAAO2E,EAPP,KAAOlR,KACH,GAAImI,CAAM,CAACnI,EAAE,GAAKuM,EACd,OAAOvM,CAOvB,CAKA,SAASsmD,EAAap+C,CAAM,EACxB,IAAM+b,EAAc/b,EAAO7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CAAEqiC,EAAmBznB,EAAY5R,kBAAkB,CAACs5B,gBAAgB,CAAE/D,EAAoB1/B,EAAOZ,OAAO,CAAC+B,aAAa,EAAI,CAAC,EAAGk9C,EAAsB3e,EAAkBv1B,kBAAkB,CAC9O,OAAOk0C,GAAuBA,AAAgC,CAAA,IAAhCA,EAAoBxzC,OAAO,EACrD60B,AAA8B,CAAA,IAA9BA,EAAkB70B,OAAO,EACzB7K,AAAuC,CAAA,IAAvCA,EAAOZ,OAAO,CAAC26B,mBAAmB,EAClC,CAAC/5B,EAAO8P,OAAO,EAGd0zB,EAAiBE,+BAA+B,EAC7C,CAACF,EAAiBE,+BAA+B,EAC7C1jC,EAAOC,MAAM,CAAClI,MAAM,AACpC,CAKA,SAASumD,EAAYj6C,CAAK,EACtB,IAAM0X,EAAc1X,EAAMrE,MAAM,CAAC7D,KAAK,CAACiD,OAAO,CAAC+B,aAAa,CACtD0jC,EAAqBxgC,EAAMjF,OAAO,CAAC+B,aAAa,EAClDkD,AAAwC,CAAA,IAAxCA,EAAMjF,OAAO,CAAC+B,aAAa,CAAC0J,OAAO,CACvC,OAAOxG,EAAM+8B,MAAM,EACfrlB,EAAY5R,kBAAkB,CAACs5B,gBAAgB,CAAC8a,cAAc,EAC9Dl6C,AAAkB,CAAA,IAAlBA,EAAMyL,OAAO,EACbzL,AAAmB,CAAA,IAAnBA,EAAMm6C,QAAQ,EACd3Z,GACAuZ,EAAa/5C,EAAMrE,MAAM,CACjC,CAkBA,SAASy+C,EAA0BtiD,CAAK,EACpC,IAAM6D,EAAS7D,EAAM6D,MAAM,EAAI,EAAE,CAAE5B,EAAM4B,EAAOjI,MAAM,CACtD,IAAK,IAAID,EAAI,EAAGA,EAAIsG,EAAK,EAAEtG,EACvB,GAAI,CAACsmD,EAAap+C,CAAM,CAAClI,EAAE,EAAG,CAC1B,IAAMuM,EAAQq6C,AAjB1B,SAAoC1+C,CAAM,EACtC,IAAMC,EAASD,EAAOC,MAAM,EAAI,EAAE,CAAE7B,EAAM6B,EAAOlI,MAAM,CACvD,IAAK,IAAID,EAAI,EAAGA,EAAIsG,EAAK,EAAEtG,EACvB,GAAI,CAACwmD,EAAYr+C,CAAM,CAACnI,EAAE,EACtB,OAAOmI,CAAM,CAACnI,EAAE,CAGxB,OAAO,IACX,EASqDkI,CAAM,CAAClI,EAAE,EAClD,GAAIuM,EACA,OAAOA,CAEf,CAEJ,OAAO,IACX,CAIA,SAASs6C,EAA+BxiD,CAAK,EACzC,IAAM4a,EAAY5a,EAAM6D,MAAM,CAACjI,MAAM,CACjCD,EAAIif,EAAWxT,EAAM,CAAA,EACzB,KAAOzL,MACHqE,EAAMyiD,gBAAgB,CAAGziD,EAAM6D,MAAM,CAAClI,EAAE,CAACmI,MAAM,CAAC9D,EAAM6D,MAAM,CAAClI,EAAE,CAACmI,MAAM,CAAClI,MAAM,CAAG,EAAE,EAIlFwL,CAAAA,EAAMpH,EAAM6D,MAAM,CAAClI,EAAE,CAAC+mD,uBAAuB,EAAC,KAKlD,OAAOt7C,CACX,CAgBA,SAASu7C,EAAgC3iD,CAAK,EAC1C,OAAOA,EAAMyiD,gBAAgB,CAC7B,IAAMv6C,EAAQo6C,EAA0BtiD,GACxC,MAAOkI,EAAAA,GAAQA,EAAM06C,SAAS,EAClC,CAWA,MAAMC,EAMF35C,YAAYlJ,CAAK,CAAEoK,CAAQ,CAAE,CACzB,IAAI,CAACA,QAAQ,CAAGA,EAChB,IAAI,CAACpK,KAAK,CAAGA,CACjB,CAUAmL,MAAO,CACH,IAAM6C,EAAqB,IAAI,CAAEhO,EAAQ,IAAI,CAACA,KAAK,CAAEzG,EAAI,IAAI,CAAC2Q,aAAa,CAAG,IAAIL,EAClFtQ,EAAEgQ,QAAQ,CAACw4C,EAAQ,UAAW,WAC1B,OAAO/zC,EAAmB80C,eAAe,CAAC,IAAI,CAClD,GACAvpD,EAAEgQ,QAAQ,CAACvJ,EAAO,sBAAuB,YACrC+iD,AAlDZ,SAAuC/iD,CAAK,EACxC,IAAMkI,EAAQo6C,EAA0BtiD,GACpCkI,GACAA,EAAM06C,SAAS,CAAC,CAAA,EAExB,EA6C0C,IAAI,CACtC,GACArpD,EAAEgQ,QAAQ,CAACvJ,EAAO,YAAa,SAAUzG,CAAC,EACtC,IAAM2O,EAAQ3O,EAAE2O,KAAK,CAAErE,EAASqE,EAAMrE,MAAM,AAC5CmK,CAAAA,EAAmBg1C,oBAAoB,CAAG,CACtCnoD,EAAGqN,EAAMrN,CAAC,CACVC,EAAGoN,EAAMpN,CAAC,CACV0Z,WAAY3Q,EAASA,EAAOyD,IAAI,CAAG,EACvC,CACJ,GACA/N,EAAEgQ,QAAQ,CAACvJ,EAAO,aAAc,WAC5BiT,WAAW,WACPjF,EAAmBi1C,YAAY,EACnC,EAAG,GACP,GAGA1pD,EAAEgQ,QAAQ,CAACu4C,EAAO,gBAAiB,WAE/B,IAAMpa,EAAUx/B,AADF,IAAI,CACIjE,OAAO,EAAIiE,AADnB,IAAI,CACqBjE,OAAO,CAACnH,OAAO,CAChDkqB,EAAiB/tB,EAAIguB,aAAa,CAKlCi8B,EAAsBl8B,GAAkBA,EAAe7S,YAAY,CAAC,SACpEgvC,EAAiBD,GACnBA,EAAmB5nD,OAAO,CAAC,iCAAmC,EAC9D0E,CAAAA,EAAMyiD,gBAAgB,GAVZ,IAAI,EAWdz7B,IAAmB0gB,GACnB,CAACyb,GACDzb,GACAA,EAAQx5B,KAAK,EACbw5B,EAAQx5B,KAAK,EAErB,EACJ,CAMA+0C,cAAe,KAEP/6C,EADJ,IAAMk7C,EAAO,IAAI,CAACJ,oBAAoB,CAAEhjD,EAAQ,IAAI,CAACA,KAAK,CAAE6D,EAASu/C,GAAQ/7C,EAAkBrH,EAAOojD,EAAK5uC,UAAU,EAEjH4uC,GAAQv/C,GAAUJ,EAAQ2/C,EAAKvoD,CAAC,GAAK4I,EAAQ2/C,EAAKtoD,CAAC,GACnDoN,CAAAA,EAAQf,EAAetD,EAAQu/C,EAAKvoD,CAAC,CAAEuoD,EAAKtoD,CAAC,CAAA,EAEjDoN,EAAQA,GAASo6C,EAA0BtiD,GAEvCA,EAAMyN,SAAS,EACfzN,EAAMyN,SAAS,CAACS,KAAK,GAErBhG,GAASA,EAAM06C,SAAS,EACxB16C,EAAM06C,SAAS,CAAC,CAAA,EAExB,CAIAS,8BAA+B,CAC3B,IAAMr1C,EAAqB,IAAI,CAAEhL,EAAO,IAAI,CAACoH,QAAQ,CAAEpK,EAAQ,IAAI,CAACA,KAAK,CAAEuuB,EAAWvuB,EAAMuuB,QAAQ,CACpG,OAAO,IAAIjiB,EAA0BtM,EAAO,CACxCwL,WAAY,CACR,CAAC+iB,EAAW,CAACvrB,EAAKuH,EAAE,CAAEvH,EAAKwH,IAAI,CAAC,CAAG,CAACxH,EAAKqH,IAAI,CAAErH,EAAKsH,KAAK,CAAC,CACtD,SAAU4B,CAAO,EACb,OAAO8B,EAAmBs1C,aAAa,CAAC,IAAI,CAAEp3C,EAClD,EAAE,CACN,CAACqiB,EAAW,CAACvrB,EAAKqH,IAAI,CAAErH,EAAKsH,KAAK,CAAC,CAAG,CAACtH,EAAKuH,EAAE,CAAEvH,EAAKwH,IAAI,CAAC,CACtD,SAAU0B,CAAO,EACb,OAAO8B,EAAmBu1C,aAAa,CAAC,IAAI,CAAEr3C,EAClD,EAAE,CACN,CAAC,CAAClJ,EAAKyH,KAAK,CAAEzH,EAAK0H,KAAK,CAAC,CACrB,SAAUwB,CAAO,CAAEiX,CAAK,EACpB,IAAMjb,EAAQlI,EAAMyiD,gBAAgB,CAMpC,OALIv6C,IACAib,EAAMjb,KAAK,CAAGA,EACdvE,EAAUuE,EAAMrE,MAAM,CAAE,QAASsf,GACjCjb,EAAMs7C,cAAc,CAAC,UAElB,IAAI,CAAC73C,QAAQ,CAACC,OAAO,AAChC,EAAE,CACN,CAAC,CAAC5I,EAAK+H,IAAI,CAAC,CACR,WAEI,OADA43C,EAAgC3iD,GACzB,IAAI,CAAC2L,QAAQ,CAACC,OAAO,AAChC,EAAE,CACN,CAAC,CAAC5I,EAAKvC,GAAG,CAAC,CACP,WAEI,OADA+hD,EAA+BxiD,GACxB,IAAI,CAAC2L,QAAQ,CAACC,OAAO,AAChC,EAAE,CACN,CAAC,CAAC5I,EAAK8H,QAAQ,CAAE9H,EAAK6H,MAAM,CAAC,CACzB,SAAUqB,CAAO,EAEb,OADAlM,EAAMyjD,uBAAuB,CAACv3C,IAAYlJ,EAAK8H,QAAQ,EAChD,IAAI,CAACa,QAAQ,CAACC,OAAO,AAChC,EAAE,CACT,CACDT,KAAM,WACF,OAAO6C,EAAmB01C,aAAa,CAAC,IAAI,CAChD,EACAj4C,SAAU,WACN,MAAO,CAAC,CAAC62C,EAA0BtiD,EACvC,EACA0L,UAAW,WACP,OAAOsC,EAAmB21C,kBAAkB,EAChD,CACJ,EACJ,CAQAL,cAAcM,CAAO,CAAE13C,CAAO,CAAE,CAC5B,IAAMlJ,EAAO,IAAI,CAACoH,QAAQ,CAAEy5C,EAAS33C,IAAYlJ,EAAKsH,KAAK,EAAI4B,IAAYlJ,EAAKwH,IAAI,CACpF,OAAO,IAAI,CAACs5C,6BAA6B,CAACF,EAASC,EACvD,CAQAH,cAAcE,CAAO,CAAE,CACnB,IAAM5jD,EAAQ,IAAI,CAACA,KAAK,CAAE+jD,EAAgB/jD,EAAMiD,OAAO,CAAC+B,aAAa,CAACgJ,kBAAkB,CAQxF,OAPI+1C,EAAczc,gBAAgB,CAAC0c,kBAAkB,EACjDhkD,EAAMyiD,gBAAgB,CACtBziD,EAAMyiD,gBAAgB,CAACG,SAAS,GAGhCD,EAAgC3iD,GAE7B4jD,EAAQj4C,QAAQ,CAACC,OAAO,AACnC,CAQA23C,cAAcK,CAAO,CAAE13C,CAAO,CAAE,CAC5B,IAAMlM,EAAQ,IAAI,CAACA,KAAK,CAAEgD,EAAO,IAAI,CAACoH,QAAQ,CAAEy5C,EAAS33C,IAAYlJ,EAAKwH,IAAI,EAAI0B,IAAYlJ,EAAKsH,KAAK,CAAE25C,EAAajkD,EAAMiD,OAAO,CAAC+B,aAAa,CAACgJ,kBAAkB,CAChKs5B,gBAAgB,CAErB,GAAI2c,EAAWC,IAAI,EAAID,AAAoB,cAApBA,EAAWC,IAAI,CAClC,OAAO,IAAI,CAACJ,6BAA6B,CAACF,EAASC,GAGvD,IAAMM,EAAkB,AAACnkD,EAAMyiD,gBAAgB,EAC3CziD,EAAMyiD,gBAAgB,CAAC5+C,MAAM,CAACugD,oBAAoB,CAClD,iCACA,0BAEJ,OADApkD,CAAK,CAACmkD,EAAgB,CAACN,GAChBD,EAAQj4C,QAAQ,CAACC,OAAO,AACnC,CAIA+3C,oBAAqB,CACjB,IAAM3jD,EAAQ,IAAI,CAACA,KAAK,CAAE+jD,EAAgB/jD,EAAMiD,OAAO,CAAC+B,aAAa,CAACgJ,kBAAkB,AACpFhO,CAAAA,EAAM4jB,OAAO,EACb5jB,EAAM4jB,OAAO,CAACC,IAAI,CAAC,GAEvB,IAAMwgC,EAAerkD,EAAMyiD,gBAAgB,EAAIziD,EAAMyiD,gBAAgB,CAAC5+C,MAAM,CACxEwgD,GAAeA,EAAYC,UAAU,EACrCD,EAAYC,UAAU,GAEtBtkD,EAAMyiD,gBAAgB,EAAIziD,EAAMyiD,gBAAgB,CAAC6B,UAAU,EAC3DtkD,EAAMyiD,gBAAgB,CAAC6B,UAAU,GAEhCP,EAAczc,gBAAgB,CAAC0c,kBAAkB,EAClD,OAAOhkD,EAAMyiD,gBAAgB,AAErC,CAKAqB,8BAA8BF,CAAO,CAAEW,CAAe,CAAE,CACpD,IAAMvkD,EAAQ,IAAI,CAACA,KAAK,CAAE+f,EAAa/f,EAAMiD,OAAO,CAAC+B,aAAa,CAACgJ,kBAAkB,CAChF+R,UAAU,CAAEykC,EAAsBxkD,EAAMykD,sBAAsB,CAACF,UACpE,AAAKC,EAQEZ,EAAQj4C,QAAQ,CAACC,OAAO,CAP3B,AAAImU,GAAewkC,CAAAA,EACf5B,EAAgC3iD,GAChCwiD,EAA+BxiD,EAAK,EAC7B4jD,EAAQj4C,QAAQ,CAACC,OAAO,CAE5Bg4C,EAAQj4C,QAAQ,CAAC44C,EAAkB,OAAS,OAAO,AAGlE,CAIAzB,gBAAgBj/C,CAAM,CAAE,CACpB,IAAM7D,EAAQ,IAAI,CAACA,KAAK,CAAE0kD,EAAmC1kD,EAAMyiD,gBAAgB,EAC/EziD,EAAMyiD,gBAAgB,CAAC5+C,MAAM,GAAKA,EAClC6gD,IACA,OAAO1kD,EAAMyiD,gBAAgB,CACzBziD,EAAMsO,YAAY,EAClBtO,EAAMsO,YAAY,CAACG,iBAAiB,GAGhD,CAIAlD,SAAU,CACN,IAAI,CAACrB,aAAa,CAACR,iBAAiB,EACxC,CACJ,CA0SA,OApSA,AAAC,SAAUm5C,CAAwB,EAwB/B,SAAS8B,EAA4B74C,CAAI,MAIjCw+B,EAAWC,EAHf,IAAoB1mC,EAAS7D,AAAf,IAAI,CAAiB6D,MAAM,CAAE+gD,EAAW5kD,AAAxC,IAAI,CAA0CyiD,gBAAgB,CAAEoC,EAAgBD,GAAY5C,EAAc4C,IAAa,EAAGE,EAAYF,GAAYA,EAAS/gD,MAAM,CAACC,MAAM,EAAI,EAAE,CAAEihD,EAAa/kD,AAA7L,IAAI,CAA+L6D,MAAM,EAAI7D,AAA7M,IAAI,CAA+M6D,MAAM,CAAC7D,AAA1N,IAAI,CAA4N6D,MAAM,CAACjI,MAAM,CAAG,EAAE,CAAEopD,EAAYD,GAC1QA,EAAWjhD,MAAM,EACjBihD,EAAWjhD,MAAM,CAACihD,EAAWjhD,MAAM,CAAClI,MAAM,CAAG,EAAE,CAGnD,GAAI,CAACiI,CAAM,CAAC,EAAE,EAAI,CAACA,CAAM,CAAC,EAAE,CAACC,MAAM,CAC/B,MAAO,CAAA,EAEX,GAAK8gD,EAcD,CAAA,GAPAta,EAAYzmC,CAAM,CAAC+gD,EAAS/gD,MAAM,CAACgJ,KAAK,CAAIf,CAAAA,EAAO,EAAI,EAAC,EAAG,CAC3Dy+B,CAAAA,EAAWua,CAAS,CAACD,EAAiB/4C,CAAAA,EAAO,EAAI,EAAC,EAAG,AAAD,IACnCw+B,GAEbC,CAAAA,EAAWD,EAAUxmC,MAAM,CAACgI,EAAO,EAAIw+B,EAAUxmC,MAAM,CAAClI,MAAM,CAAG,EAAE,AAAD,EAGlE,CAAC2uC,EACD,MAAO,CAAA,CACX,MAbAA,EAAWz+B,EAAOjI,CAAM,CAAC,EAAE,CAACC,MAAM,CAAC,EAAE,CAAGkhD,SAgB5C,AAAI7C,EAAY5X,IAIR0X,EADJ3X,EAAYC,EAAS1mC,MAAM,EAEvB7D,AAhCM,IAAI,CAgCJyiD,gBAAgB,CAAG32C,EACrBw+B,EAAUxmC,MAAM,CAACwmC,EAAUxmC,MAAM,CAAClI,MAAM,CAAG,EAAE,CAC7C0uC,EAAUxmC,MAAM,CAAC,EAAE,CAIvB9D,AAtCM,IAAI,CAsCJyiD,gBAAgB,CAAGlY,EAGtBvqC,AAzCG,IAAI,CAyCDykD,sBAAsB,CAAC34C,IAGjCy+B,EAASqY,SAAS,EAC7B,CAKA,SAASqC,EAAoCz6C,CAAI,EAC7C,IAAMo6C,EAAW,IAAI,CAACnC,gBAAgB,CAClCyC,EAAct0B,IAAUu0B,QAC5B,EAAI,CAAA,AAAC1hD,EAAQmhD,EAASxc,KAAK,GAAM3kC,EAAQmhD,EAASvc,KAAK,CAAA,IAGvD,IAAI,CAACxkC,MAAM,CAAC9C,OAAO,CAAC,AAAC8C,IACbo+C,EAAap+C,IAGjBA,EAAOC,MAAM,CAAC/C,OAAO,CAAC,AAACmH,IACnB,GAAI,CAACzE,EAAQyE,EAAMmgC,KAAK,GAAK,CAAC5kC,EAAQyE,EAAMkgC,KAAK,GAC7ClgC,IAAU08C,EACV,OAEJ,IAAIQ,EAAYl9C,EAAMmgC,KAAK,CAAGuc,EAASvc,KAAK,CACtCtpC,EAAQ3B,KAAKiT,GAAG,CAACnI,EAAMkgC,KAAK,CAAGwc,EAASxc,KAAK,EAAGid,EAAWjoD,KAAKiT,GAAG,CAAC+0C,GAAahoD,KAAKiT,GAAG,CAAC+0C,GAC5FrmD,EAAQA,EAAQ,CAEhB8E,CAAAA,EAAOuE,KAAK,EAAIvE,EAAOuE,KAAK,CAACkpB,QAAQ,EACrC8zB,CAAAA,GAAa,EAAC,GAEdA,CAAAA,GAAa,GAAK56C,GAAQ46C,GAAa,GAAK,CAAC56C,GAC7C66C,EAAW,GACXlD,EAAYj6C,EAAK,GAGjBm9C,EAAWH,IACXA,EAAcG,EACdF,EAAYj9C,EAEpB,EACJ,GACOi9C,EAAAA,GAAYA,EAAUvC,SAAS,GAC1C,CAMA,SAAS0C,EAA6B96C,CAAI,MAGlC8/B,EAAWC,EAAUgb,EAFzB,IAAoBX,EAAW5kD,AAAjB,IAAI,CAAmByiD,gBAAgB,CAAEsC,EAAa/kD,AAAtD,IAAI,CAAwD6D,MAAM,EAAI7D,AAAtE,IAAI,CAAwE6D,MAAM,CAAC7D,AAAnF,IAAI,CAAqF6D,MAAM,CAACjI,MAAM,CAAG,EAAE,CAAEopD,EAAYD,GAAcA,EAAWjhD,MAAM,EAClKihD,EAAWjhD,MAAM,CAACihD,EAAWjhD,MAAM,CAAClI,MAAM,CAAG,EAAE,QAGnD,AAAKoE,AAJS,IAAI,CAIPyiD,gBAAgB,IAO3BnY,CAAAA,EAAatqC,AAXC,IAAI,CAWC6D,MAAM,CAAC+gD,EAAS/gD,MAAM,CAACgJ,KAAK,CAAIrC,CAAAA,EAAO,GAAK,CAAA,EAAG,GAMlE+/B,CAAAA,EAAWib,AA0Df,SAAyBt9C,CAAK,CAAErE,CAAM,CAAE4hD,CAAO,CAAEC,CAAO,EACpD,IAAIR,EAAct0B,IAAU+0B,EAAQC,EAAOP,EAAU1pD,EAAIkI,EAAOC,MAAM,CAAClI,MAAM,CACvEiqD,EAAuB,AAAC39C,GAAW,CAAEzE,CAAAA,EAAQyE,EAAMkgC,KAAK,GAAK3kC,EAAQyE,EAAMmgC,KAAK,CAAA,EACtF,IAAIwd,EAAqB39C,IAGzB,KAAOvM,MAECkqD,EADJF,EAAS9hD,EAAOC,MAAM,CAACnI,EAAE,GAUrB0pD,AANJA,CAAAA,EAAW,AAACn9C,CAAAA,EAAMkgC,KAAK,CAAGud,EAAOvd,KAAK,AAAD,EAChClgC,CAAAA,EAAMkgC,KAAK,CAAGud,EAAOvd,KAAK,AAAD,EAtEc,EAwExC,AAAClgC,CAAAA,EAAMmgC,KAAK,CAAGsd,EAAOtd,KAAK,AAAD,EACrBngC,CAAAA,EAAMmgC,KAAK,CAAGsd,EAAOtd,KAAK,AAAD,EACd,CAAC,EACN6c,IACXA,EAAcG,EACdO,EAAQjqD,GAGhB,OAAO8H,EAAQmiD,GAAS/hD,EAAOC,MAAM,CAAC8hD,EAAM,CAAG,KAAK,EACxD,EAjF+BhB,EAAUta,EAAW,EAAC,KAK7C2X,EAAa3X,GAKb,CAHAC,EAASqY,SAAS,GAElB2C,EAAmBvlD,AA1BT,IAAI,CA0BWyjD,uBAAuB,CAACj5C,IAO1C+6C,GAJHX,EAAShC,SAAS,GACX,CAAA,IAOfrY,EAASqY,SAAS,GACXrY,EAAS1mC,MAAM,CAAC6+C,uBAAuB,MAjC1CpY,EAAY9/B,EAAQxK,AALV,IAAI,CAKY6D,MAAM,EAAI7D,AAL1B,IAAI,CAK4B6D,MAAM,CAAC,EAAE,CAAIkhD,EAIhDxa,EAHPA,CAAAA,EAAW//B,EACN8/B,GAAaA,EAAUxmC,MAAM,EAAIwmC,EAAUxmC,MAAM,CAAC,EAAE,CACrDkhD,CAAQ,GACMza,EAASqY,SAAS,GA8B5C,CAqEA,SAASkD,EAAeC,EAAoB,CAAA,CAAI,EAC5C,IAAM/lD,EAAQ,IAAI,CAAC6D,MAAM,CAAC7D,KAAK,CAAEgmD,EAAiBhmD,EAAM4jB,OAAO,EAAEpW,OAAO1Q,OACpE,EAAC,IAAI,CAACmoC,MAAM,EAAI8gB,EAChB,IAAI,CAACE,WAAW,GAGZjmD,EAAM4jB,OAAO,EACb5jB,EAAM4jB,OAAO,CAACC,IAAI,CAAC,GAK3B5b,EAAkB,IAAI,EAGlB,IAAI,CAAChE,OAAO,GACZjE,EAAMwS,iBAAiB,CAAC,IAAI,CAACvO,OAAO,EAChC,CAAC8hD,GAAqB/lD,EAAMsO,YAAY,EACxCtO,EAAMsO,YAAY,CAACG,iBAAiB,IAG5CzO,EAAMyiD,gBAAgB,CAAG,IAAI,CAE7B,IAAMyD,EAAaF,GAAgBjY,wBAAwBpf,IAC3D,GAAIq3B,GAAkBE,GAAcA,EAAa,EAAG,CAEhD,IAAMC,EAAYvtD,OAAOwtD,OAAO,CAEhCxtD,OAAOytD,QAAQ,CAAC,CACZC,SAAU,SACV33B,IAJ6Cw3B,EAAYD,CAK7D,EACJ,CACA,OAAO,IAAI,AACf,CASA,SAASK,IACL,IAAM3B,EAAW,IAAI,CAAC5kD,KAAK,CAACyiD,gBAAgB,CAAE+D,EAAQ,AAAC5B,CAAAA,GAAYA,EAAS/gD,MAAM,AAAD,IAAO,IAAI,CACxFm+C,EAAc4C,GACd,EAAG9gD,EAAS,IAAI,CAACA,MAAM,CAAE7B,EAAM6B,EAAOlI,MAAM,CAChD,GAAIkI,GAAU7B,EAAK,CACf,IAAK,IAAItG,EAAI6qD,EAAO7qD,EAAIsG,EAAK,EAAEtG,EAC3B,GAAI,CAACwmD,EAAYr+C,CAAM,CAACnI,EAAE,EACtB,OAAOmI,CAAM,CAACnI,EAAE,CAACinD,SAAS,GAGlC,IAAK,IAAI6D,EAAID,EAAOC,GAAK,EAAG,EAAEA,EAC1B,GAAI,CAACtE,EAAYr+C,CAAM,CAAC2iD,EAAE,EACtB,OAAO3iD,CAAM,CAAC2iD,EAAE,CAAC7D,SAAS,EAGtC,CACA,MAAO,CAAA,CACX,CAnGAC,EAAyB1/C,OAAO,CA1BhC,SAASA,EAAQC,CAAU,CAAEsjD,CAAU,CAAEr2B,CAAW,EAChD,GAAIzwB,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,CAAEqjD,EAAaD,EAAWpjD,SAAS,CAAEsjD,EAAcv2B,EAAY/sB,SAAS,AAC/GD,CAAAA,EAAWohD,sBAAsB,CAAGE,EACpCthD,EAAWwjD,8BAA8B,CAAI5B,EAC7C5hD,EAAWogD,uBAAuB,CAAG6B,EACrCqB,EAAW/D,SAAS,CAAGkD,EAOvBc,EAAYxC,oBAAoB,CAAG,CAAA,EACnC,CACI,SACA,QACA,MACH,CAACrjD,OAAO,CAAC,AAACtH,IACHqxB,CAAW,CAACrxB,EAAK,EACjBqxB,CAAAA,CAAW,CAACrxB,EAAK,CAAC6J,SAAS,CAAC8gD,oBAAoB,CAAG,CAAA,CAAI,CAE/D,GACAwC,EAAYlE,uBAAuB,CAAI6D,CAC3C,CACJ,CAqGJ,EAAG1D,GAA6BA,CAAAA,EAA2B,CAAC,CAAA,GAOrDA,CACX,GACAzqD,EAAgBD,EAAU,8DAA+D,CAACA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,4DAA4D,CAAEA,CAAQ,CAAC,+DAA+D,CAAEA,CAAQ,CAAC,8DAA8D,CAAEA,CAAQ,CAAC,uEAAuE,CAAC,CAAE,SAAU4R,CAAsB,CAAEsT,CAAc,CAAEypC,CAAa,CAAEnd,CAAgB,CAAEH,CAAe,CAAEqZ,CAAwB,EAYvmB,GAAM,CAAE96C,iBAAAA,CAAgB,CAAE,CAAGsV,EACvB,CAAEwpB,eAAAA,CAAc,CAAE,CAAG2C,EA+G3B,OAlGA,cAA8Bz/B,EAU1B,OAAO5G,QAAQC,CAAU,CAAEsjD,CAAU,CAAEr2B,CAAW,CAAE,CAChDsZ,EAAiBxmC,OAAO,CAACktB,GACzBy2B,EAAc3jD,OAAO,CAACktB,GACtBwyB,EAAyB1/C,OAAO,CAACC,EAAYsjD,EAAYr2B,EAC7D,CASAllB,MAAO,CACH,IAAI,CAAC4gC,gBAAgB,CAAG,IAAIpC,EAAiB,IAAI,CAAC3pC,KAAK,EACvD,IAAI,CAAC+rC,gBAAgB,CAAC5gC,IAAI,GAC1B,IAAI,CAAC6C,kBAAkB,CAAG,IAAI60C,EAAyB,IAAI,CAAC7iD,KAAK,CAAE,IAAI,CAACoK,QAAQ,EAChF,IAAI,CAAC4D,kBAAkB,CAAC7C,IAAI,GAC5B,IAAI,CAAC47C,0BAA0B,GAC/B,IAAI,CAACC,+BAA+B,EACxC,CAIAD,4BAA6B,CACzB,IAAMpxC,EAAY,IAAI,AAClB,CAAA,IAAI,CAAC3V,KAAK,CAAC4jB,OAAO,EAClB,IAAI,CAACra,QAAQ,CAAC,IAAI,CAACvJ,KAAK,CAAC4jB,OAAO,CAAC1a,WAAW,CAAE,UAAW,WACjD,IAAI,CAAClJ,KAAK,GAAK2V,EAAU3V,KAAK,EAC9B,IAAI,CAACwN,KAAK,EACV,IAAI,CAACA,KAAK,CAAC1Q,OAAO,EAClB,IAAI,CAAC0Q,KAAK,CAAC1Q,OAAO,CAAC2K,YAAY,CAAC,cAAe,CAAA,EAEvD,EAER,CAIAu/C,iCAAkC,CAC9B,IAAI,CAACz9C,QAAQ,CAAC,IAAI,CAACvJ,KAAK,CAAE,wBAAyB,WAC/C,IAAI,CAAC6D,MAAM,CAAC9C,OAAO,CAAC,SAAU8C,CAAM,EAC5BA,EAAOojD,aAAa,EACpBpjD,EAAOojD,aAAa,CAAC91C,IAAI,CAAC,cAAe,CAAA,EAEjD,EACJ,EACJ,CAKA7F,eAAgB,CACZ,IAAMtL,EAAQ,IAAI,CAACA,KAAK,CACxBA,EAAM6D,MAAM,CAAC9C,OAAO,CAAC,SAAU8C,CAAM,EACjC,IAAMqjD,EAAuB,AACiB,CAAA,IADhBrjD,CAAAA,EAAOZ,OAAO,CAAC+B,aAAa,EACtDnB,EAAOZ,OAAO,CAAC+B,aAAa,CAAC0J,OAAO,AAAD,GACnC7K,EAAO8P,OAAO,EAAI9P,AAAuB,IAAvBA,EAAOg5B,IAAI,CAACjhC,MAAM,CACpCsrD,EACArgB,EAAehjC,GAGfkE,EAAiBlE,EAEzB,EACJ,CAKAuH,uBAAwB,CACpB,OAAO,IAAI,CAAC4C,kBAAkB,CAACq1C,4BAA4B,EAC/D,CAKA93C,SAAU,CACN,IAAI,CAACwgC,gBAAgB,CAACxgC,OAAO,GAC7B,IAAI,CAACyC,kBAAkB,CAACzC,OAAO,EACnC,CACJ,CAQJ,GACAnT,EAAgBD,EAAU,4CAA6C,CAACA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,6CAA6C,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAU4R,CAAsB,CAAEJ,CAAE,CAAEpG,CAAE,CAAE+I,CAAyB,CAAEtT,CAAC,EAY5X,GAAM,CAAEwO,yBAAAA,CAAwB,CAAE,CAAGmC,EAC/B,CAAEjP,kBAAAA,CAAiB,CAAE,CAAG6I,EACxB,CAAE4N,KAAAA,CAAI,CAAExR,KAAAA,CAAI,CAAE,CAAG3G,EAuSvB,OA7QA,cAA4B+Q,EACxBb,aAAc,CAMV,KAAK,IAAIG,WACT,IAAI,CAAC89C,qBAAqB,CAAG,EACjC,CASAh8C,MAAO,CACH,IAAMwK,EAAY,IAAI,CAAE3V,EAAQ,IAAI,CAACA,KAAK,CAC1C,IAAI,CAACiK,aAAa,CAAC8U,QAAQ,CAAC,OAAQ,OACpC,CACI,qBAAsB,sBAAuB,aAChD,CAAChe,OAAO,CAAC,AAACm2B,IACPvhB,EAAUpM,QAAQ,CAACvJ,EAAOk3B,EAAW,WACjCvhB,EAAUyxC,mBAAmB,EACjC,EACJ,EACJ,CAIA/7C,eAAgB,CACZ,IAAMrL,EAAQ,IAAI,CAACA,KAAK,CAAE2V,EAAY,IAAI,AAEtC3V,CAAAA,EAAMqnD,aAAa,EACnBrnD,EAAMqnD,aAAa,CAACC,UAAU,CAACvmD,OAAO,CAAC,CAACvG,EAAQmB,KAC5C6L,EAAyBxH,EAAOxF,EAAOsC,OAAO,EAC9C6Y,EAAU4xC,oBAAoB,CAAC/sD,EAAOsC,OAAO,CAAE,6BAAgCnB,CAAAA,EAAI,MAAQ,IAAG,EAClG,EAER,CAMA4rD,qBAAqB/sD,CAAM,CAAEgtD,CAAc,CAAE,CACzC,IAAMxnD,EAAQ,IAAI,CAACA,KAAK,CAAEwN,EAAQxN,EAAM8C,UAAU,CAAC0kD,EAAgB,CAAExnD,MAAOA,CAAM,GAClFmR,EAAK3W,EAAQ,CACT8gB,SAAU,GACV8D,KAAM,SACN,aAAc5R,CAClB,EACJ,CAKAlC,eAAgB,CACZ,IAAI,CAAC87C,mBAAmB,EAC5B,CAIAA,qBAAsB,CAClB,IAAMpnD,EAAQ,IAAI,CAACA,KAAK,CAMxB,GAJA,IAAI,CAACiK,aAAa,CAACmU,UAAU,CAAC,QAC1Bpe,EAAMynD,eAAe,EACrB,IAAI,CAACC,qBAAqB,CAAC1nD,EAAMynD,eAAe,CAAE,uBAAwBznD,EAAM8C,UAAU,CAAC,qCAAsC,CAAE9C,MAAOA,CAAM,IAEhJA,EAAM2nD,aAAa,EACnB3nD,EAAM4nD,WAAW,EACjB5nD,EAAM4nD,WAAW,CAACC,IAAI,CAAE,CACxB,IAAMC,EAAiB9nD,EAAM4nD,WAAW,CAACC,IAAI,CAAC7nD,EAAM4nD,WAAW,CAACC,IAAI,CAACjsD,MAAM,CAAG,EAAE,CAChF,IAAI,CAAC8rD,qBAAqB,CAAC1nD,EAAM2nD,aAAa,CAAE,qBAAsB3nD,EAAM8C,UAAU,CAAC,8BAA+B,CAClH9C,MAAOA,EACPib,WAAYjb,EAAM4nD,WAAW,CAACG,aAAa,CAACD,EAChD,GACJ,CACJ,CAOAJ,sBAAsBnpC,CAAQ,CAAEypC,CAAU,CAAEx6C,CAAK,CAAE,CAC/C,IAAI,CAACw6C,EAAW,CAAG,IAAI,CAAC/9C,aAAa,CAAC2U,eAAe,CAAC,OAAQ,CAC1DC,MAAON,CACX,EAAG,SAAU,CACT,aAAc/Q,EACd8N,SAAU,EACd,EACJ,CAMA2sC,sBAAuB,CACnB,IAAMjlD,EAAO,IAAI,CAACoH,QAAQ,CAAEpK,EAAQ,IAAI,CAACA,KAAK,CAAE2V,EAAY,IAAI,CAChE,OAAO,IAAIrJ,EAA0BtM,EAAO,CACxCwL,WAAY,CACR,CACI,CAACxI,EAAKuH,EAAE,CAAEvH,EAAKwH,IAAI,CAAExH,EAAKqH,IAAI,CAAErH,EAAKsH,KAAK,CAAC,CAC3C,SAAU4B,CAAO,EACb,OAAOyJ,EAAUuyC,aAAa,CAAC,IAAI,CAAEh8C,EACzC,EACH,CACD,CACI,CAAClJ,EAAK4H,GAAG,CAAC,CACV,SAAUu9C,CAAQ,CAAE5uD,CAAC,EACjB,OAAOoc,EAAUyyC,WAAW,CAAC,IAAI,CAAE7uD,EACvC,EACH,CACD,CACI,CAACyJ,EAAK0H,KAAK,CAAE1H,EAAKyH,KAAK,CAAC,CACxB,WACI,OAAOkL,EAAU0yC,aAAa,CAAC,IAAI,CACvC,EACH,CACJ,CACD58C,SAAU,WACN,MA7IL,CAAC,CAAE,CAAA,AAACzL,AA6IwBA,EA7IlBya,OAAO,EACpBza,AA4I+BA,EA5IzBqnD,aAAa,EACnBrnD,AA2I+BA,EA3IzBqnD,aAAa,CAACC,UAAU,CAAC1rD,MAAM,AAAD,CA4IhC,EACAuP,KAAM,SAAUoX,CAAS,EACrB,OAAO5M,EAAU2yC,YAAY,CAAC/lC,EAClC,CACJ,EACJ,CAQA2lC,cAAcvoC,CAAyB,CAAEzT,CAAO,CAAE,CAC9C,IAAMlM,EAAQ,IAAI,CAACA,KAAK,CAAEgD,EAAO,IAAI,CAACoH,QAAQ,CAAE4Y,EAAShjB,EAAMyN,SAAS,CAAE86C,EAAMr8C,IAAYlJ,EAAKuH,EAAE,EAAI2B,IAAYlJ,EAAKwH,IAAI,CAAEg+C,EAAgB,AAACt8C,IAAYlJ,EAAKqH,IAAI,EAAI6B,IAAYlJ,EAAKuH,EAAE,CACvL,EAAI,GAAsBk+C,EAAO,AAACF,CAAAA,EAAMvoD,EAAMi6B,UAAU,CAAGj6B,EAAMg6B,SAAS,AAAD,EAAnD,GACRwuB,EAElBt5C,EAAI9R,AAAgB,GAAhBA,KAAKsrD,MAAM,GAASC,EAAW,CAC/B9tD,EAAGmoB,EAAO4lC,UAAU,CAAG5oD,EAAM6uB,QAAQ,CAAG7uB,EAAMg6B,SAAS,CAAG,EAAI9qB,EAC9DpU,EAAGkoB,EAAO6lC,SAAS,CAAG7oD,EAAM4uB,OAAO,CAAG5uB,EAAMi6B,UAAU,CAAG,EAAI/qB,CACjE,EAAG45C,EAASP,EAAM,CAAE1tD,EAAG8tD,EAAS9tD,CAAC,CAAEC,EAAG6tD,EAAS7tD,CAAC,CAAG2tD,CAAK,EACpD,CAAE5tD,EAAG8tD,EAAS9tD,CAAC,CAAG4tD,EAAM3tD,EAAG6tD,EAAS7tD,CAAC,AAAC,EAM1C,MALA,CACIJ,EAAkB,YAAaiuD,GAC/BjuD,EAAkB,YAAaouD,GAC/BpuD,EAAkB,UAAWouD,GAChC,CAAC/nD,OAAO,CAAC,AAACxH,GAAMypB,EAAOnqB,aAAa,CAACU,IAC/BomB,EAA0BhU,QAAQ,CAACC,OAAO,AACrD,CAOAw8C,YAAYzoC,CAAyB,CAAEwD,CAAK,CAAE,CAC1C,IAAMnjB,EAAQ,IAAI,CAACA,KAAK,CAClB2L,EAAWgU,EAA0BhU,QAAQ,CAC7Co9C,EAAc5lC,EAAM7oB,QAAQ,CAC5B0uD,EAAmBD,GAAe,CAAC,IAAI,CAAC5B,qBAAqB,EAC/D,CAAC4B,GAAe,IAAI,CAAC5B,qBAAqB,CAG9C,GADAnnD,EAAMqnD,aAAa,CAACC,UAAU,CAAC,IAAI,CAACH,qBAAqB,CAAC,CAAC/hC,QAAQ,CAAC,GAChE4jC,EAIA,OAHIhpD,EAAMya,OAAO,EACbza,EAAMya,OAAO,CAACwuC,MAAM,GAEjBt9C,CAAQ,CAACo9C,EAAc,OAAS,OAAO,AAGlD,CAAA,IAAI,CAAC5B,qBAAqB,EAAI4B,EAAc,GAAK,EACjD,IAAMvuD,EAASwF,EAAMqnD,aAAa,CAACC,UAAU,CAAC,IAAI,CAACH,qBAAqB,CAAC,CAGzE,OAFAnnD,EAAMwS,iBAAiB,CAAChY,EAAO+S,GAAG,CAAE/S,EAAOsC,OAAO,EAClDtC,EAAO4qB,QAAQ,CAAC,GACTzZ,EAASC,OAAO,AAC3B,CAOAy8C,cAAc1oC,CAAyB,CAAE,CACrC,IAAMzkB,EAAK,IAAI,CAAC8E,KAAK,CAACqnD,aAAa,CAACC,UAAU,CAAC,IAAI,CAACH,qBAAqB,CAAC,CAACrqD,OAAO,CAElF,OADA,IAAI,CAACkO,cAAc,CAAC9P,GACbykB,EAA0BhU,QAAQ,CAACC,OAAO,AACrD,CAKA08C,aAAa/lC,CAAS,CAAE,CACpB,IAAMviB,EAAQ,IAAI,CAACA,KAAK,CAAEkpD,EAASlpD,EAAMqnD,aAAa,CAACC,UAAU,CAAC,EAAE,CAAE6B,EAAUnpD,EAAMqnD,aAAa,CAACC,UAAU,CAAC,EAAE,CAAE8B,EAAgB7mC,EAAY,EAAI2mC,EAASC,EAC5JnpD,EAAMwS,iBAAiB,CAAC42C,EAAc77C,GAAG,CAAE67C,EAActsD,OAAO,EAChEssD,EAAchkC,QAAQ,CAAC,GACvB,IAAI,CAAC+hC,qBAAqB,CAAG5kC,EAAY,EAAI,EAAI,CACrD,CASA8mC,uBAAuBrB,CAAU,CAAEsB,CAAS,CAAEC,CAAO,CAAE,CACnD,IAAMvmD,EAAO,IAAI,CAACoH,QAAQ,CAAEuL,EAAY,IAAI,CAAE3V,EAAQ,IAAI,CAACA,KAAK,CAChE,OAAO,IAAIsM,EAA0BtM,EAAO,CACxCwL,WAAY,CACR,CACI,CAACxI,EAAK4H,GAAG,CAAE5H,EAAKuH,EAAE,CAAEvH,EAAKwH,IAAI,CAAExH,EAAKqH,IAAI,CAAErH,EAAKsH,KAAK,CAAC,CACrD,SAAU4B,CAAO,CAAE3S,CAAC,EAChB,IAAMwvD,EAAe78C,IAAYlJ,EAAK4H,GAAG,EAAIrR,EAAEe,QAAQ,EACnD4R,IAAYlJ,EAAKqH,IAAI,EACrB6B,IAAYlJ,EAAKuH,EAAE,CAEvB,OAAO,IAAI,CAACoB,QAAQ,CAACo9C,EAAc,OAAS,OAAO,AACvD,EACH,CACD,CACI,CAAC/lD,EAAK0H,KAAK,CAAE1H,EAAKyH,KAAK,CAAC,CACxB,WACI,IAAMrD,EAAMmiD,EAAQ,IAAI,CAAEvpD,GAC1B,OAAOL,EAAKyH,EAAK,IAAI,CAACuE,QAAQ,CAACC,OAAO,CAC1C,EACH,CACJ,CACDH,SAAU,WACN,IAAM+9C,EAAaxpD,CAAK,CAACgoD,EAAW,EAChChoD,CAAK,CAACgoD,EAAW,CAACz6C,GAAG,EACrBoI,CAAS,CAAC2zC,EAAU,CAACprC,YAAY,CACrC,OAAOsrC,CACX,EACAr+C,KAAM,WACFnL,EAAMwS,iBAAiB,CAACxS,CAAK,CAACgoD,EAAW,CAACz6C,GAAG,CAAEoI,CAAS,CAAC2zC,EAAU,CAACprC,YAAY,CACpF,CACJ,EACJ,CAMA9S,uBAAwB,CACpB,MAAO,CACH,IAAI,CAACi+C,sBAAsB,CAAC,kBAAmB,uBAAwB,SAAUI,CAAQ,CAAEzpD,CAAK,EAC5FA,EAAMmpD,OAAO,EACjB,GACA,IAAI,CAACE,sBAAsB,CAAC,gBAAiB,qBAAsB,SAAUzF,CAAO,CAAE5jD,CAAK,EAEvF,OADAA,EAAM0pD,OAAO,GACN9F,EAAQj4C,QAAQ,CAACE,IAAI,AAChC,GACA,IAAI,CAACo8C,oBAAoB,GAC5B,AACL,CACJ,CAQJ,GACA7vD,EAAgBD,EAAU,oCAAqC,CAACA,CAAQ,CAAC,kBAAkB,CAAC,CAAE,SAAUY,CAAC,EAYrG,GAAM,CAAEE,IAAAA,CAAG,CAAEgiD,KAAAA,CAAI,CAAE/hD,IAAAA,CAAG,CAAE,CAAGH,EAmF3B,MALa,CACT4wD,yBAlEJ,WAEI,IAAMC,EAAS,QAAQrsD,IAAI,CAACrE,EAAImwB,SAAS,CAACwgC,SAAS,EACnD,GAAI3wD,EAAI4wD,UAAU,EAAIF,EAClB,OAAO1wD,EAAI4wD,UAAU,CAAC,+BAA+BC,OAAO,CAGhE,GAAI9O,GAAQ/hD,EAAI8wD,gBAAgB,CAAE,CAC9B,IAAMC,EAAUhxD,EAAImQ,aAAa,CAAC,MAGlC6gD,CAAAA,EAAQn7C,KAAK,CAACo7C,eAAe,CAAG,kFAChCjxD,EAAI0O,IAAI,CAAChJ,WAAW,CAACsrD,GACrB,IAAME,EAAK,AAACF,CAAAA,EAAQG,YAAY,EAC5BlxD,EAAI8wD,gBAAgB,CAACC,EAAO,EAAGC,eAAe,CAElD,OADAjxD,EAAI0O,IAAI,CAACzJ,WAAW,CAAC+rD,GACdE,AAAO,SAAPA,CACX,CAEA,OAAOjxD,EAAI4wD,UAAU,EAAI5wD,EAAI4wD,UAAU,CAAC,2BAA2BC,OAAO,AAC9E,EA+CIM,qBArCJ,SAA8BrqD,CAAK,EAI/BA,EAAMsqD,sBAAsB,CAAG,CAAA,EAE/B,IAAMC,EAASvqD,EAAMiD,OAAO,CAAC+B,aAAa,CAACwlD,iBAAiB,CAC5DxqD,EAAMqhB,MAAM,CAACkpC,EAAO,CAAA,GAEpBvqD,EAAM6D,MAAM,CAAC9C,OAAO,CAAC,SAAUwG,CAAC,EAC5B,IAAMkjD,EAAWF,EAAM5rB,WAAW,CAACp3B,EAAE9N,IAAI,CAAC,EAAI,CAAC,EAC/C8N,EAAE8Z,MAAM,CAAC,CACLtS,MAAO07C,EAAS17C,KAAK,EAAI,aACzBiwB,OAAQ,CAACyrB,EAAS17C,KAAK,EAAI,aAAa,CACxCqc,YAAaq/B,EAASr/B,WAAW,EAAI,QACzC,GAEA7jB,EAAEzD,MAAM,CAAC/C,OAAO,CAAC,SAAUiD,CAAC,EACpBA,EAAEf,OAAO,EAAIe,EAAEf,OAAO,CAAC8L,KAAK,EAC5B/K,EAAEqd,MAAM,CAAC,CACLtS,MAAO07C,EAAS17C,KAAK,EAAI,aACzBqc,YAAaq/B,EAASr/B,WAAW,EAAI,QACzC,EAAG,CAAA,EAEX,EACJ,GAGAprB,EAAM0vB,MAAM,EAChB,CASA,CAGJ,GACAt3B,EAAgBD,EAAU,qCAAsC,EAAE,CAAE,WAwNhE,MAvMc,CACV6H,MAAO,CACHmrB,gBAAiB,QACrB,EACAzmB,MAAO,CACHoK,MAAO,CACHC,MAAO,YACX,CACJ,EACAmM,SAAU,CACNpM,MAAO,CACHC,MAAO,YACX,CACJ,EACA8V,UAAW,CACP6lC,SAAU,aACVC,SAAU,aACVC,MAAO,EAAE,AACb,EACA5rB,OAAQ,CAAC,aAAa,CACtB72B,MAAO,CACHukB,cAAe,aACf7Y,OAAQ,CACJ/E,MAAO,CACHC,MAAO,YACX,CACJ,EACAsd,UAAW,aACXw+B,mBAAoB,aACpBC,UAAW,aACXpmD,MAAO,CACHoK,MAAO,CACHC,MAAO,YACX,CACJ,CACJ,EACA3G,MAAO,CACHskB,cAAe,aACf7Y,OAAQ,CACJ/E,MAAO,CACHC,MAAO,YACX,CACJ,EACAsd,UAAW,aACXw+B,mBAAoB,aACpBC,UAAW,aACXpmD,MAAO,CACHoK,MAAO,CACHC,MAAO,YACX,CACJ,CACJ,EACA6U,QAAS,CACLuH,gBAAiB,SACjBC,YAAa,aACbtc,MAAO,CACHC,MAAO,YACX,CACJ,EACA4vB,YAAa,CACT96B,OAAQ,CACJwoB,UAAW,aACX0+B,UAAW,SACX3/B,YAAa,aACb4/B,UAAW,aACXt6C,YAAa,EACb0b,WAAY,CACR6+B,eAAgB,aAChBl8C,MAAO,aACPD,MAAO,CACHC,MAAO,aACPge,YAAa,MACjB,CACJ,EACAT,OAAQ,CACJD,UAAW,aACX0+B,UAAW,YACf,CACJ,EACAG,IAAK,CACDn8C,MAAO,SACPiwB,OAAQ,CAAC,SAAS,CAClB5T,YAAa,aACb1a,YAAa,CACjB,EACAy6C,QAAS,CACLJ,UAAW,QACf,EACAK,YAAa,CACT/+B,UAAW,aACX0+B,UAAW,QACf,EACAM,SAAU,CACNN,UAAW,QACf,CACJ,EACAtmC,OAAQ,CACJ0G,gBAAiB,SACjBmgC,UAAW,CACPv8C,MAAO,YACX,EACAw8C,eAAgB,CACZx8C,MAAO,YACX,EACAy8C,gBAAiB,CACbz8C,MAAO,MACX,EACArK,MAAO,CACHoK,MAAO,CACHC,MAAO,YACX,CACJ,CACJ,EACAlB,QAAS,CACLiB,MAAO,CACHC,MAAO,YACX,CACJ,EACA08C,UAAW,CACPC,qBAAsB,CAClB38C,MAAO,YACX,EACA48C,qBAAsB,CAClB58C,MAAO,YACX,CACJ,EACA4sC,WAAY,CACR5H,cAAe,CACX6X,aAAc,aACdrB,MAAO,CACH90B,KAAM,QACV,CACJ,CACJ,EACAjM,cAAe,CACXgnB,YAAa,CACT/a,KAAM,SACN5mB,OAAQ,aACRC,MAAO,CACHC,MAAO,YACX,EACAkvB,OAAQ,CACJwd,MAAO,CACHhmB,KAAM,SACN5mB,OAAQ,aACRC,MAAO,CACHC,MAAO,YACX,CACJ,EACA8nC,OAAQ,CACJphB,KAAM,OACN5mB,OAAQ,aACRC,MAAO,CACHC,MAAO,YACX,CACJ,CACJ,CACJ,EACA0hC,oBAAqB,aACrBW,WAAY,CACRjmB,gBAAiB,SACjBpc,MAAO,YACX,EACAsiC,WAAY,CACRtiC,MAAO,YACX,CACJ,EACAsa,UAAW,CACP4B,QAAS,CACLE,gBAAiB,SACjBC,YAAa,YACjB,EACAI,aAAc,aACdH,SAAU,cACVxnB,OAAQ,CACJkL,MAAO,aACPsd,UAAW,YACf,EACAlkB,MAAO,CACHukB,cAAe,YACnB,CACJ,EACArkB,UAAW,CACPmqB,mBAAoB,OACpBE,eAAgB,aAChBC,iBAAkB,aAClBC,sBAAuB,SACvBC,kBAAmB,aACnBE,WAAY,aACZC,qBAAsB,SACtBC,iBAAkB,YACtB,CACJ,CAQJ,GACA76B,EAAgBD,EAAU,wCAAyC,EAAE,CAAE,WAk7BnE,MA/1BgB,CAYZ6M,cAAe,CAgBX0J,QAAS,CAAA,EAOThI,oBAAqB,CAmDjB2R,kBAAmB,sSAwBnBwB,iBAAkB,qBAWlBlT,oBAAqB,mBACzB,EAQA9C,OAAQ,CA4CJ6iC,kBAAmB,0DAOnB0C,qBAAsB,CAAA,EAUtB3G,iCAAkC,GACtC,EAMAv6B,MAAO,CA2GHu7B,uBAAwB,oCAWxBgE,aAAc,CAAA,CAClB,EAcA95B,kBAAmB,MAyCnBgK,kBAAmB,+DAqEnB3J,mBAAoB,CAMhBU,QAAS,CAAA,EAWTF,YAAa,CAMTE,QAAS,CAAA,EAMTc,wBAAyB,CAAA,EAazBV,MAAO,CAEHC,MAAO,UAEPE,UAAW,EAEXE,aAAc,CAClB,EAMAP,OAAQ,CACZ,EAaA+S,MAAO,CACH,SAAU,OAAQ,gBAClB,YAAa,SAAU,YAC1B,CAMD5B,WAAY,CAAA,EAOZunB,iBAAkB,CA2Bd8a,eAAgB,CAAA,EAUhB7a,gCAAiC,CAAA,EASjCyc,mBAAoB,CAAA,CACxB,CACJ,EAaAta,gBAAiB,CA6Bbh7B,QAAS,CAAA,EAUTu8B,oBAAqB,IAOrBhB,cAAe,CAAA,CACnB,CACJ,EAyJAxlB,OAAQ,CAQJzf,cAAe,CAMX0J,QAAS,CAAA,EAOTV,mBAAoB,CAQhBU,QAAS,CAAA,CACb,CACJ,CACJ,EAIAgQ,UAAW,CAQP1Z,cAAe,CAMX0J,QAAS,CAAA,CACb,CACJ,EAIA2a,UAAW,CAQPrkB,cAAe,CAMX0J,QAAS,CAAA,CACb,CACJ,CACJ,CAGJ,GACAtW,EAAgBD,EAAU,wCAAyC,EAAE,CAAE,WAwbnE,MAvaoB,CAqBhB6M,cAAe,CAUX6mD,kBAAmB,QAKnBC,oBAAqB,yCAKrBx+C,kBAAmB,oBAKnBq6C,cAAe,eAKf95C,QAAS,8BAWTm1B,aAAc,IASd+oB,kBAAmB,GAQnBC,sBAAuB,GAOvBtlD,oBAAqB,CACjBulD,kBAAmB,GACnBC,iBAAkB,GAMlBx4C,YAAa,CACTy4C,QAAS,4BACTC,uBAAyB,iDACzBC,0BAA4B,kHAI5BC,oBAAqB,kBACzB,EAMAxyC,iBAAkB,2BACtB,EAMApB,aAAc,CACV6zC,sBAAuB,8BACvBC,6BAA8B,MAClC,EAMA/nC,OAAQ,CAKJgoC,mBAAoB,yCAMpBjlC,YAAa,8BAKbrC,WAAY,iBAChB,EAMAunC,KAAM,CACFC,UAAW,aACXC,WAAY,iBACZnF,gBAAiB,YACrB,EAMAj+B,cAAe,CACXqjC,cAAe,eACfC,cAAe,qBACfC,cAAe,mBACfC,wBAAyB,gCAC7B,EAMA3jC,UAAW,CAOPyX,YAAa,wDAMbF,WAAY,YASZuB,mBAAoB,wBACxB,EAMA1mB,MAAO,CACHwxC,0BAA2B,mCAC3BC,aAAc,gCAClB,EAYAxjB,gBAAiB,CACbyjB,gBAAiB,sCACjBC,wBAAyB,gCACzBC,uBAAwB,8BACxBC,0BAA2B,sDAC3BC,yBAA0B,mDAC9B,EAQAC,uBAAwB,CACpBrC,QAAS,gMAITsC,UAAW,uGAEXC,gBAAiB,mGAEjBC,OAAQ,gFAERC,YAAa,2GAGbvC,SAAU,mEAEVwC,OAAQ,iEAERC,QAAS,kGAETC,UAAW,8FAEf,EAaAhoB,WAAY,CAERioB,WAAY,cACZC,mBAAoB,kDACpBC,WAAY,0DACZC,iBAAkB,kDAClBC,cAAe,uEAEfC,gBAAiB,sCACjBC,aAAc,4EAEdC,eAAgB,qCAChBC,WAAY,4EAEZC,aAAc,qCACdC,aAAc,kEAEdC,eAAgB,0CAChBC,UAAW,kEAEXC,YAAa,0CACbC,UAAW,sEAEXC,YAAa,mCACbC,cAAe,0EAEfC,gBAAiB,8CACjBC,cAAe,iEAEfC,gBAAiB,wCACjBC,aAAc,2EAEdC,eAAgB,4CACpB,EAMAtqD,KAAM,CAEFuqD,yBAA0B,4DAC1BC,uBAAwB,uHACxBC,yBAA0B,4DAC1BC,uBAAwB,uHACxBC,cAAe,4BACfC,eAAgB,6BAChBC,iBAAkB,+BAClBC,iBAAkB,+BAClBC,YAAa,6CACbC,gBAAiB,yCACrB,EAMArxC,UAAW,CACPsxC,eAAgB,aAChBC,gBAAiB,+BACrB,EAQApsD,OAAQ,CAoBJ0X,QAAS,CAEL,QAAW,qJACX20C,mBAAoB,qJACpBC,KAAM,mJACNC,gBAAiB,2JACjBC,OAAQ,mJACRC,kBAAmB,2JACnBC,OAAQ,gJACRC,kBAAmB,wJACnBt8B,IAAK,gJACLu8B,eAAgB,wJAChBvF,IAAK,6IACLwF,eAAgB,qJAChBC,QAAS,sJACTC,mBAAoB,8JACpBzF,QAAS,8IACT0F,mBAAoB,sJACpBlD,OAAQ,yJACRmD,kBAAmB,iKACnBz8C,IAAK,2IACL08C,eAAgB,mJAChBC,QAAS,mJACTC,mBAAoB,2JACpBC,UAAW,yJACXC,qBAAsB,gKAC1B,EAUAlsD,YAAa,gBAObmU,iBAAkB,iBAOlBC,iBAAkB,iBAMlB+3C,eAAgB,WAOhBC,4BAA6B,8CAEjC,CACJ,CACJ,CAQJ,GACAj5D,EAAgBD,EAAU,6CAA8C,CAACA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUa,CAAC,EA8DhH,GAAM,CAAEs4D,MAAAA,CAAK,CAAE3xD,KAAAA,CAAI,CAAE,CAAG3G,EAgBxB,SAASu4D,EAAkBC,CAAI,CAAEC,CAAa,CAAEjvD,CAAG,EAC/C,IAAIkvD,EAAMF,EAAMl8B,EAAM35B,EAAI,EAC1B,KAAOA,EAAI81D,EAAc71D,MAAM,CAAG,EAAG,EAAED,EAEnC+1D,EAAMA,CAAG,CADTp8B,EAAOm8B,CAAa,CAAC91D,EAAE,CACR,CAAGgE,EAAK+xD,CAAG,CAACp8B,EAAK,CAAE,CAAC,EAEvCo8B,CAAAA,CAAG,CAACD,CAAa,CAACA,EAAc71D,MAAM,CAAG,EAAE,CAAC,CAAG4G,CACnD,CAKA,SAASmvD,EAAwB3xD,CAAK,CAAE4xD,CAAc,CAAEC,CAAc,CAAEC,CAAe,EAInF,SAASC,EAAaP,CAAI,CAAEQ,CAAW,EACnC,OAAOA,EAAYrvD,MAAM,CAAC,SAAUC,CAAG,CAAEC,CAAG,EACxC,OAAOD,CAAG,CAACC,EAAI,AACnB,EAAG2uD,EACP,CACA,IAAMS,EAAUF,EAAa/xD,EAAMiD,OAAO,CAAE2uD,GAAiBM,EAAUH,EAAa/xD,EAAMiD,OAAO,CAAE4uD,GACnGx/C,OAAOrP,IAAI,CAAC8uD,GAAiB/wD,OAAO,CAAC,SAAUoxD,CAAY,EACvD,IAAM3vD,EAAMyvD,CAAO,CAACE,EAAa,AACd,MAAA,IAAR3vD,IACP+uD,EAAkBW,EAASJ,CAAe,CAACK,EAAa,CAAE3vD,GAC1D8uD,EAAM,GAAI,CAAA,EAAOtxD,EAAO,CACpB,CAAC4xD,EAAez8C,IAAI,CAAC,KAAO,IAAMg9C,EAAa,CAAGN,EAAe18C,IAAI,CAAC,KAAO,IACzE28C,CAAe,CAACK,EAAa,CAACh9C,IAAI,CAAC,IAC3C,GAER,EACJ,CAkJA,OAhBA,SAA+BnV,CAAK,EAChCoyD,AA/HJ,CAAA,SAAoCpyD,CAAK,EACrC,IAAMyX,EAAezX,EAAMiD,OAAO,CAACjD,KAAK,CAAE4f,EAAc5f,EAAMiD,OAAO,CAAC+B,aAAa,EAAI,CAAC,EACxF,CAAC,cAAe,kBAAkB,CAACjE,OAAO,CAAC,SAAUu0B,CAAI,EACjD7d,CAAY,CAAC6d,EAAK,GAClB1V,CAAW,CAAC0V,EAAK,CAAG7d,CAAY,CAAC6d,EAAK,CACtCg8B,EAAM,GAAI,CAAA,EAAOtxD,EAAO,CAAE,CAAC,CAAC,MAAM,EAAEs1B,EAAK,CAAC,CAAC,CAAE,CAAC,kBAAkB,EAAEA,EAAK,CAAC,AAAC,GAEjF,EACJ,CAAA,EAuH+Bt1B,GAC3BqyD,AApHJ,SAAmCryD,CAAK,EACpCA,EAAMyc,IAAI,CAAC1b,OAAO,CAAC,SAAUgE,CAAI,EAC7B,IAAMutD,EAAOvtD,EAAK9B,OAAO,CACrBqvD,GAAQA,EAAKrtD,WAAW,GACxBqtD,EAAKttD,aAAa,CAAGstD,EAAKttD,aAAa,EAAI,CAAC,EAC5CstD,EAAKttD,aAAa,CAACC,WAAW,CAAGqtD,EAAKrtD,WAAW,CACjDqsD,EAAM,GAAI,CAAA,EAAOtxD,EAAO,CACpB,mBAAoB,oCACxB,GAER,EACJ,EAyG8BA,GACtBA,EAAM6D,MAAM,EACZ0uD,AAvGR,SAAqCvyD,CAAK,EAGtC,IAAMwyD,EAAwB,CAC1BvtD,YAAa,CAAC,gBAAiB,cAAc,CAC7CwtD,oBAAqB,CAAC,gBAAiB,oBAAoB,CAC3DC,0BAA2B,CACvB,gBAAiB,QAAS,uBAC7B,CACDC,uBAAwB,CACpB,gBAAiB,qBAAsB,UAC1C,CACD,0CAA2C,CACvC,gBAAiB,QAAS,uBAC7B,AACL,EACA3yD,EAAM6D,MAAM,CAAC9C,OAAO,CAAC,SAAU8C,CAAM,EAEjCwO,OAAOrP,IAAI,CAACwvD,GAAuBzxD,OAAO,CAAC,SAAU6xD,CAAS,EAC1D,IAAIC,EAAYhvD,EAAOZ,OAAO,CAAC2vD,EAAU,AAEvB,CAAA,4CAAdA,GACAC,CAAAA,EAAahvD,EAAOZ,OAAO,CAAC+B,aAAa,EACrCnB,EAAOZ,OAAO,CAAC+B,aAAa,CACvB0tD,yBAAyB,EAEb,KAAA,IAAdG,IAEPtB,EAAkB1tD,EAAOZ,OAAO,CAAEuvD,CAAqB,CAACI,EAAU,CAGlEA,AAAc,2BAAdA,EACI,CAACC,EAAYA,GACjBvB,EAAM,GAAI,CAAA,EAAOtxD,EAAO,CACpB,CAAC,CAAC,OAAO,EAAE4yD,EAAU,CAAC,CAAC,CAAG,UACtBJ,CAAqB,CAACI,EAAU,CAACz9C,IAAI,CAAC,IAC9C,GAER,EACJ,EACJ,EA+DoCnV,GA1DhC2xD,EA4D2C3xD,EA5DZ,CAAC,gBAAgB,CAAE,CAAC,gBAAgB,CAAE,CACjE8yD,gBAAiB,CAAC,QAAS,aAAa,CACxCC,mBAAoB,CAAC,QAAS,gBAAgB,CAC9CL,0BAA2B,CAAC,QAAS,uBAAuB,CAC5DM,0BAA2B,CAAC,SACxB,mCAAmC,CACvCC,yBAA0B,CAAC,qBAAsB,mBAC7C,kCAAkC,CACtCC,mBAAoB,CAAC,QAAS,gBAAgB,CAC9CC,iBAAkB,CAAC,QAAS,cAAc,CAC1CC,iBAAkB,CAAC,QAAS,cAAc,CAC1CC,6BAA8B,CAAC,sBAC3B,uBAAuB,CAC3BjqB,qBAAsB,CAAC,SAAU,uBAAuB,CACxDkqB,2BAA4B,CAAC,SAAU,uBAAuB,CAC9DC,mBAAoB,CAAC,sBAAuB,uBAAuB,CACnE5sD,oBAAqB,CAAC,sBAAuB,sBAAsB,AACvE,GAMAgrD,EAsCwC3xD,EAtCT,CAAC,gBAAiB,qBAAqB,CAAE,CAAC,gBAAiB,qBAAsB,mBAAmB,CAAE,CACjIoiD,eAAgB,CAAC,iBAAiB,CAClC8B,KAAM,CAAC,OAAO,AAClB,GAMAyN,EA8B0B3xD,EA9BK,CAAC,OAAQ,gBAAgB,CAAE,CAAC,OAAQ,gBAAgB,CAAE,CACjFmlB,WAAY,CAAC,SAAU,aAAa,CACpCqC,YAAa,CAAC,SAAU,cAAc,CACtCmlC,UAAW,CAAC,OAAQ,YAAY,CAChCC,WAAY,CAAC,OAAQ,aAAa,CAClCnF,gBAAiB,CAAC,OAAQ,kBAAkB,CAC5C+L,wBAAyB,CAAC,sBACtB,oBAAoB,CACxBte,oBAAqB,CAAC,gBAAiB,aAAa,CACpDue,sBAAuB,CAAC,gBAAiB,gBAAgB,CACzDC,sBAAuB,CAAC,gBAAiB,gBAAgB,CACzDC,gBAAiB,CAAC,sBAAuB,mBAAmB,CAC5DC,gBAAiB,CAAC,QAAS,4BAA4B,CACvD1G,aAAc,CAAC,QAAS,eAAe,AAC3C,EAiBJ,CAQJ,GACA90D,EAAgBD,EAAU,iCAAkC,CAACA,CAAQ,CAAC,mBAAmB,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,oBAAoB,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,4BAA4B,CAAEA,CAAQ,CAAC,iDAAiD,CAAEA,CAAQ,CAAC,+BAA+B,CAAEA,CAAQ,CAAC,mDAAmD,CAAEA,CAAQ,CAAC,sCAAsC,CAAEA,CAAQ,CAAC,8CAA8C,CAAEA,CAAQ,CAAC,4CAA4C,CAAEA,CAAQ,CAAC,iDAAiD,CAAEA,CAAQ,CAAC,+DAA+D,CAAEA,CAAQ,CAAC,iCAAiC,CAAEA,CAAQ,CAAC,qDAAqD,CAAEA,CAAQ,CAAC,8DAA8D,CAAEA,CAAQ,CAAC,4CAA4C,CAAEA,CAAQ,CAAC,oCAAoC,CAAEA,CAAQ,CAAC,qCAAqC,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,6CAA6C,CAAC,CAAE,SAAUu1B,CAAC,CAAE30B,CAAC,CAAEC,CAAC,CAAEuK,CAAE,CAAE+R,CAAQ,CAAEu+C,CAAkB,CAAE1lD,CAAsB,CAAE2lD,CAAoB,CAAE/yC,CAAkB,CAAEsE,CAAe,CAAE7H,CAAa,CAAEu2C,CAAkB,CAAEpqB,CAAgB,CAAEqqB,CAAa,CAAEjW,CAAsB,CAAEkW,CAAe,CAAEC,CAAa,CAAEC,CAAI,CAAE3J,CAAiB,CAAE4J,CAAkB,CAAEC,CAAkB,CAAEC,CAAqB,EAY3/C,GAAM,CAAExmC,eAAAA,CAAc,CAAE,CAAGJ,EACrB,CAAE3yB,SAAAA,CAAQ,CAAE9B,IAAAA,CAAG,CAAE,CAAGF,EACpB,CAAEwQ,SAAAA,CAAQ,CAAEO,OAAAA,CAAM,CAAEnG,UAAAA,CAAS,CAAEsqB,MAAAA,CAAK,CAAEruB,WAAAA,CAAU,CAAE,CAAG5G,EACrD,CAAEsF,cAAAA,CAAa,CAAE,CAAGiF,CAkB1B,OAAMgxD,EAMFrrD,YAAYlJ,CAAK,CAAE,CACf,IAAI,CAACmL,IAAI,CAACnL,EACd,CAYAmL,KAAKnL,CAAK,CAAE,CAGR,GAFA,IAAI,CAACA,KAAK,CAAGA,EAET,CAAC/G,EAAIu7D,gBAAgB,CAAE,CACvB,IAAI,CAACC,MAAM,CAAG,CAAA,EACd,IAAI,CAACzzC,UAAU,CAAG,CAAC,EACnBhhB,EAAM0H,QAAQ,CAACD,YAAY,CAAC,cAAe,CAAA,GAC3C,MACJ,CAGA6sD,EAAsBt0D,GACtB,IAAI,CAACiK,aAAa,CAAG,IAAI+pD,EAAc,IAAI,CAACh0D,KAAK,EACjD,IAAI,CAAC00D,cAAc,GACnB,IAAI,CAAC1mD,kBAAkB,CAAG,IAAI+S,EAAmB/gB,EAAO,IAAI,CAACghB,UAAU,CAC3E,CAIA0zC,gBAAiB,CACb,IAAM10D,EAAQ,IAAI,CAACA,KAAK,CAClBiK,EAAgB,IAAI,CAACA,aAAa,CAClC2V,EAAc5f,EAAMiD,OAAO,CAAC+B,aAAa,AAC/C,CAAA,IAAI,CAACgc,UAAU,CAAG,CACdvT,UAAW,IAAIomD,EACfc,YAAa,IAAIb,EACjBrvC,OAAQ,IAAIY,EACZuvC,UAAW,IAAIp3C,EACfgM,cAAe,IAAIu0B,EACnBl6C,OAAQ,IAAIowD,EACZvH,KAAM,IAAIwH,EACV7qC,UAAW,IAAI0qC,CACnB,EACIn0C,EAAYi1C,gBAAgB,EAC5B/qD,EAAO,IAAI,CAACkX,UAAU,CAAEpB,EAAYi1C,gBAAgB,EAExD,IAAM7zC,EAAa,IAAI,CAACA,UAAU,CAClC,IAAI,CAAC8zC,iBAAiB,GAAG/zD,OAAO,CAAC,SAAU+gB,CAAa,EACpDd,CAAU,CAACc,EAAc,CAAC9X,QAAQ,CAAChK,EAAOiK,GAC1C+W,CAAU,CAACc,EAAc,CAAC3W,IAAI,EAClC,EACJ,CAKA2pD,mBAAoB,CAChB,GAAI,CAAC,IAAI,CAAC9zC,UAAU,CAChB,MAAO,EAAE,CAEb,GAAI,CAAC,IAAI,CAACA,UAAU,CAACnd,MAAM,CACvB,OAAOwO,OAAOrP,IAAI,CAAC,IAAI,CAACge,UAAU,EAEtC,IAAM+zC,EAAyB1iD,OAAOrP,IAAI,CAAC,IAAI,CAACge,UAAU,EACrD3hB,MAAM,CAAC,AAAC0lB,GAAMA,AAAM,WAANA,GAGnB,MAAO,CAAC,SAAS,CAACnR,MAAM,CAACmhD,EAC7B,CAIA1zC,QAAS,CACL,IAAML,EAAa,IAAI,CAACA,UAAU,CAAEhhB,EAAQ,IAAI,CAACA,KAAK,CAAE4f,EAAc5f,EAAMiD,OAAO,CAAC+B,aAAa,CACjGrB,EAAU3D,EAAO,oBAEjBA,EAAMoa,KAAK,CAAG,IAAI,CAAC46C,aAAa,GAGhC,IAAMC,EAAcr1C,EAAY5R,kBAAkB,CAAC2T,KAAK,CACxD,IAAI,CAAC1X,aAAa,CAAC+kC,gBAAgB,CAACimB,GAEpC,IAAI,CAACH,iBAAiB,GAAG/zD,OAAO,CAAC,SAAU+gB,CAAa,EACpDd,CAAU,CAACc,EAAc,CAACzW,aAAa,GACvC1H,EAAU3D,EAAO,2BAA4B,CACzCsH,KAAMwa,EACNnM,UAAWqL,CAAU,CAACc,EAAc,AACxC,EACJ,GAEA,IAAI,CAAC9T,kBAAkB,CAACqT,MAAM,CAAC4zC,GAE3B,CAACj1D,EAAMsqD,sBAAsB,EAC7B6J,EAAKxK,wBAAwB,IAC7BwK,EAAK9J,oBAAoB,CAACrqD,GAE9B2D,EAAU3D,EAAO,kBAAmB,CAChCgF,cAAe,IAAI,AACvB,EACJ,CAIAuG,SAAU,CACN,IAAMvL,EAAQ,IAAI,CAACA,KAAK,EAAI,CAAC,EAEvBghB,EAAa,IAAI,CAACA,UAAU,CAClC3O,OAAOrP,IAAI,CAACge,GAAYjgB,OAAO,CAAC,SAAU+gB,CAAa,EACnDd,CAAU,CAACc,EAAc,CAACvW,OAAO,GACjCyV,CAAU,CAACc,EAAc,CAAC5W,WAAW,EACzC,GAEI,IAAI,CAACjB,aAAa,EAClB,IAAI,CAACA,aAAa,CAACsB,OAAO,GAG1BvL,EAAMqT,kBAAkB,EACxB/U,EAAc0B,EAAMqT,kBAAkB,EAGtC,IAAI,CAACrF,kBAAkB,EACvB,IAAI,CAACA,kBAAkB,CAACzC,OAAO,GAG/BvL,EAAM0H,QAAQ,EACd1H,EAAM0H,QAAQ,CAACD,YAAY,CAAC,cAAe,CAAA,GAG3CzH,EAAMsO,YAAY,EAClBtO,EAAMsO,YAAY,CAACG,iBAAiB,EAE5C,CAKAumD,eAAgB,CACZ,IAAM56C,EAAQ,CAAC,EAIf,OAHA,IAAI,CAACpa,KAAK,CAAC6D,MAAM,CAAC9C,OAAO,CAAC,SAAU8C,CAAM,EACtCuW,CAAK,CAACvW,EAAOpK,IAAI,CAAC,CAAG,CACzB,GACO4Y,OAAOrP,IAAI,CAACoX,EACvB,CACJ,CAoLA,OA9KA,AAAC,SAAUm6C,CAAa,EAqBpB,SAASW,IACD,IAAI,CAAClwD,aAAa,EAClB,IAAI,CAACA,aAAa,CAACuG,OAAO,EAElC,CAKA,SAAS4pD,IAED,IAAI,CAACC,SAAS,EAAI,IAAI,CAAC1tD,QAAQ,GAC/B,OAAO,IAAI,CAAC0tD,SAAS,CACrB,IAAI,CAACC,iBAAiB,IAE1B,IAAMtnD,EAAO,IAAI,CAAC/I,aAAa,CAC3B+I,GAAQ,CAACA,EAAK0mD,MAAM,GACpB1mD,EAAK9D,aAAa,CAACulC,2BAA2B,GAC9CzhC,EAAK+mD,iBAAiB,GAAG/zD,OAAO,CAAC,SAAU+gB,CAAa,EACpD/T,EAAKiT,UAAU,CAACc,EAAc,CAACxW,aAAa,EAChD,GAER,CAKA,SAASgqD,EAAc/7D,CAAC,EAEpB,IAAMg8D,EAAah8D,EAAE0J,OAAO,CAAC+B,aAAa,CACtCuwD,IAEIA,EAAWV,gBAAgB,GAC3B,IAAI,CAAC5xD,OAAO,CAAC+B,aAAa,CAAC6vD,gBAAgB,CACvCU,EAAWV,gBAAgB,CAC/B,OAAOU,EAAWV,gBAAgB,EAEtC5mC,EAAM,CAAA,EAAM,IAAI,CAAChrB,OAAO,CAAC+B,aAAa,CAAEuwD,GAEpC,IAAI,CAACvwD,aAAa,EAAI,IAAI,CAACA,aAAa,CAACuG,OAAO,GAChD,IAAI,CAACvG,aAAa,CAACuG,OAAO,GAC1B,OAAO,IAAI,CAACvG,aAAa,GAIjC,IAAI,CAACowD,SAAS,CAAG,CAAA,CACrB,CAIA,SAASI,IACL,IAAIznD,EAAO,IAAI,CAAC/I,aAAa,CACvBmR,EAAuB,IAAI,CAAClT,OAAO,CAAC+B,aAAa,AACnDmR,CAAAA,GAAwBA,EAAqBzH,OAAO,CAChDX,GAAQ,CAACA,EAAK0mD,MAAM,CACpB1mD,EAAKsT,MAAM,IAGX,IAAI,CAACrc,aAAa,CAAG+I,EAAO,IAAIwmD,EAAc,IAAI,EAC9CxmD,GAAQ,CAACA,EAAK0mD,MAAM,EACpB1mD,EAAKsT,MAAM,IAIdtT,GAEDA,EAAKxC,OAAO,EACZwC,EAAKxC,OAAO,GAEhB,OAAO,IAAI,CAACvG,aAAa,EAIzB,IAAI,CAAC0C,QAAQ,CAACD,YAAY,CAAC,cAAe,CAAA,EAElD,CAsDA,SAASguD,IACD,IAAI,CAAC5xD,MAAM,CAAC7D,KAAK,CAACgF,aAAa,EAC/B,CAAA,IAAI,CAACnB,MAAM,CAAC7D,KAAK,CAACo1D,SAAS,CAAG,CAAA,CAAG,CAEzC,CA/IAb,EAAc10D,UAAU,CAAGyV,EAASzV,UAAU,CAsI9C00D,EAAcpxD,OAAO,CA7CrB,SAASA,EAAQC,CAAU,CAAE0lB,CAAW,CAAE49B,CAAU,CAAEr2B,CAAW,CAAE/d,CAAe,CAAEihC,CAAkB,EAalG,GAXAxyB,EAAmB5d,OAAO,CAACC,GAC3BumC,EAAiBxmC,OAAO,CAACktB,GACzBhL,EAAgBliB,OAAO,CAACC,EAAY0lB,GACpCtL,EAAcra,OAAO,CAACC,GACtB6wD,EAAgB9wD,OAAO,CAACC,EAAYsjD,EAAYr2B,GAChD/a,EAASnS,OAAO,CAACC,GACjB+K,EAAuBhL,OAAO,CAACC,EAAYkP,GAEvCihC,GACAwK,EAAuB56C,OAAO,CAACC,EAAYmwC,GAE3C3zC,EAAW7E,EAAUoI,GAAU,CAC/B,IAAME,EAAaD,EAAWE,SAAS,AACvCD,CAAAA,EAAWgyD,iBAAiB,CAAGG,EAC/BjsD,EAASnG,EAAY,UAAW8xD,GAChC3rD,EAASnG,EAAY,SAAU+xD,GAC/B5rD,EAASnG,EAAY,SAAUkyD,GAE/B,CAAC,YAAa,OAAO,CAACv0D,OAAO,CAAC,AAACoiB,IAC3B5Z,EAASnG,EAAY+f,EAAO,WACxB,IAAI,CAACiyC,SAAS,CAAG,CAAA,CACrB,EACJ,GAEA,CAAC,sBAAuB,aAAa,CAACr0D,OAAO,CAAC,AAACoiB,IAC3C5Z,EAASnG,EAAY+f,EAAO,WACxB,IAAMpV,EAAO,IAAI,CAAC/I,aAAa,CAC3B+I,GAAQ,CAACA,EAAK0mD,MAAM,EACpB1mD,EAAKsT,MAAM,EAEnB,EACJ,GACA9X,EAASm9C,EAAY,SAAU+O,GAE/B,CAAC,SAAU,cAAe,SAAS,CAAC10D,OAAO,CAAC,AAACoiB,IACzC5Z,EAAS8mB,EAAalN,EAAO,WACrB,IAAI,CAACnjB,KAAK,CAACgF,aAAa,EACxB,CAAA,IAAI,CAAChF,KAAK,CAACo1D,SAAS,CAAG,CAAA,CAAG,CAElC,EACJ,EACJ,CACJ,CAWJ,EAAGb,GAAkBA,CAAAA,EAAgB,CAAC,CAAA,GAOtCtmC,EAAM,CAAA,EAAMH,EAAgBsmC,EAAoB,CAC5CpvD,cAAe,CACXwlD,kBAAmBA,CACvB,EACAtnD,KAAMmxD,CACV,GAOOE,CACX,GACAn8D,EAAgBD,EAAU,uCAAwC,CAACA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,iCAAiC,CAAEA,CAAQ,CAAC,0CAA0C,CAAEA,CAAQ,CAAC,wCAAwC,CAAEA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,6CAA6C,CAAEA,CAAQ,CAAC,8DAA8D,CAAC,CAAE,SAAUF,CAAU,CAAEs8D,CAAa,CAAExqD,CAAsB,CAAEsT,CAAc,CAAE7J,CAAa,CAAElH,CAAyB,CAAEk9B,CAAe,EAG1iBksB,AADUz9D,EACR4H,UAAU,CAAG00D,EAAc10D,UAAU,CACvC61D,AAFUz9D,EAER09D,kBAAkB,CAAGt4C,EACvBq4C,AAHUz9D,EAGR29D,iBAAiB,CAAGpiD,EACtBkiD,AAJUz9D,EAIR8R,sBAAsB,CAAGA,EAC3B2rD,AALUz9D,EAKRqU,yBAAyB,CAAGA,EAC9BopD,AANUz9D,EAMR49D,4BAA4B,CAAGrsB,EACjC+qB,EAAcpxD,OAAO,CAACuyD,AAPZz9D,EAOcmlB,KAAK,CAAEs4C,AAPrBz9D,EAOuBksB,MAAM,CAAEuxC,AAP/Bz9D,EAOiC6pD,KAAK,CAAE4T,AAPxCz9D,EAO0C8pD,MAAM,CAAE2T,AAPlDz9D,EAOoDy7C,UAAU,CAAEgiB,AAPhEz9D,EAOkE67C,aAAa,CAE7F,EACJ"}